// class ID? extends NON-CONSTRUCTOR

! class extends 0 . x { ; } ;
! class extends 0 . x { } ;
! class extends 0 { #x ; } ;
! class extends 0 { ; } ;
! class extends 0 { } ;
! class extends 0n . x { ; } ;
! class extends [ 0 , ] [ 0 ] { } ;
! class extends [ ] . x { ; } ;
! class extends [ ] { ; } ;
! class extends `` . x { ; } ;
! class extends `` . x { } ;
! class extends new class { } { ; } ;
! class extends this ?. x { } ;
! class extends true . x { ; } ;
! class extends true ?. x { } ;
! class extends x { ; } ; var x ;
! class extends { } . x { ; } ;
! class extends { } { } ;
! class x extends '' [ 0 % 0 ] { ; } ;
! class x extends '' [ 0 ] { ; } ;
! class x extends '' [ 0n ] { ; } ;
! class x extends '' [ null ] { ; } ;
! class x extends 0 . x { ; } ;
! class x extends 0 . x { } ;
! class x extends 0 { #x ; } ;
! class x extends 0 { ; } ;
! class x extends 0 { } . x & 0 ;
! class x extends 0 { } ;
! class x extends 1n . x { } ;
! class x extends [ 0 ] [ 0 ] ?. x { } ;
! class x extends [ 0 ] [ 0 ] { ; } ;
! class x extends [ ] . x { } ;
! class x extends [ ] [ 0 ] { ; } ;
! class x extends [ ] { ; } ;
! class x extends [ ] { } ;
! class x extends `${ 0 }` [ 0 ] ?. x { } ;
! class x extends `${ 0 }` [ 0n ] { ; } ;
! class x extends `${ [ 0 , ] [ 0 ] }${ 0 }` [ 0 ] ?. x { } ;
! class x extends `` . x { } ;
! class x extends `` [ 0 % 0 ] ?. x { } ;
! class x extends `` [ 0 ] ?. x { } ;
! class x extends new function ( ) { return ; } { } ;
! class x extends true . x { } ;
! class x extends true [ 0 ] { ; } ;
! class x extends x { ; } ;
! class x extends x { } ;
! class x extends { x } { } ;
! class x extends { } . x { ; } ;
! class x extends { } . x { } ;
! class x extends { } { ; } ;
! class x extends { } { } ;
! { ... class extends 0 { } } ;
! { ... class x extends 0 { } } ;
! { 0 : class extends 0 { ; 0 ; } , x } ;
! { 1 : class extends 0 { } } ;
! { 1 : class x extends 0 { } } ;
! { x : class extends 0 { } , } ;
( class extends 0 { } ) & 0 ;
( class extends 0 { } ) ;
( x => class extends 0 { } ) ( ) ;
( x => class x extends 0 { } ) ( ) ;
( x => { return class extends 0 { } ; } ) ( ) ;
+ [ ] <= class x extends 0 { } ;
+ class extends 0 { ; } ;
+ class extends 0 { } !== 0 ;
+ class extends 0 { } ;
+ class extends `${ 0 }` [ 0 ] . x { } ?? 0 ;
+ class x extends 0 { } ;
+ class x extends 0 { } ?? 0 ;
+ { x : class extends 0 { } } ;
- 0 instanceof class extends 0 { } ;
- `${ class extends 0 { } }` ;
- class extends 0 . x { } ;
- class extends 0 { ; } ;
- class extends 0 { } ;
- class extends 0n . x { } ;
- class extends true . x { } ;
- class extends x { ; } ; var x ;
- class extends { } . x { } ;
- class extends { } { } ;
- class x extends '' ?. x { ; } ;
- class x extends 0 { } ;
- class x extends `${ 0 }` [ 0 ] [ 0 % 0 ] ?. x { ; } ;
- class x extends `` [ 0 ] { ; } ;
- { ... class extends 0 { } } ;
- { ... class x extends 0 { } } ;
- { 0 : class extends 0 { } , x } ;
- { 0 : class extends 0 { } } ;
- { 0 : class x extends 0 { } , x } ;
- { 1 : class extends 0 { } } ;
- { [ class extends 0 { } ] : 0 } ;
- { [ class x extends 0 { } ] : 0 } ;
- { x : class extends 0 { } , } ;
- { } >= class x extends 0 { } ;
- { } >> class x extends 0 { } ;
0 != class extends 0 { } ;
0 != class x extends 0 { ; } ;
0 !== class extends 0 { } ;
0 & - class x extends 0 { } ?. x ;
0 & 0 ** class x extends 0 { } ;
0 & 0 >> class extends 0 { } ;
0 & class extends 0 { } ;
0 & class x extends 0 { } ;
0 & class x extends 0 { } instanceof 0 ;
0 * 0 === class x extends 0 { } ;
0 * 0 ? 0 : class extends 0 { } ;
0 ** ~ 0 && class x extends 0 { } ;
0 + class extends 0 { } + 0 ;
0 + class extends 0 { } ;
0 + class x extends 0 { ; } ;
0 + class x extends 0 { } > 0 ;
0 , class extends 0 { } ?? 0 ;
0 , class x extends 0 { } ;
0 - '' < class x extends 0 { } ;
0 - 0n ** class x extends 0 { } ;
0 - class extends 0 { } . x ;
0 - class x extends 0 { } . x ;
0 / ! class x extends 0 { } ?. x ;
0 / class extends 0 { } ;
0 / class x extends 0 { ; } ;
0 / class x extends 0 { } ;
0 / true , class x extends 0 { } ;
0 < class extends 0 { } - 0 ;
0 < class extends 0 { } ;
0 << class extends 0 { } ;
0 <= 0 << class x extends 0 { } ;
0 <= class extends 0 { } ;
0 <= class x extends 0 { } ;
0 == `` !== class x extends 0 { } ;
0 == class extends 0 { } ;
0 == class x extends 0 { } ;
0 === class extends 0 { } ;
0 === class x extends 0 { } << 0 ;
0 > class extends 0 { } ** 0 ;
0 > class extends 0 { } ;
0 > class x extends 0 { } ;
0 >= class extends 0 { ; } ;
0 ? 0 : class extends 0 { } ;
0 ?. [ class extends 0 { } ] ;
0 [ + class x extends 0 { } ] ;
0 [ class extends 0 { } ?. x ] ;
0 [ class extends 0 { } ] ;
0 [ class x extends 0 { } ] ;
0 ^ class extends 0 { } ;
0 ^ class extends 0 { } < 0 ;
0 ^ class x extends 0 { ; } & 0 ;
0 in class extends 0 { } ;
0 instanceof class extends 0 { } ;
0 instanceof class x extends 0 { } ;
0 | 0 & class extends 0 { } ;
0 | class extends 0 { } ;
0 | class x extends 0 { } - 0 ;
0 | class x extends 0 { } ;
0 | void class extends 0 { } ^ 0 ;
0 || class extends 0 { } ;
0n - class x extends 0 { } ?? 0 ;
0n <= 1n && class extends 0 { } ;
0n >> class await extends 0 { } ;
0n >>> class extends 0 { ; } ;
1 / class extends 0 { } ;
1 << 0 < class x extends 0 { } ;
1 >> class extends 0 { ; } ;
1 >>> class x extends 0 { } ?? 0 ;
1n ** class extends 0 { } ;
; - class extends 0 { } ;
; - class extends 0 { } ?. x ;
[ , ... class x extends 0 { } ] ;
[ , 0 || class x extends 0 { } ] ;
[ , ] !== class extends 0 { } ;
[ , class extends 0 { } ?? 0 ] ;
[ , class extends 0 { } ] ;
[ , class x extends 0 { } ] ;
[ ... class extends 0 { } ] ;
[ ... class x extends 0 { } ] ;
[ 0 , , class extends 0 { } ] ;
[ 0 , , class x extends 0 { } ] ;
[ 0 , class await extends 0 { } , , 0 ] ;
[ 0 , class extends 0 { } ] ;
[ 0 , class x extends 0 { } ] ;
[ 0 - class extends 0 { } ] ;
[ 0 >= class extends 0 { } ] ;
[ 0 | class x extends 0 { } ] ;
[ ] == class x extends 0 { } ?? 0 ;
[ ] ^ class await extends 0 { ; } && 0 ;
[ ] | class extends 0 { } ;
[ `` != class x extends 0 { } ] ;
[ class extends 0 { } ] ;
[ class x extends 0 { } , , ] ;
[ class x extends 0 { } >= 0 ] ;
[ class x extends 0 { } ] ;
`${ 0 }${ 0 }${ class extends 0 { } }` ;
`${ 0 }${ 0 }${ class x extends 0 { } }` ;
`${ 0 }${ class extends 0 { } }` ;
`${ 0 }${ class x extends 0 { } }` ;
`${ class extends 0 { } }` ;
`${ class x extends 0 { } }` ;
class x { static { class x extends 0 { } } }
delete class extends 0 { } & 0 ;
delete class extends 0 { } ;
delete class x extends 0 { } & 0 ;
for ( ; ; 0 ) { class x extends 0 { } }
for ( ; class extends 0 { } ; 0 ) break ;
for ( class extends 0 { } ; 0 ; ) ;
for ( class extends 0 { } ; 0 ; 0 ) ;
for ( class extends 0 { } ; ; ) break ;
for ( class extends 0 { } ; ; 0 ) break ;
for ( class extends 0 { } ; x ; ) ;
for ( class x extends 0 { } ; - 0n ; ) ;
for ( class x extends 0 { } ; 0 ; ) ;
for ( class x extends 0 { } ; 0 ; 0 ) ;
for ( class x extends 0 { } ; ; ) break ;
for ( class x extends 0 { } ; ; 0 ) throw 0 ;
for ( let x ; ; ) { class x extends 0 { } }
for ( var x ; class x extends 0 { } ; ) break ;
let [ x ] = function * ( ) { class x extends 0 { } } ( ) ;
let x ; ! class extends x { ; } ;
let x ; - class extends x { ; } ;
let x ; for ( { } ? class extends 0 { } : 0 ; 0 ; ) ;
new function ( ) { class x extends 0 { } } ;
new function ( ) { return class extends 0 { } ; } ;
new function ( ) { return class x extends 0 { ; } ; } ;
new function ( ) { return class x extends 0 { } ; } ;
null === class extends 0 { } ;
null ?? class x extends 0 { } ;
switch ( 0 ) { case 0 : class x extends 0 { } }
switch ( 0 ) { case class extends 0 { ; } : }
switch ( 0 ) { case class extends 0 { } : default : case 0 : }
switch ( 0 ) { case class extends 0 { } : default : }
switch ( 0 ) { case class extends 0 { } : { } }
switch ( 0 ) { case class x extends 0 { static { } static 0 ( ) { } } : break ; }
switch ( 0 ) { case class x extends 0 { } : default : case 0 : }
switch ( 0 ) { case class x extends 0 { } : default : }
switch ( 0 ) { case class x extends 0 { } : }
switch ( 0 ) { default : case class extends 0 { } : }
switch ( 0 ) { default : case class x extends 0 { } : ; }
switch ( 0 ) { default : case class x extends 0 { } : }
switch ( 0 ) { default : class x extends 0 { } }
switch ( 1 ) { case class extends 0 { } : default : case 0 : }
switch ( 1 ) { case class x extends 0 { } : default : case 0 ?? 0 : }
switch ( class extends 0 { } ) { }
switch ( class x extends 0 { } ) { default : }
throw class extends 0 { } , 0 ;
true && class extends 0 { } ;
true , class extends 0 { } ;
true << 0 && class x extends 0 { } ;
typeof class await extends 0 { } + 0 ;
typeof class extends 0 { } ;
typeof class x extends 0 { } !== 0 ;
var x = 0 % delete class x extends 0 { ; } ;
var x = async x => { ; for ( class extends 0 { } ; ; 0 ) ; } ; x ( ) ;
var { x , ... x } = { get 0 ( ) { class x extends 0 { } } , } ;
void class await extends 0 { } ;
void class extends 0 { } ;
while ( - class x extends 0 { } <= `` ) break ;
while ( class x extends 0 { } ) break ;
x : switch ( class extends 0 { } ) { }
x : switch ( class x extends 0 { } ) { }
{ class x extends 0 { } }
~ class extends 0 { ; } ;
~ class extends 0 { } ;
~ class extends 0 { } [ `` ] ;
~ class x extends 0 { } ;
~ { 0 : class extends 0 { } } ;
~ { 1 : class extends 0 { } } ;
