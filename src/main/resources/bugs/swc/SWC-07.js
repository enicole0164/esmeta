[ , , , ] = { [ Symbol . iterator ] : async function * ( ) { yield ; } } ; 
[ , , ] = { [ Symbol . iterator ] : async function * ( ) { yield 0 ; } } ; 
[ , , ] = { [ Symbol . iterator ] : async function * ( ) { yield ; } } ; 
[ , , ] = { [ Symbol . iterator ] : async function * ( ) { } } ; 
[ , ] = { [ Symbol . iterator ] : async function * ( ) { 0 ( ) ; } } ; 
[ , ] = { [ Symbol . iterator ] : async function * ( ) { return 0 ; } } ; 
[ , ] = { [ Symbol . iterator ] : async function * ( ) { return { then : ( ) => { throw 0 ; } } ; } } ;
[ , ] = { [ Symbol . iterator ] : async function * ( ) { x ( ) ; } } ; 
[ , ] = { [ Symbol . iterator ] : async function * ( ) { yield ; } } ; 
[ , ] = { [ Symbol . iterator ] : async function * ( ) { } } ; 
[ ] = { [ Symbol . iterator ] : async function * ( ) { } } ; 
var [ , , ] = { [ Symbol . iterator ] : async function * x ( ) { yield ; yield * x ( ) ; } } ; 
var [ , ] = { [ Symbol . iterator ] : async function * x ( ) { yield * { [ 0 ] : await 0 } ; } } ; 
var [ , ] = { [ Symbol . iterator ] : async function * x ( ) { yield * { [ Symbol . iterator ] : async function * ( ) { } } ; } } ; 
var [ , ] = { [ Symbol . iterator ] : function * ( ) { yield * { [ Symbol . iterator ] : async function * ( ) { } } ; } } ; 
var [ , ] = { [ Symbol . iterator ] : function * ( ) { yield * { [ Symbol . iterator ] : async x => 0 } ; } } ; 
