def <BUILTIN>:INTRINSICS.FinalizationRegistry.prototype.unregister(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  if (< 0 argumentsList.length) let unregisterToken = (pop < argumentsList) else let unregisterToken = absent
  let finalizationRegistry = this
  call %0 = clo<RequireInternalSlot>(finalizationRegistry, "Cells")
  [? %0]
  if (! (= (typeof unregisterToken) @Object)) {
    return comp[~throw~/~empty~]((new OrdinaryObject("Prototype" -> @EXECUTION_STACK[0].Realm.Intrinsics["%TypeError.prototype%"], "ErrorData" -> undefined))[#1213])
  } else {}
  let removed = false
  %2 = finalizationRegistry.Cells
  %1 = 0
  loop[foreach] (< %1 %2.length) {
    let cell = %2[%1]
    %3 = (! (= cell.UnregisterToken ~empty~))
    if %3 {
      call %4 = clo<SameValue>(cell.UnregisterToken, unregisterToken)
      %3 = (= %4 true)
    } else {}
    if %3 {
      (yet "Remove _cell_ from _finalizationRegistry_.[[Cells]].")
      removed = true
    } else {}
    %1 = (+ %1 1)
  }
  return removed
}