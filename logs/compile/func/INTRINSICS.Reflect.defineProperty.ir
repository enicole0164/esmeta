def <BUILTIN>:INTRINSICS.Reflect.defineProperty(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  if (< 0 argumentsList.length) let target = (pop < argumentsList) else let target = absent
  if (< 0 argumentsList.length) let propertyKey = (pop < argumentsList) else let propertyKey = absent
  if (< 0 argumentsList.length) let attributes = (pop < argumentsList) else let attributes = absent
  if (! (= (typeof target) @Object)) {
    return comp[~throw~/~empty~]((new OrdinaryObject("Prototype" -> @EXECUTION_STACK[0].Realm.Intrinsics["%TypeError.prototype%"], "ErrorData" -> undefined))[#1346])
  } else {}
  call %0 = clo<ToPropertyKey>(propertyKey)
  let key = [? %0]
  call %1 = clo<ToPropertyDescriptor>(attributes)
  let desc = [? %1]
  method-call %2 = target->DefineOwnProperty(key, desc)
  return [? %2]
}