def <SYNTAX>:AssignmentExpression[6,0].Evaluation(
  this: Ast:AssignmentExpression[6,0],
): Unknown {
  sdo-call %0 = this[0]->Evaluation()
  let lref = [? %0]
  call %1 = clo<GetValue>(lref)
  let lval = [? %1]
  call %2 = clo<ToBoolean>(lval)
  let lbool = %2
  if (= lbool false) {
    return lval
  } else {}
  call %4 = clo<IsAnonymousFunctionDefinition>(this[1])
  %3 = (= %4 true)
  if %3 {
    sdo-call %5 = this[0]->IsIdentifierRef()
    %3 = (= %5 true)
  } else {}
  if %3 {
    sdo-call %6 = this[1]->NamedEvaluation(lref.ReferencedName)
    let rval = [? %6]
  } else {
    sdo-call %7 = this[1]->Evaluation()
    let rref = %7
    call %8 = clo<GetValue>(rref)
    let rval = [? %8]
  }
  call %9 = clo<PutValue>(lref, rval)
  [? %9]
  return rval
}