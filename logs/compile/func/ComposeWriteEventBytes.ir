def ComposeWriteEventBytes(
  execution: Unknown["CandidateExecution"],
  byteIndex: Unknown["NonnegativeInteger"],
  Ws: Unknown["ListOfEitherWriteSharedMemoryOrReadModifyWriteSharedMemoryEvents"],
): Unknown["ListOfByteValues"] {
  let byteLocation = byteIndex
  let bytesRead = (new [])[#1360]
  %1 = Ws
  %0 = 0
  loop[foreach] (< %0 %1.length) {
    let W = %1[%0]
    assert (yet "_W_ has _byteLocation_ in its range.")
    let payloadIndex = (- byteLocation W.ByteIndex)
    (yet "If _W_ is a WriteSharedMemory event, then\n  1. Let _byte_ be _W_.[[Payload]][_payloadIndex_].")
    (yet "Else,\n  1. Assert: _W_ is a ReadModifyWriteSharedMemory event..\n  1. Let _bytes_ be ValueOfReadEvent(_execution_, _W_).\n  1. Let _bytesModified_ be _W_.[[ModifyOp]](_bytes_, _W_.[[Payload]]).\n  1. Let _byte_ be _bytesModified_[_payloadIndex_].")
    push bytesRead < byte
    byteLocation = (+ byteLocation 1)
    %0 = (+ %0 1)
  }
  return bytesRead
}