def <SYNTAX>:ArrowFunction[0,0].InstantiateArrowFunctionExpression(
  this: Ast:ArrowFunction[0,0],
  name?: Unknown,
): FunctionObject {
  if (= name absent) {
    name = ""
  } else {}
  let env = @EXECUTION_STACK[0].LexicalEnvironment
  let privateEnv = @EXECUTION_STACK[0].PrivateEnvironment
  let sourceText = (source-text this)
  call %0 = clo<OrdinaryFunctionCreate>(@EXECUTION_STACK[0].Realm.Intrinsics["%Function.prototype%"], sourceText, this[0], this[1], ~lexical-this~, env, privateEnv)
  let closure = %0
  call %1 = clo<SetFunctionName>(closure, name)
  return closure
}