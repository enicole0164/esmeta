def <BUILTIN>:INTRINSICS.Reflect.construct(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  if (< 0 argumentsList.length) let target = (pop < argumentsList) else let target = absent
  if (< 0 argumentsList.length) let argumentsList = (pop < argumentsList) else let argumentsList = absent
  if (< 0 argumentsList.length) let newTarget = (pop < argumentsList) else let newTarget = absent
  call %0 = clo<IsConstructor>(target)
  if (= %0 false) {
    return comp[~throw~/~empty~]((new OrdinaryObject("Prototype" -> @EXECUTION_STACK[0].Realm.Intrinsics["%TypeError.prototype%"], "ErrorData" -> undefined))[#1344])
  } else {}
  if (= newTarget absent) {
    newTarget = target
  } else {
    call %1 = clo<IsConstructor>(newTarget)
    if (= %1 false) {
      return comp[~throw~/~empty~]((new OrdinaryObject("Prototype" -> @EXECUTION_STACK[0].Realm.Intrinsics["%TypeError.prototype%"], "ErrorData" -> undefined))[#1345])
    } else {}
  }
  call %2 = clo<CreateListFromArrayLike>(argumentsList)
  let args = [? %2]
  call %3 = clo<Construct>(target, args, newTarget)
  return [? %3]
}