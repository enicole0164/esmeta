def <BUILTIN>:INTRINSICS.FinalizationRegistry(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  if (< 0 argumentsList.length) let cleanupCallback = (pop < argumentsList) else let cleanupCallback = absent
  if (= NewTarget undefined) {
    return comp[~throw~/~empty~]((new OrdinaryObject("Prototype" -> @EXECUTION_STACK[0].Realm.Intrinsics["%TypeError.prototype%"], "ErrorData" -> undefined))[#1205])
  } else {}
  call %0 = clo<IsCallable>(cleanupCallback)
  if (= %0 false) {
    return comp[~throw~/~empty~]((new OrdinaryObject("Prototype" -> @EXECUTION_STACK[0].Realm.Intrinsics["%TypeError.prototype%"], "ErrorData" -> undefined))[#1206])
  } else {}
  call %1 = clo<OrdinaryCreateFromConstructor>(NewTarget, "%FinalizationRegistry.prototype%", (new ["Realm", "CleanupCallback", "Cells"])[#1207])
  let finalizationRegistry = [? %1]
  let fn = @EXECUTION_STACK[0].Function
  finalizationRegistry.Realm = fn.Realm
  call %2 = clo<HostMakeJobCallback>(cleanupCallback)
  finalizationRegistry.CleanupCallback = %2
  finalizationRegistry.Cells = (new [])[#1208]
  return finalizationRegistry
}