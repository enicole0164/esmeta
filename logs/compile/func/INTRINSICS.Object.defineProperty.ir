def <BUILTIN>:INTRINSICS.Object.defineProperty(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  if (< 0 argumentsList.length) let O = (pop < argumentsList) else let O = absent
  if (< 0 argumentsList.length) let P = (pop < argumentsList) else let P = absent
  if (< 0 argumentsList.length) let Attributes = (pop < argumentsList) else let Attributes = absent
  if (! (= (typeof O) @Object)) {
    return comp[~throw~/~empty~]((new OrdinaryObject("Prototype" -> @EXECUTION_STACK[0].Realm.Intrinsics["%TypeError.prototype%"], "ErrorData" -> undefined))[#892])
  } else {}
  call %0 = clo<ToPropertyKey>(P)
  let key = [? %0]
  call %1 = clo<ToPropertyDescriptor>(Attributes)
  let desc = [? %1]
  call %2 = clo<DefinePropertyOrThrow>(O, key, desc)
  [? %2]
  return O
}