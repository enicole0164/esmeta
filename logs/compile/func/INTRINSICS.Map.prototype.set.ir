def <BUILTIN>:INTRINSICS.Map.prototype.set(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  if (< 0 argumentsList.length) let key = (pop < argumentsList) else let key = absent
  if (< 0 argumentsList.length) let value = (pop < argumentsList) else let value = absent
  let M = this
  call %0 = clo<RequireInternalSlot>(M, "MapData")
  [? %0]
  let entries = M.MapData
  %2 = entries
  %1 = 0
  loop[foreach] (< %1 %2.length) {
    let p = %2[%1]
    %3 = (! (= p.Key ~empty~))
    if %3 {
      call %4 = clo<SameValueZero>(p.Key, key)
      %3 = (= %4 true)
    } else {}
    if %3 {
      p.Value = value
      return M
    } else {}
    %1 = (+ %1 1)
  }
  if (= key -0.0f) {
    key = 0.0f
  } else {}
  let p = (new Record("Key" -> key, "Value" -> value))[#1121]
  push entries < p
  return M
}