def <BUILTIN>:INTRINSICS.Reflect.apply(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  if (< 0 argumentsList.length) let target = (pop < argumentsList) else let target = absent
  if (< 0 argumentsList.length) let thisArgument = (pop < argumentsList) else let thisArgument = absent
  if (< 0 argumentsList.length) let argumentsList = (pop < argumentsList) else let argumentsList = absent
  call %0 = clo<IsCallable>(target)
  if (= %0 false) {
    return comp[~throw~/~empty~]((new OrdinaryObject("Prototype" -> @EXECUTION_STACK[0].Realm.Intrinsics["%TypeError.prototype%"], "ErrorData" -> undefined))[#1343])
  } else {}
  call %1 = clo<CreateListFromArrayLike>(argumentsList)
  let args = [? %1]
  call %2 = clo<PrepareForTailCall>()
  call %3 = clo<Call>(target, thisArgument, args)
  return [? %3]
}