def <INTERNAL>:StringExoticObject.OwnPropertyKeys(
  O: StringExoticObject,
): Normal[List[Symbol | String]] {
  let keys = (new [])[#457]
  let str = O.StringData
  assert (= (typeof str) @String)
  let len = str.length
  let i = 0
  loop[foreach-int] (< i len) {
    call %0 = clo<ToString>(([number] i))
    push keys < [! %0]
    i = (+ i 1)
  }
  (yet "For each own property key _P_ of _O_ such that _P_ is an array index and ! ToIntegerOrInfinity(_P_) â‰¥ _len_, in ascending numeric index order, do\n  1. Append _P_ to _keys_.")
  (yet "For each own property key _P_ of _O_ such that Type(_P_) is String and _P_ is not an array index, in ascending chronological order of property creation, do\n  1. Append _P_ to _keys_.")
  (yet "For each own property key _P_ of _O_ such that Type(_P_) is Symbol, in ascending chronological order of property creation, do\n  1. Append _P_ to _keys_.")
  return keys
}