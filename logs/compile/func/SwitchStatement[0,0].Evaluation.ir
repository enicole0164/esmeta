def <SYNTAX>:SwitchStatement[0,0].Evaluation(
  this: Ast:SwitchStatement[0,0],
): Unknown {
  sdo-call %0 = this[0]->Evaluation()
  let exprRef = %0
  call %1 = clo<GetValue>(exprRef)
  let switchValue = [? %1]
  let oldEnv = @EXECUTION_STACK[0].LexicalEnvironment
  call %2 = clo<NewDeclarativeEnvironment>(oldEnv)
  let blockEnv = %2
  call %3 = clo<BlockDeclarationInstantiation>(this[1], blockEnv)
  @EXECUTION_STACK[0].LexicalEnvironment = blockEnv
  sdo-call %4 = this[1]->CaseBlockEvaluation(switchValue)
  call %5 = clo<Completion>(%4)
  let R = %5
  @EXECUTION_STACK[0].LexicalEnvironment = oldEnv
  return R
}