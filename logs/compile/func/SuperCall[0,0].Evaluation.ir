def <SYNTAX>:SuperCall[0,0].Evaluation(
  this: Ast:SuperCall[0,0],
): Unknown {
  call %0 = clo<GetNewTarget>()
  let newTarget = %0
  assert (= (typeof newTarget) @Object)
  call %1 = clo<GetSuperConstructor>()
  let func = %1
  sdo-call %2 = this[0]->ArgumentListEvaluation()
  let argList = [? %2]
  call %3 = clo<IsConstructor>(func)
  if (= %3 false) {
    return comp[~throw~/~empty~]((new OrdinaryObject("Prototype" -> @EXECUTION_STACK[0].Realm.Intrinsics["%TypeError.prototype%"], "ErrorData" -> undefined))[#573])
  } else {}
  call %4 = clo<Construct>(func, argList, newTarget)
  let result = [? %4]
  call %5 = clo<GetThisEnvironment>()
  let thisER = %5
  method-call %6 = thisER->BindThisValue(result)
  [? %6]
  let F = thisER.FunctionObject
  assert (? F: "ECMAScriptFunctionObject")
  call %7 = clo<InitializeInstanceElements>(result, F)
  [? %7]
  return result
}