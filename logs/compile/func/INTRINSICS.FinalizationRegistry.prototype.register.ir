def <BUILTIN>:INTRINSICS.FinalizationRegistry.prototype.register(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  if (< 0 argumentsList.length) let target = (pop < argumentsList) else let target = absent
  if (< 0 argumentsList.length) let heldValue = (pop < argumentsList) else let heldValue = absent
  if (< 0 argumentsList.length) let unregisterToken = (pop < argumentsList) else let unregisterToken = absent
  let finalizationRegistry = this
  call %0 = clo<RequireInternalSlot>(finalizationRegistry, "Cells")
  [? %0]
  if (! (= (typeof target) @Object)) {
    return comp[~throw~/~empty~]((new OrdinaryObject("Prototype" -> @EXECUTION_STACK[0].Realm.Intrinsics["%TypeError.prototype%"], "ErrorData" -> undefined))[#1209])
  } else {}
  call %1 = clo<SameValue>(target, heldValue)
  if (= %1 true) {
    return comp[~throw~/~empty~]((new OrdinaryObject("Prototype" -> @EXECUTION_STACK[0].Realm.Intrinsics["%TypeError.prototype%"], "ErrorData" -> undefined))[#1210])
  } else {}
  if (! (= (typeof unregisterToken) @Object)) {
    if (! (= unregisterToken undefined)) {
      return comp[~throw~/~empty~]((new OrdinaryObject("Prototype" -> @EXECUTION_STACK[0].Realm.Intrinsics["%TypeError.prototype%"], "ErrorData" -> undefined))[#1211])
    } else {}
    unregisterToken = ~empty~
  } else {}
  let cell = (new Record("WeakRefTarget" -> target, "HeldValue" -> heldValue, "UnregisterToken" -> unregisterToken))[#1212]
  push finalizationRegistry.Cells < cell
  return undefined
}