def GetPrototypeFromConstructor(
  constructor: FunctionObject,
  intrinsicDefaultProto: String,
): Normal[Object] | Abrupt {
  assert (yet "_intrinsicDefaultProto_ is this specification's name of an intrinsic object. The corresponding object must be an intrinsic that is intended to be used as the [[Prototype]] value of an object.")
  call %0 = clo<Get>(constructor, "prototype")
  let proto = [? %0]
  if (! (= (typeof proto) @Object)) {
    call %1 = clo<GetFunctionRealm>(constructor)
    let realm = [? %1]
    proto = realm.Intrinsics[intrinsicDefaultProto]
  } else {}
  return proto
}