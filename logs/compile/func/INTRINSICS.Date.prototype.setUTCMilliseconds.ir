def <BUILTIN>:INTRINSICS.Date.prototype.setUTCMilliseconds(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  if (< 0 argumentsList.length) let ms = (pop < argumentsList) else let ms = absent
  call %0 = clo<thisTimeValue>(this)
  let t = [? %0]
  call %1 = clo<ToNumber>(ms)
  ms = [? %1]
  if (= t NaN) {
    return NaN
  } else {}
  call %2 = clo<HourFromTime>(t)
  call %3 = clo<MinFromTime>(t)
  call %4 = clo<SecFromTime>(t)
  call %5 = clo<MakeTime>(%2, %3, %4, ms)
  let time = %5
  call %6 = clo<Day>(t)
  call %7 = clo<MakeDate>(%6, time)
  call %8 = clo<TimeClip>(%7)
  let v = %8
  (yet "Set the [[DateValue]] internal slot of this Date object to _v_.")
  return v
}