def <BUILTIN>:INTRINSICS.Set.prototype.forEach(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  if (< 0 argumentsList.length) let callbackfn = (pop < argumentsList) else let callbackfn = absent
  if (< 0 argumentsList.length) let thisArg = (pop < argumentsList) else let thisArg = absent
  let S = this
  call %0 = clo<RequireInternalSlot>(S, "SetData")
  [? %0]
  call %1 = clo<IsCallable>(callbackfn)
  if (= %1 false) {
    return comp[~throw~/~empty~]((new OrdinaryObject("Prototype" -> @EXECUTION_STACK[0].Realm.Intrinsics["%TypeError.prototype%"], "ErrorData" -> undefined))[#1128])
  } else {}
  let entries = S.SetData
  %3 = entries
  %2 = 0
  loop[foreach] (< %2 %3.length) {
    let e = %3[%2]
    if (! (= e ~empty~)) {
      call %4 = clo<Call>(callbackfn, thisArg, (new [e, e, S])[#1129])
      [? %4]
    } else {}
    %2 = (+ %2 1)
  }
  return undefined
}