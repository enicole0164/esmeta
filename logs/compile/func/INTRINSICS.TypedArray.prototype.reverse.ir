def <BUILTIN>:INTRINSICS.TypedArray.prototype.reverse(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  let O = this
  call %0 = clo<ValidateTypedArray>(O)
  [? %0]
  let len = O.ArrayLength
  let middle = (floor (/ len 2))
  let lower = 0
  loop[repeat] (! (== lower middle)) {
    let upper = (- (- len lower) 1)
    call %1 = clo<ToString>(([number] upper))
    let upperP = [! %1]
    call %2 = clo<ToString>(([number] lower))
    let lowerP = [! %2]
    call %3 = clo<Get>(O, lowerP)
    let lowerValue = [! %3]
    call %4 = clo<Get>(O, upperP)
    let upperValue = [! %4]
    call %5 = clo<Set>(O, lowerP, upperValue, true)
    [! %5]
    call %6 = clo<Set>(O, upperP, lowerValue, true)
    [! %6]
    lower = (+ lower 1)
  }
  return O
}