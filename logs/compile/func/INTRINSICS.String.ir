def <BUILTIN>:INTRINSICS.String(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  if (< 0 argumentsList.length) let value = (pop < argumentsList) else let value = absent
  if (= value absent) {
    let s = ""
  } else {
    if (&& (= NewTarget undefined) (= (typeof value) @Symbol)) {
      call %0 = clo<SymbolDescriptiveString>(value)
      return %0
    } else {}
    call %1 = clo<ToString>(value)
    let s = [? %1]
  }
  if (= NewTarget undefined) {
    return s
  } else {}
  call %2 = clo<GetPrototypeFromConstructor>(NewTarget, "%String.prototype%")
  call %3 = clo<StringCreate>(s, [? %2])
  return %3
}