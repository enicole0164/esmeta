def <BUILTIN>:INTRINSICS.WeakMap(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  if (< 0 argumentsList.length) let iterable = (pop < argumentsList) else let iterable = absent
  if (= NewTarget undefined) {
    return comp[~throw~/~empty~]((new OrdinaryObject("Prototype" -> @EXECUTION_STACK[0].Realm.Intrinsics["%TypeError.prototype%"], "ErrorData" -> undefined))[#1131])
  } else {}
  call %0 = clo<OrdinaryCreateFromConstructor>(NewTarget, "%WeakMap.prototype%", (new ["WeakMapData"])[#1132])
  let map = [? %0]
  map.WeakMapData = (new [])[#1133]
  if (|| (= iterable undefined) (= iterable null)) {
    return map
  } else {}
  call %1 = clo<Get>(map, "set")
  let adder = [? %1]
  call %2 = clo<AddEntriesFromIterable>(map, iterable, adder)
  return [? %2]
}