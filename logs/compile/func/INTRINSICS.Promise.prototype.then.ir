def <BUILTIN>:INTRINSICS.Promise.prototype.then(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  if (< 0 argumentsList.length) let onFulfilled = (pop < argumentsList) else let onFulfilled = absent
  if (< 0 argumentsList.length) let onRejected = (pop < argumentsList) else let onRejected = absent
  let promise = this
  call %0 = clo<IsPromise>(promise)
  if (= %0 false) {
    return comp[~throw~/~empty~]((new OrdinaryObject("Prototype" -> @EXECUTION_STACK[0].Realm.Intrinsics["%TypeError.prototype%"], "ErrorData" -> undefined))[#1314])
  } else {}
  call %1 = clo<SpeciesConstructor>(promise, @EXECUTION_STACK[0].Realm.Intrinsics["%Promise%"])
  let C = [? %1]
  call %2 = clo<NewPromiseCapability>(C)
  let resultCapability = [? %2]
  call %3 = clo<PerformPromiseThen>(promise, onFulfilled, onRejected, resultCapability)
  return %3
}