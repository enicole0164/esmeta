def <BUILTIN>:INTRINSICS.Proxy.revocable(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  if (< 0 argumentsList.length) let target = (pop < argumentsList) else let target = absent
  if (< 0 argumentsList.length) let handler = (pop < argumentsList) else let handler = absent
  call %0 = clo<ProxyCreate>(target, handler)
  let p = [? %0]
  let revokerClosure = clo<INTRINSICS.Proxy.revocable:clo0>
  call %1 = clo<CreateBuiltinFunction>(revokerClosure, 0, "", (new ["RevocableProxy"])[#1359])
  let revoker = %1
  revoker.RevocableProxy = p
  call %2 = clo<OrdinaryObjectCreate>(@EXECUTION_STACK[0].Realm.Intrinsics["%Object.prototype%"])
  let result = %2
  call %3 = clo<CreateDataPropertyOrThrow>(result, "proxy", p)
  [! %3]
  call %4 = clo<CreateDataPropertyOrThrow>(result, "revoke", revoker)
  [! %4]
  return result
}