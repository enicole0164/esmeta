def <BUILTIN>:INTRINSICS.Array.prototype[@@unscopables](
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  call %0 = clo<OrdinaryObjectCreate>(null)
  let unscopableList = %0
  call %1 = clo<CreateDataPropertyOrThrow>(unscopableList, "at", true)
  [! %1]
  call %2 = clo<CreateDataPropertyOrThrow>(unscopableList, "copyWithin", true)
  [! %2]
  call %3 = clo<CreateDataPropertyOrThrow>(unscopableList, "entries", true)
  [! %3]
  call %4 = clo<CreateDataPropertyOrThrow>(unscopableList, "fill", true)
  [! %4]
  call %5 = clo<CreateDataPropertyOrThrow>(unscopableList, "find", true)
  [! %5]
  call %6 = clo<CreateDataPropertyOrThrow>(unscopableList, "findIndex", true)
  [! %6]
  call %7 = clo<CreateDataPropertyOrThrow>(unscopableList, "flat", true)
  [! %7]
  call %8 = clo<CreateDataPropertyOrThrow>(unscopableList, "flatMap", true)
  [! %8]
  call %9 = clo<CreateDataPropertyOrThrow>(unscopableList, "includes", true)
  [! %9]
  call %10 = clo<CreateDataPropertyOrThrow>(unscopableList, "keys", true)
  [! %10]
  call %11 = clo<CreateDataPropertyOrThrow>(unscopableList, "values", true)
  [! %11]
  return unscopableList
}