def <BUILTIN>:INTRINSICS.get DataView.prototype.byteOffset(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  let O = this
  call %0 = clo<RequireInternalSlot>(O, "DataView")
  [? %0]
  assert (! (= O.ViewedArrayBuffer absent))
  let buffer = O.ViewedArrayBuffer
  call %1 = clo<IsDetachedBuffer>(buffer)
  if (= %1 true) {
    return comp[~throw~/~empty~]((new OrdinaryObject("Prototype" -> @EXECUTION_STACK[0].Realm.Intrinsics["%TypeError.prototype%"], "ErrorData" -> undefined))[#1178])
  } else {}
  let offset = O.ByteOffset
  return ([number] offset)
}