def <SYNTAX>:SuperProperty[0,0].Evaluation(
  this: Ast:SuperProperty[0,0],
): Unknown {
  call %0 = clo<GetThisEnvironment>()
  let env = %0
  method-call %1 = env->GetThisBinding()
  let actualThis = [? %1]
  sdo-call %2 = this[0]->Evaluation()
  let propertyNameReference = %2
  call %3 = clo<GetValue>(propertyNameReference)
  let propertyNameValue = [? %3]
  call %4 = clo<ToPropertyKey>(propertyNameValue)
  let propertyKey = [? %4]
  if true {
    let strict = true
  } else {
    let strict = false
  }
  call %5 = clo<MakeSuperPropertyReference>(actualThis, propertyKey, strict)
  return [? %5]
}