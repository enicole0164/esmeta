def <BUILTIN>:INTRINSICS.Math.abs(
  this: ESValue,
  argumentsList: List[ESValue],
  NewTarget: Object | Undefined,
): Unknown {
  if (< 0 argumentsList.length) let x = (pop < argumentsList) else let x = absent
  call %0 = clo<ToNumber>(x)
  let n = [? %0]
  if (= n NaN) {
    return NaN
  } else {}
  if (= n -0.0f) {
    return 0.0f
  } else {}
  if (= n -INF) {
    return +INF
  } else {}
  if (< n -0.0f) {
    return (- n)
  } else {}
  return n
}