def ToUint32(
  argument: Unknown,
): Unknown["EitherANormalCompletionContainingAnIntegralNumberOrAnAbruptCompletion"] {
  call %0 = clo<ToNumber>(argument)
  let number = [? %0]
  if (|| (|| (|| (|| (= number NaN) (= number 0.0f)) (= number -0.0f)) (= number +INF)) (= number -INF)) {
    return 0.0f
  } else {}
  let int = (floor (abs ([math] number)))
  if (< number 0.0f) int = (* -1 int) else {}
  let int32bit = (% int (** 2 32))
  return ([number] int32bit)
}