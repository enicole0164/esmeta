def <SYNTAX>:UpdateExpression[2,0].Evaluation(
  this: Ast:UpdateExpression[2,0],
): Unknown {
  sdo-call %0 = this[0]->Evaluation()
  let lhs = %0
  call %1 = clo<GetValue>(lhs)
  call %2 = clo<ToNumeric>([? %1])
  let oldValue = [? %2]
  if (= (typeof oldValue) @Number) {
    call %3 = clo<Number::subtract>(oldValue, 1.0f)
    let newValue = %3
  } else {
    assert (= (typeof oldValue) @BigInt)
    call %4 = clo<BigInt::subtract>(oldValue, 1n)
    let newValue = %4
  }
  call %5 = clo<PutValue>(lhs, newValue)
  [? %5]
  return oldValue
}