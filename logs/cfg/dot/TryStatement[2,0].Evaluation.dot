digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1508 {
    label = "def <SYNTAX>:TryStatement[2,0].Evaluation(this: Ast:TryStatement[2,0]): Unknown"
    style = rounded
    cluster1508_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1508_entry_name -> cluster1508_entry [arrowhead=none, color="black", style=dashed]
    cluster1508_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1508_entry -> node8265 [color="black"]
    cluster1508_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1508_exit_name -> cluster1508_exit [arrowhead=none, color="black", style=dashed]
    cluster1508_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8265_name [shape=none, label=<<font color="black">Call[8265]</font>>]
    node8265_name -> node8265 [arrowhead=none, color="black", style=dashed]
    node8265 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node8265 -> node8266 [color="black"]
    node8266_name [shape=none, label=<<font color="black">Block[8266]</font>>]
    node8266_name -> node8266 [arrowhead=none, color="black", style=dashed]
    node8266 [shape=box, label=<<font color="black">[0] let B = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8266 -> node8267 [color="black"]
    node8267_name [shape=none, label=<<font color="black">Branch[8267]</font>>]
    node8267_name -> node8267 [arrowhead=none, color="black", style=dashed]
    node8267 [shape=diamond, label=<<font color="black">(= B.Type ~throw~)</font>> color="black" fillcolor="white", style=filled]
    node8267 -> node8268 [label=<<font color="black">true</font>> color="black"]
    node8267 -> node8271 [label=<<font color="black">false</font>> color="black"]
    node8268_name [shape=none, label=<<font color="black">Call[8268]</font>>]
    node8268_name -> node8268 [arrowhead=none, color="black", style=dashed]
    node8268 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;CatchClauseEvaluation(B.Value)</font>> color="black" fillcolor="white", style=filled]
    node8268 -> node8269 [color="black"]
    node8271_name [shape=none, label=<<font color="black">Block[8271]</font>>]
    node8271_name -> node8271 [arrowhead=none, color="black", style=dashed]
    node8271 [shape=box, label=<<font color="black">[0] let C = B<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8271 -> node8272 [color="black"]
    node8269_name [shape=none, label=<<font color="black">Call[8269]</font>>]
    node8269_name -> node8269 [arrowhead=none, color="black", style=dashed]
    node8269 [shape=cds, label=<<font color="black">%2 = clo&lt;Completion&gt;(%1)</font>> color="black" fillcolor="white", style=filled]
    node8269 -> node8270 [color="black"]
    node8272_name [shape=none, label=<<font color="black">Call[8272]</font>>]
    node8272_name -> node8272 [arrowhead=none, color="black", style=dashed]
    node8272 [shape=cds, label=<<font color="black">%3 = this[2]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node8272 -> node8273 [color="black"]
    node8270_name [shape=none, label=<<font color="black">Block[8270]</font>>]
    node8270_name -> node8270 [arrowhead=none, color="black", style=dashed]
    node8270 [shape=box, label=<<font color="black">[0] let C = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8270 -> node8272 [color="black"]
    node8273_name [shape=none, label=<<font color="black">Block[8273]</font>>]
    node8273_name -> node8273 [arrowhead=none, color="black", style=dashed]
    node8273 [shape=box, label=<<font color="black">[0] let F = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8273 -> node8274 [color="black"]
    node8274_name [shape=none, label=<<font color="black">Branch[8274]</font>>]
    node8274_name -> node8274 [arrowhead=none, color="black", style=dashed]
    node8274 [shape=diamond, label=<<font color="black">(= F.Type ~normal~)</font>> color="black" fillcolor="white", style=filled]
    node8274 -> node8275 [label=<<font color="black">true</font>> color="black"]
    node8274 -> node8276 [label=<<font color="black">false</font>> color="black"]
    node8275_name [shape=none, label=<<font color="black">Block[8275]</font>>]
    node8275_name -> node8275 [arrowhead=none, color="black", style=dashed]
    node8275 [shape=box, label=<<font color="black">[0] F = C<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8275 -> node8276 [color="black"]
    node8276_name [shape=none, label=<<font color="black">Call[8276]</font>>]
    node8276_name -> node8276 [arrowhead=none, color="black", style=dashed]
    node8276 [shape=cds, label=<<font color="black">%4 = clo&lt;UpdateEmpty&gt;(F, undefined)</font>> color="black" fillcolor="white", style=filled]
    node8276 -> node8277 [color="black"]
    node8277_name [shape=none, label=<<font color="black">Block[8277]</font>>]
    node8277_name -> node8277 [arrowhead=none, color="black", style=dashed]
    node8277 [shape=box, label=<<font color="black">[0] return [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8277 -> cluster1508_exit [color="black"]
  }
}