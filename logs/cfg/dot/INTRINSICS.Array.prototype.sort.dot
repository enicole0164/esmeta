digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2373 {
    label = "def <BUILTIN>:INTRINSICS.Array.prototype.sort(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2373_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2373_entry_name -> cluster2373_entry [arrowhead=none, color="black", style=dashed]
    cluster2373_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2373_entry -> node15622 [color="black"]
    cluster2373_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2373_exit_name -> cluster2373_exit [arrowhead=none, color="black", style=dashed]
    cluster2373_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node15622_name [shape=none, label=<<font color="black">Branch[15622]</font>>]
    node15622_name -> node15622 [arrowhead=none, color="black", style=dashed]
    node15622 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node15622 -> node15623 [label=<<font color="black">true</font>> color="black"]
    node15622 -> node15624 [label=<<font color="black">false</font>> color="black"]
    node15623_name [shape=none, label=<<font color="black">Block[15623]</font>>]
    node15623_name -> node15623 [arrowhead=none, color="black", style=dashed]
    node15623 [shape=box, label=<<font color="black">[0] let comparefn = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15623 -> node15625 [color="black"]
    node15624_name [shape=none, label=<<font color="black">Block[15624]</font>>]
    node15624_name -> node15624 [arrowhead=none, color="black", style=dashed]
    node15624 [shape=box, label=<<font color="black">[0] let comparefn = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15624 -> node15625 [color="black"]
    node15625_name [shape=none, label=<<font color="black">Block[15625]</font>>]
    node15625_name -> node15625 [arrowhead=none, color="black", style=dashed]
    node15625 [shape=box, label=<<font color="black">[0] %0 = (! (= comparefn undefined))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15625 -> node15626 [color="black"]
    node15626_name [shape=none, label=<<font color="black">Branch[15626]</font>>]
    node15626_name -> node15626 [arrowhead=none, color="black", style=dashed]
    node15626 [shape=diamond, label=<<font color="black">%0</font>> color="black" fillcolor="white", style=filled]
    node15626 -> node15627 [label=<<font color="black">true</font>> color="black"]
    node15626 -> node15629 [label=<<font color="black">false</font>> color="black"]
    node15627_name [shape=none, label=<<font color="black">Call[15627]</font>>]
    node15627_name -> node15627 [arrowhead=none, color="black", style=dashed]
    node15627 [shape=cds, label=<<font color="black">%1 = clo&lt;IsCallable&gt;(comparefn)</font>> color="black" fillcolor="white", style=filled]
    node15627 -> node15628 [color="black"]
    node15629_name [shape=none, label=<<font color="black">Branch[15629]</font>>]
    node15629_name -> node15629 [arrowhead=none, color="black", style=dashed]
    node15629 [shape=diamond, label=<<font color="black">%0</font>> color="black" fillcolor="white", style=filled]
    node15629 -> node15630 [label=<<font color="black">true</font>> color="black"]
    node15629 -> node15631 [label=<<font color="black">false</font>> color="black"]
    node15628_name [shape=none, label=<<font color="black">Block[15628]</font>>]
    node15628_name -> node15628 [arrowhead=none, color="black", style=dashed]
    node15628 [shape=box, label=<<font color="black">[0] %0 = (= %1 false)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15628 -> node15629 [color="black"]
    node15630_name [shape=none, label=<<font color="black">Block[15630]</font>>]
    node15630_name -> node15630 [arrowhead=none, color="black", style=dashed]
    node15630 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1046])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15630 -> cluster2373_exit [color="black"]
    node15631_name [shape=none, label=<<font color="black">Call[15631]</font>>]
    node15631_name -> node15631 [arrowhead=none, color="black", style=dashed]
    node15631 [shape=cds, label=<<font color="black">%2 = clo&lt;ToObject&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node15631 -> node15632 [color="black"]
    node15632_name [shape=none, label=<<font color="black">Block[15632]</font>>]
    node15632_name -> node15632 [arrowhead=none, color="black", style=dashed]
    node15632 [shape=box, label=<<font color="black">[0] let obj = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15632 -> node15633 [color="black"]
    node15633_name [shape=none, label=<<font color="black">Call[15633]</font>>]
    node15633_name -> node15633 [arrowhead=none, color="black", style=dashed]
    node15633 [shape=cds, label=<<font color="black">%3 = clo&lt;LengthOfArrayLike&gt;(obj)</font>> color="black" fillcolor="white", style=filled]
    node15633 -> node15634 [color="black"]
    node15634_name [shape=none, label=<<font color="black">Block[15634]</font>>]
    node15634_name -> node15634 [arrowhead=none, color="black", style=dashed]
    node15634 [shape=box, label=<<font color="black">[0] let len = [? %3]<BR ALIGN="LEFT"/>[1] let SortCompare = clo&lt;INTRINSICS.Array.prototype.sort:clo0, [comparefn]&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15634 -> node15635 [color="black"]
    node15635_name [shape=none, label=<<font color="black">Call[15635]</font>>]
    node15635_name -> node15635 [arrowhead=none, color="black", style=dashed]
    node15635 [shape=cds, label=<<font color="black">%4 = clo&lt;SortIndexedProperties&gt;(obj, len, SortCompare)</font>> color="black" fillcolor="white", style=filled]
    node15635 -> node15636 [color="black"]
    node15636_name [shape=none, label=<<font color="black">Block[15636]</font>>]
    node15636_name -> node15636 [arrowhead=none, color="black", style=dashed]
    node15636 [shape=box, label=<<font color="black">[0] return [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15636 -> cluster2373_exit [color="black"]
  }
}