digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2153 {
    label = "def <BUILTIN>:INTRINSICS.Date.prototype.toJSON(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2153_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2153_entry_name -> cluster2153_entry [arrowhead=none, color="black", style=dashed]
    cluster2153_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2153_entry -> node13113 [color="black"]
    cluster2153_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2153_exit_name -> cluster2153_exit [arrowhead=none, color="black", style=dashed]
    cluster2153_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node13113_name [shape=none, label=<<font color="black">Branch[13113]</font>>]
    node13113_name -> node13113 [arrowhead=none, color="black", style=dashed]
    node13113 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node13113 -> node13114 [label=<<font color="black">true</font>> color="black"]
    node13113 -> node13115 [label=<<font color="black">false</font>> color="black"]
    node13114_name [shape=none, label=<<font color="black">Block[13114]</font>>]
    node13114_name -> node13114 [arrowhead=none, color="black", style=dashed]
    node13114 [shape=box, label=<<font color="black">[0] let key = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13114 -> node13116 [color="black"]
    node13115_name [shape=none, label=<<font color="black">Block[13115]</font>>]
    node13115_name -> node13115 [arrowhead=none, color="black", style=dashed]
    node13115 [shape=box, label=<<font color="black">[0] let key = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13115 -> node13116 [color="black"]
    node13116_name [shape=none, label=<<font color="black">Call[13116]</font>>]
    node13116_name -> node13116 [arrowhead=none, color="black", style=dashed]
    node13116 [shape=cds, label=<<font color="black">%0 = clo&lt;ToObject&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node13116 -> node13117 [color="black"]
    node13117_name [shape=none, label=<<font color="black">Block[13117]</font>>]
    node13117_name -> node13117 [arrowhead=none, color="black", style=dashed]
    node13117 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13117 -> node13118 [color="black"]
    node13118_name [shape=none, label=<<font color="black">Call[13118]</font>>]
    node13118_name -> node13118 [arrowhead=none, color="black", style=dashed]
    node13118 [shape=cds, label=<<font color="black">%1 = clo&lt;ToPrimitive&gt;(O, ~number~)</font>> color="black" fillcolor="white", style=filled]
    node13118 -> node13119 [color="black"]
    node13119_name [shape=none, label=<<font color="black">Block[13119]</font>>]
    node13119_name -> node13119 [arrowhead=none, color="black", style=dashed]
    node13119 [shape=box, label=<<font color="black">[0] let tv = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13119 -> node13120 [color="black"]
    node13120_name [shape=none, label=<<font color="black">Branch[13120]</font>>]
    node13120_name -> node13120 [arrowhead=none, color="black", style=dashed]
    node13120 [shape=diamond, label=<<font color="black">(&amp;&amp; (= (typeof tv) @Number) (|| (= tv NaN) (|| (= tv +INF) (= tv -INF))))</font>> color="black" fillcolor="white", style=filled]
    node13120 -> node13121 [label=<<font color="black">true</font>> color="black"]
    node13120 -> node13122 [label=<<font color="black">false</font>> color="black"]
    node13121_name [shape=none, label=<<font color="black">Block[13121]</font>>]
    node13121_name -> node13121 [arrowhead=none, color="black", style=dashed]
    node13121 [shape=box, label=<<font color="black">[0] return null<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13121 -> cluster2153_exit [color="black"]
    node13122_name [shape=none, label=<<font color="black">Call[13122]</font>>]
    node13122_name -> node13122 [arrowhead=none, color="black", style=dashed]
    node13122 [shape=cds, label=<<font color="black">%2 = clo&lt;Invoke&gt;(O, &quot;toISOString&quot;)</font>> color="black" fillcolor="white", style=filled]
    node13122 -> node13123 [color="black"]
    node13123_name [shape=none, label=<<font color="black">Block[13123]</font>>]
    node13123_name -> node13123 [arrowhead=none, color="black", style=dashed]
    node13123 [shape=box, label=<<font color="black">[0] return [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13123 -> cluster2153_exit [color="black"]
  }
}