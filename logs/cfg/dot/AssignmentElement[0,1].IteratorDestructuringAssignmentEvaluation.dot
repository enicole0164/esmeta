digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1371 {
    label = "def <SYNTAX>:AssignmentElement[0,1].IteratorDestructuringAssignmentEvaluation(this: Ast:AssignmentElement[0,1], iteratorRecord: Unknown): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster1371_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1371_entry_name -> cluster1371_entry [arrowhead=none, color="black", style=dashed]
    cluster1371_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1371_entry -> node7009 [color="black"]
    cluster1371_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1371_exit_name -> cluster1371_exit [arrowhead=none, color="black", style=dashed]
    cluster1371_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7009_name [shape=none, label=<<font color="black">Branch[7009]</font>>]
    node7009_name -> node7009 [arrowhead=none, color="black", style=dashed]
    node7009 [shape=diamond, label=<<font color="black">(! (|| (? this[0]: &quot;ObjectLiteral&quot;) (? this[0]: &quot;ArrayLiteral&quot;)))</font>> color="black" fillcolor="white", style=filled]
    node7009 -> node7010 [label=<<font color="black">true</font>> color="black"]
    node7009 -> node7012 [label=<<font color="black">false</font>> color="black"]
    node7010_name [shape=none, label=<<font color="black">Call[7010]</font>>]
    node7010_name -> node7010 [arrowhead=none, color="black", style=dashed]
    node7010 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7010 -> node7011 [color="black"]
    node7012_name [shape=none, label=<<font color="black">Branch[7012]</font>>]
    node7012_name -> node7012 [arrowhead=none, color="black", style=dashed]
    node7012 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white", style=filled]
    node7012 -> node7013 [label=<<font color="black">true</font>> color="black"]
    node7012 -> node7027 [label=<<font color="black">false</font>> color="black"]
    node7011_name [shape=none, label=<<font color="black">Block[7011]</font>>]
    node7011_name -> node7011 [arrowhead=none, color="black", style=dashed]
    node7011 [shape=box, label=<<font color="black">[0] let lref = %0<BR ALIGN="LEFT"/>[1] [? lref]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7011 -> node7012 [color="black"]
    node7013_name [shape=none, label=<<font color="black">Call[7013]</font>>]
    node7013_name -> node7013 [arrowhead=none, color="black", style=dashed]
    node7013 [shape=cds, label=<<font color="black">%1 = clo&lt;IteratorStep&gt;(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node7013 -> node7014 [color="black"]
    node7027_name [shape=none, label=<<font color="black">Branch[7027]</font>>]
    node7027_name -> node7027 [arrowhead=none, color="black", style=dashed]
    node7027 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done true)</font>> color="black" fillcolor="white", style=filled]
    node7027 -> node7028 [label=<<font color="black">true</font>> color="black"]
    node7027 -> node7029 [label=<<font color="black">false</font>> color="black"]
    node7014_name [shape=none, label=<<font color="black">Call[7014]</font>>]
    node7014_name -> node7014 [arrowhead=none, color="black", style=dashed]
    node7014 [shape=cds, label=<<font color="black">%2 = clo&lt;Completion&gt;(%1)</font>> color="black" fillcolor="white", style=filled]
    node7014 -> node7015 [color="black"]
    node7028_name [shape=none, label=<<font color="black">Block[7028]</font>>]
    node7028_name -> node7028 [arrowhead=none, color="black", style=dashed]
    node7028 [shape=box, label=<<font color="black">[0] let value = undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7028 -> node7029 [color="black"]
    node7029_name [shape=none, label=<<font color="black">Branch[7029]</font>>]
    node7029_name -> node7029 [arrowhead=none, color="black", style=dashed]
    node7029 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= this[1] absent)) (= value undefined))</font>> color="black" fillcolor="white", style=filled]
    node7029 -> node7030 [label=<<font color="black">true</font>> color="black"]
    node7029 -> node7042 [label=<<font color="black">false</font>> color="black"]
    node7015_name [shape=none, label=<<font color="black">Block[7015]</font>>]
    node7015_name -> node7015 [arrowhead=none, color="black", style=dashed]
    node7015 [shape=box, label=<<font color="black">[0] let next = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7015 -> node7016 [color="black"]
    node7030_name [shape=none, label=<<font color="black">Call[7030]</font>>]
    node7030_name -> node7030 [arrowhead=none, color="black", style=dashed]
    node7030 [shape=cds, label=<<font color="black">%6 = clo&lt;IsAnonymousFunctionDefinition&gt;(this[1])</font>> color="black" fillcolor="white", style=filled]
    node7030 -> node7031 [color="black"]
    node7042_name [shape=none, label=<<font color="black">Block[7042]</font>>]
    node7042_name -> node7042 [arrowhead=none, color="black", style=dashed]
    node7042 [shape=box, label=<<font color="black">[0] let v = value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7042 -> node7043 [color="black"]
    node7016_name [shape=none, label=<<font color="black">Branch[7016]</font>>]
    node7016_name -> node7016 [arrowhead=none, color="black", style=dashed]
    node7016 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? next) (! (= next.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node7016 -> node7017 [label=<<font color="black">true</font>> color="black"]
    node7016 -> node7018 [label=<<font color="black">false</font>> color="black"]
    node7031_name [shape=none, label=<<font color="black">Block[7031]</font>>]
    node7031_name -> node7031 [arrowhead=none, color="black", style=dashed]
    node7031 [shape=box, label=<<font color="black">[0] %5 = (= %6 true)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7031 -> node7032 [color="black"]
    node7043_name [shape=none, label=<<font color="black">Branch[7043]</font>>]
    node7043_name -> node7043 [arrowhead=none, color="black", style=dashed]
    node7043 [shape=diamond, label=<<font color="black">(|| (? this[0]: &quot;ObjectLiteral&quot;) (? this[0]: &quot;ArrayLiteral&quot;))</font>> color="black" fillcolor="white", style=filled]
    node7043 -> node7044 [label=<<font color="black">true</font>> color="black"]
    node7043 -> node7047 [label=<<font color="black">false</font>> color="black"]
    node7017_name [shape=none, label=<<font color="black">Block[7017]</font>>]
    node7017_name -> node7017 [arrowhead=none, color="black", style=dashed]
    node7017 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7017 -> node7018 [color="black"]
    node7018_name [shape=none, label=<<font color="black">Block[7018]</font>>]
    node7018_name -> node7018 [arrowhead=none, color="black", style=dashed]
    node7018 [shape=box, label=<<font color="black">[0] [? next]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7018 -> node7019 [color="black"]
    node7032_name [shape=none, label=<<font color="black">Branch[7032]</font>>]
    node7032_name -> node7032 [arrowhead=none, color="black", style=dashed]
    node7032 [shape=diamond, label=<<font color="black">%5</font>> color="black" fillcolor="white", style=filled]
    node7032 -> node7033 [label=<<font color="black">true</font>> color="black"]
    node7032 -> node7035 [label=<<font color="black">false</font>> color="black"]
    node7044_name [shape=none, label=<<font color="black">Block[7044]</font>>]
    node7044_name -> node7044 [arrowhead=none, color="black", style=dashed]
    node7044 [shape=box, label=<<font color="black">[0] let nestedAssignmentPattern = (parse this[0] (nt |AssignmentPattern|[]))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7044 -> node7045 [color="black"]
    node7047_name [shape=none, label=<<font color="black">Call[7047]</font>>]
    node7047_name -> node7047 [arrowhead=none, color="black", style=dashed]
    node7047 [shape=cds, label=<<font color="black">%12 = clo&lt;PutValue&gt;(lref, v)</font>> color="black" fillcolor="white", style=filled]
    node7047 -> node7048 [color="black"]
    node7019_name [shape=none, label=<<font color="black">Branch[7019]</font>>]
    node7019_name -> node7019 [arrowhead=none, color="black", style=dashed]
    node7019 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white", style=filled]
    node7019 -> node7020 [label=<<font color="black">true</font>> color="black"]
    node7019 -> node7021 [label=<<font color="black">false</font>> color="black"]
    node7033_name [shape=none, label=<<font color="black">Call[7033]</font>>]
    node7033_name -> node7033 [arrowhead=none, color="black", style=dashed]
    node7033 [shape=cds, label=<<font color="black">%7 = this[0]-&gt;IsIdentifierRef()</font>> color="black" fillcolor="white", style=filled]
    node7033 -> node7034 [color="black"]
    node7035_name [shape=none, label=<<font color="black">Branch[7035]</font>>]
    node7035_name -> node7035 [arrowhead=none, color="black", style=dashed]
    node7035 [shape=diamond, label=<<font color="black">%5</font>> color="black" fillcolor="white", style=filled]
    node7035 -> node7036 [label=<<font color="black">true</font>> color="black"]
    node7035 -> node7038 [label=<<font color="black">false</font>> color="black"]
    node7045_name [shape=none, label=<<font color="black">Call[7045]</font>>]
    node7045_name -> node7045 [arrowhead=none, color="black", style=dashed]
    node7045 [shape=cds, label=<<font color="black">%11 = nestedAssignmentPattern-&gt;DestructuringAssignmentEvaluation(v)</font>> color="black" fillcolor="white", style=filled]
    node7045 -> node7046 [color="black"]
    node7048_name [shape=none, label=<<font color="black">Block[7048]</font>>]
    node7048_name -> node7048 [arrowhead=none, color="black", style=dashed]
    node7048 [shape=box, label=<<font color="black">[0] return [? %12]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7048 -> cluster1371_exit [color="black"]
    node7020_name [shape=none, label=<<font color="black">Block[7020]</font>>]
    node7020_name -> node7020 [arrowhead=none, color="black", style=dashed]
    node7020 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7020 -> node7027 [color="black"]
    node7021_name [shape=none, label=<<font color="black">Call[7021]</font>>]
    node7021_name -> node7021 [arrowhead=none, color="black", style=dashed]
    node7021 [shape=cds, label=<<font color="black">%3 = clo&lt;IteratorValue&gt;(next)</font>> color="black" fillcolor="white", style=filled]
    node7021 -> node7022 [color="black"]
    node7034_name [shape=none, label=<<font color="black">Block[7034]</font>>]
    node7034_name -> node7034 [arrowhead=none, color="black", style=dashed]
    node7034 [shape=box, label=<<font color="black">[0] %5 = (= %7 true)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7034 -> node7035 [color="black"]
    node7036_name [shape=none, label=<<font color="black">Call[7036]</font>>]
    node7036_name -> node7036 [arrowhead=none, color="black", style=dashed]
    node7036 [shape=cds, label=<<font color="black">%8 = this[1]-&gt;NamedEvaluation(lref.ReferencedName)</font>> color="black" fillcolor="white", style=filled]
    node7036 -> node7037 [color="black"]
    node7038_name [shape=none, label=<<font color="black">Call[7038]</font>>]
    node7038_name -> node7038 [arrowhead=none, color="black", style=dashed]
    node7038 [shape=cds, label=<<font color="black">%9 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7038 -> node7039 [color="black"]
    node7046_name [shape=none, label=<<font color="black">Block[7046]</font>>]
    node7046_name -> node7046 [arrowhead=none, color="black", style=dashed]
    node7046 [shape=box, label=<<font color="black">[0] return [? %11]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7046 -> cluster1371_exit [color="black"]
    node7022_name [shape=none, label=<<font color="black">Call[7022]</font>>]
    node7022_name -> node7022 [arrowhead=none, color="black", style=dashed]
    node7022 [shape=cds, label=<<font color="black">%4 = clo&lt;Completion&gt;(%3)</font>> color="black" fillcolor="white", style=filled]
    node7022 -> node7023 [color="black"]
    node7037_name [shape=none, label=<<font color="black">Block[7037]</font>>]
    node7037_name -> node7037 [arrowhead=none, color="black", style=dashed]
    node7037 [shape=box, label=<<font color="black">[0] let v = [? %8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7037 -> node7043 [color="black"]
    node7039_name [shape=none, label=<<font color="black">Block[7039]</font>>]
    node7039_name -> node7039 [arrowhead=none, color="black", style=dashed]
    node7039 [shape=box, label=<<font color="black">[0] let defaultValue = %9<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7039 -> node7040 [color="black"]
    node7023_name [shape=none, label=<<font color="black">Block[7023]</font>>]
    node7023_name -> node7023 [arrowhead=none, color="black", style=dashed]
    node7023 [shape=box, label=<<font color="black">[0] let value = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7023 -> node7024 [color="black"]
    node7040_name [shape=none, label=<<font color="black">Call[7040]</font>>]
    node7040_name -> node7040 [arrowhead=none, color="black", style=dashed]
    node7040 [shape=cds, label=<<font color="black">%10 = clo&lt;GetValue&gt;(defaultValue)</font>> color="black" fillcolor="white", style=filled]
    node7040 -> node7041 [color="black"]
    node7024_name [shape=none, label=<<font color="black">Branch[7024]</font>>]
    node7024_name -> node7024 [arrowhead=none, color="black", style=dashed]
    node7024 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? value) (! (= value.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node7024 -> node7025 [label=<<font color="black">true</font>> color="black"]
    node7024 -> node7026 [label=<<font color="black">false</font>> color="black"]
    node7041_name [shape=none, label=<<font color="black">Block[7041]</font>>]
    node7041_name -> node7041 [arrowhead=none, color="black", style=dashed]
    node7041 [shape=box, label=<<font color="black">[0] let v = [? %10]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7041 -> node7043 [color="black"]
    node7025_name [shape=none, label=<<font color="black">Block[7025]</font>>]
    node7025_name -> node7025 [arrowhead=none, color="black", style=dashed]
    node7025 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7025 -> node7026 [color="black"]
    node7026_name [shape=none, label=<<font color="black">Block[7026]</font>>]
    node7026_name -> node7026 [arrowhead=none, color="black", style=dashed]
    node7026 [shape=box, label=<<font color="black">[0] [? value]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7026 -> node7027 [color="black"]
  }
}