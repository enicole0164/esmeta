digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster667 {
    label = "def <SYNTAX>:ModuleItemList[1,0].ContainsUndefinedContinueTarget(this: Ast:ModuleItemList[1,0], iterationSet: Unknown, labelSet: Unknown): Boolean"
    style = rounded
    cluster667_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster667_entry_name -> cluster667_entry [arrowhead=none, color="black", style=dashed]
    cluster667_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster667_entry -> node2887 [color="black"]
    cluster667_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster667_exit_name -> cluster667_exit [arrowhead=none, color="black", style=dashed]
    cluster667_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2887_name [shape=none, label=<<font color="black">Call[2887]</font>>]
    node2887_name -> node2887 [arrowhead=none, color="black", style=dashed]
    node2887 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;ContainsUndefinedContinueTarget(iterationSet, (new [])[#362])</font>> color="black" fillcolor="white", style=filled]
    node2887 -> node2888 [color="black"]
    node2888_name [shape=none, label=<<font color="black">Block[2888]</font>>]
    node2888_name -> node2888 [arrowhead=none, color="black", style=dashed]
    node2888 [shape=box, label=<<font color="black">[0] let hasUndefinedLabels = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2888 -> node2889 [color="black"]
    node2889_name [shape=none, label=<<font color="black">Branch[2889]</font>>]
    node2889_name -> node2889 [arrowhead=none, color="black", style=dashed]
    node2889 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white", style=filled]
    node2889 -> node2890 [label=<<font color="black">true</font>> color="black"]
    node2889 -> node2891 [label=<<font color="black">false</font>> color="black"]
    node2890_name [shape=none, label=<<font color="black">Block[2890]</font>>]
    node2890_name -> node2890 [arrowhead=none, color="black", style=dashed]
    node2890 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2890 -> cluster667_exit [color="black"]
    node2891_name [shape=none, label=<<font color="black">Call[2891]</font>>]
    node2891_name -> node2891 [arrowhead=none, color="black", style=dashed]
    node2891 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;ContainsUndefinedContinueTarget(iterationSet, (new [])[#363])</font>> color="black" fillcolor="white", style=filled]
    node2891 -> node2892 [color="black"]
    node2892_name [shape=none, label=<<font color="black">Block[2892]</font>>]
    node2892_name -> node2892 [arrowhead=none, color="black", style=dashed]
    node2892 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2892 -> cluster667_exit [color="black"]
  }
}