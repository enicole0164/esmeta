digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1391 {
    label = "def <SYNTAX>:VariableStatement[0,0].Evaluation(this: Ast:VariableStatement[0,0]): Unknown"
    style = rounded
    cluster1391_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1391_entry_name -> cluster1391_entry [arrowhead=none, color="black", style=dashed]
    cluster1391_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1391_entry -> node7212 [color="black"]
    cluster1391_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1391_exit_name -> cluster1391_exit [arrowhead=none, color="black", style=dashed]
    cluster1391_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7212_name [shape=none, label=<<font color="black">Call[7212]</font>>]
    node7212_name -> node7212 [arrowhead=none, color="black", style=dashed]
    node7212 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7212 -> node7213 [color="black"]
    node7213_name [shape=none, label=<<font color="black">Block[7213]</font>>]
    node7213_name -> node7213 [arrowhead=none, color="black", style=dashed]
    node7213 [shape=box, label=<<font color="black">[0] let next = %0<BR ALIGN="LEFT"/>[1] [? next]<BR ALIGN="LEFT"/>[2] return ~empty~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7213 -> cluster1391_exit [color="black"]
  }
}