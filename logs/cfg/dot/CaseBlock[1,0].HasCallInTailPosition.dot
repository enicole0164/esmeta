digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1764 {
    label = "def <SYNTAX>:CaseBlock[1,0].HasCallInTailPosition(this: Ast:CaseBlock[1,0], call: Unknown): Boolean"
    style = rounded
    cluster1764_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1764_entry_name -> cluster1764_entry [arrowhead=none, color="black", style=dashed]
    cluster1764_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1764_entry -> node9764 [color="black"]
    cluster1764_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1764_exit_name -> cluster1764_exit [arrowhead=none, color="black", style=dashed]
    cluster1764_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9764_name [shape=none, label=<<font color="black">Block[9764]</font>>]
    node9764_name -> node9764 [arrowhead=none, color="black", style=dashed]
    node9764 [shape=box, label=<<font color="black">[0] let has = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9764 -> node9765 [color="black"]
    node9765_name [shape=none, label=<<font color="black">Branch[9765]</font>>]
    node9765_name -> node9765 [arrowhead=none, color="black", style=dashed]
    node9765 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node9765 -> node9766 [label=<<font color="black">true</font>> color="black"]
    node9765 -> node9768 [label=<<font color="black">false</font>> color="black"]
    node9766_name [shape=none, label=<<font color="black">Call[9766]</font>>]
    node9766_name -> node9766 [arrowhead=none, color="black", style=dashed]
    node9766 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9766 -> node9767 [color="black"]
    node9768_name [shape=none, label=<<font color="black">Branch[9768]</font>>]
    node9768_name -> node9768 [arrowhead=none, color="black", style=dashed]
    node9768 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white", style=filled]
    node9768 -> node9769 [label=<<font color="black">true</font>> color="black"]
    node9768 -> node9770 [label=<<font color="black">false</font>> color="black"]
    node9767_name [shape=none, label=<<font color="black">Block[9767]</font>>]
    node9767_name -> node9767 [arrowhead=none, color="black", style=dashed]
    node9767 [shape=box, label=<<font color="black">[0] let has = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9767 -> node9768 [color="black"]
    node9769_name [shape=none, label=<<font color="black">Block[9769]</font>>]
    node9769_name -> node9769 [arrowhead=none, color="black", style=dashed]
    node9769 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9769 -> cluster1764_exit [color="black"]
    node9770_name [shape=none, label=<<font color="black">Call[9770]</font>>]
    node9770_name -> node9770 [arrowhead=none, color="black", style=dashed]
    node9770 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9770 -> node9771 [color="black"]
    node9771_name [shape=none, label=<<font color="black">Block[9771]</font>>]
    node9771_name -> node9771 [arrowhead=none, color="black", style=dashed]
    node9771 [shape=box, label=<<font color="black">[0] let has = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9771 -> node9772 [color="black"]
    node9772_name [shape=none, label=<<font color="black">Branch[9772]</font>>]
    node9772_name -> node9772 [arrowhead=none, color="black", style=dashed]
    node9772 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white", style=filled]
    node9772 -> node9773 [label=<<font color="black">true</font>> color="black"]
    node9772 -> node9774 [label=<<font color="black">false</font>> color="black"]
    node9773_name [shape=none, label=<<font color="black">Block[9773]</font>>]
    node9773_name -> node9773 [arrowhead=none, color="black", style=dashed]
    node9773 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9773 -> cluster1764_exit [color="black"]
    node9774_name [shape=none, label=<<font color="black">Branch[9774]</font>>]
    node9774_name -> node9774 [arrowhead=none, color="black", style=dashed]
    node9774 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node9774 -> node9775 [label=<<font color="black">true</font>> color="black"]
    node9774 -> node9777 [label=<<font color="black">false</font>> color="black"]
    node9775_name [shape=none, label=<<font color="black">Call[9775]</font>>]
    node9775_name -> node9775 [arrowhead=none, color="black", style=dashed]
    node9775 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9775 -> node9776 [color="black"]
    node9777_name [shape=none, label=<<font color="black">Block[9777]</font>>]
    node9777_name -> node9777 [arrowhead=none, color="black", style=dashed]
    node9777 [shape=box, label=<<font color="black">[0] return has<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9777 -> cluster1764_exit [color="black"]
    node9776_name [shape=none, label=<<font color="black">Block[9776]</font>>]
    node9776_name -> node9776 [arrowhead=none, color="black", style=dashed]
    node9776 [shape=box, label=<<font color="black">[0] let has = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9776 -> node9777 [color="black"]
  }
}