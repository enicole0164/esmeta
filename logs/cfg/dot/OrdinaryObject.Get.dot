digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1063 {
    label = "def <INTERNAL>:OrdinaryObject.Get(O: OrdinaryObject, P: Symbol | String, Receiver: ESValue): Normal[ESValue] | Abrupt"
    style = rounded
    cluster1063_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1063_entry_name -> cluster1063_entry [arrowhead=none, color="black", style=dashed]
    cluster1063_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1063_entry -> node4116 [color="black"]
    cluster1063_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1063_exit_name -> cluster1063_exit [arrowhead=none, color="black", style=dashed]
    cluster1063_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4116_name [shape=none, label=<<font color="black">Call[4116]</font>>]
    node4116_name -> node4116 [arrowhead=none, color="black", style=dashed]
    node4116 [shape=cds, label=<<font color="black">%0 = clo&lt;OrdinaryGet&gt;(O, P, Receiver)</font>> color="black" fillcolor="white", style=filled]
    node4116 -> node4117 [color="black"]
    node4117_name [shape=none, label=<<font color="black">Block[4117]</font>>]
    node4117_name -> node4117 [arrowhead=none, color="black", style=dashed]
    node4117 [shape=box, label=<<font color="black">[0] return [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4117 -> cluster1063_exit [color="black"]
  }
}