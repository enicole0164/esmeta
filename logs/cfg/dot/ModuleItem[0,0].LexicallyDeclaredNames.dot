digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster282 {
    label = "def <SYNTAX>:ModuleItem[0,0].LexicallyDeclaredNames(this: Ast:ModuleItem[0,0]): List[String]"
    style = rounded
    cluster282_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster282_entry_name -> cluster282_entry [arrowhead=none, color="black", style=dashed]
    cluster282_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster282_entry -> node1762 [color="black"]
    cluster282_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster282_exit_name -> cluster282_exit [arrowhead=none, color="black", style=dashed]
    cluster282_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1762_name [shape=none, label=<<font color="black">Call[1762]</font>>]
    node1762_name -> node1762 [arrowhead=none, color="black", style=dashed]
    node1762 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node1762 -> node1763 [color="black"]
    node1763_name [shape=none, label=<<font color="black">Block[1763]</font>>]
    node1763_name -> node1763 [arrowhead=none, color="black", style=dashed]
    node1763 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1763 -> cluster282_exit [color="black"]
  }
}