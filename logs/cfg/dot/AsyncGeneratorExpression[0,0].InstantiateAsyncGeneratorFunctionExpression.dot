digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1613 {
    label = "def <SYNTAX>:AsyncGeneratorExpression[0,0].InstantiateAsyncGeneratorFunctionExpression(this: Ast:AsyncGeneratorExpression[0,0], name?: Unknown): FunctionObject"
    style = rounded
    cluster1613_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1613_entry_name -> cluster1613_entry [arrowhead=none, color="black", style=dashed]
    cluster1613_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1613_entry -> node8750 [color="black"]
    cluster1613_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1613_exit_name -> cluster1613_exit [arrowhead=none, color="black", style=dashed]
    cluster1613_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8750_name [shape=none, label=<<font color="black">Branch[8750]</font>>]
    node8750_name -> node8750 [arrowhead=none, color="black", style=dashed]
    node8750 [shape=diamond, label=<<font color="black">(= name absent)</font>> color="black" fillcolor="white", style=filled]
    node8750 -> node8751 [label=<<font color="black">true</font>> color="black"]
    node8750 -> node8752 [label=<<font color="black">false</font>> color="black"]
    node8751_name [shape=none, label=<<font color="black">Block[8751]</font>>]
    node8751_name -> node8751 [arrowhead=none, color="black", style=dashed]
    node8751 [shape=box, label=<<font color="black">[0] name = &quot;&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8751 -> node8752 [color="black"]
    node8752_name [shape=none, label=<<font color="black">Block[8752]</font>>]
    node8752_name -> node8752 [arrowhead=none, color="black", style=dashed]
    node8752 [shape=box, label=<<font color="black">[0] let env = @EXECUTION_STACK[0].LexicalEnvironment<BR ALIGN="LEFT"/>[1] let privateEnv = @EXECUTION_STACK[0].PrivateEnvironment<BR ALIGN="LEFT"/>[2] let sourceText = (source-text this)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8752 -> node8753 [color="black"]
    node8753_name [shape=none, label=<<font color="black">Call[8753]</font>>]
    node8753_name -> node8753 [arrowhead=none, color="black", style=dashed]
    node8753 [shape=cds, label=<<font color="black">%0 = clo&lt;OrdinaryFunctionCreate&gt;(@EXECUTION_STACK[0].Realm.Intrinsics[&quot;%AsyncGeneratorFunction.prototype%&quot;], sourceText, this[1], this[2], ~non-lexical-this~, env, privateEnv)</font>> color="black" fillcolor="white", style=filled]
    node8753 -> node8754 [color="black"]
    node8754_name [shape=none, label=<<font color="black">Block[8754]</font>>]
    node8754_name -> node8754 [arrowhead=none, color="black", style=dashed]
    node8754 [shape=box, label=<<font color="black">[0] let closure = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8754 -> node8755 [color="black"]
    node8755_name [shape=none, label=<<font color="black">Call[8755]</font>>]
    node8755_name -> node8755 [arrowhead=none, color="black", style=dashed]
    node8755 [shape=cds, label=<<font color="black">%1 = clo&lt;SetFunctionName&gt;(closure, name)</font>> color="black" fillcolor="white", style=filled]
    node8755 -> node8756 [color="black"]
    node8756_name [shape=none, label=<<font color="black">Call[8756]</font>>]
    node8756_name -> node8756 [arrowhead=none, color="black", style=dashed]
    node8756 [shape=cds, label=<<font color="black">%2 = clo&lt;OrdinaryObjectCreate&gt;(@EXECUTION_STACK[0].Realm.Intrinsics[&quot;%AsyncGeneratorFunction.prototype.prototype%&quot;])</font>> color="black" fillcolor="white", style=filled]
    node8756 -> node8757 [color="black"]
    node8757_name [shape=none, label=<<font color="black">Block[8757]</font>>]
    node8757_name -> node8757 [arrowhead=none, color="black", style=dashed]
    node8757 [shape=box, label=<<font color="black">[0] let prototype = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8757 -> node8758 [color="black"]
    node8758_name [shape=none, label=<<font color="black">Call[8758]</font>>]
    node8758_name -> node8758 [arrowhead=none, color="black", style=dashed]
    node8758 [shape=cds, label=<<font color="black">%3 = clo&lt;DefinePropertyOrThrow&gt;(closure, &quot;prototype&quot;, (new PropertyDescriptor(&quot;Value&quot; -&gt; prototype, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; false))[#673])</font>> color="black" fillcolor="white", style=filled]
    node8758 -> node8759 [color="black"]
    node8759_name [shape=none, label=<<font color="black">Block[8759]</font>>]
    node8759_name -> node8759 [arrowhead=none, color="black", style=dashed]
    node8759 [shape=box, label=<<font color="black">[0] [! %3]<BR ALIGN="LEFT"/>[1] return closure<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8759 -> cluster1613_exit [color="black"]
  }
}