digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster316 {
    label = "def <SYNTAX>:ExportDeclaration[4,0].LexicallyScopedDeclarations(this: Ast:ExportDeclaration[4,0]): List[Ast]"
    style = rounded
    cluster316_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster316_entry_name -> cluster316_entry [arrowhead=none, color="black", style=dashed]
    cluster316_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster316_entry -> node1870 [color="black"]
    cluster316_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster316_exit_name -> cluster316_exit [arrowhead=none, color="black", style=dashed]
    cluster316_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1870_name [shape=none, label=<<font color="black">Call[1870]</font>>]
    node1870_name -> node1870 [arrowhead=none, color="black", style=dashed]
    node1870 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;DeclarationPart()</font>> color="black" fillcolor="white", style=filled]
    node1870 -> node1871 [color="black"]
    node1871_name [shape=none, label=<<font color="black">Block[1871]</font>>]
    node1871_name -> node1871 [arrowhead=none, color="black", style=dashed]
    node1871 [shape=box, label=<<font color="black">[0] return (new [%0])[#174]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1871 -> cluster316_exit [color="black"]
  }
}