digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster259 {
    label = "def <SYNTAX>:StatementListItem[1,0].LexicallyDeclaredNames(this: Ast:StatementListItem[1,0]): List[String]"
    style = rounded
    cluster259_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster259_entry_name -> cluster259_entry [arrowhead=none, color="black", style=dashed]
    cluster259_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster259_entry -> node1675 [color="black"]
    cluster259_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster259_exit_name -> cluster259_exit [arrowhead=none, color="black", style=dashed]
    cluster259_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1675_name [shape=none, label=<<font color="black">Call[1675]</font>>]
    node1675_name -> node1675 [arrowhead=none, color="black", style=dashed]
    node1675 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node1675 -> node1676 [color="black"]
    node1676_name [shape=none, label=<<font color="black">Block[1676]</font>>]
    node1676_name -> node1676 [arrowhead=none, color="black", style=dashed]
    node1676 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1676 -> cluster259_exit [color="black"]
  }
}