digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1846 {
    label = "def <SYNTAX>:CoalesceExpression[0,0].HasCallInTailPosition(this: Ast:CoalesceExpression[0,0], call: Unknown): Boolean"
    style = rounded
    cluster1846_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1846_entry_name -> cluster1846_entry [arrowhead=none, color="black", style=dashed]
    cluster1846_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1846_entry -> node9928 [color="black"]
    cluster1846_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1846_exit_name -> cluster1846_exit [arrowhead=none, color="black", style=dashed]
    cluster1846_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9928_name [shape=none, label=<<font color="black">Call[9928]</font>>]
    node9928_name -> node9928 [arrowhead=none, color="black", style=dashed]
    node9928 [shape=cds, label=<<font color="black">%0 = this[1]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9928 -> node9929 [color="black"]
    node9929_name [shape=none, label=<<font color="black">Block[9929]</font>>]
    node9929_name -> node9929 [arrowhead=none, color="black", style=dashed]
    node9929 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9929 -> cluster1846_exit [color="black"]
  }
}