digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2311 {
    label = "def <BUILTIN>:INTRINSICS.RegExp.prototype.exec(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2311_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2311_entry_name -> cluster2311_entry [arrowhead=none, color="black", style=dashed]
    cluster2311_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2311_entry -> node14155 [color="black"]
    cluster2311_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2311_exit_name -> cluster2311_exit [arrowhead=none, color="black", style=dashed]
    cluster2311_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node14155_name [shape=none, label=<<font color="black">Branch[14155]</font>>]
    node14155_name -> node14155 [arrowhead=none, color="black", style=dashed]
    node14155 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node14155 -> node14156 [label=<<font color="black">true</font>> color="black"]
    node14155 -> node14157 [label=<<font color="black">false</font>> color="black"]
    node14156_name [shape=none, label=<<font color="black">Block[14156]</font>>]
    node14156_name -> node14156 [arrowhead=none, color="black", style=dashed]
    node14156 [shape=box, label=<<font color="black">[0] let string = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14156 -> node14158 [color="black"]
    node14157_name [shape=none, label=<<font color="black">Block[14157]</font>>]
    node14157_name -> node14157 [arrowhead=none, color="black", style=dashed]
    node14157 [shape=box, label=<<font color="black">[0] let string = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14157 -> node14158 [color="black"]
    node14158_name [shape=none, label=<<font color="black">Block[14158]</font>>]
    node14158_name -> node14158 [arrowhead=none, color="black", style=dashed]
    node14158 [shape=box, label=<<font color="black">[0] let R = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14158 -> node14159 [color="black"]
    node14159_name [shape=none, label=<<font color="black">Call[14159]</font>>]
    node14159_name -> node14159 [arrowhead=none, color="black", style=dashed]
    node14159 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireInternalSlot&gt;(R, &quot;RegExpMatcher&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14159 -> node14160 [color="black"]
    node14160_name [shape=none, label=<<font color="black">Block[14160]</font>>]
    node14160_name -> node14160 [arrowhead=none, color="black", style=dashed]
    node14160 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14160 -> node14161 [color="black"]
    node14161_name [shape=none, label=<<font color="black">Call[14161]</font>>]
    node14161_name -> node14161 [arrowhead=none, color="black", style=dashed]
    node14161 [shape=cds, label=<<font color="black">%1 = clo&lt;ToString&gt;(string)</font>> color="black" fillcolor="white", style=filled]
    node14161 -> node14162 [color="black"]
    node14162_name [shape=none, label=<<font color="black">Block[14162]</font>>]
    node14162_name -> node14162 [arrowhead=none, color="black", style=dashed]
    node14162 [shape=box, label=<<font color="black">[0] let S = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14162 -> node14163 [color="black"]
    node14163_name [shape=none, label=<<font color="black">Call[14163]</font>>]
    node14163_name -> node14163 [arrowhead=none, color="black", style=dashed]
    node14163 [shape=cds, label=<<font color="black">%2 = clo&lt;RegExpBuiltinExec&gt;(R, S)</font>> color="black" fillcolor="white", style=filled]
    node14163 -> node14164 [color="black"]
    node14164_name [shape=none, label=<<font color="black">Block[14164]</font>>]
    node14164_name -> node14164 [arrowhead=none, color="black", style=dashed]
    node14164 [shape=box, label=<<font color="black">[0] return [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14164 -> cluster2311_exit [color="black"]
  }
}