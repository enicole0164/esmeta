digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster290 {
    label = "def <SYNTAX>:CaseBlock[1,1].LexicallyScopedDeclarations(this: Ast:CaseBlock[1,1]): List[Ast]"
    style = rounded
    cluster290_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster290_entry_name -> cluster290_entry [arrowhead=none, color="black", style=dashed]
    cluster290_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster290_entry -> node1791 [color="black"]
    cluster290_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster290_exit_name -> cluster290_exit [arrowhead=none, color="black", style=dashed]
    cluster290_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1791_name [shape=none, label=<<font color="black">Branch[1791]</font>>]
    node1791_name -> node1791 [arrowhead=none, color="black", style=dashed]
    node1791 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node1791 -> node1792 [label=<<font color="black">true</font>> color="black"]
    node1791 -> node1794 [label=<<font color="black">false</font>> color="black"]
    node1792_name [shape=none, label=<<font color="black">Call[1792]</font>>]
    node1792_name -> node1792 [arrowhead=none, color="black", style=dashed]
    node1792 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;LexicallyScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node1792 -> node1793 [color="black"]
    node1794_name [shape=none, label=<<font color="black">Block[1794]</font>>]
    node1794_name -> node1794 [arrowhead=none, color="black", style=dashed]
    node1794 [shape=box, label=<<font color="black">[0] let declarations1 = (new [])[#146]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1794 -> node1795 [color="black"]
    node1793_name [shape=none, label=<<font color="black">Block[1793]</font>>]
    node1793_name -> node1793 [arrowhead=none, color="black", style=dashed]
    node1793 [shape=box, label=<<font color="black">[0] let declarations1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1793 -> node1795 [color="black"]
    node1795_name [shape=none, label=<<font color="black">Call[1795]</font>>]
    node1795_name -> node1795 [arrowhead=none, color="black", style=dashed]
    node1795 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;LexicallyScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node1795 -> node1796 [color="black"]
    node1796_name [shape=none, label=<<font color="black">Block[1796]</font>>]
    node1796_name -> node1796 [arrowhead=none, color="black", style=dashed]
    node1796 [shape=box, label=<<font color="black">[0] let declarations2 = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1796 -> node1797 [color="black"]
    node1797_name [shape=none, label=<<font color="black">Branch[1797]</font>>]
    node1797_name -> node1797 [arrowhead=none, color="black", style=dashed]
    node1797 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node1797 -> node1798 [label=<<font color="black">true</font>> color="black"]
    node1797 -> node1800 [label=<<font color="black">false</font>> color="black"]
    node1798_name [shape=none, label=<<font color="black">Call[1798]</font>>]
    node1798_name -> node1798 [arrowhead=none, color="black", style=dashed]
    node1798 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;LexicallyScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node1798 -> node1799 [color="black"]
    node1800_name [shape=none, label=<<font color="black">Block[1800]</font>>]
    node1800_name -> node1800 [arrowhead=none, color="black", style=dashed]
    node1800 [shape=box, label=<<font color="black">[0] let declarations3 = (new [])[#147]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1800 -> node1801 [color="black"]
    node1799_name [shape=none, label=<<font color="black">Block[1799]</font>>]
    node1799_name -> node1799 [arrowhead=none, color="black", style=dashed]
    node1799 [shape=box, label=<<font color="black">[0] let declarations3 = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1799 -> node1801 [color="black"]
    node1801_name [shape=none, label=<<font color="black">Block[1801]</font>>]
    node1801_name -> node1801 [arrowhead=none, color="black", style=dashed]
    node1801 [shape=box, label=<<font color="black">[0] return (list-concat declarations1 declarations2 declarations3)[#148]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1801 -> cluster290_exit [color="black"]
  }
}