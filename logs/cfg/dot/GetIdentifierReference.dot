digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1020 {
    label = "def GetIdentifierReference(env: EnvironmentRecord | Null, name: String, strict: Boolean): Normal[ReferenceRecord] | Abrupt"
    style = rounded
    cluster1020_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1020_entry_name -> cluster1020_entry [arrowhead=none, color="black", style=dashed]
    cluster1020_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1020_entry -> node3822 [color="black"]
    cluster1020_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1020_exit_name -> cluster1020_exit [arrowhead=none, color="black", style=dashed]
    cluster1020_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3822_name [shape=none, label=<<font color="black">Branch[3822]</font>>]
    node3822_name -> node3822 [arrowhead=none, color="black", style=dashed]
    node3822 [shape=diamond, label=<<font color="black">(= env null)</font>> color="black" fillcolor="white", style=filled]
    node3822 -> node3823 [label=<<font color="black">true</font>> color="black"]
    node3822 -> node3824 [label=<<font color="black">false</font>> color="black"]
    node3823_name [shape=none, label=<<font color="black">Block[3823]</font>>]
    node3823_name -> node3823 [arrowhead=none, color="black", style=dashed]
    node3823 [shape=box, label=<<font color="black">[0] return (new ReferenceRecord(&quot;Base&quot; -&gt; ~unresolvable~, &quot;ReferencedName&quot; -&gt; name, &quot;Strict&quot; -&gt; strict, &quot;ThisValue&quot; -&gt; ~empty~))[#382]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3823 -> cluster1020_exit [color="black"]
    node3824_name [shape=none, label=<<font color="black">Call[3824]</font>>]
    node3824_name -> node3824 [arrowhead=none, color="black", style=dashed]
    node3824 [shape=cds, label=<<font color="black">%0 = env-&gt;HasBinding(name)</font>> color="black" fillcolor="white", style=filled]
    node3824 -> node3825 [color="black"]
    node3825_name [shape=none, label=<<font color="black">Block[3825]</font>>]
    node3825_name -> node3825 [arrowhead=none, color="black", style=dashed]
    node3825 [shape=box, label=<<font color="black">[0] let exists = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3825 -> node3826 [color="black"]
    node3826_name [shape=none, label=<<font color="black">Branch[3826]</font>>]
    node3826_name -> node3826 [arrowhead=none, color="black", style=dashed]
    node3826 [shape=diamond, label=<<font color="black">(= exists true)</font>> color="black" fillcolor="white", style=filled]
    node3826 -> node3827 [label=<<font color="black">true</font>> color="black"]
    node3826 -> node3828 [label=<<font color="black">false</font>> color="black"]
    node3827_name [shape=none, label=<<font color="black">Block[3827]</font>>]
    node3827_name -> node3827 [arrowhead=none, color="black", style=dashed]
    node3827 [shape=box, label=<<font color="black">[0] return (new ReferenceRecord(&quot;Base&quot; -&gt; env, &quot;ReferencedName&quot; -&gt; name, &quot;Strict&quot; -&gt; strict, &quot;ThisValue&quot; -&gt; ~empty~))[#383]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3827 -> cluster1020_exit [color="black"]
    node3828_name [shape=none, label=<<font color="black">Block[3828]</font>>]
    node3828_name -> node3828 [arrowhead=none, color="black", style=dashed]
    node3828 [shape=box, label=<<font color="black">[0] let outer = env.OuterEnv<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3828 -> node3829 [color="black"]
    node3829_name [shape=none, label=<<font color="black">Call[3829]</font>>]
    node3829_name -> node3829 [arrowhead=none, color="black", style=dashed]
    node3829 [shape=cds, label=<<font color="black">%1 = clo&lt;GetIdentifierReference&gt;(outer, name, strict)</font>> color="black" fillcolor="white", style=filled]
    node3829 -> node3830 [color="black"]
    node3830_name [shape=none, label=<<font color="black">Block[3830]</font>>]
    node3830_name -> node3830 [arrowhead=none, color="black", style=dashed]
    node3830 [shape=box, label=<<font color="black">[0] return [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3830 -> cluster1020_exit [color="black"]
  }
}