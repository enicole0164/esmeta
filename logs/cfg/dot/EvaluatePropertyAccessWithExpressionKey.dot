digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1264 {
    label = "def EvaluatePropertyAccessWithExpressionKey(baseValue: ESValue, expression: Ast, strict: Boolean): Normal[ReferenceRecord] | Abrupt"
    style = rounded
    cluster1264_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1264_entry_name -> cluster1264_entry [arrowhead=none, color="black", style=dashed]
    cluster1264_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1264_entry -> node5832 [color="black"]
    cluster1264_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1264_exit_name -> cluster1264_exit [arrowhead=none, color="black", style=dashed]
    cluster1264_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node5832_name [shape=none, label=<<font color="black">Call[5832]</font>>]
    node5832_name -> node5832 [arrowhead=none, color="black", style=dashed]
    node5832 [shape=cds, label=<<font color="black">%0 = expression-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node5832 -> node5833 [color="black"]
    node5833_name [shape=none, label=<<font color="black">Block[5833]</font>>]
    node5833_name -> node5833 [arrowhead=none, color="black", style=dashed]
    node5833 [shape=box, label=<<font color="black">[0] let propertyNameReference = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5833 -> node5834 [color="black"]
    node5834_name [shape=none, label=<<font color="black">Call[5834]</font>>]
    node5834_name -> node5834 [arrowhead=none, color="black", style=dashed]
    node5834 [shape=cds, label=<<font color="black">%1 = clo&lt;GetValue&gt;(propertyNameReference)</font>> color="black" fillcolor="white", style=filled]
    node5834 -> node5835 [color="black"]
    node5835_name [shape=none, label=<<font color="black">Block[5835]</font>>]
    node5835_name -> node5835 [arrowhead=none, color="black", style=dashed]
    node5835 [shape=box, label=<<font color="black">[0] let propertyNameValue = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5835 -> node5836 [color="black"]
    node5836_name [shape=none, label=<<font color="black">Call[5836]</font>>]
    node5836_name -> node5836 [arrowhead=none, color="black", style=dashed]
    node5836 [shape=cds, label=<<font color="black">%2 = clo&lt;ToPropertyKey&gt;(propertyNameValue)</font>> color="black" fillcolor="white", style=filled]
    node5836 -> node5837 [color="black"]
    node5837_name [shape=none, label=<<font color="black">Block[5837]</font>>]
    node5837_name -> node5837 [arrowhead=none, color="black", style=dashed]
    node5837 [shape=box, label=<<font color="black">[0] let propertyKey = [? %2]<BR ALIGN="LEFT"/>[1] return (new ReferenceRecord(&quot;Base&quot; -&gt; baseValue, &quot;ReferencedName&quot; -&gt; propertyKey, &quot;Strict&quot; -&gt; strict, &quot;ThisValue&quot; -&gt; ~empty~))[#567]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5837 -> cluster1264_exit [color="black"]
  }
}