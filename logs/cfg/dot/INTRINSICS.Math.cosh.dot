digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2088 {
    label = "def <BUILTIN>:INTRINSICS.Math.cosh(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2088_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2088_entry_name -> cluster2088_entry [arrowhead=none, color="black", style=dashed]
    cluster2088_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2088_entry -> node12162 [color="black"]
    cluster2088_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2088_exit_name -> cluster2088_exit [arrowhead=none, color="black", style=dashed]
    cluster2088_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node12162_name [shape=none, label=<<font color="black">Branch[12162]</font>>]
    node12162_name -> node12162 [arrowhead=none, color="black", style=dashed]
    node12162 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node12162 -> node12163 [label=<<font color="black">true</font>> color="black"]
    node12162 -> node12164 [label=<<font color="black">false</font>> color="black"]
    node12163_name [shape=none, label=<<font color="black">Block[12163]</font>>]
    node12163_name -> node12163 [arrowhead=none, color="black", style=dashed]
    node12163 [shape=box, label=<<font color="black">[0] let x = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12163 -> node12165 [color="black"]
    node12164_name [shape=none, label=<<font color="black">Block[12164]</font>>]
    node12164_name -> node12164 [arrowhead=none, color="black", style=dashed]
    node12164 [shape=box, label=<<font color="black">[0] let x = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12164 -> node12165 [color="black"]
    node12165_name [shape=none, label=<<font color="black">Call[12165]</font>>]
    node12165_name -> node12165 [arrowhead=none, color="black", style=dashed]
    node12165 [shape=cds, label=<<font color="black">%0 = clo&lt;ToNumber&gt;(x)</font>> color="black" fillcolor="white", style=filled]
    node12165 -> node12166 [color="black"]
    node12166_name [shape=none, label=<<font color="black">Block[12166]</font>>]
    node12166_name -> node12166 [arrowhead=none, color="black", style=dashed]
    node12166 [shape=box, label=<<font color="black">[0] let n = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12166 -> node12167 [color="black"]
    node12167_name [shape=none, label=<<font color="black">Branch[12167]</font>>]
    node12167_name -> node12167 [arrowhead=none, color="black", style=dashed]
    node12167 [shape=diamond, label=<<font color="black">(= n NaN)</font>> color="black" fillcolor="white", style=filled]
    node12167 -> node12168 [label=<<font color="black">true</font>> color="black"]
    node12167 -> node12169 [label=<<font color="black">false</font>> color="black"]
    node12168_name [shape=none, label=<<font color="black">Block[12168]</font>>]
    node12168_name -> node12168 [arrowhead=none, color="black", style=dashed]
    node12168 [shape=box, label=<<font color="black">[0] return NaN<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12168 -> cluster2088_exit [color="black"]
    node12169_name [shape=none, label=<<font color="black">Branch[12169]</font>>]
    node12169_name -> node12169 [arrowhead=none, color="black", style=dashed]
    node12169 [shape=diamond, label=<<font color="black">(|| (= n +INF) (= n -INF))</font>> color="black" fillcolor="white", style=filled]
    node12169 -> node12170 [label=<<font color="black">true</font>> color="black"]
    node12169 -> node12171 [label=<<font color="black">false</font>> color="black"]
    node12170_name [shape=none, label=<<font color="black">Block[12170]</font>>]
    node12170_name -> node12170 [arrowhead=none, color="black", style=dashed]
    node12170 [shape=box, label=<<font color="black">[0] return +INF<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12170 -> cluster2088_exit [color="black"]
    node12171_name [shape=none, label=<<font color="black">Branch[12171]</font>>]
    node12171_name -> node12171 [arrowhead=none, color="black", style=dashed]
    node12171 [shape=diamond, label=<<font color="black">(|| (= n 0.0f) (= n -0.0f))</font>> color="black" fillcolor="white", style=filled]
    node12171 -> node12172 [label=<<font color="black">true</font>> color="black"]
    node12171 -> node12173 [label=<<font color="black">false</font>> color="black"]
    node12172_name [shape=none, label=<<font color="black">Block[12172]</font>>]
    node12172_name -> node12172 [arrowhead=none, color="black", style=dashed]
    node12172 [shape=box, label=<<font color="black">[0] return 1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12172 -> cluster2088_exit [color="black"]
    node12173_name [shape=none, label=<<font color="black">Block[12173]</font>>]
    node12173_name -> node12173 [arrowhead=none, color="black", style=dashed]
    node12173 [shape=box, label=<<font color="black">[0] return ([approx-number] ([math:cosh] ([math] n)))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12173 -> cluster2088_exit [color="black"]
  }
}