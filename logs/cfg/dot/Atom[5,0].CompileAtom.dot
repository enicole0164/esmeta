digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2271 {
    label = "def <SYNTAX>:Atom[5,0].CompileAtom(this: Ast:Atom[5,0], direction: Const[~backward~, ~forward~]): Unknown["Matcher"]"
    style = rounded
    cluster2271_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2271_entry_name -> cluster2271_entry [arrowhead=none, color="black", style=dashed]
    cluster2271_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2271_entry -> node13996 [color="black"]
    cluster2271_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2271_exit_name -> cluster2271_exit [arrowhead=none, color="black", style=dashed]
    cluster2271_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node13996_name [shape=none, label=<<font color="black">Call[13996]</font>>]
    node13996_name -> node13996 [arrowhead=none, color="black", style=dashed]
    node13996 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;CompileSubpattern(direction)</font>> color="black" fillcolor="white", style=filled]
    node13996 -> node13997 [color="black"]
    node13997_name [shape=none, label=<<font color="black">Block[13997]</font>>]
    node13997_name -> node13997 [arrowhead=none, color="black", style=dashed]
    node13997 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13997 -> cluster2271_exit [color="black"]
  }
}