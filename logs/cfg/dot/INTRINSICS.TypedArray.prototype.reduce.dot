digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2407 {
    label = "def <BUILTIN>:INTRINSICS.TypedArray.prototype.reduce(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2407_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2407_entry_name -> cluster2407_entry [arrowhead=none, color="black", style=dashed]
    cluster2407_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2407_entry -> node16362 [color="black"]
    cluster2407_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2407_exit_name -> cluster2407_exit [arrowhead=none, color="black", style=dashed]
    cluster2407_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node16362_name [shape=none, label=<<font color="black">Branch[16362]</font>>]
    node16362_name -> node16362 [arrowhead=none, color="black", style=dashed]
    node16362 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node16362 -> node16363 [label=<<font color="black">true</font>> color="black"]
    node16362 -> node16364 [label=<<font color="black">false</font>> color="black"]
    node16363_name [shape=none, label=<<font color="black">Block[16363]</font>>]
    node16363_name -> node16363 [arrowhead=none, color="black", style=dashed]
    node16363 [shape=box, label=<<font color="black">[0] let callbackfn = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16363 -> node16365 [color="black"]
    node16364_name [shape=none, label=<<font color="black">Block[16364]</font>>]
    node16364_name -> node16364 [arrowhead=none, color="black", style=dashed]
    node16364 [shape=box, label=<<font color="black">[0] let callbackfn = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16364 -> node16365 [color="black"]
    node16365_name [shape=none, label=<<font color="black">Branch[16365]</font>>]
    node16365_name -> node16365 [arrowhead=none, color="black", style=dashed]
    node16365 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node16365 -> node16366 [label=<<font color="black">true</font>> color="black"]
    node16365 -> node16367 [label=<<font color="black">false</font>> color="black"]
    node16366_name [shape=none, label=<<font color="black">Block[16366]</font>>]
    node16366_name -> node16366 [arrowhead=none, color="black", style=dashed]
    node16366 [shape=box, label=<<font color="black">[0] let initialValue = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16366 -> node16368 [color="black"]
    node16367_name [shape=none, label=<<font color="black">Block[16367]</font>>]
    node16367_name -> node16367 [arrowhead=none, color="black", style=dashed]
    node16367 [shape=box, label=<<font color="black">[0] let initialValue = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16367 -> node16368 [color="black"]
    node16368_name [shape=none, label=<<font color="black">Block[16368]</font>>]
    node16368_name -> node16368 [arrowhead=none, color="black", style=dashed]
    node16368 [shape=box, label=<<font color="black">[0] let O = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16368 -> node16369 [color="black"]
    node16369_name [shape=none, label=<<font color="black">Call[16369]</font>>]
    node16369_name -> node16369 [arrowhead=none, color="black", style=dashed]
    node16369 [shape=cds, label=<<font color="black">%0 = clo&lt;ValidateTypedArray&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node16369 -> node16370 [color="black"]
    node16370_name [shape=none, label=<<font color="black">Block[16370]</font>>]
    node16370_name -> node16370 [arrowhead=none, color="black", style=dashed]
    node16370 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/>[1] let len = O.ArrayLength<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16370 -> node16371 [color="black"]
    node16371_name [shape=none, label=<<font color="black">Call[16371]</font>>]
    node16371_name -> node16371 [arrowhead=none, color="black", style=dashed]
    node16371 [shape=cds, label=<<font color="black">%1 = clo&lt;IsCallable&gt;(callbackfn)</font>> color="black" fillcolor="white", style=filled]
    node16371 -> node16372 [color="black"]
    node16372_name [shape=none, label=<<font color="black">Branch[16372]</font>>]
    node16372_name -> node16372 [arrowhead=none, color="black", style=dashed]
    node16372 [shape=diamond, label=<<font color="black">(= %1 false)</font>> color="black" fillcolor="white", style=filled]
    node16372 -> node16373 [label=<<font color="black">true</font>> color="black"]
    node16372 -> node16374 [label=<<font color="black">false</font>> color="black"]
    node16373_name [shape=none, label=<<font color="black">Block[16373]</font>>]
    node16373_name -> node16373 [arrowhead=none, color="black", style=dashed]
    node16373 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1078])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16373 -> cluster2407_exit [color="black"]
    node16374_name [shape=none, label=<<font color="black">Branch[16374]</font>>]
    node16374_name -> node16374 [arrowhead=none, color="black", style=dashed]
    node16374 [shape=diamond, label=<<font color="black">(&amp;&amp; (== len 0) (= initialValue absent))</font>> color="black" fillcolor="white", style=filled]
    node16374 -> node16375 [label=<<font color="black">true</font>> color="black"]
    node16374 -> node16376 [label=<<font color="black">false</font>> color="black"]
    node16375_name [shape=none, label=<<font color="black">Block[16375]</font>>]
    node16375_name -> node16375 [arrowhead=none, color="black", style=dashed]
    node16375 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1079])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16375 -> cluster2407_exit [color="black"]
    node16376_name [shape=none, label=<<font color="black">Block[16376]</font>>]
    node16376_name -> node16376 [arrowhead=none, color="black", style=dashed]
    node16376 [shape=box, label=<<font color="black">[0] let k = 0<BR ALIGN="LEFT"/>[1] let accumulator = undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16376 -> node16377 [color="black"]
    node16377_name [shape=none, label=<<font color="black">Branch[16377]</font>>]
    node16377_name -> node16377 [arrowhead=none, color="black", style=dashed]
    node16377 [shape=diamond, label=<<font color="black">(! (= initialValue absent))</font>> color="black" fillcolor="white", style=filled]
    node16377 -> node16378 [label=<<font color="black">true</font>> color="black"]
    node16377 -> node16379 [label=<<font color="black">false</font>> color="black"]
    node16378_name [shape=none, label=<<font color="black">Block[16378]</font>>]
    node16378_name -> node16378 [arrowhead=none, color="black", style=dashed]
    node16378 [shape=box, label=<<font color="black">[0] accumulator = initialValue<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16378 -> node16383 [color="black"]
    node16379_name [shape=none, label=<<font color="black">Call[16379]</font>>]
    node16379_name -> node16379 [arrowhead=none, color="black", style=dashed]
    node16379 [shape=cds, label=<<font color="black">%2 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node16379 -> node16380 [color="black"]
    node16383_name [shape=none, label=<<font color="black">Branch[16383]</font>>]
    node16383_name -> node16383 [arrowhead=none, color="black", style=dashed]
    node16383 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white", style=filled]
    node16383 -> node16384 [label=<<font color="black">true</font>> color="black"]
    node16383 -> node16390 [label=<<font color="black">false</font>> color="black"]
    node16380_name [shape=none, label=<<font color="black">Block[16380]</font>>]
    node16380_name -> node16380 [arrowhead=none, color="black", style=dashed]
    node16380 [shape=box, label=<<font color="black">[0] let Pk = [! %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16380 -> node16381 [color="black"]
    node16384_name [shape=none, label=<<font color="black">Call[16384]</font>>]
    node16384_name -> node16384 [arrowhead=none, color="black", style=dashed]
    node16384 [shape=cds, label=<<font color="black">%4 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node16384 -> node16385 [color="black"]
    node16390_name [shape=none, label=<<font color="black">Block[16390]</font>>]
    node16390_name -> node16390 [arrowhead=none, color="black", style=dashed]
    node16390 [shape=box, label=<<font color="black">[0] return accumulator<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16390 -> cluster2407_exit [color="black"]
    node16381_name [shape=none, label=<<font color="black">Call[16381]</font>>]
    node16381_name -> node16381 [arrowhead=none, color="black", style=dashed]
    node16381 [shape=cds, label=<<font color="black">%3 = clo&lt;Get&gt;(O, Pk)</font>> color="black" fillcolor="white", style=filled]
    node16381 -> node16382 [color="black"]
    node16385_name [shape=none, label=<<font color="black">Block[16385]</font>>]
    node16385_name -> node16385 [arrowhead=none, color="black", style=dashed]
    node16385 [shape=box, label=<<font color="black">[0] let Pk = [! %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16385 -> node16386 [color="black"]
    node16382_name [shape=none, label=<<font color="black">Block[16382]</font>>]
    node16382_name -> node16382 [arrowhead=none, color="black", style=dashed]
    node16382 [shape=box, label=<<font color="black">[0] accumulator = [! %3]<BR ALIGN="LEFT"/>[1] k = (+ k 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16382 -> node16383 [color="black"]
    node16386_name [shape=none, label=<<font color="black">Call[16386]</font>>]
    node16386_name -> node16386 [arrowhead=none, color="black", style=dashed]
    node16386 [shape=cds, label=<<font color="black">%5 = clo&lt;Get&gt;(O, Pk)</font>> color="black" fillcolor="white", style=filled]
    node16386 -> node16387 [color="black"]
    node16387_name [shape=none, label=<<font color="black">Block[16387]</font>>]
    node16387_name -> node16387 [arrowhead=none, color="black", style=dashed]
    node16387 [shape=box, label=<<font color="black">[0] let kValue = [! %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16387 -> node16388 [color="black"]
    node16388_name [shape=none, label=<<font color="black">Call[16388]</font>>]
    node16388_name -> node16388 [arrowhead=none, color="black", style=dashed]
    node16388 [shape=cds, label=<<font color="black">%6 = clo&lt;Call&gt;(callbackfn, undefined, (new [accumulator, kValue, ([number] k), O])[#1080])</font>> color="black" fillcolor="white", style=filled]
    node16388 -> node16389 [color="black"]
    node16389_name [shape=none, label=<<font color="black">Block[16389]</font>>]
    node16389_name -> node16389 [arrowhead=none, color="black", style=dashed]
    node16389 [shape=box, label=<<font color="black">[0] accumulator = [? %6]<BR ALIGN="LEFT"/>[1] k = (+ k 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16389 -> node16383 [color="black"]
  }
}