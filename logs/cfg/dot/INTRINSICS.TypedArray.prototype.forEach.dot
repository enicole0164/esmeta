digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2399 {
    label = "def <BUILTIN>:INTRINSICS.TypedArray.prototype.forEach(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2399_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2399_entry_name -> cluster2399_entry [arrowhead=none, color="black", style=dashed]
    cluster2399_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2399_entry -> node16181 [color="black"]
    cluster2399_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2399_exit_name -> cluster2399_exit [arrowhead=none, color="black", style=dashed]
    cluster2399_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node16181_name [shape=none, label=<<font color="black">Branch[16181]</font>>]
    node16181_name -> node16181 [arrowhead=none, color="black", style=dashed]
    node16181 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node16181 -> node16182 [label=<<font color="black">true</font>> color="black"]
    node16181 -> node16183 [label=<<font color="black">false</font>> color="black"]
    node16182_name [shape=none, label=<<font color="black">Block[16182]</font>>]
    node16182_name -> node16182 [arrowhead=none, color="black", style=dashed]
    node16182 [shape=box, label=<<font color="black">[0] let callbackfn = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16182 -> node16184 [color="black"]
    node16183_name [shape=none, label=<<font color="black">Block[16183]</font>>]
    node16183_name -> node16183 [arrowhead=none, color="black", style=dashed]
    node16183 [shape=box, label=<<font color="black">[0] let callbackfn = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16183 -> node16184 [color="black"]
    node16184_name [shape=none, label=<<font color="black">Branch[16184]</font>>]
    node16184_name -> node16184 [arrowhead=none, color="black", style=dashed]
    node16184 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node16184 -> node16185 [label=<<font color="black">true</font>> color="black"]
    node16184 -> node16186 [label=<<font color="black">false</font>> color="black"]
    node16185_name [shape=none, label=<<font color="black">Block[16185]</font>>]
    node16185_name -> node16185 [arrowhead=none, color="black", style=dashed]
    node16185 [shape=box, label=<<font color="black">[0] let thisArg = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16185 -> node16187 [color="black"]
    node16186_name [shape=none, label=<<font color="black">Block[16186]</font>>]
    node16186_name -> node16186 [arrowhead=none, color="black", style=dashed]
    node16186 [shape=box, label=<<font color="black">[0] let thisArg = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16186 -> node16187 [color="black"]
    node16187_name [shape=none, label=<<font color="black">Block[16187]</font>>]
    node16187_name -> node16187 [arrowhead=none, color="black", style=dashed]
    node16187 [shape=box, label=<<font color="black">[0] let O = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16187 -> node16188 [color="black"]
    node16188_name [shape=none, label=<<font color="black">Call[16188]</font>>]
    node16188_name -> node16188 [arrowhead=none, color="black", style=dashed]
    node16188 [shape=cds, label=<<font color="black">%0 = clo&lt;ValidateTypedArray&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node16188 -> node16189 [color="black"]
    node16189_name [shape=none, label=<<font color="black">Block[16189]</font>>]
    node16189_name -> node16189 [arrowhead=none, color="black", style=dashed]
    node16189 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/>[1] let len = O.ArrayLength<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16189 -> node16190 [color="black"]
    node16190_name [shape=none, label=<<font color="black">Call[16190]</font>>]
    node16190_name -> node16190 [arrowhead=none, color="black", style=dashed]
    node16190 [shape=cds, label=<<font color="black">%1 = clo&lt;IsCallable&gt;(callbackfn)</font>> color="black" fillcolor="white", style=filled]
    node16190 -> node16191 [color="black"]
    node16191_name [shape=none, label=<<font color="black">Branch[16191]</font>>]
    node16191_name -> node16191 [arrowhead=none, color="black", style=dashed]
    node16191 [shape=diamond, label=<<font color="black">(= %1 false)</font>> color="black" fillcolor="white", style=filled]
    node16191 -> node16192 [label=<<font color="black">true</font>> color="black"]
    node16191 -> node16193 [label=<<font color="black">false</font>> color="black"]
    node16192_name [shape=none, label=<<font color="black">Block[16192]</font>>]
    node16192_name -> node16192 [arrowhead=none, color="black", style=dashed]
    node16192 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1073])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16192 -> cluster2399_exit [color="black"]
    node16193_name [shape=none, label=<<font color="black">Block[16193]</font>>]
    node16193_name -> node16193 [arrowhead=none, color="black", style=dashed]
    node16193 [shape=box, label=<<font color="black">[0] let k = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16193 -> node16194 [color="black"]
    node16194_name [shape=none, label=<<font color="black">Branch[16194]</font>>]
    node16194_name -> node16194 [arrowhead=none, color="black", style=dashed]
    node16194 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white", style=filled]
    node16194 -> node16195 [label=<<font color="black">true</font>> color="black"]
    node16194 -> node16201 [label=<<font color="black">false</font>> color="black"]
    node16195_name [shape=none, label=<<font color="black">Call[16195]</font>>]
    node16195_name -> node16195 [arrowhead=none, color="black", style=dashed]
    node16195 [shape=cds, label=<<font color="black">%2 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node16195 -> node16196 [color="black"]
    node16201_name [shape=none, label=<<font color="black">Block[16201]</font>>]
    node16201_name -> node16201 [arrowhead=none, color="black", style=dashed]
    node16201 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16201 -> cluster2399_exit [color="black"]
    node16196_name [shape=none, label=<<font color="black">Block[16196]</font>>]
    node16196_name -> node16196 [arrowhead=none, color="black", style=dashed]
    node16196 [shape=box, label=<<font color="black">[0] let Pk = [! %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16196 -> node16197 [color="black"]
    node16197_name [shape=none, label=<<font color="black">Call[16197]</font>>]
    node16197_name -> node16197 [arrowhead=none, color="black", style=dashed]
    node16197 [shape=cds, label=<<font color="black">%3 = clo&lt;Get&gt;(O, Pk)</font>> color="black" fillcolor="white", style=filled]
    node16197 -> node16198 [color="black"]
    node16198_name [shape=none, label=<<font color="black">Block[16198]</font>>]
    node16198_name -> node16198 [arrowhead=none, color="black", style=dashed]
    node16198 [shape=box, label=<<font color="black">[0] let kValue = [! %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16198 -> node16199 [color="black"]
    node16199_name [shape=none, label=<<font color="black">Call[16199]</font>>]
    node16199_name -> node16199 [arrowhead=none, color="black", style=dashed]
    node16199 [shape=cds, label=<<font color="black">%4 = clo&lt;Call&gt;(callbackfn, thisArg, (new [kValue, ([number] k), O])[#1074])</font>> color="black" fillcolor="white", style=filled]
    node16199 -> node16200 [color="black"]
    node16200_name [shape=none, label=<<font color="black">Block[16200]</font>>]
    node16200_name -> node16200 [arrowhead=none, color="black", style=dashed]
    node16200 [shape=box, label=<<font color="black">[0] [? %4]<BR ALIGN="LEFT"/>[1] k = (+ k 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16200 -> node16194 [color="black"]
  }
}