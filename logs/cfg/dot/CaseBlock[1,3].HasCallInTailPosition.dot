digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1767 {
    label = "def <SYNTAX>:CaseBlock[1,3].HasCallInTailPosition(this: Ast:CaseBlock[1,3], call: Unknown): Boolean"
    style = rounded
    cluster1767_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1767_entry_name -> cluster1767_entry [arrowhead=none, color="black", style=dashed]
    cluster1767_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1767_entry -> node9806 [color="black"]
    cluster1767_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1767_exit_name -> cluster1767_exit [arrowhead=none, color="black", style=dashed]
    cluster1767_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9806_name [shape=none, label=<<font color="black">Block[9806]</font>>]
    node9806_name -> node9806 [arrowhead=none, color="black", style=dashed]
    node9806 [shape=box, label=<<font color="black">[0] let has = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9806 -> node9807 [color="black"]
    node9807_name [shape=none, label=<<font color="black">Branch[9807]</font>>]
    node9807_name -> node9807 [arrowhead=none, color="black", style=dashed]
    node9807 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node9807 -> node9808 [label=<<font color="black">true</font>> color="black"]
    node9807 -> node9810 [label=<<font color="black">false</font>> color="black"]
    node9808_name [shape=none, label=<<font color="black">Call[9808]</font>>]
    node9808_name -> node9808 [arrowhead=none, color="black", style=dashed]
    node9808 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9808 -> node9809 [color="black"]
    node9810_name [shape=none, label=<<font color="black">Branch[9810]</font>>]
    node9810_name -> node9810 [arrowhead=none, color="black", style=dashed]
    node9810 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white", style=filled]
    node9810 -> node9811 [label=<<font color="black">true</font>> color="black"]
    node9810 -> node9812 [label=<<font color="black">false</font>> color="black"]
    node9809_name [shape=none, label=<<font color="black">Block[9809]</font>>]
    node9809_name -> node9809 [arrowhead=none, color="black", style=dashed]
    node9809 [shape=box, label=<<font color="black">[0] let has = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9809 -> node9810 [color="black"]
    node9811_name [shape=none, label=<<font color="black">Block[9811]</font>>]
    node9811_name -> node9811 [arrowhead=none, color="black", style=dashed]
    node9811 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9811 -> cluster1767_exit [color="black"]
    node9812_name [shape=none, label=<<font color="black">Call[9812]</font>>]
    node9812_name -> node9812 [arrowhead=none, color="black", style=dashed]
    node9812 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9812 -> node9813 [color="black"]
    node9813_name [shape=none, label=<<font color="black">Block[9813]</font>>]
    node9813_name -> node9813 [arrowhead=none, color="black", style=dashed]
    node9813 [shape=box, label=<<font color="black">[0] let has = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9813 -> node9814 [color="black"]
    node9814_name [shape=none, label=<<font color="black">Branch[9814]</font>>]
    node9814_name -> node9814 [arrowhead=none, color="black", style=dashed]
    node9814 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white", style=filled]
    node9814 -> node9815 [label=<<font color="black">true</font>> color="black"]
    node9814 -> node9816 [label=<<font color="black">false</font>> color="black"]
    node9815_name [shape=none, label=<<font color="black">Block[9815]</font>>]
    node9815_name -> node9815 [arrowhead=none, color="black", style=dashed]
    node9815 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9815 -> cluster1767_exit [color="black"]
    node9816_name [shape=none, label=<<font color="black">Branch[9816]</font>>]
    node9816_name -> node9816 [arrowhead=none, color="black", style=dashed]
    node9816 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node9816 -> node9817 [label=<<font color="black">true</font>> color="black"]
    node9816 -> node9819 [label=<<font color="black">false</font>> color="black"]
    node9817_name [shape=none, label=<<font color="black">Call[9817]</font>>]
    node9817_name -> node9817 [arrowhead=none, color="black", style=dashed]
    node9817 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9817 -> node9818 [color="black"]
    node9819_name [shape=none, label=<<font color="black">Block[9819]</font>>]
    node9819_name -> node9819 [arrowhead=none, color="black", style=dashed]
    node9819 [shape=box, label=<<font color="black">[0] return has<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9819 -> cluster1767_exit [color="black"]
    node9818_name [shape=none, label=<<font color="black">Block[9818]</font>>]
    node9818_name -> node9818 [arrowhead=none, color="black", style=dashed]
    node9818 [shape=box, label=<<font color="black">[0] let has = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9818 -> node9819 [color="black"]
  }
}