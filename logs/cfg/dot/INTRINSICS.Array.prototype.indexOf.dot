digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2359 {
    label = "def <BUILTIN>:INTRINSICS.Array.prototype.indexOf(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2359_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2359_entry_name -> cluster2359_entry [arrowhead=none, color="black", style=dashed]
    cluster2359_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2359_entry -> node15212 [color="black"]
    cluster2359_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2359_exit_name -> cluster2359_exit [arrowhead=none, color="black", style=dashed]
    cluster2359_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node15212_name [shape=none, label=<<font color="black">Branch[15212]</font>>]
    node15212_name -> node15212 [arrowhead=none, color="black", style=dashed]
    node15212 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node15212 -> node15213 [label=<<font color="black">true</font>> color="black"]
    node15212 -> node15214 [label=<<font color="black">false</font>> color="black"]
    node15213_name [shape=none, label=<<font color="black">Block[15213]</font>>]
    node15213_name -> node15213 [arrowhead=none, color="black", style=dashed]
    node15213 [shape=box, label=<<font color="black">[0] let searchElement = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15213 -> node15215 [color="black"]
    node15214_name [shape=none, label=<<font color="black">Block[15214]</font>>]
    node15214_name -> node15214 [arrowhead=none, color="black", style=dashed]
    node15214 [shape=box, label=<<font color="black">[0] let searchElement = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15214 -> node15215 [color="black"]
    node15215_name [shape=none, label=<<font color="black">Branch[15215]</font>>]
    node15215_name -> node15215 [arrowhead=none, color="black", style=dashed]
    node15215 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node15215 -> node15216 [label=<<font color="black">true</font>> color="black"]
    node15215 -> node15217 [label=<<font color="black">false</font>> color="black"]
    node15216_name [shape=none, label=<<font color="black">Block[15216]</font>>]
    node15216_name -> node15216 [arrowhead=none, color="black", style=dashed]
    node15216 [shape=box, label=<<font color="black">[0] let fromIndex = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15216 -> node15218 [color="black"]
    node15217_name [shape=none, label=<<font color="black">Block[15217]</font>>]
    node15217_name -> node15217 [arrowhead=none, color="black", style=dashed]
    node15217 [shape=box, label=<<font color="black">[0] let fromIndex = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15217 -> node15218 [color="black"]
    node15218_name [shape=none, label=<<font color="black">Call[15218]</font>>]
    node15218_name -> node15218 [arrowhead=none, color="black", style=dashed]
    node15218 [shape=cds, label=<<font color="black">%0 = clo&lt;ToObject&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node15218 -> node15219 [color="black"]
    node15219_name [shape=none, label=<<font color="black">Block[15219]</font>>]
    node15219_name -> node15219 [arrowhead=none, color="black", style=dashed]
    node15219 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15219 -> node15220 [color="black"]
    node15220_name [shape=none, label=<<font color="black">Call[15220]</font>>]
    node15220_name -> node15220 [arrowhead=none, color="black", style=dashed]
    node15220 [shape=cds, label=<<font color="black">%1 = clo&lt;LengthOfArrayLike&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node15220 -> node15221 [color="black"]
    node15221_name [shape=none, label=<<font color="black">Block[15221]</font>>]
    node15221_name -> node15221 [arrowhead=none, color="black", style=dashed]
    node15221 [shape=box, label=<<font color="black">[0] let len = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15221 -> node15222 [color="black"]
    node15222_name [shape=none, label=<<font color="black">Branch[15222]</font>>]
    node15222_name -> node15222 [arrowhead=none, color="black", style=dashed]
    node15222 [shape=diamond, label=<<font color="black">(= len 0)</font>> color="black" fillcolor="white", style=filled]
    node15222 -> node15223 [label=<<font color="black">true</font>> color="black"]
    node15222 -> node15224 [label=<<font color="black">false</font>> color="black"]
    node15223_name [shape=none, label=<<font color="black">Block[15223]</font>>]
    node15223_name -> node15223 [arrowhead=none, color="black", style=dashed]
    node15223 [shape=box, label=<<font color="black">[0] return -1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15223 -> cluster2359_exit [color="black"]
    node15224_name [shape=none, label=<<font color="black">Call[15224]</font>>]
    node15224_name -> node15224 [arrowhead=none, color="black", style=dashed]
    node15224 [shape=cds, label=<<font color="black">%2 = clo&lt;ToIntegerOrInfinity&gt;(fromIndex)</font>> color="black" fillcolor="white", style=filled]
    node15224 -> node15225 [color="black"]
    node15225_name [shape=none, label=<<font color="black">Block[15225]</font>>]
    node15225_name -> node15225 [arrowhead=none, color="black", style=dashed]
    node15225 [shape=box, label=<<font color="black">[0] let n = [? %2]<BR ALIGN="LEFT"/>[1] assert (|| (! (= fromIndex undefined)) (= n 0))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15225 -> node15226 [color="black"]
    node15226_name [shape=none, label=<<font color="black">Branch[15226]</font>>]
    node15226_name -> node15226 [arrowhead=none, color="black", style=dashed]
    node15226 [shape=diamond, label=<<font color="black">(= n +INF)</font>> color="black" fillcolor="white", style=filled]
    node15226 -> node15227 [label=<<font color="black">true</font>> color="black"]
    node15226 -> node15228 [label=<<font color="black">false</font>> color="black"]
    node15227_name [shape=none, label=<<font color="black">Block[15227]</font>>]
    node15227_name -> node15227 [arrowhead=none, color="black", style=dashed]
    node15227 [shape=box, label=<<font color="black">[0] return -1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15227 -> cluster2359_exit [color="black"]
    node15228_name [shape=none, label=<<font color="black">Branch[15228]</font>>]
    node15228_name -> node15228 [arrowhead=none, color="black", style=dashed]
    node15228 [shape=diamond, label=<<font color="black">(= n -INF)</font>> color="black" fillcolor="white", style=filled]
    node15228 -> node15229 [label=<<font color="black">true</font>> color="black"]
    node15228 -> node15230 [label=<<font color="black">false</font>> color="black"]
    node15229_name [shape=none, label=<<font color="black">Block[15229]</font>>]
    node15229_name -> node15229 [arrowhead=none, color="black", style=dashed]
    node15229 [shape=box, label=<<font color="black">[0] n = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15229 -> node15230 [color="black"]
    node15230_name [shape=none, label=<<font color="black">Branch[15230]</font>>]
    node15230_name -> node15230 [arrowhead=none, color="black", style=dashed]
    node15230 [shape=diamond, label=<<font color="black">(! (&lt; n 0))</font>> color="black" fillcolor="white", style=filled]
    node15230 -> node15231 [label=<<font color="black">true</font>> color="black"]
    node15230 -> node15232 [label=<<font color="black">false</font>> color="black"]
    node15231_name [shape=none, label=<<font color="black">Block[15231]</font>>]
    node15231_name -> node15231 [arrowhead=none, color="black", style=dashed]
    node15231 [shape=box, label=<<font color="black">[0] let k = n<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15231 -> node15235 [color="black"]
    node15232_name [shape=none, label=<<font color="black">Block[15232]</font>>]
    node15232_name -> node15232 [arrowhead=none, color="black", style=dashed]
    node15232 [shape=box, label=<<font color="black">[0] let k = (+ len n)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15232 -> node15233 [color="black"]
    node15235_name [shape=none, label=<<font color="black">Branch[15235]</font>>]
    node15235_name -> node15235 [arrowhead=none, color="black", style=dashed]
    node15235 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white", style=filled]
    node15235 -> node15236 [label=<<font color="black">true</font>> color="black"]
    node15235 -> node15248 [label=<<font color="black">false</font>> color="black"]
    node15233_name [shape=none, label=<<font color="black">Branch[15233]</font>>]
    node15233_name -> node15233 [arrowhead=none, color="black", style=dashed]
    node15233 [shape=diamond, label=<<font color="black">(&lt; k 0)</font>> color="black" fillcolor="white", style=filled]
    node15233 -> node15234 [label=<<font color="black">true</font>> color="black"]
    node15233 -> node15235 [label=<<font color="black">false</font>> color="black"]
    node15236_name [shape=none, label=<<font color="black">Call[15236]</font>>]
    node15236_name -> node15236 [arrowhead=none, color="black", style=dashed]
    node15236 [shape=cds, label=<<font color="black">%3 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node15236 -> node15237 [color="black"]
    node15248_name [shape=none, label=<<font color="black">Block[15248]</font>>]
    node15248_name -> node15248 [arrowhead=none, color="black", style=dashed]
    node15248 [shape=box, label=<<font color="black">[0] return -1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15248 -> cluster2359_exit [color="black"]
    node15234_name [shape=none, label=<<font color="black">Block[15234]</font>>]
    node15234_name -> node15234 [arrowhead=none, color="black", style=dashed]
    node15234 [shape=box, label=<<font color="black">[0] k = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15234 -> node15235 [color="black"]
    node15237_name [shape=none, label=<<font color="black">Call[15237]</font>>]
    node15237_name -> node15237 [arrowhead=none, color="black", style=dashed]
    node15237 [shape=cds, label=<<font color="black">%4 = clo&lt;HasProperty&gt;(O, [! %3])</font>> color="black" fillcolor="white", style=filled]
    node15237 -> node15238 [color="black"]
    node15238_name [shape=none, label=<<font color="black">Block[15238]</font>>]
    node15238_name -> node15238 [arrowhead=none, color="black", style=dashed]
    node15238 [shape=box, label=<<font color="black">[0] let kPresent = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15238 -> node15239 [color="black"]
    node15239_name [shape=none, label=<<font color="black">Branch[15239]</font>>]
    node15239_name -> node15239 [arrowhead=none, color="black", style=dashed]
    node15239 [shape=diamond, label=<<font color="black">(= kPresent true)</font>> color="black" fillcolor="white", style=filled]
    node15239 -> node15240 [label=<<font color="black">true</font>> color="black"]
    node15239 -> node15247 [label=<<font color="black">false</font>> color="black"]
    node15240_name [shape=none, label=<<font color="black">Call[15240]</font>>]
    node15240_name -> node15240 [arrowhead=none, color="black", style=dashed]
    node15240 [shape=cds, label=<<font color="black">%5 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node15240 -> node15241 [color="black"]
    node15247_name [shape=none, label=<<font color="black">Block[15247]</font>>]
    node15247_name -> node15247 [arrowhead=none, color="black", style=dashed]
    node15247 [shape=box, label=<<font color="black">[0] k = (+ k 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15247 -> node15235 [color="black"]
    node15241_name [shape=none, label=<<font color="black">Call[15241]</font>>]
    node15241_name -> node15241 [arrowhead=none, color="black", style=dashed]
    node15241 [shape=cds, label=<<font color="black">%6 = clo&lt;Get&gt;(O, [! %5])</font>> color="black" fillcolor="white", style=filled]
    node15241 -> node15242 [color="black"]
    node15242_name [shape=none, label=<<font color="black">Block[15242]</font>>]
    node15242_name -> node15242 [arrowhead=none, color="black", style=dashed]
    node15242 [shape=box, label=<<font color="black">[0] let elementK = [? %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15242 -> node15243 [color="black"]
    node15243_name [shape=none, label=<<font color="black">Call[15243]</font>>]
    node15243_name -> node15243 [arrowhead=none, color="black", style=dashed]
    node15243 [shape=cds, label=<<font color="black">%7 = clo&lt;IsStrictlyEqual&gt;(searchElement, elementK)</font>> color="black" fillcolor="white", style=filled]
    node15243 -> node15244 [color="black"]
    node15244_name [shape=none, label=<<font color="black">Block[15244]</font>>]
    node15244_name -> node15244 [arrowhead=none, color="black", style=dashed]
    node15244 [shape=box, label=<<font color="black">[0] let same = %7<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15244 -> node15245 [color="black"]
    node15245_name [shape=none, label=<<font color="black">Branch[15245]</font>>]
    node15245_name -> node15245 [arrowhead=none, color="black", style=dashed]
    node15245 [shape=diamond, label=<<font color="black">(= same true)</font>> color="black" fillcolor="white", style=filled]
    node15245 -> node15246 [label=<<font color="black">true</font>> color="black"]
    node15245 -> node15247 [label=<<font color="black">false</font>> color="black"]
    node15246_name [shape=none, label=<<font color="black">Block[15246]</font>>]
    node15246_name -> node15246 [arrowhead=none, color="black", style=dashed]
    node15246 [shape=box, label=<<font color="black">[0] return ([number] k)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15246 -> cluster2359_exit [color="black"]
  }
}