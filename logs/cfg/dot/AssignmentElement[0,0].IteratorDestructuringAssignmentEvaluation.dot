digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1370 {
    label = "def <SYNTAX>:AssignmentElement[0,0].IteratorDestructuringAssignmentEvaluation(this: Ast:AssignmentElement[0,0], iteratorRecord: Unknown): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster1370_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1370_entry_name -> cluster1370_entry [arrowhead=none, color="black", style=dashed]
    cluster1370_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1370_entry -> node6969 [color="black"]
    cluster1370_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1370_exit_name -> cluster1370_exit [arrowhead=none, color="black", style=dashed]
    cluster1370_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6969_name [shape=none, label=<<font color="black">Branch[6969]</font>>]
    node6969_name -> node6969 [arrowhead=none, color="black", style=dashed]
    node6969 [shape=diamond, label=<<font color="black">(! (|| (? this[0]: &quot;ObjectLiteral&quot;) (? this[0]: &quot;ArrayLiteral&quot;)))</font>> color="black" fillcolor="white", style=filled]
    node6969 -> node6970 [label=<<font color="black">true</font>> color="black"]
    node6969 -> node6972 [label=<<font color="black">false</font>> color="black"]
    node6970_name [shape=none, label=<<font color="black">Call[6970]</font>>]
    node6970_name -> node6970 [arrowhead=none, color="black", style=dashed]
    node6970 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6970 -> node6971 [color="black"]
    node6972_name [shape=none, label=<<font color="black">Branch[6972]</font>>]
    node6972_name -> node6972 [arrowhead=none, color="black", style=dashed]
    node6972 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white", style=filled]
    node6972 -> node6973 [label=<<font color="black">true</font>> color="black"]
    node6972 -> node6987 [label=<<font color="black">false</font>> color="black"]
    node6971_name [shape=none, label=<<font color="black">Block[6971]</font>>]
    node6971_name -> node6971 [arrowhead=none, color="black", style=dashed]
    node6971 [shape=box, label=<<font color="black">[0] let lref = %0<BR ALIGN="LEFT"/>[1] [? lref]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6971 -> node6972 [color="black"]
    node6973_name [shape=none, label=<<font color="black">Call[6973]</font>>]
    node6973_name -> node6973 [arrowhead=none, color="black", style=dashed]
    node6973 [shape=cds, label=<<font color="black">%1 = clo&lt;IteratorStep&gt;(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node6973 -> node6974 [color="black"]
    node6987_name [shape=none, label=<<font color="black">Branch[6987]</font>>]
    node6987_name -> node6987 [arrowhead=none, color="black", style=dashed]
    node6987 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done true)</font>> color="black" fillcolor="white", style=filled]
    node6987 -> node6988 [label=<<font color="black">true</font>> color="black"]
    node6987 -> node6989 [label=<<font color="black">false</font>> color="black"]
    node6974_name [shape=none, label=<<font color="black">Call[6974]</font>>]
    node6974_name -> node6974 [arrowhead=none, color="black", style=dashed]
    node6974 [shape=cds, label=<<font color="black">%2 = clo&lt;Completion&gt;(%1)</font>> color="black" fillcolor="white", style=filled]
    node6974 -> node6975 [color="black"]
    node6988_name [shape=none, label=<<font color="black">Block[6988]</font>>]
    node6988_name -> node6988 [arrowhead=none, color="black", style=dashed]
    node6988 [shape=box, label=<<font color="black">[0] let value = undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6988 -> node6989 [color="black"]
    node6989_name [shape=none, label=<<font color="black">Branch[6989]</font>>]
    node6989_name -> node6989 [arrowhead=none, color="black", style=dashed]
    node6989 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= this[1] absent)) (= value undefined))</font>> color="black" fillcolor="white", style=filled]
    node6989 -> node6990 [label=<<font color="black">true</font>> color="black"]
    node6989 -> node7002 [label=<<font color="black">false</font>> color="black"]
    node6975_name [shape=none, label=<<font color="black">Block[6975]</font>>]
    node6975_name -> node6975 [arrowhead=none, color="black", style=dashed]
    node6975 [shape=box, label=<<font color="black">[0] let next = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6975 -> node6976 [color="black"]
    node6990_name [shape=none, label=<<font color="black">Call[6990]</font>>]
    node6990_name -> node6990 [arrowhead=none, color="black", style=dashed]
    node6990 [shape=cds, label=<<font color="black">%6 = clo&lt;IsAnonymousFunctionDefinition&gt;(this[1])</font>> color="black" fillcolor="white", style=filled]
    node6990 -> node6991 [color="black"]
    node7002_name [shape=none, label=<<font color="black">Block[7002]</font>>]
    node7002_name -> node7002 [arrowhead=none, color="black", style=dashed]
    node7002 [shape=box, label=<<font color="black">[0] let v = value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7002 -> node7003 [color="black"]
    node6976_name [shape=none, label=<<font color="black">Branch[6976]</font>>]
    node6976_name -> node6976 [arrowhead=none, color="black", style=dashed]
    node6976 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? next) (! (= next.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node6976 -> node6977 [label=<<font color="black">true</font>> color="black"]
    node6976 -> node6978 [label=<<font color="black">false</font>> color="black"]
    node6991_name [shape=none, label=<<font color="black">Block[6991]</font>>]
    node6991_name -> node6991 [arrowhead=none, color="black", style=dashed]
    node6991 [shape=box, label=<<font color="black">[0] %5 = (= %6 true)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6991 -> node6992 [color="black"]
    node7003_name [shape=none, label=<<font color="black">Branch[7003]</font>>]
    node7003_name -> node7003 [arrowhead=none, color="black", style=dashed]
    node7003 [shape=diamond, label=<<font color="black">(|| (? this[0]: &quot;ObjectLiteral&quot;) (? this[0]: &quot;ArrayLiteral&quot;))</font>> color="black" fillcolor="white", style=filled]
    node7003 -> node7004 [label=<<font color="black">true</font>> color="black"]
    node7003 -> node7007 [label=<<font color="black">false</font>> color="black"]
    node6977_name [shape=none, label=<<font color="black">Block[6977]</font>>]
    node6977_name -> node6977 [arrowhead=none, color="black", style=dashed]
    node6977 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6977 -> node6978 [color="black"]
    node6978_name [shape=none, label=<<font color="black">Block[6978]</font>>]
    node6978_name -> node6978 [arrowhead=none, color="black", style=dashed]
    node6978 [shape=box, label=<<font color="black">[0] [? next]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6978 -> node6979 [color="black"]
    node6992_name [shape=none, label=<<font color="black">Branch[6992]</font>>]
    node6992_name -> node6992 [arrowhead=none, color="black", style=dashed]
    node6992 [shape=diamond, label=<<font color="black">%5</font>> color="black" fillcolor="white", style=filled]
    node6992 -> node6993 [label=<<font color="black">true</font>> color="black"]
    node6992 -> node6995 [label=<<font color="black">false</font>> color="black"]
    node7004_name [shape=none, label=<<font color="black">Block[7004]</font>>]
    node7004_name -> node7004 [arrowhead=none, color="black", style=dashed]
    node7004 [shape=box, label=<<font color="black">[0] let nestedAssignmentPattern = (parse this[0] (nt |AssignmentPattern|[]))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7004 -> node7005 [color="black"]
    node7007_name [shape=none, label=<<font color="black">Call[7007]</font>>]
    node7007_name -> node7007 [arrowhead=none, color="black", style=dashed]
    node7007 [shape=cds, label=<<font color="black">%12 = clo&lt;PutValue&gt;(lref, v)</font>> color="black" fillcolor="white", style=filled]
    node7007 -> node7008 [color="black"]
    node6979_name [shape=none, label=<<font color="black">Branch[6979]</font>>]
    node6979_name -> node6979 [arrowhead=none, color="black", style=dashed]
    node6979 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white", style=filled]
    node6979 -> node6980 [label=<<font color="black">true</font>> color="black"]
    node6979 -> node6981 [label=<<font color="black">false</font>> color="black"]
    node6993_name [shape=none, label=<<font color="black">Call[6993]</font>>]
    node6993_name -> node6993 [arrowhead=none, color="black", style=dashed]
    node6993 [shape=cds, label=<<font color="black">%7 = this[0]-&gt;IsIdentifierRef()</font>> color="black" fillcolor="white", style=filled]
    node6993 -> node6994 [color="black"]
    node6995_name [shape=none, label=<<font color="black">Branch[6995]</font>>]
    node6995_name -> node6995 [arrowhead=none, color="black", style=dashed]
    node6995 [shape=diamond, label=<<font color="black">%5</font>> color="black" fillcolor="white", style=filled]
    node6995 -> node6996 [label=<<font color="black">true</font>> color="black"]
    node6995 -> node6998 [label=<<font color="black">false</font>> color="black"]
    node7005_name [shape=none, label=<<font color="black">Call[7005]</font>>]
    node7005_name -> node7005 [arrowhead=none, color="black", style=dashed]
    node7005 [shape=cds, label=<<font color="black">%11 = nestedAssignmentPattern-&gt;DestructuringAssignmentEvaluation(v)</font>> color="black" fillcolor="white", style=filled]
    node7005 -> node7006 [color="black"]
    node7008_name [shape=none, label=<<font color="black">Block[7008]</font>>]
    node7008_name -> node7008 [arrowhead=none, color="black", style=dashed]
    node7008 [shape=box, label=<<font color="black">[0] return [? %12]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7008 -> cluster1370_exit [color="black"]
    node6980_name [shape=none, label=<<font color="black">Block[6980]</font>>]
    node6980_name -> node6980 [arrowhead=none, color="black", style=dashed]
    node6980 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6980 -> node6987 [color="black"]
    node6981_name [shape=none, label=<<font color="black">Call[6981]</font>>]
    node6981_name -> node6981 [arrowhead=none, color="black", style=dashed]
    node6981 [shape=cds, label=<<font color="black">%3 = clo&lt;IteratorValue&gt;(next)</font>> color="black" fillcolor="white", style=filled]
    node6981 -> node6982 [color="black"]
    node6994_name [shape=none, label=<<font color="black">Block[6994]</font>>]
    node6994_name -> node6994 [arrowhead=none, color="black", style=dashed]
    node6994 [shape=box, label=<<font color="black">[0] %5 = (= %7 true)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6994 -> node6995 [color="black"]
    node6996_name [shape=none, label=<<font color="black">Call[6996]</font>>]
    node6996_name -> node6996 [arrowhead=none, color="black", style=dashed]
    node6996 [shape=cds, label=<<font color="black">%8 = this[1]-&gt;NamedEvaluation(lref.ReferencedName)</font>> color="black" fillcolor="white", style=filled]
    node6996 -> node6997 [color="black"]
    node6998_name [shape=none, label=<<font color="black">Call[6998]</font>>]
    node6998_name -> node6998 [arrowhead=none, color="black", style=dashed]
    node6998 [shape=cds, label=<<font color="black">%9 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6998 -> node6999 [color="black"]
    node7006_name [shape=none, label=<<font color="black">Block[7006]</font>>]
    node7006_name -> node7006 [arrowhead=none, color="black", style=dashed]
    node7006 [shape=box, label=<<font color="black">[0] return [? %11]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7006 -> cluster1370_exit [color="black"]
    node6982_name [shape=none, label=<<font color="black">Call[6982]</font>>]
    node6982_name -> node6982 [arrowhead=none, color="black", style=dashed]
    node6982 [shape=cds, label=<<font color="black">%4 = clo&lt;Completion&gt;(%3)</font>> color="black" fillcolor="white", style=filled]
    node6982 -> node6983 [color="black"]
    node6997_name [shape=none, label=<<font color="black">Block[6997]</font>>]
    node6997_name -> node6997 [arrowhead=none, color="black", style=dashed]
    node6997 [shape=box, label=<<font color="black">[0] let v = [? %8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6997 -> node7003 [color="black"]
    node6999_name [shape=none, label=<<font color="black">Block[6999]</font>>]
    node6999_name -> node6999 [arrowhead=none, color="black", style=dashed]
    node6999 [shape=box, label=<<font color="black">[0] let defaultValue = %9<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6999 -> node7000 [color="black"]
    node6983_name [shape=none, label=<<font color="black">Block[6983]</font>>]
    node6983_name -> node6983 [arrowhead=none, color="black", style=dashed]
    node6983 [shape=box, label=<<font color="black">[0] let value = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6983 -> node6984 [color="black"]
    node7000_name [shape=none, label=<<font color="black">Call[7000]</font>>]
    node7000_name -> node7000 [arrowhead=none, color="black", style=dashed]
    node7000 [shape=cds, label=<<font color="black">%10 = clo&lt;GetValue&gt;(defaultValue)</font>> color="black" fillcolor="white", style=filled]
    node7000 -> node7001 [color="black"]
    node6984_name [shape=none, label=<<font color="black">Branch[6984]</font>>]
    node6984_name -> node6984 [arrowhead=none, color="black", style=dashed]
    node6984 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? value) (! (= value.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node6984 -> node6985 [label=<<font color="black">true</font>> color="black"]
    node6984 -> node6986 [label=<<font color="black">false</font>> color="black"]
    node7001_name [shape=none, label=<<font color="black">Block[7001]</font>>]
    node7001_name -> node7001 [arrowhead=none, color="black", style=dashed]
    node7001 [shape=box, label=<<font color="black">[0] let v = [? %10]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7001 -> node7003 [color="black"]
    node6985_name [shape=none, label=<<font color="black">Block[6985]</font>>]
    node6985_name -> node6985 [arrowhead=none, color="black", style=dashed]
    node6985 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6985 -> node6986 [color="black"]
    node6986_name [shape=none, label=<<font color="black">Block[6986]</font>>]
    node6986_name -> node6986 [arrowhead=none, color="black", style=dashed]
    node6986 [shape=box, label=<<font color="black">[0] [? value]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6986 -> node6987 [color="black"]
  }
}