digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster435 {
    label = "def <SYNTAX>:CaseBlock[1,3].VarScopedDeclarations(this: Ast:CaseBlock[1,3]): List[Ast]"
    style = rounded
    cluster435_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster435_entry_name -> cluster435_entry [arrowhead=none, color="black", style=dashed]
    cluster435_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster435_entry -> node2193 [color="black"]
    cluster435_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster435_exit_name -> cluster435_exit [arrowhead=none, color="black", style=dashed]
    cluster435_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2193_name [shape=none, label=<<font color="black">Branch[2193]</font>>]
    node2193_name -> node2193 [arrowhead=none, color="black", style=dashed]
    node2193 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node2193 -> node2194 [label=<<font color="black">true</font>> color="black"]
    node2193 -> node2196 [label=<<font color="black">false</font>> color="black"]
    node2194_name [shape=none, label=<<font color="black">Call[2194]</font>>]
    node2194_name -> node2194 [arrowhead=none, color="black", style=dashed]
    node2194 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2194 -> node2195 [color="black"]
    node2196_name [shape=none, label=<<font color="black">Block[2196]</font>>]
    node2196_name -> node2196 [arrowhead=none, color="black", style=dashed]
    node2196 [shape=box, label=<<font color="black">[0] let declarations1 = (new [])[#259]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2196 -> node2197 [color="black"]
    node2195_name [shape=none, label=<<font color="black">Block[2195]</font>>]
    node2195_name -> node2195 [arrowhead=none, color="black", style=dashed]
    node2195 [shape=box, label=<<font color="black">[0] let declarations1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2195 -> node2197 [color="black"]
    node2197_name [shape=none, label=<<font color="black">Call[2197]</font>>]
    node2197_name -> node2197 [arrowhead=none, color="black", style=dashed]
    node2197 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2197 -> node2198 [color="black"]
    node2198_name [shape=none, label=<<font color="black">Block[2198]</font>>]
    node2198_name -> node2198 [arrowhead=none, color="black", style=dashed]
    node2198 [shape=box, label=<<font color="black">[0] let declarations2 = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2198 -> node2199 [color="black"]
    node2199_name [shape=none, label=<<font color="black">Branch[2199]</font>>]
    node2199_name -> node2199 [arrowhead=none, color="black", style=dashed]
    node2199 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node2199 -> node2200 [label=<<font color="black">true</font>> color="black"]
    node2199 -> node2202 [label=<<font color="black">false</font>> color="black"]
    node2200_name [shape=none, label=<<font color="black">Call[2200]</font>>]
    node2200_name -> node2200 [arrowhead=none, color="black", style=dashed]
    node2200 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2200 -> node2201 [color="black"]
    node2202_name [shape=none, label=<<font color="black">Block[2202]</font>>]
    node2202_name -> node2202 [arrowhead=none, color="black", style=dashed]
    node2202 [shape=box, label=<<font color="black">[0] let declarations3 = (new [])[#260]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2202 -> node2203 [color="black"]
    node2201_name [shape=none, label=<<font color="black">Block[2201]</font>>]
    node2201_name -> node2201 [arrowhead=none, color="black", style=dashed]
    node2201 [shape=box, label=<<font color="black">[0] let declarations3 = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2201 -> node2203 [color="black"]
    node2203_name [shape=none, label=<<font color="black">Block[2203]</font>>]
    node2203_name -> node2203 [arrowhead=none, color="black", style=dashed]
    node2203 [shape=box, label=<<font color="black">[0] return (list-concat declarations1 declarations2 declarations3)[#261]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2203 -> cluster435_exit [color="black"]
  }
}