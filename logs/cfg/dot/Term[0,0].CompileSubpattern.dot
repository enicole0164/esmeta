digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2246 {
    label = "def <SYNTAX>:Term[0,0].CompileSubpattern(this: Ast:Term[0,0], direction: Const[~backward~, ~forward~]): Unknown["Matcher"]"
    style = rounded
    cluster2246_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2246_entry_name -> cluster2246_entry [arrowhead=none, color="black", style=dashed]
    cluster2246_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2246_entry -> node13924 [color="black"]
    cluster2246_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2246_exit_name -> cluster2246_exit [arrowhead=none, color="black", style=dashed]
    cluster2246_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node13924_name [shape=none, label=<<font color="black">Call[13924]</font>>]
    node13924_name -> node13924 [arrowhead=none, color="black", style=dashed]
    node13924 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;CompileAssertion()</font>> color="black" fillcolor="white", style=filled]
    node13924 -> node13925 [color="black"]
    node13925_name [shape=none, label=<<font color="black">Block[13925]</font>>]
    node13925_name -> node13925 [arrowhead=none, color="black", style=dashed]
    node13925 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13925 -> cluster2246_exit [color="black"]
  }
}