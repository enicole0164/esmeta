digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1430 {
    label = "def <SYNTAX>:ForStatement[2,3].ForLoopEvaluation(this: Ast:ForStatement[2,3], labelSet: Unknown): Normal[ESValue] | Abrupt"
    style = rounded
    cluster1430_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1430_entry_name -> cluster1430_entry [arrowhead=none, color="black", style=dashed]
    cluster1430_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1430_entry -> node7550 [color="black"]
    cluster1430_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1430_exit_name -> cluster1430_exit [arrowhead=none, color="black", style=dashed]
    cluster1430_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7550_name [shape=none, label=<<font color="black">Block[7550]</font>>]
    node7550_name -> node7550 [arrowhead=none, color="black", style=dashed]
    node7550 [shape=box, label=<<font color="black">[0] let oldEnv = @EXECUTION_STACK[0].LexicalEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7550 -> node7551 [color="black"]
    node7551_name [shape=none, label=<<font color="black">Call[7551]</font>>]
    node7551_name -> node7551 [arrowhead=none, color="black", style=dashed]
    node7551 [shape=cds, label=<<font color="black">%0 = clo&lt;NewDeclarativeEnvironment&gt;(oldEnv)</font>> color="black" fillcolor="white", style=filled]
    node7551 -> node7552 [color="black"]
    node7552_name [shape=none, label=<<font color="black">Block[7552]</font>>]
    node7552_name -> node7552 [arrowhead=none, color="black", style=dashed]
    node7552 [shape=box, label=<<font color="black">[0] let loopEnv = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7552 -> node7553 [color="black"]
    node7553_name [shape=none, label=<<font color="black">Call[7553]</font>>]
    node7553_name -> node7553 [arrowhead=none, color="black", style=dashed]
    node7553 [shape=cds, label=<<font color="black">%1 = this[0]-&gt;IsConstantDeclaration()</font>> color="black" fillcolor="white", style=filled]
    node7553 -> node7554 [color="black"]
    node7554_name [shape=none, label=<<font color="black">Block[7554]</font>>]
    node7554_name -> node7554 [arrowhead=none, color="black", style=dashed]
    node7554 [shape=box, label=<<font color="black">[0] let isConst = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7554 -> node7555 [color="black"]
    node7555_name [shape=none, label=<<font color="black">Call[7555]</font>>]
    node7555_name -> node7555 [arrowhead=none, color="black", style=dashed]
    node7555 [shape=cds, label=<<font color="black">%2 = this[0]-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node7555 -> node7556 [color="black"]
    node7556_name [shape=none, label=<<font color="black">Block[7556]</font>>]
    node7556_name -> node7556 [arrowhead=none, color="black", style=dashed]
    node7556 [shape=box, label=<<font color="black">[0] let boundNames = %2<BR ALIGN="LEFT"/>[1] %4 = boundNames<BR ALIGN="LEFT"/>[2] %3 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7556 -> node7557 [color="black"]
    node7557_name [shape=none, label=<<font color="black">Branch[7557]</font>>]
    node7557_name -> node7557 [arrowhead=none, color="black", style=dashed]
    node7557 [shape=diamond, label=<<font color="black">(&lt; %3 %4.length)</font>> color="black" fillcolor="white", style=filled]
    node7557 -> node7558 [label=<<font color="black">true</font>> color="black"]
    node7557 -> node7565 [label=<<font color="black">false</font>> color="black"]
    node7558_name [shape=none, label=<<font color="black">Block[7558]</font>>]
    node7558_name -> node7558 [arrowhead=none, color="black", style=dashed]
    node7558 [shape=box, label=<<font color="black">[0] let dn = %4[%3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7558 -> node7559 [color="black"]
    node7565_name [shape=none, label=<<font color="black">Block[7565]</font>>]
    node7565_name -> node7565 [arrowhead=none, color="black", style=dashed]
    node7565 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = loopEnv<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7565 -> node7566 [color="black"]
    node7559_name [shape=none, label=<<font color="black">Branch[7559]</font>>]
    node7559_name -> node7559 [arrowhead=none, color="black", style=dashed]
    node7559 [shape=diamond, label=<<font color="black">(= isConst true)</font>> color="black" fillcolor="white", style=filled]
    node7559 -> node7560 [label=<<font color="black">true</font>> color="black"]
    node7559 -> node7562 [label=<<font color="black">false</font>> color="black"]
    node7566_name [shape=none, label=<<font color="black">Call[7566]</font>>]
    node7566_name -> node7566 [arrowhead=none, color="black", style=dashed]
    node7566 [shape=cds, label=<<font color="black">%7 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7566 -> node7567 [color="black"]
    node7560_name [shape=none, label=<<font color="black">Call[7560]</font>>]
    node7560_name -> node7560 [arrowhead=none, color="black", style=dashed]
    node7560 [shape=cds, label=<<font color="black">%5 = loopEnv-&gt;CreateImmutableBinding(dn, true)</font>> color="black" fillcolor="white", style=filled]
    node7560 -> node7561 [color="black"]
    node7562_name [shape=none, label=<<font color="black">Call[7562]</font>>]
    node7562_name -> node7562 [arrowhead=none, color="black", style=dashed]
    node7562 [shape=cds, label=<<font color="black">%6 = loopEnv-&gt;CreateMutableBinding(dn, false)</font>> color="black" fillcolor="white", style=filled]
    node7562 -> node7563 [color="black"]
    node7567_name [shape=none, label=<<font color="black">Block[7567]</font>>]
    node7567_name -> node7567 [arrowhead=none, color="black", style=dashed]
    node7567 [shape=box, label=<<font color="black">[0] let forDcl = %7<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7567 -> node7568 [color="black"]
    node7561_name [shape=none, label=<<font color="black">Block[7561]</font>>]
    node7561_name -> node7561 [arrowhead=none, color="black", style=dashed]
    node7561 [shape=box, label=<<font color="black">[0] [! %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7561 -> node7564 [color="black"]
    node7563_name [shape=none, label=<<font color="black">Block[7563]</font>>]
    node7563_name -> node7563 [arrowhead=none, color="black", style=dashed]
    node7563 [shape=box, label=<<font color="black">[0] [! %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7563 -> node7564 [color="black"]
    node7568_name [shape=none, label=<<font color="black">Branch[7568]</font>>]
    node7568_name -> node7568 [arrowhead=none, color="black", style=dashed]
    node7568 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? forDcl) (! (= forDcl.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node7568 -> node7569 [label=<<font color="black">true</font>> color="black"]
    node7568 -> node7570 [label=<<font color="black">false</font>> color="black"]
    node7564_name [shape=none, label=<<font color="black">Block[7564]</font>>]
    node7564_name -> node7564 [arrowhead=none, color="black", style=dashed]
    node7564 [shape=box, label=<<font color="black">[0] %3 = (+ %3 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7564 -> node7557 [color="black"]
    node7569_name [shape=none, label=<<font color="black">Block[7569]</font>>]
    node7569_name -> node7569 [arrowhead=none, color="black", style=dashed]
    node7569 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = oldEnv<BR ALIGN="LEFT"/>[1] return [? forDcl]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7569 -> cluster1430_exit [color="black"]
    node7570_name [shape=none, label=<<font color="black">Branch[7570]</font>>]
    node7570_name -> node7570 [arrowhead=none, color="black", style=dashed]
    node7570 [shape=diamond, label=<<font color="black">(= isConst false)</font>> color="black" fillcolor="white", style=filled]
    node7570 -> node7571 [label=<<font color="black">true</font>> color="black"]
    node7570 -> node7572 [label=<<font color="black">false</font>> color="black"]
    node7571_name [shape=none, label=<<font color="black">Block[7571]</font>>]
    node7571_name -> node7571 [arrowhead=none, color="black", style=dashed]
    node7571 [shape=box, label=<<font color="black">[0] let perIterationLets = boundNames<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7571 -> node7573 [color="black"]
    node7572_name [shape=none, label=<<font color="black">Block[7572]</font>>]
    node7572_name -> node7572 [arrowhead=none, color="black", style=dashed]
    node7572 [shape=box, label=<<font color="black">[0] let perIterationLets = (new [])[#619]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7572 -> node7573 [color="black"]
    node7573_name [shape=none, label=<<font color="black">Call[7573]</font>>]
    node7573_name -> node7573 [arrowhead=none, color="black", style=dashed]
    node7573 [shape=cds, label=<<font color="black">%8 = clo&lt;ForBodyEvaluation&gt;(this[1], this[2], this[3], perIterationLets, labelSet)</font>> color="black" fillcolor="white", style=filled]
    node7573 -> node7574 [color="black"]
    node7574_name [shape=none, label=<<font color="black">Call[7574]</font>>]
    node7574_name -> node7574 [arrowhead=none, color="black", style=dashed]
    node7574 [shape=cds, label=<<font color="black">%9 = clo&lt;Completion&gt;(%8)</font>> color="black" fillcolor="white", style=filled]
    node7574 -> node7575 [color="black"]
    node7575_name [shape=none, label=<<font color="black">Block[7575]</font>>]
    node7575_name -> node7575 [arrowhead=none, color="black", style=dashed]
    node7575 [shape=box, label=<<font color="black">[0] let bodyResult = %9<BR ALIGN="LEFT"/>[1] @EXECUTION_STACK[0].LexicalEnvironment = oldEnv<BR ALIGN="LEFT"/>[2] return [? bodyResult]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7575 -> cluster1430_exit [color="black"]
  }
}