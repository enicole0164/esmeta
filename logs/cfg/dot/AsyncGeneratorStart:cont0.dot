digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2626 {
    label = "def <CONT>:AsyncGeneratorStart:cont0(): Const[~unused~]"
    style = rounded
    cluster2626_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2626_entry_name -> cluster2626_entry [arrowhead=none, color="black", style=dashed]
    cluster2626_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2626_entry -> node19481 [color="black"]
    cluster2626_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2626_exit_name -> cluster2626_exit [arrowhead=none, color="black", style=dashed]
    cluster2626_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node19481_name [shape=none, label=<<font color="black">Branch[19481]</font>>]
    node19481_name -> node19481 [arrowhead=none, color="black", style=dashed]
    node19481 [shape=diamond, label=<<font color="black">(? generatorBody: &quot;ParseNode&quot;)</font>> color="black" fillcolor="white", style=filled]
    node19481 -> node19482 [label=<<font color="black">true</font>> color="black"]
    node19481 -> node19484 [label=<<font color="black">false</font>> color="black"]
    node19482_name [shape=none, label=<<font color="black">Call[19482]</font>>]
    node19482_name -> node19482 [arrowhead=none, color="black", style=dashed]
    node19482 [shape=cds, label=<<font color="black">%0 = generatorBody-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node19482 -> node19483 [color="black"]
    node19484_name [shape=none, label=<<font color="black">Block[19484]</font>>]
    node19484_name -> node19484 [arrowhead=none, color="black", style=dashed]
    node19484 [shape=box, label=<<font color="black">[0] assert (yet &quot;_generatorBody_ is an Abstract Closure with no parameters.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19484 -> node19485 [color="black"]
    node19483_name [shape=none, label=<<font color="black">Block[19483]</font>>]
    node19483_name -> node19483 [arrowhead=none, color="black", style=dashed]
    node19483 [shape=box, label=<<font color="black">[0] let result = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19483 -> node19488 [color="black"]
    node19485_name [shape=none, label=<<font color="black">Call[19485]</font>>]
    node19485_name -> node19485 [arrowhead=none, color="black", style=dashed]
    node19485 [shape=cds, label=<<font color="black">%1 = generatorBody()</font>> color="black" fillcolor="white", style=filled]
    node19485 -> node19486 [color="black"]
    node19488_name [shape=none, label=<<font color="black">Block[19488]</font>>]
    node19488_name -> node19488 [arrowhead=none, color="black", style=dashed]
    node19488 [shape=box, label=<<font color="black">[0] assert (yet &quot;If we return here, the async generator either threw an exception or performed either an implicit or explicit return.&quot;)<BR ALIGN="LEFT"/>[1] (pop &lt; @EXECUTION_STACK)<BR ALIGN="LEFT"/>[2] generator.AsyncGeneratorState = ~completed~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19488 -> node19489 [color="black"]
    node19486_name [shape=none, label=<<font color="black">Call[19486]</font>>]
    node19486_name -> node19486 [arrowhead=none, color="black", style=dashed]
    node19486 [shape=cds, label=<<font color="black">%2 = clo&lt;Completion&gt;(%1)</font>> color="black" fillcolor="white", style=filled]
    node19486 -> node19487 [color="black"]
    node19489_name [shape=none, label=<<font color="black">Branch[19489]</font>>]
    node19489_name -> node19489 [arrowhead=none, color="black", style=dashed]
    node19489 [shape=diamond, label=<<font color="black">(= result.Type ~normal~)</font>> color="black" fillcolor="white", style=filled]
    node19489 -> node19490 [label=<<font color="black">true</font>> color="black"]
    node19489 -> node19492 [label=<<font color="black">false</font>> color="black"]
    node19487_name [shape=none, label=<<font color="black">Block[19487]</font>>]
    node19487_name -> node19487 [arrowhead=none, color="black", style=dashed]
    node19487 [shape=box, label=<<font color="black">[0] let result = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19487 -> node19488 [color="black"]
    node19490_name [shape=none, label=<<font color="black">Call[19490]</font>>]
    node19490_name -> node19490 [arrowhead=none, color="black", style=dashed]
    node19490 [shape=cds, label=<<font color="black">%3 = clo&lt;NormalCompletion&gt;(undefined)</font>> color="black" fillcolor="white", style=filled]
    node19490 -> node19491 [color="black"]
    node19492_name [shape=none, label=<<font color="black">Branch[19492]</font>>]
    node19492_name -> node19492 [arrowhead=none, color="black", style=dashed]
    node19492 [shape=diamond, label=<<font color="black">(= result.Type ~return~)</font>> color="black" fillcolor="white", style=filled]
    node19492 -> node19493 [label=<<font color="black">true</font>> color="black"]
    node19492 -> node19495 [label=<<font color="black">false</font>> color="black"]
    node19491_name [shape=none, label=<<font color="black">Block[19491]</font>>]
    node19491_name -> node19491 [arrowhead=none, color="black", style=dashed]
    node19491 [shape=box, label=<<font color="black">[0] result = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19491 -> node19492 [color="black"]
    node19493_name [shape=none, label=<<font color="black">Call[19493]</font>>]
    node19493_name -> node19493 [arrowhead=none, color="black", style=dashed]
    node19493 [shape=cds, label=<<font color="black">%4 = clo&lt;NormalCompletion&gt;(result.Value)</font>> color="black" fillcolor="white", style=filled]
    node19493 -> node19494 [color="black"]
    node19495_name [shape=none, label=<<font color="black">Call[19495]</font>>]
    node19495_name -> node19495 [arrowhead=none, color="black", style=dashed]
    node19495 [shape=cds, label=<<font color="black">%5 = clo&lt;AsyncGeneratorCompleteStep&gt;(generator, result, true)</font>> color="black" fillcolor="white", style=filled]
    node19495 -> node19496 [color="black"]
    node19494_name [shape=none, label=<<font color="black">Block[19494]</font>>]
    node19494_name -> node19494 [arrowhead=none, color="black", style=dashed]
    node19494 [shape=box, label=<<font color="black">[0] result = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19494 -> node19495 [color="black"]
    node19496_name [shape=none, label=<<font color="black">Call[19496]</font>>]
    node19496_name -> node19496 [arrowhead=none, color="black", style=dashed]
    node19496 [shape=cds, label=<<font color="black">%6 = clo&lt;AsyncGeneratorDrainQueue&gt;(generator)</font>> color="black" fillcolor="white", style=filled]
    node19496 -> node19497 [color="black"]
    node19497_name [shape=none, label=<<font color="black">Call[19497]</font>>]
    node19497_name -> node19497 [arrowhead=none, color="black", style=dashed]
    node19497 [shape=cds, label=<<font color="black">%7 = clo&lt;NormalCompletion&gt;(undefined)</font>> color="black" fillcolor="white", style=filled]
    node19497 -> node19498 [color="black"]
    node19498_name [shape=none, label=<<font color="black">Call[19498]</font>>]
    node19498_name -> node19498 [arrowhead=none, color="black", style=dashed]
    node19498 [shape=cds, label=<<font color="black">%8 = (pop &lt; genContext.ReturnCont)(%7)</font>> color="black" fillcolor="white", style=filled]
    node19498 -> cluster2626_exit [color="black"]
  }
}