digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1878 {
    label = "def <SYNTAX>:ExportDeclaration[0,0].ModuleRequests(this: Ast:ExportDeclaration[0,0]): List[String]"
    style = rounded
    cluster1878_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1878_entry_name -> cluster1878_entry [arrowhead=none, color="black", style=dashed]
    cluster1878_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1878_entry -> node10091 [color="black"]
    cluster1878_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1878_exit_name -> cluster1878_exit [arrowhead=none, color="black", style=dashed]
    cluster1878_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node10091_name [shape=none, label=<<font color="black">Call[10091]</font>>]
    node10091_name -> node10091 [arrowhead=none, color="black", style=dashed]
    node10091 [shape=cds, label=<<font color="black">%0 = this[1]-&gt;ModuleRequests()</font>> color="black" fillcolor="white", style=filled]
    node10091 -> node10092 [color="black"]
    node10092_name [shape=none, label=<<font color="black">Block[10092]</font>>]
    node10092_name -> node10092 [arrowhead=none, color="black", style=dashed]
    node10092 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10092 -> cluster1878_exit [color="black"]
  }
}