digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster601 {
    label = "def <SYNTAX>:ModuleItemList[1,0].ContainsUndefinedBreakTarget(this: Ast:ModuleItemList[1,0], labelSet: Unknown): Boolean"
    style = rounded
    cluster601_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster601_entry_name -> cluster601_entry [arrowhead=none, color="black", style=dashed]
    cluster601_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster601_entry -> node2692 [color="black"]
    cluster601_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster601_exit_name -> cluster601_exit [arrowhead=none, color="black", style=dashed]
    cluster601_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2692_name [shape=none, label=<<font color="black">Call[2692]</font>>]
    node2692_name -> node2692 [arrowhead=none, color="black", style=dashed]
    node2692 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2692 -> node2693 [color="black"]
    node2693_name [shape=none, label=<<font color="black">Block[2693]</font>>]
    node2693_name -> node2693 [arrowhead=none, color="black", style=dashed]
    node2693 [shape=box, label=<<font color="black">[0] let hasUndefinedLabels = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2693 -> node2694 [color="black"]
    node2694_name [shape=none, label=<<font color="black">Branch[2694]</font>>]
    node2694_name -> node2694 [arrowhead=none, color="black", style=dashed]
    node2694 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white", style=filled]
    node2694 -> node2695 [label=<<font color="black">true</font>> color="black"]
    node2694 -> node2696 [label=<<font color="black">false</font>> color="black"]
    node2695_name [shape=none, label=<<font color="black">Block[2695]</font>>]
    node2695_name -> node2695 [arrowhead=none, color="black", style=dashed]
    node2695 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2695 -> cluster601_exit [color="black"]
    node2696_name [shape=none, label=<<font color="black">Call[2696]</font>>]
    node2696_name -> node2696 [arrowhead=none, color="black", style=dashed]
    node2696 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2696 -> node2697 [color="black"]
    node2697_name [shape=none, label=<<font color="black">Block[2697]</font>>]
    node2697_name -> node2697 [arrowhead=none, color="black", style=dashed]
    node2697 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2697 -> cluster601_exit [color="black"]
  }
}