digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster364 {
    label = "def <SYNTAX>:CaseBlock[1,2].VarDeclaredNames(this: Ast:CaseBlock[1,2]): List[String]"
    style = rounded
    cluster364_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster364_entry_name -> cluster364_entry [arrowhead=none, color="black", style=dashed]
    cluster364_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster364_entry -> node1990 [color="black"]
    cluster364_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster364_exit_name -> cluster364_exit [arrowhead=none, color="black", style=dashed]
    cluster364_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1990_name [shape=none, label=<<font color="black">Branch[1990]</font>>]
    node1990_name -> node1990 [arrowhead=none, color="black", style=dashed]
    node1990 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node1990 -> node1991 [label=<<font color="black">true</font>> color="black"]
    node1990 -> node1993 [label=<<font color="black">false</font>> color="black"]
    node1991_name [shape=none, label=<<font color="black">Call[1991]</font>>]
    node1991_name -> node1991 [arrowhead=none, color="black", style=dashed]
    node1991 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;VarDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1991 -> node1992 [color="black"]
    node1993_name [shape=none, label=<<font color="black">Block[1993]</font>>]
    node1993_name -> node1993 [arrowhead=none, color="black", style=dashed]
    node1993 [shape=box, label=<<font color="black">[0] let names1 = (new [])[#202]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1993 -> node1994 [color="black"]
    node1992_name [shape=none, label=<<font color="black">Block[1992]</font>>]
    node1992_name -> node1992 [arrowhead=none, color="black", style=dashed]
    node1992 [shape=box, label=<<font color="black">[0] let names1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1992 -> node1994 [color="black"]
    node1994_name [shape=none, label=<<font color="black">Call[1994]</font>>]
    node1994_name -> node1994 [arrowhead=none, color="black", style=dashed]
    node1994 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;VarDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1994 -> node1995 [color="black"]
    node1995_name [shape=none, label=<<font color="black">Block[1995]</font>>]
    node1995_name -> node1995 [arrowhead=none, color="black", style=dashed]
    node1995 [shape=box, label=<<font color="black">[0] let names2 = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1995 -> node1996 [color="black"]
    node1996_name [shape=none, label=<<font color="black">Branch[1996]</font>>]
    node1996_name -> node1996 [arrowhead=none, color="black", style=dashed]
    node1996 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node1996 -> node1997 [label=<<font color="black">true</font>> color="black"]
    node1996 -> node1999 [label=<<font color="black">false</font>> color="black"]
    node1997_name [shape=none, label=<<font color="black">Call[1997]</font>>]
    node1997_name -> node1997 [arrowhead=none, color="black", style=dashed]
    node1997 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;VarDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1997 -> node1998 [color="black"]
    node1999_name [shape=none, label=<<font color="black">Block[1999]</font>>]
    node1999_name -> node1999 [arrowhead=none, color="black", style=dashed]
    node1999 [shape=box, label=<<font color="black">[0] let names3 = (new [])[#203]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1999 -> node2000 [color="black"]
    node1998_name [shape=none, label=<<font color="black">Block[1998]</font>>]
    node1998_name -> node1998 [arrowhead=none, color="black", style=dashed]
    node1998 [shape=box, label=<<font color="black">[0] let names3 = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1998 -> node2000 [color="black"]
    node2000_name [shape=none, label=<<font color="black">Block[2000]</font>>]
    node2000_name -> node2000 [arrowhead=none, color="black", style=dashed]
    node2000 [shape=box, label=<<font color="black">[0] return (list-concat names1 names2 names3)[#204]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2000 -> cluster364_exit [color="black"]
  }
}