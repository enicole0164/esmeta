digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2177 {
    label = "def <BUILTIN>:INTRINSICS.String.prototype.localeCompare(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2177_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2177_entry_name -> cluster2177_entry [arrowhead=none, color="black", style=dashed]
    cluster2177_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2177_entry -> node13434 [color="black"]
    cluster2177_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2177_exit_name -> cluster2177_exit [arrowhead=none, color="black", style=dashed]
    cluster2177_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node13434_name [shape=none, label=<<font color="black">Branch[13434]</font>>]
    node13434_name -> node13434 [arrowhead=none, color="black", style=dashed]
    node13434 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node13434 -> node13435 [label=<<font color="black">true</font>> color="black"]
    node13434 -> node13436 [label=<<font color="black">false</font>> color="black"]
    node13435_name [shape=none, label=<<font color="black">Block[13435]</font>>]
    node13435_name -> node13435 [arrowhead=none, color="black", style=dashed]
    node13435 [shape=box, label=<<font color="black">[0] let that = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13435 -> node13437 [color="black"]
    node13436_name [shape=none, label=<<font color="black">Block[13436]</font>>]
    node13436_name -> node13436 [arrowhead=none, color="black", style=dashed]
    node13436 [shape=box, label=<<font color="black">[0] let that = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13436 -> node13437 [color="black"]
    node13437_name [shape=none, label=<<font color="black">Branch[13437]</font>>]
    node13437_name -> node13437 [arrowhead=none, color="black", style=dashed]
    node13437 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node13437 -> node13438 [label=<<font color="black">true</font>> color="black"]
    node13437 -> node13439 [label=<<font color="black">false</font>> color="black"]
    node13438_name [shape=none, label=<<font color="black">Block[13438]</font>>]
    node13438_name -> node13438 [arrowhead=none, color="black", style=dashed]
    node13438 [shape=box, label=<<font color="black">[0] let reserved1 = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13438 -> node13440 [color="black"]
    node13439_name [shape=none, label=<<font color="black">Block[13439]</font>>]
    node13439_name -> node13439 [arrowhead=none, color="black", style=dashed]
    node13439 [shape=box, label=<<font color="black">[0] let reserved1 = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13439 -> node13440 [color="black"]
    node13440_name [shape=none, label=<<font color="black">Branch[13440]</font>>]
    node13440_name -> node13440 [arrowhead=none, color="black", style=dashed]
    node13440 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node13440 -> node13441 [label=<<font color="black">true</font>> color="black"]
    node13440 -> node13442 [label=<<font color="black">false</font>> color="black"]
    node13441_name [shape=none, label=<<font color="black">Block[13441]</font>>]
    node13441_name -> node13441 [arrowhead=none, color="black", style=dashed]
    node13441 [shape=box, label=<<font color="black">[0] let reserved2 = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13441 -> node13443 [color="black"]
    node13442_name [shape=none, label=<<font color="black">Block[13442]</font>>]
    node13442_name -> node13442 [arrowhead=none, color="black", style=dashed]
    node13442 [shape=box, label=<<font color="black">[0] let reserved2 = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13442 -> node13443 [color="black"]
    node13443_name [shape=none, label=<<font color="black">Call[13443]</font>>]
    node13443_name -> node13443 [arrowhead=none, color="black", style=dashed]
    node13443 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireObjectCoercible&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node13443 -> node13444 [color="black"]
    node13444_name [shape=none, label=<<font color="black">Block[13444]</font>>]
    node13444_name -> node13444 [arrowhead=none, color="black", style=dashed]
    node13444 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13444 -> node13445 [color="black"]
    node13445_name [shape=none, label=<<font color="black">Call[13445]</font>>]
    node13445_name -> node13445 [arrowhead=none, color="black", style=dashed]
    node13445 [shape=cds, label=<<font color="black">%1 = clo&lt;ToString&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node13445 -> node13446 [color="black"]
    node13446_name [shape=none, label=<<font color="black">Block[13446]</font>>]
    node13446_name -> node13446 [arrowhead=none, color="black", style=dashed]
    node13446 [shape=box, label=<<font color="black">[0] let S = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13446 -> node13447 [color="black"]
    node13447_name [shape=none, label=<<font color="black">Call[13447]</font>>]
    node13447_name -> node13447 [arrowhead=none, color="black", style=dashed]
    node13447 [shape=cds, label=<<font color="black">%2 = clo&lt;ToString&gt;(that)</font>> color="black" fillcolor="white", style=filled]
    node13447 -> node13448 [color="black"]
    node13448_name [shape=none, label=<<font color="black">Block[13448]</font>>]
    node13448_name -> node13448 [arrowhead=none, color="black", style=dashed]
    node13448 [shape=box, label=<<font color="black">[0] let thatValue = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13448 -> cluster2177_exit [color="black"]
  }
}