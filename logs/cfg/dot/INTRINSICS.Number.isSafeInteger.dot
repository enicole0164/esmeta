digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2062 {
    label = "def <BUILTIN>:INTRINSICS.Number.isSafeInteger(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2062_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2062_entry_name -> cluster2062_entry [arrowhead=none, color="black", style=dashed]
    cluster2062_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2062_entry -> node11813 [color="black"]
    cluster2062_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2062_exit_name -> cluster2062_exit [arrowhead=none, color="black", style=dashed]
    cluster2062_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11813_name [shape=none, label=<<font color="black">Branch[11813]</font>>]
    node11813_name -> node11813 [arrowhead=none, color="black", style=dashed]
    node11813 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11813 -> node11814 [label=<<font color="black">true</font>> color="black"]
    node11813 -> node11815 [label=<<font color="black">false</font>> color="black"]
    node11814_name [shape=none, label=<<font color="black">Block[11814]</font>>]
    node11814_name -> node11814 [arrowhead=none, color="black", style=dashed]
    node11814 [shape=box, label=<<font color="black">[0] let number = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11814 -> node11816 [color="black"]
    node11815_name [shape=none, label=<<font color="black">Block[11815]</font>>]
    node11815_name -> node11815 [arrowhead=none, color="black", style=dashed]
    node11815 [shape=box, label=<<font color="black">[0] let number = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11815 -> node11816 [color="black"]
    node11816_name [shape=none, label=<<font color="black">Call[11816]</font>>]
    node11816_name -> node11816 [arrowhead=none, color="black", style=dashed]
    node11816 [shape=cds, label=<<font color="black">%0 = clo&lt;IsIntegralNumber&gt;(number)</font>> color="black" fillcolor="white", style=filled]
    node11816 -> node11817 [color="black"]
    node11817_name [shape=none, label=<<font color="black">Branch[11817]</font>>]
    node11817_name -> node11817 [arrowhead=none, color="black", style=dashed]
    node11817 [shape=diamond, label=<<font color="black">(= %0 true)</font>> color="black" fillcolor="white", style=filled]
    node11817 -> node11818 [label=<<font color="black">true</font>> color="black"]
    node11817 -> node11820 [label=<<font color="black">false</font>> color="black"]
    node11818_name [shape=none, label=<<font color="black">Branch[11818]</font>>]
    node11818_name -> node11818 [arrowhead=none, color="black", style=dashed]
    node11818 [shape=diamond, label=<<font color="black">(! (&lt; (- (** 2 53) 1) (abs ([math] number))))</font>> color="black" fillcolor="white", style=filled]
    node11818 -> node11819 [label=<<font color="black">true</font>> color="black"]
    node11818 -> node11820 [label=<<font color="black">false</font>> color="black"]
    node11820_name [shape=none, label=<<font color="black">Block[11820]</font>>]
    node11820_name -> node11820 [arrowhead=none, color="black", style=dashed]
    node11820 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11820 -> cluster2062_exit [color="black"]
    node11819_name [shape=none, label=<<font color="black">Block[11819]</font>>]
    node11819_name -> node11819 [arrowhead=none, color="black", style=dashed]
    node11819 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11819 -> cluster2062_exit [color="black"]
  }
}