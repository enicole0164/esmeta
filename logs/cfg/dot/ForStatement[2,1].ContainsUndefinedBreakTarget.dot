digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster567 {
    label = "def <SYNTAX>:ForStatement[2,1].ContainsUndefinedBreakTarget(this: Ast:ForStatement[2,1], labelSet: Unknown): Boolean"
    style = rounded
    cluster567_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster567_entry_name -> cluster567_entry [arrowhead=none, color="black", style=dashed]
    cluster567_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster567_entry -> node2563 [color="black"]
    cluster567_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster567_exit_name -> cluster567_exit [arrowhead=none, color="black", style=dashed]
    cluster567_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2563_name [shape=none, label=<<font color="black">Call[2563]</font>>]
    node2563_name -> node2563 [arrowhead=none, color="black", style=dashed]
    node2563 [shape=cds, label=<<font color="black">%0 = this[3]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2563 -> node2564 [color="black"]
    node2564_name [shape=none, label=<<font color="black">Block[2564]</font>>]
    node2564_name -> node2564 [arrowhead=none, color="black", style=dashed]
    node2564 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2564 -> cluster567_exit [color="black"]
  }
}