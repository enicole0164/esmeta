digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2562 {
    label = "def <BUILTIN>:INTRINSICS.AsyncFromSyncIteratorPrototype.next(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2562_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2562_entry_name -> cluster2562_entry [arrowhead=none, color="black", style=dashed]
    cluster2562_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2562_entry -> node18565 [color="black"]
    cluster2562_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2562_exit_name -> cluster2562_exit [arrowhead=none, color="black", style=dashed]
    cluster2562_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node18565_name [shape=none, label=<<font color="black">Branch[18565]</font>>]
    node18565_name -> node18565 [arrowhead=none, color="black", style=dashed]
    node18565 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node18565 -> node18566 [label=<<font color="black">true</font>> color="black"]
    node18565 -> node18567 [label=<<font color="black">false</font>> color="black"]
    node18566_name [shape=none, label=<<font color="black">Block[18566]</font>>]
    node18566_name -> node18566 [arrowhead=none, color="black", style=dashed]
    node18566 [shape=box, label=<<font color="black">[0] let value = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18566 -> node18568 [color="black"]
    node18567_name [shape=none, label=<<font color="black">Block[18567]</font>>]
    node18567_name -> node18567 [arrowhead=none, color="black", style=dashed]
    node18567 [shape=box, label=<<font color="black">[0] let value = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18567 -> node18568 [color="black"]
    node18568_name [shape=none, label=<<font color="black">Block[18568]</font>>]
    node18568_name -> node18568 [arrowhead=none, color="black", style=dashed]
    node18568 [shape=box, label=<<font color="black">[0] let O = this<BR ALIGN="LEFT"/>[1] assert (&amp;&amp; (? O: &quot;Object&quot;) (! (= O.SyncIteratorRecord absent)))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18568 -> node18569 [color="black"]
    node18569_name [shape=none, label=<<font color="black">Call[18569]</font>>]
    node18569_name -> node18569 [arrowhead=none, color="black", style=dashed]
    node18569 [shape=cds, label=<<font color="black">%0 = clo&lt;NewPromiseCapability&gt;(@EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Promise%&quot;])</font>> color="black" fillcolor="white", style=filled]
    node18569 -> node18570 [color="black"]
    node18570_name [shape=none, label=<<font color="black">Block[18570]</font>>]
    node18570_name -> node18570 [arrowhead=none, color="black", style=dashed]
    node18570 [shape=box, label=<<font color="black">[0] let promiseCapability = [! %0]<BR ALIGN="LEFT"/>[1] let syncIteratorRecord = O.SyncIteratorRecord<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18570 -> node18571 [color="black"]
    node18571_name [shape=none, label=<<font color="black">Branch[18571]</font>>]
    node18571_name -> node18571 [arrowhead=none, color="black", style=dashed]
    node18571 [shape=diamond, label=<<font color="black">(! (= value absent))</font>> color="black" fillcolor="white", style=filled]
    node18571 -> node18572 [label=<<font color="black">true</font>> color="black"]
    node18571 -> node18575 [label=<<font color="black">false</font>> color="black"]
    node18572_name [shape=none, label=<<font color="black">Call[18572]</font>>]
    node18572_name -> node18572 [arrowhead=none, color="black", style=dashed]
    node18572 [shape=cds, label=<<font color="black">%1 = clo&lt;IteratorNext&gt;(syncIteratorRecord, value)</font>> color="black" fillcolor="white", style=filled]
    node18572 -> node18573 [color="black"]
    node18575_name [shape=none, label=<<font color="black">Call[18575]</font>>]
    node18575_name -> node18575 [arrowhead=none, color="black", style=dashed]
    node18575 [shape=cds, label=<<font color="black">%3 = clo&lt;IteratorNext&gt;(syncIteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node18575 -> node18576 [color="black"]
    node18573_name [shape=none, label=<<font color="black">Call[18573]</font>>]
    node18573_name -> node18573 [arrowhead=none, color="black", style=dashed]
    node18573 [shape=cds, label=<<font color="black">%2 = clo&lt;Completion&gt;(%1)</font>> color="black" fillcolor="white", style=filled]
    node18573 -> node18574 [color="black"]
    node18576_name [shape=none, label=<<font color="black">Call[18576]</font>>]
    node18576_name -> node18576 [arrowhead=none, color="black", style=dashed]
    node18576 [shape=cds, label=<<font color="black">%4 = clo&lt;Completion&gt;(%3)</font>> color="black" fillcolor="white", style=filled]
    node18576 -> node18577 [color="black"]
    node18574_name [shape=none, label=<<font color="black">Block[18574]</font>>]
    node18574_name -> node18574 [arrowhead=none, color="black", style=dashed]
    node18574 [shape=box, label=<<font color="black">[0] let result = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18574 -> node18578 [color="black"]
    node18577_name [shape=none, label=<<font color="black">Block[18577]</font>>]
    node18577_name -> node18577 [arrowhead=none, color="black", style=dashed]
    node18577 [shape=box, label=<<font color="black">[0] let result = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18577 -> node18578 [color="black"]
    node18578_name [shape=none, label=<<font color="black">Branch[18578]</font>>]
    node18578_name -> node18578 [arrowhead=none, color="black", style=dashed]
    node18578 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? result) (! (= result.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node18578 -> node18579 [label=<<font color="black">true</font>> color="black"]
    node18578 -> node18581 [label=<<font color="black">false</font>> color="black"]
    node18579_name [shape=none, label=<<font color="black">Call[18579]</font>>]
    node18579_name -> node18579 [arrowhead=none, color="black", style=dashed]
    node18579 [shape=cds, label=<<font color="black">%5 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [result.Value])[#1216])</font>> color="black" fillcolor="white", style=filled]
    node18579 -> node18580 [color="black"]
    node18581_name [shape=none, label=<<font color="black">Branch[18581]</font>>]
    node18581_name -> node18581 [arrowhead=none, color="black", style=dashed]
    node18581 [shape=diamond, label=<<font color="black">(? result: &quot;CompletionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node18581 -> node18582 [label=<<font color="black">true</font>> color="black"]
    node18581 -> node18583 [label=<<font color="black">false</font>> color="black"]
    node18580_name [shape=none, label=<<font color="black">Block[18580]</font>>]
    node18580_name -> node18580 [arrowhead=none, color="black", style=dashed]
    node18580 [shape=box, label=<<font color="black">[0] [? %5]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18580 -> cluster2562_exit [color="black"]
    node18582_name [shape=none, label=<<font color="black">Block[18582]</font>>]
    node18582_name -> node18582 [arrowhead=none, color="black", style=dashed]
    node18582 [shape=box, label=<<font color="black">[0] result = result.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18582 -> node18583 [color="black"]
    node18583_name [shape=none, label=<<font color="black">Call[18583]</font>>]
    node18583_name -> node18583 [arrowhead=none, color="black", style=dashed]
    node18583 [shape=cds, label=<<font color="black">%6 = clo&lt;AsyncFromSyncIteratorContinuation&gt;(result, promiseCapability)</font>> color="black" fillcolor="white", style=filled]
    node18583 -> node18584 [color="black"]
    node18584_name [shape=none, label=<<font color="black">Block[18584]</font>>]
    node18584_name -> node18584 [arrowhead=none, color="black", style=dashed]
    node18584 [shape=box, label=<<font color="black">[0] return %6<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18584 -> cluster2562_exit [color="black"]
  }
}