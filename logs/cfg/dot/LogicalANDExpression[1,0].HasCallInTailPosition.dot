digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1844 {
    label = "def <SYNTAX>:LogicalANDExpression[1,0].HasCallInTailPosition(this: Ast:LogicalANDExpression[1,0], call: Unknown): Boolean"
    style = rounded
    cluster1844_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1844_entry_name -> cluster1844_entry [arrowhead=none, color="black", style=dashed]
    cluster1844_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1844_entry -> node9924 [color="black"]
    cluster1844_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1844_exit_name -> cluster1844_exit [arrowhead=none, color="black", style=dashed]
    cluster1844_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9924_name [shape=none, label=<<font color="black">Call[9924]</font>>]
    node9924_name -> node9924 [arrowhead=none, color="black", style=dashed]
    node9924 [shape=cds, label=<<font color="black">%0 = this[1]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9924 -> node9925 [color="black"]
    node9925_name [shape=none, label=<<font color="black">Block[9925]</font>>]
    node9925_name -> node9925 [arrowhead=none, color="black", style=dashed]
    node9925 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9925 -> cluster1844_exit [color="black"]
  }
}