digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster865 {
    label = "def <SYNTAX>:SingleNameBinding[0,0].IteratorBindingInitialization(this: Ast:SingleNameBinding[0,0], iteratorRecord: Unknown, environment: Unknown): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster865_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster865_entry_name -> cluster865_entry [arrowhead=none, color="black", style=dashed]
    cluster865_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster865_entry -> node3260 [color="black"]
    cluster865_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster865_exit_name -> cluster865_exit [arrowhead=none, color="black", style=dashed]
    cluster865_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3260_name [shape=none, label=<<font color="black">Call[3260]</font>>]
    node3260_name -> node3260 [arrowhead=none, color="black", style=dashed]
    node3260 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;StringValue()</font>> color="black" fillcolor="white", style=filled]
    node3260 -> node3261 [color="black"]
    node3261_name [shape=none, label=<<font color="black">Block[3261]</font>>]
    node3261_name -> node3261 [arrowhead=none, color="black", style=dashed]
    node3261 [shape=box, label=<<font color="black">[0] let bindingId = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3261 -> node3262 [color="black"]
    node3262_name [shape=none, label=<<font color="black">Call[3262]</font>>]
    node3262_name -> node3262 [arrowhead=none, color="black", style=dashed]
    node3262 [shape=cds, label=<<font color="black">%1 = clo&lt;ResolveBinding&gt;(bindingId, environment)</font>> color="black" fillcolor="white", style=filled]
    node3262 -> node3263 [color="black"]
    node3263_name [shape=none, label=<<font color="black">Block[3263]</font>>]
    node3263_name -> node3263 [arrowhead=none, color="black", style=dashed]
    node3263 [shape=box, label=<<font color="black">[0] let lhs = [? %1]<BR ALIGN="LEFT"/>[1] let v = undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3263 -> node3264 [color="black"]
    node3264_name [shape=none, label=<<font color="black">Branch[3264]</font>>]
    node3264_name -> node3264 [arrowhead=none, color="black", style=dashed]
    node3264 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white", style=filled]
    node3264 -> node3265 [label=<<font color="black">true</font>> color="black"]
    node3264 -> node3279 [label=<<font color="black">false</font>> color="black"]
    node3265_name [shape=none, label=<<font color="black">Call[3265]</font>>]
    node3265_name -> node3265 [arrowhead=none, color="black", style=dashed]
    node3265 [shape=cds, label=<<font color="black">%2 = clo&lt;IteratorStep&gt;(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node3265 -> node3266 [color="black"]
    node3279_name [shape=none, label=<<font color="black">Branch[3279]</font>>]
    node3279_name -> node3279 [arrowhead=none, color="black", style=dashed]
    node3279 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= this[1] absent)) (= v undefined))</font>> color="black" fillcolor="white", style=filled]
    node3279 -> node3280 [label=<<font color="black">true</font>> color="black"]
    node3279 -> node3288 [label=<<font color="black">false</font>> color="black"]
    node3266_name [shape=none, label=<<font color="black">Call[3266]</font>>]
    node3266_name -> node3266 [arrowhead=none, color="black", style=dashed]
    node3266 [shape=cds, label=<<font color="black">%3 = clo&lt;Completion&gt;(%2)</font>> color="black" fillcolor="white", style=filled]
    node3266 -> node3267 [color="black"]
    node3280_name [shape=none, label=<<font color="black">Call[3280]</font>>]
    node3280_name -> node3280 [arrowhead=none, color="black", style=dashed]
    node3280 [shape=cds, label=<<font color="black">%6 = clo&lt;IsAnonymousFunctionDefinition&gt;(this[1])</font>> color="black" fillcolor="white", style=filled]
    node3280 -> node3281 [color="black"]
    node3288_name [shape=none, label=<<font color="black">Branch[3288]</font>>]
    node3288_name -> node3288 [arrowhead=none, color="black", style=dashed]
    node3288 [shape=diamond, label=<<font color="black">(= environment undefined)</font>> color="black" fillcolor="white", style=filled]
    node3288 -> node3289 [label=<<font color="black">true</font>> color="black"]
    node3288 -> node3291 [label=<<font color="black">false</font>> color="black"]
    node3267_name [shape=none, label=<<font color="black">Block[3267]</font>>]
    node3267_name -> node3267 [arrowhead=none, color="black", style=dashed]
    node3267 [shape=box, label=<<font color="black">[0] let next = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3267 -> node3268 [color="black"]
    node3281_name [shape=none, label=<<font color="black">Branch[3281]</font>>]
    node3281_name -> node3281 [arrowhead=none, color="black", style=dashed]
    node3281 [shape=diamond, label=<<font color="black">(= %6 true)</font>> color="black" fillcolor="white", style=filled]
    node3281 -> node3282 [label=<<font color="black">true</font>> color="black"]
    node3281 -> node3284 [label=<<font color="black">false</font>> color="black"]
    node3289_name [shape=none, label=<<font color="black">Call[3289]</font>>]
    node3289_name -> node3289 [arrowhead=none, color="black", style=dashed]
    node3289 [shape=cds, label=<<font color="black">%10 = clo&lt;PutValue&gt;(lhs, v)</font>> color="black" fillcolor="white", style=filled]
    node3289 -> node3290 [color="black"]
    node3291_name [shape=none, label=<<font color="black">Call[3291]</font>>]
    node3291_name -> node3291 [arrowhead=none, color="black", style=dashed]
    node3291 [shape=cds, label=<<font color="black">%11 = clo&lt;InitializeReferencedBinding&gt;(lhs, v)</font>> color="black" fillcolor="white", style=filled]
    node3291 -> node3292 [color="black"]
    node3268_name [shape=none, label=<<font color="black">Branch[3268]</font>>]
    node3268_name -> node3268 [arrowhead=none, color="black", style=dashed]
    node3268 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? next) (! (= next.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node3268 -> node3269 [label=<<font color="black">true</font>> color="black"]
    node3268 -> node3270 [label=<<font color="black">false</font>> color="black"]
    node3282_name [shape=none, label=<<font color="black">Call[3282]</font>>]
    node3282_name -> node3282 [arrowhead=none, color="black", style=dashed]
    node3282 [shape=cds, label=<<font color="black">%7 = this[1]-&gt;NamedEvaluation(bindingId)</font>> color="black" fillcolor="white", style=filled]
    node3282 -> node3283 [color="black"]
    node3284_name [shape=none, label=<<font color="black">Call[3284]</font>>]
    node3284_name -> node3284 [arrowhead=none, color="black", style=dashed]
    node3284 [shape=cds, label=<<font color="black">%8 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node3284 -> node3285 [color="black"]
    node3290_name [shape=none, label=<<font color="black">Block[3290]</font>>]
    node3290_name -> node3290 [arrowhead=none, color="black", style=dashed]
    node3290 [shape=box, label=<<font color="black">[0] return [? %10]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3290 -> cluster865_exit [color="black"]
    node3292_name [shape=none, label=<<font color="black">Block[3292]</font>>]
    node3292_name -> node3292 [arrowhead=none, color="black", style=dashed]
    node3292 [shape=box, label=<<font color="black">[0] return [? %11]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3292 -> cluster865_exit [color="black"]
    node3269_name [shape=none, label=<<font color="black">Block[3269]</font>>]
    node3269_name -> node3269 [arrowhead=none, color="black", style=dashed]
    node3269 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3269 -> node3270 [color="black"]
    node3270_name [shape=none, label=<<font color="black">Block[3270]</font>>]
    node3270_name -> node3270 [arrowhead=none, color="black", style=dashed]
    node3270 [shape=box, label=<<font color="black">[0] [? next]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3270 -> node3271 [color="black"]
    node3283_name [shape=none, label=<<font color="black">Block[3283]</font>>]
    node3283_name -> node3283 [arrowhead=none, color="black", style=dashed]
    node3283 [shape=box, label=<<font color="black">[0] v = [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3283 -> node3288 [color="black"]
    node3285_name [shape=none, label=<<font color="black">Block[3285]</font>>]
    node3285_name -> node3285 [arrowhead=none, color="black", style=dashed]
    node3285 [shape=box, label=<<font color="black">[0] let defaultValue = %8<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3285 -> node3286 [color="black"]
    node3271_name [shape=none, label=<<font color="black">Branch[3271]</font>>]
    node3271_name -> node3271 [arrowhead=none, color="black", style=dashed]
    node3271 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white", style=filled]
    node3271 -> node3272 [label=<<font color="black">true</font>> color="black"]
    node3271 -> node3273 [label=<<font color="black">false</font>> color="black"]
    node3286_name [shape=none, label=<<font color="black">Call[3286]</font>>]
    node3286_name -> node3286 [arrowhead=none, color="black", style=dashed]
    node3286 [shape=cds, label=<<font color="black">%9 = clo&lt;GetValue&gt;(defaultValue)</font>> color="black" fillcolor="white", style=filled]
    node3286 -> node3287 [color="black"]
    node3272_name [shape=none, label=<<font color="black">Block[3272]</font>>]
    node3272_name -> node3272 [arrowhead=none, color="black", style=dashed]
    node3272 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3272 -> node3279 [color="black"]
    node3273_name [shape=none, label=<<font color="black">Call[3273]</font>>]
    node3273_name -> node3273 [arrowhead=none, color="black", style=dashed]
    node3273 [shape=cds, label=<<font color="black">%4 = clo&lt;IteratorValue&gt;(next)</font>> color="black" fillcolor="white", style=filled]
    node3273 -> node3274 [color="black"]
    node3287_name [shape=none, label=<<font color="black">Block[3287]</font>>]
    node3287_name -> node3287 [arrowhead=none, color="black", style=dashed]
    node3287 [shape=box, label=<<font color="black">[0] v = [? %9]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3287 -> node3288 [color="black"]
    node3274_name [shape=none, label=<<font color="black">Call[3274]</font>>]
    node3274_name -> node3274 [arrowhead=none, color="black", style=dashed]
    node3274 [shape=cds, label=<<font color="black">%5 = clo&lt;Completion&gt;(%4)</font>> color="black" fillcolor="white", style=filled]
    node3274 -> node3275 [color="black"]
    node3275_name [shape=none, label=<<font color="black">Block[3275]</font>>]
    node3275_name -> node3275 [arrowhead=none, color="black", style=dashed]
    node3275 [shape=box, label=<<font color="black">[0] v = %5<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3275 -> node3276 [color="black"]
    node3276_name [shape=none, label=<<font color="black">Branch[3276]</font>>]
    node3276_name -> node3276 [arrowhead=none, color="black", style=dashed]
    node3276 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? v) (! (= v.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node3276 -> node3277 [label=<<font color="black">true</font>> color="black"]
    node3276 -> node3278 [label=<<font color="black">false</font>> color="black"]
    node3277_name [shape=none, label=<<font color="black">Block[3277]</font>>]
    node3277_name -> node3277 [arrowhead=none, color="black", style=dashed]
    node3277 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3277 -> node3278 [color="black"]
    node3278_name [shape=none, label=<<font color="black">Block[3278]</font>>]
    node3278_name -> node3278 [arrowhead=none, color="black", style=dashed]
    node3278 [shape=box, label=<<font color="black">[0] [? v]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3278 -> node3279 [color="black"]
  }
}