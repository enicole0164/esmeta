digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster263 {
    label = "def <SYNTAX>:CaseBlock[1,2].LexicallyDeclaredNames(this: Ast:CaseBlock[1,2]): List[String]"
    style = rounded
    cluster263_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster263_entry_name -> cluster263_entry [arrowhead=none, color="black", style=dashed]
    cluster263_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster263_entry -> node1700 [color="black"]
    cluster263_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster263_exit_name -> cluster263_exit [arrowhead=none, color="black", style=dashed]
    cluster263_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1700_name [shape=none, label=<<font color="black">Branch[1700]</font>>]
    node1700_name -> node1700 [arrowhead=none, color="black", style=dashed]
    node1700 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node1700 -> node1701 [label=<<font color="black">true</font>> color="black"]
    node1700 -> node1703 [label=<<font color="black">false</font>> color="black"]
    node1701_name [shape=none, label=<<font color="black">Call[1701]</font>>]
    node1701_name -> node1701 [arrowhead=none, color="black", style=dashed]
    node1701 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1701 -> node1702 [color="black"]
    node1703_name [shape=none, label=<<font color="black">Block[1703]</font>>]
    node1703_name -> node1703 [arrowhead=none, color="black", style=dashed]
    node1703 [shape=box, label=<<font color="black">[0] let names1 = (new [])[#121]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1703 -> node1704 [color="black"]
    node1702_name [shape=none, label=<<font color="black">Block[1702]</font>>]
    node1702_name -> node1702 [arrowhead=none, color="black", style=dashed]
    node1702 [shape=box, label=<<font color="black">[0] let names1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1702 -> node1704 [color="black"]
    node1704_name [shape=none, label=<<font color="black">Call[1704]</font>>]
    node1704_name -> node1704 [arrowhead=none, color="black", style=dashed]
    node1704 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1704 -> node1705 [color="black"]
    node1705_name [shape=none, label=<<font color="black">Block[1705]</font>>]
    node1705_name -> node1705 [arrowhead=none, color="black", style=dashed]
    node1705 [shape=box, label=<<font color="black">[0] let names2 = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1705 -> node1706 [color="black"]
    node1706_name [shape=none, label=<<font color="black">Branch[1706]</font>>]
    node1706_name -> node1706 [arrowhead=none, color="black", style=dashed]
    node1706 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node1706 -> node1707 [label=<<font color="black">true</font>> color="black"]
    node1706 -> node1709 [label=<<font color="black">false</font>> color="black"]
    node1707_name [shape=none, label=<<font color="black">Call[1707]</font>>]
    node1707_name -> node1707 [arrowhead=none, color="black", style=dashed]
    node1707 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1707 -> node1708 [color="black"]
    node1709_name [shape=none, label=<<font color="black">Block[1709]</font>>]
    node1709_name -> node1709 [arrowhead=none, color="black", style=dashed]
    node1709 [shape=box, label=<<font color="black">[0] let names3 = (new [])[#122]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1709 -> node1710 [color="black"]
    node1708_name [shape=none, label=<<font color="black">Block[1708]</font>>]
    node1708_name -> node1708 [arrowhead=none, color="black", style=dashed]
    node1708 [shape=box, label=<<font color="black">[0] let names3 = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1708 -> node1710 [color="black"]
    node1710_name [shape=none, label=<<font color="black">Block[1710]</font>>]
    node1710_name -> node1710 [arrowhead=none, color="black", style=dashed]
    node1710 [shape=box, label=<<font color="black">[0] return (list-concat names1 names2 names3)[#123]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1710 -> cluster263_exit [color="black"]
  }
}