digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1679 {
    label = "def <SYNTAX>:FieldDefinition[0,0].ClassFieldDefinitionEvaluation(this: Ast:FieldDefinition[0,0], homeObject: Unknown): Normal[ClassFieldDefinitionRecord] | Abrupt"
    style = rounded
    cluster1679_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1679_entry_name -> cluster1679_entry [arrowhead=none, color="black", style=dashed]
    cluster1679_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1679_entry -> node8938 [color="black"]
    cluster1679_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1679_exit_name -> cluster1679_exit [arrowhead=none, color="black", style=dashed]
    cluster1679_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8938_name [shape=none, label=<<font color="black">Call[8938]</font>>]
    node8938_name -> node8938 [arrowhead=none, color="black", style=dashed]
    node8938 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node8938 -> node8939 [color="black"]
    node8939_name [shape=none, label=<<font color="black">Block[8939]</font>>]
    node8939_name -> node8939 [arrowhead=none, color="black", style=dashed]
    node8939 [shape=box, label=<<font color="black">[0] let name = %0<BR ALIGN="LEFT"/>[1] [? name]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8939 -> node8940 [color="black"]
    node8940_name [shape=none, label=<<font color="black">Branch[8940]</font>>]
    node8940_name -> node8940 [arrowhead=none, color="black", style=dashed]
    node8940 [shape=diamond, label=<<font color="black">(! (= this[1] absent))</font>> color="black" fillcolor="white", style=filled]
    node8940 -> node8941 [label=<<font color="black">true</font>> color="black"]
    node8940 -> node8946 [label=<<font color="black">false</font>> color="black"]
    node8941_name [shape=none, label=<<font color="black">Block[8941]</font>>]
    node8941_name -> node8941 [arrowhead=none, color="black", style=dashed]
    node8941 [shape=box, label=<<font color="black">[0] let formalParameterList = |FormalParameters|[TT]&lt;0&gt;<BR ALIGN="LEFT"/>[1] let env = @EXECUTION_STACK[0].LexicalEnvironment<BR ALIGN="LEFT"/>[2] let privateEnv = @EXECUTION_STACK[0].PrivateEnvironment<BR ALIGN="LEFT"/>[3] let sourceText = &quot;&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8941 -> node8942 [color="black"]
    node8946_name [shape=none, label=<<font color="black">Block[8946]</font>>]
    node8946_name -> node8946 [arrowhead=none, color="black", style=dashed]
    node8946 [shape=box, label=<<font color="black">[0] let initializer = ~empty~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8946 -> node8947 [color="black"]
    node8942_name [shape=none, label=<<font color="black">Call[8942]</font>>]
    node8942_name -> node8942 [arrowhead=none, color="black", style=dashed]
    node8942 [shape=cds, label=<<font color="black">%1 = clo&lt;OrdinaryFunctionCreate&gt;(@EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Function.prototype%&quot;], sourceText, formalParameterList, this[1], ~non-lexical-this~, env, privateEnv)</font>> color="black" fillcolor="white", style=filled]
    node8942 -> node8943 [color="black"]
    node8947_name [shape=none, label=<<font color="black">Block[8947]</font>>]
    node8947_name -> node8947 [arrowhead=none, color="black", style=dashed]
    node8947 [shape=box, label=<<font color="black">[0] return (new ClassFieldDefinitionRecord(&quot;Name&quot; -&gt; name, &quot;Initializer&quot; -&gt; initializer))[#690]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8947 -> cluster1679_exit [color="black"]
    node8943_name [shape=none, label=<<font color="black">Block[8943]</font>>]
    node8943_name -> node8943 [arrowhead=none, color="black", style=dashed]
    node8943 [shape=box, label=<<font color="black">[0] let initializer = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8943 -> node8944 [color="black"]
    node8944_name [shape=none, label=<<font color="black">Call[8944]</font>>]
    node8944_name -> node8944 [arrowhead=none, color="black", style=dashed]
    node8944 [shape=cds, label=<<font color="black">%2 = clo&lt;MakeMethod&gt;(initializer, homeObject)</font>> color="black" fillcolor="white", style=filled]
    node8944 -> node8945 [color="black"]
    node8945_name [shape=none, label=<<font color="black">Block[8945]</font>>]
    node8945_name -> node8945 [arrowhead=none, color="black", style=dashed]
    node8945 [shape=box, label=<<font color="black">[0] initializer.ClassFieldInitializerName = name<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8945 -> node8947 [color="black"]
  }
}