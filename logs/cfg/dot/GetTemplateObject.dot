digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1245 {
    label = "def GetTemplateObject(templateLiteral: Ast): Unknown["Array"]"
    style = rounded
    cluster1245_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1245_entry_name -> cluster1245_entry [arrowhead=none, color="black", style=dashed]
    cluster1245_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1245_entry -> node5699 [color="black"]
    cluster1245_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1245_exit_name -> cluster1245_exit [arrowhead=none, color="black", style=dashed]
    cluster1245_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node5699_name [shape=none, label=<<font color="black">Block[5699]</font>>]
    node5699_name -> node5699 [arrowhead=none, color="black", style=dashed]
    node5699 [shape=box, label=<<font color="black">[0] let realm = @EXECUTION_STACK[0].Realm<BR ALIGN="LEFT"/>[1] let templateRegistry = realm.TemplateMap<BR ALIGN="LEFT"/>[2] %1 = templateRegistry<BR ALIGN="LEFT"/>[3] %0 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5699 -> node5700 [color="black"]
    node5700_name [shape=none, label=<<font color="black">Branch[5700]</font>>]
    node5700_name -> node5700 [arrowhead=none, color="black", style=dashed]
    node5700 [shape=diamond, label=<<font color="black">(&lt; %0 %1.length)</font>> color="black" fillcolor="white", style=filled]
    node5700 -> node5701 [label=<<font color="black">true</font>> color="black"]
    node5700 -> node5705 [label=<<font color="black">false</font>> color="black"]
    node5701_name [shape=none, label=<<font color="black">Block[5701]</font>>]
    node5701_name -> node5701 [arrowhead=none, color="black", style=dashed]
    node5701 [shape=box, label=<<font color="black">[0] let e = %1[%0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5701 -> node5702 [color="black"]
    node5705_name [shape=none, label=<<font color="black">Call[5705]</font>>]
    node5705_name -> node5705 [arrowhead=none, color="black", style=dashed]
    node5705 [shape=cds, label=<<font color="black">%2 = templateLiteral-&gt;TemplateStrings(true)</font>> color="black" fillcolor="white", style=filled]
    node5705 -> node5706 [color="black"]
    node5702_name [shape=none, label=<<font color="black">Branch[5702]</font>>]
    node5702_name -> node5702 [arrowhead=none, color="black", style=dashed]
    node5702 [shape=diamond, label=<<font color="black">(= e.Site templateLiteral)</font>> color="black" fillcolor="white", style=filled]
    node5702 -> node5703 [label=<<font color="black">true</font>> color="black"]
    node5702 -> node5704 [label=<<font color="black">false</font>> color="black"]
    node5706_name [shape=none, label=<<font color="black">Block[5706]</font>>]
    node5706_name -> node5706 [arrowhead=none, color="black", style=dashed]
    node5706 [shape=box, label=<<font color="black">[0] let rawStrings = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5706 -> node5707 [color="black"]
    node5703_name [shape=none, label=<<font color="black">Block[5703]</font>>]
    node5703_name -> node5703 [arrowhead=none, color="black", style=dashed]
    node5703 [shape=box, label=<<font color="black">[0] return e.Array<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5703 -> cluster1245_exit [color="black"]
    node5704_name [shape=none, label=<<font color="black">Block[5704]</font>>]
    node5704_name -> node5704 [arrowhead=none, color="black", style=dashed]
    node5704 [shape=box, label=<<font color="black">[0] %0 = (+ %0 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5704 -> node5700 [color="black"]
    node5707_name [shape=none, label=<<font color="black">Call[5707]</font>>]
    node5707_name -> node5707 [arrowhead=none, color="black", style=dashed]
    node5707 [shape=cds, label=<<font color="black">%3 = templateLiteral-&gt;TemplateStrings(false)</font>> color="black" fillcolor="white", style=filled]
    node5707 -> node5708 [color="black"]
    node5708_name [shape=none, label=<<font color="black">Block[5708]</font>>]
    node5708_name -> node5708 [arrowhead=none, color="black", style=dashed]
    node5708 [shape=box, label=<<font color="black">[0] let cookedStrings = %3<BR ALIGN="LEFT"/>[1] let count = cookedStrings.length<BR ALIGN="LEFT"/>[2] assert (! (&lt; (- (** 2 32) 1) count))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5708 -> node5709 [color="black"]
    node5709_name [shape=none, label=<<font color="black">Call[5709]</font>>]
    node5709_name -> node5709 [arrowhead=none, color="black", style=dashed]
    node5709 [shape=cds, label=<<font color="black">%4 = clo&lt;ArrayCreate&gt;(count)</font>> color="black" fillcolor="white", style=filled]
    node5709 -> node5710 [color="black"]
    node5710_name [shape=none, label=<<font color="black">Block[5710]</font>>]
    node5710_name -> node5710 [arrowhead=none, color="black", style=dashed]
    node5710 [shape=box, label=<<font color="black">[0] let template = [! %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5710 -> node5711 [color="black"]
    node5711_name [shape=none, label=<<font color="black">Call[5711]</font>>]
    node5711_name -> node5711 [arrowhead=none, color="black", style=dashed]
    node5711 [shape=cds, label=<<font color="black">%5 = clo&lt;ArrayCreate&gt;(count)</font>> color="black" fillcolor="white", style=filled]
    node5711 -> node5712 [color="black"]
    node5712_name [shape=none, label=<<font color="black">Block[5712]</font>>]
    node5712_name -> node5712 [arrowhead=none, color="black", style=dashed]
    node5712 [shape=box, label=<<font color="black">[0] let rawObj = [! %5]<BR ALIGN="LEFT"/>[1] let index = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5712 -> node5713 [color="black"]
    node5713_name [shape=none, label=<<font color="black">Branch[5713]</font>>]
    node5713_name -> node5713 [arrowhead=none, color="black", style=dashed]
    node5713 [shape=diamond, label=<<font color="black">(&lt; index count)</font>> color="black" fillcolor="white", style=filled]
    node5713 -> node5714 [label=<<font color="black">true</font>> color="black"]
    node5713 -> node5720 [label=<<font color="black">false</font>> color="black"]
    node5714_name [shape=none, label=<<font color="black">Call[5714]</font>>]
    node5714_name -> node5714 [arrowhead=none, color="black", style=dashed]
    node5714 [shape=cds, label=<<font color="black">%6 = clo&lt;ToString&gt;(([number] index))</font>> color="black" fillcolor="white", style=filled]
    node5714 -> node5715 [color="black"]
    node5720_name [shape=none, label=<<font color="black">Call[5720]</font>>]
    node5720_name -> node5720 [arrowhead=none, color="black", style=dashed]
    node5720 [shape=cds, label=<<font color="black">%9 = clo&lt;SetIntegrityLevel&gt;(rawObj, ~frozen~)</font>> color="black" fillcolor="white", style=filled]
    node5720 -> node5721 [color="black"]
    node5715_name [shape=none, label=<<font color="black">Block[5715]</font>>]
    node5715_name -> node5715 [arrowhead=none, color="black", style=dashed]
    node5715 [shape=box, label=<<font color="black">[0] let prop = [! %6]<BR ALIGN="LEFT"/>[1] let cookedValue = cookedStrings[index]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5715 -> node5716 [color="black"]
    node5721_name [shape=none, label=<<font color="black">Block[5721]</font>>]
    node5721_name -> node5721 [arrowhead=none, color="black", style=dashed]
    node5721 [shape=box, label=<<font color="black">[0] [! %9]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5721 -> node5722 [color="black"]
    node5716_name [shape=none, label=<<font color="black">Call[5716]</font>>]
    node5716_name -> node5716 [arrowhead=none, color="black", style=dashed]
    node5716 [shape=cds, label=<<font color="black">%7 = clo&lt;DefinePropertyOrThrow&gt;(template, prop, (new PropertyDescriptor(&quot;Value&quot; -&gt; cookedValue, &quot;Writable&quot; -&gt; false, &quot;Enumerable&quot; -&gt; true, &quot;Configurable&quot; -&gt; false))[#559])</font>> color="black" fillcolor="white", style=filled]
    node5716 -> node5717 [color="black"]
    node5722_name [shape=none, label=<<font color="black">Call[5722]</font>>]
    node5722_name -> node5722 [arrowhead=none, color="black", style=dashed]
    node5722 [shape=cds, label=<<font color="black">%10 = clo&lt;DefinePropertyOrThrow&gt;(template, &quot;raw&quot;, (new PropertyDescriptor(&quot;Value&quot; -&gt; rawObj, &quot;Writable&quot; -&gt; false, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; false))[#561])</font>> color="black" fillcolor="white", style=filled]
    node5722 -> node5723 [color="black"]
    node5717_name [shape=none, label=<<font color="black">Block[5717]</font>>]
    node5717_name -> node5717 [arrowhead=none, color="black", style=dashed]
    node5717 [shape=box, label=<<font color="black">[0] [! %7]<BR ALIGN="LEFT"/>[1] (yet &quot;Let _rawValue_ be the String value _rawStrings_[_index_].&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5717 -> node5718 [color="black"]
    node5723_name [shape=none, label=<<font color="black">Block[5723]</font>>]
    node5723_name -> node5723 [arrowhead=none, color="black", style=dashed]
    node5723 [shape=box, label=<<font color="black">[0] [! %10]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5723 -> node5724 [color="black"]
    node5718_name [shape=none, label=<<font color="black">Call[5718]</font>>]
    node5718_name -> node5718 [arrowhead=none, color="black", style=dashed]
    node5718 [shape=cds, label=<<font color="black">%8 = clo&lt;DefinePropertyOrThrow&gt;(rawObj, prop, (new PropertyDescriptor(&quot;Value&quot; -&gt; rawValue, &quot;Writable&quot; -&gt; false, &quot;Enumerable&quot; -&gt; true, &quot;Configurable&quot; -&gt; false))[#560])</font>> color="black" fillcolor="white", style=filled]
    node5718 -> node5719 [color="black"]
    node5724_name [shape=none, label=<<font color="black">Call[5724]</font>>]
    node5724_name -> node5724 [arrowhead=none, color="black", style=dashed]
    node5724 [shape=cds, label=<<font color="black">%11 = clo&lt;SetIntegrityLevel&gt;(template, ~frozen~)</font>> color="black" fillcolor="white", style=filled]
    node5724 -> node5725 [color="black"]
    node5719_name [shape=none, label=<<font color="black">Block[5719]</font>>]
    node5719_name -> node5719 [arrowhead=none, color="black", style=dashed]
    node5719 [shape=box, label=<<font color="black">[0] [! %8]<BR ALIGN="LEFT"/>[1] index = (+ index 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5719 -> node5713 [color="black"]
    node5725_name [shape=none, label=<<font color="black">Block[5725]</font>>]
    node5725_name -> node5725 [arrowhead=none, color="black", style=dashed]
    node5725 [shape=box, label=<<font color="black">[0] [! %11]<BR ALIGN="LEFT"/>[1] push templateRegistry &lt; (new Record(&quot;Site&quot; -&gt; templateLiteral, &quot;Array&quot; -&gt; template))[#562]<BR ALIGN="LEFT"/>[2] return template<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5725 -> cluster1245_exit [color="black"]
  }
}