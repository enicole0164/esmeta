digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1696 {
    label = "def <SYNTAX>:ClassTail[0,3].ClassDefinitionEvaluation(this: Ast:ClassTail[0,3], classBinding: Unknown, className: Unknown): Normal[FunctionObject] | Abrupt"
    style = rounded
    cluster1696_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1696_entry_name -> cluster1696_entry [arrowhead=none, color="black", style=dashed]
    cluster1696_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1696_entry -> node9431 [color="black"]
    cluster1696_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1696_exit_name -> cluster1696_exit [arrowhead=none, color="black", style=dashed]
    cluster1696_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9431_name [shape=none, label=<<font color="black">Block[9431]</font>>]
    node9431_name -> node9431 [arrowhead=none, color="black", style=dashed]
    node9431 [shape=box, label=<<font color="black">[0] let env = @EXECUTION_STACK[0].LexicalEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9431 -> node9432 [color="black"]
    node9432_name [shape=none, label=<<font color="black">Call[9432]</font>>]
    node9432_name -> node9432 [arrowhead=none, color="black", style=dashed]
    node9432 [shape=cds, label=<<font color="black">%0 = clo&lt;NewDeclarativeEnvironment&gt;(env)</font>> color="black" fillcolor="white", style=filled]
    node9432 -> node9433 [color="black"]
    node9433_name [shape=none, label=<<font color="black">Block[9433]</font>>]
    node9433_name -> node9433 [arrowhead=none, color="black", style=dashed]
    node9433 [shape=box, label=<<font color="black">[0] let classEnv = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9433 -> node9434 [color="black"]
    node9434_name [shape=none, label=<<font color="black">Branch[9434]</font>>]
    node9434_name -> node9434 [arrowhead=none, color="black", style=dashed]
    node9434 [shape=diamond, label=<<font color="black">(! (= classBinding undefined))</font>> color="black" fillcolor="white", style=filled]
    node9434 -> node9435 [label=<<font color="black">true</font>> color="black"]
    node9434 -> node9436 [label=<<font color="black">false</font>> color="black"]
    node9435_name [shape=none, label=<<font color="black">Call[9435]</font>>]
    node9435_name -> node9435 [arrowhead=none, color="black", style=dashed]
    node9435 [shape=cds, label=<<font color="black">%1 = classEnv-&gt;CreateImmutableBinding(classBinding, true)</font>> color="black" fillcolor="white", style=filled]
    node9435 -> node9436 [color="black"]
    node9436_name [shape=none, label=<<font color="black">Block[9436]</font>>]
    node9436_name -> node9436 [arrowhead=none, color="black", style=dashed]
    node9436 [shape=box, label=<<font color="black">[0] let outerPrivateEnvironment = @EXECUTION_STACK[0].PrivateEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9436 -> node9437 [color="black"]
    node9437_name [shape=none, label=<<font color="black">Call[9437]</font>>]
    node9437_name -> node9437 [arrowhead=none, color="black", style=dashed]
    node9437 [shape=cds, label=<<font color="black">%2 = clo&lt;NewPrivateEnvironment&gt;(outerPrivateEnvironment)</font>> color="black" fillcolor="white", style=filled]
    node9437 -> node9438 [color="black"]
    node9438_name [shape=none, label=<<font color="black">Block[9438]</font>>]
    node9438_name -> node9438 [arrowhead=none, color="black", style=dashed]
    node9438 [shape=box, label=<<font color="black">[0] let classPrivateEnvironment = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9438 -> node9439 [color="black"]
    node9439_name [shape=none, label=<<font color="black">Branch[9439]</font>>]
    node9439_name -> node9439 [arrowhead=none, color="black", style=dashed]
    node9439 [shape=diamond, label=<<font color="black">(! (= this[1] absent))</font>> color="black" fillcolor="white", style=filled]
    node9439 -> node9440 [label=<<font color="black">true</font>> color="black"]
    node9439 -> node9448 [label=<<font color="black">false</font>> color="black"]
    node9440_name [shape=none, label=<<font color="black">Call[9440]</font>>]
    node9440_name -> node9440 [arrowhead=none, color="black", style=dashed]
    node9440 [shape=cds, label=<<font color="black">%5 = this[1]-&gt;PrivateBoundIdentifiers()</font>> color="black" fillcolor="white", style=filled]
    node9440 -> node9441 [color="black"]
    node9448_name [shape=none, label=<<font color="black">Branch[9448]</font>>]
    node9448_name -> node9448 [arrowhead=none, color="black", style=dashed]
    node9448 [shape=diamond, label=<<font color="black">(= this[0] absent)</font>> color="black" fillcolor="white", style=filled]
    node9448 -> node9449 [label=<<font color="black">true</font>> color="black"]
    node9448 -> node9450 [label=<<font color="black">false</font>> color="black"]
    node9441_name [shape=none, label=<<font color="black">Block[9441]</font>>]
    node9441_name -> node9441 [arrowhead=none, color="black", style=dashed]
    node9441 [shape=box, label=<<font color="black">[0] %4 = %5<BR ALIGN="LEFT"/>[1] %3 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9441 -> node9442 [color="black"]
    node9449_name [shape=none, label=<<font color="black">Block[9449]</font>>]
    node9449_name -> node9449 [arrowhead=none, color="black", style=dashed]
    node9449 [shape=box, label=<<font color="black">[0] let protoParent = @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Object.prototype%&quot;]<BR ALIGN="LEFT"/>[1] let constructorParent = @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Function.prototype%&quot;]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9449 -> node9465 [color="black"]
    node9450_name [shape=none, label=<<font color="black">Block[9450]</font>>]
    node9450_name -> node9450 [arrowhead=none, color="black", style=dashed]
    node9450 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = classEnv<BR ALIGN="LEFT"/>[1] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9450 -> node9451 [color="black"]
    node9442_name [shape=none, label=<<font color="black">Branch[9442]</font>>]
    node9442_name -> node9442 [arrowhead=none, color="black", style=dashed]
    node9442 [shape=diamond, label=<<font color="black">(&lt; %3 %4.length)</font>> color="black" fillcolor="white", style=filled]
    node9442 -> node9443 [label=<<font color="black">true</font>> color="black"]
    node9442 -> node9448 [label=<<font color="black">false</font>> color="black"]
    node9465_name [shape=none, label=<<font color="black">Call[9465]</font>>]
    node9465_name -> node9465 [arrowhead=none, color="black", style=dashed]
    node9465 [shape=cds, label=<<font color="black">%10 = clo&lt;OrdinaryObjectCreate&gt;(protoParent)</font>> color="black" fillcolor="white", style=filled]
    node9465 -> node9466 [color="black"]
    node9451_name [shape=none, label=<<font color="black">Call[9451]</font>>]
    node9451_name -> node9451 [arrowhead=none, color="black", style=dashed]
    node9451 [shape=cds, label=<<font color="black">%6 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node9451 -> node9452 [color="black"]
    node9443_name [shape=none, label=<<font color="black">Block[9443]</font>>]
    node9443_name -> node9443 [arrowhead=none, color="black", style=dashed]
    node9443 [shape=box, label=<<font color="black">[0] let dn = %4[%3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9443 -> node9444 [color="black"]
    node9466_name [shape=none, label=<<font color="black">Block[9466]</font>>]
    node9466_name -> node9466 [arrowhead=none, color="black", style=dashed]
    node9466 [shape=box, label=<<font color="black">[0] let proto = %10<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9466 -> node9467 [color="black"]
    node9452_name [shape=none, label=<<font color="black">Block[9452]</font>>]
    node9452_name -> node9452 [arrowhead=none, color="black", style=dashed]
    node9452 [shape=box, label=<<font color="black">[0] let superclassRef = %6<BR ALIGN="LEFT"/>[1] @EXECUTION_STACK[0].LexicalEnvironment = env<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9452 -> node9453 [color="black"]
    node9444_name [shape=none, label=<<font color="black">Branch[9444]</font>>]
    node9444_name -> node9444 [arrowhead=none, color="black", style=dashed]
    node9444 [shape=diamond, label=<<font color="black">(contains classPrivateEnvironment.Names dn: Unknown[&quot;PrivateName&quot;] Description)</font>> color="black" fillcolor="white", style=filled]
    node9444 -> node9445 [label=<<font color="black">true</font>> color="black"]
    node9444 -> node9446 [label=<<font color="black">false</font>> color="black"]
    node9467_name [shape=none, label=<<font color="black">Branch[9467]</font>>]
    node9467_name -> node9467 [arrowhead=none, color="black", style=dashed]
    node9467 [shape=diamond, label=<<font color="black">(= this[1] absent)</font>> color="black" fillcolor="white", style=filled]
    node9467 -> node9468 [label=<<font color="black">true</font>> color="black"]
    node9467 -> node9469 [label=<<font color="black">false</font>> color="black"]
    node9453_name [shape=none, label=<<font color="black">Call[9453]</font>>]
    node9453_name -> node9453 [arrowhead=none, color="black", style=dashed]
    node9453 [shape=cds, label=<<font color="black">%7 = clo&lt;GetValue&gt;(superclassRef)</font>> color="black" fillcolor="white", style=filled]
    node9453 -> node9454 [color="black"]
    node9445_name [shape=none, label=<<font color="black">Block[9445]</font>>]
    node9445_name -> node9445 [arrowhead=none, color="black", style=dashed]
    node9445 [shape=box, label=<<font color="black">[0] assert (yet &quot;This is only possible for getter/setter pairs.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9445 -> node9447 [color="black"]
    node9446_name [shape=none, label=<<font color="black">Block[9446]</font>>]
    node9446_name -> node9446 [arrowhead=none, color="black", style=dashed]
    node9446 [shape=box, label=<<font color="black">[0] let name = (new PrivateName(&quot;Description&quot; -&gt; dn))[#735]<BR ALIGN="LEFT"/>[1] push classPrivateEnvironment.Names &lt; name<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9446 -> node9447 [color="black"]
    node9468_name [shape=none, label=<<font color="black">Block[9468]</font>>]
    node9468_name -> node9468 [arrowhead=none, color="black", style=dashed]
    node9468 [shape=box, label=<<font color="black">[0] let constructor = ~empty~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9468 -> node9471 [color="black"]
    node9469_name [shape=none, label=<<font color="black">Call[9469]</font>>]
    node9469_name -> node9469 [arrowhead=none, color="black", style=dashed]
    node9469 [shape=cds, label=<<font color="black">%11 = this[1]-&gt;ConstructorMethod()</font>> color="black" fillcolor="white", style=filled]
    node9469 -> node9470 [color="black"]
    node9454_name [shape=none, label=<<font color="black">Block[9454]</font>>]
    node9454_name -> node9454 [arrowhead=none, color="black", style=dashed]
    node9454 [shape=box, label=<<font color="black">[0] let superclass = [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9454 -> node9455 [color="black"]
    node9447_name [shape=none, label=<<font color="black">Block[9447]</font>>]
    node9447_name -> node9447 [arrowhead=none, color="black", style=dashed]
    node9447 [shape=box, label=<<font color="black">[0] %3 = (+ %3 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9447 -> node9442 [color="black"]
    node9471_name [shape=none, label=<<font color="black">Block[9471]</font>>]
    node9471_name -> node9471 [arrowhead=none, color="black", style=dashed]
    node9471 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = classEnv<BR ALIGN="LEFT"/>[1] @EXECUTION_STACK[0].PrivateEnvironment = classPrivateEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9471 -> node9472 [color="black"]
    node9470_name [shape=none, label=<<font color="black">Block[9470]</font>>]
    node9470_name -> node9470 [arrowhead=none, color="black", style=dashed]
    node9470 [shape=box, label=<<font color="black">[0] let constructor = %11<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9470 -> node9471 [color="black"]
    node9455_name [shape=none, label=<<font color="black">Branch[9455]</font>>]
    node9455_name -> node9455 [arrowhead=none, color="black", style=dashed]
    node9455 [shape=diamond, label=<<font color="black">(= superclass null)</font>> color="black" fillcolor="white", style=filled]
    node9455 -> node9456 [label=<<font color="black">true</font>> color="black"]
    node9455 -> node9457 [label=<<font color="black">false</font>> color="black"]
    node9472_name [shape=none, label=<<font color="black">Branch[9472]</font>>]
    node9472_name -> node9472 [arrowhead=none, color="black", style=dashed]
    node9472 [shape=diamond, label=<<font color="black">(= constructor ~empty~)</font>> color="black" fillcolor="white", style=filled]
    node9472 -> node9473 [label=<<font color="black">true</font>> color="black"]
    node9472 -> node9476 [label=<<font color="black">false</font>> color="black"]
    node9456_name [shape=none, label=<<font color="black">Block[9456]</font>>]
    node9456_name -> node9456 [arrowhead=none, color="black", style=dashed]
    node9456 [shape=box, label=<<font color="black">[0] let protoParent = null<BR ALIGN="LEFT"/>[1] let constructorParent = @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Function.prototype%&quot;]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9456 -> node9465 [color="black"]
    node9457_name [shape=none, label=<<font color="black">Call[9457]</font>>]
    node9457_name -> node9457 [arrowhead=none, color="black", style=dashed]
    node9457 [shape=cds, label=<<font color="black">%8 = clo&lt;IsConstructor&gt;(superclass)</font>> color="black" fillcolor="white", style=filled]
    node9457 -> node9458 [color="black"]
    node9473_name [shape=none, label=<<font color="black">Block[9473]</font>>]
    node9473_name -> node9473 [arrowhead=none, color="black", style=dashed]
    node9473 [shape=box, label=<<font color="black">[0] let defaultConstructor = clo&lt;ClassTail[0,3].ClassDefinitionEvaluation:clo0&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9473 -> node9474 [color="black"]
    node9476_name [shape=none, label=<<font color="black">Call[9476]</font>>]
    node9476_name -> node9476 [arrowhead=none, color="black", style=dashed]
    node9476 [shape=cds, label=<<font color="black">%13 = constructor-&gt;DefineMethod(proto, constructorParent)</font>> color="black" fillcolor="white", style=filled]
    node9476 -> node9477 [color="black"]
    node9458_name [shape=none, label=<<font color="black">Branch[9458]</font>>]
    node9458_name -> node9458 [arrowhead=none, color="black", style=dashed]
    node9458 [shape=diamond, label=<<font color="black">(= %8 false)</font>> color="black" fillcolor="white", style=filled]
    node9458 -> node9459 [label=<<font color="black">true</font>> color="black"]
    node9458 -> node9460 [label=<<font color="black">false</font>> color="black"]
    node9474_name [shape=none, label=<<font color="black">Call[9474]</font>>]
    node9474_name -> node9474 [arrowhead=none, color="black", style=dashed]
    node9474 [shape=cds, label=<<font color="black">%12 = clo&lt;CreateBuiltinFunction&gt;(defaultConstructor, 0, className, (new [&quot;ConstructorKind&quot;, &quot;SourceText&quot;])[#738], @EXECUTION_STACK[0].Realm, constructorParent)</font>> color="black" fillcolor="white", style=filled]
    node9474 -> node9475 [color="black"]
    node9477_name [shape=none, label=<<font color="black">Block[9477]</font>>]
    node9477_name -> node9477 [arrowhead=none, color="black", style=dashed]
    node9477 [shape=box, label=<<font color="black">[0] let constructorInfo = [! %13]<BR ALIGN="LEFT"/>[1] let F = constructorInfo.Closure<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9477 -> node9478 [color="black"]
    node9459_name [shape=none, label=<<font color="black">Block[9459]</font>>]
    node9459_name -> node9459 [arrowhead=none, color="black", style=dashed]
    node9459 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#736])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9459 -> cluster1696_exit [color="black"]
    node9460_name [shape=none, label=<<font color="black">Call[9460]</font>>]
    node9460_name -> node9460 [arrowhead=none, color="black", style=dashed]
    node9460 [shape=cds, label=<<font color="black">%9 = clo&lt;Get&gt;(superclass, &quot;prototype&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9460 -> node9461 [color="black"]
    node9475_name [shape=none, label=<<font color="black">Block[9475]</font>>]
    node9475_name -> node9475 [arrowhead=none, color="black", style=dashed]
    node9475 [shape=box, label=<<font color="black">[0] let F = %12<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9475 -> node9480 [color="black"]
    node9478_name [shape=none, label=<<font color="black">Call[9478]</font>>]
    node9478_name -> node9478 [arrowhead=none, color="black", style=dashed]
    node9478 [shape=cds, label=<<font color="black">%14 = clo&lt;MakeClassConstructor&gt;(F)</font>> color="black" fillcolor="white", style=filled]
    node9478 -> node9479 [color="black"]
    node9461_name [shape=none, label=<<font color="black">Block[9461]</font>>]
    node9461_name -> node9461 [arrowhead=none, color="black", style=dashed]
    node9461 [shape=box, label=<<font color="black">[0] let protoParent = [? %9]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9461 -> node9462 [color="black"]
    node9480_name [shape=none, label=<<font color="black">Call[9480]</font>>]
    node9480_name -> node9480 [arrowhead=none, color="black", style=dashed]
    node9480 [shape=cds, label=<<font color="black">%16 = clo&lt;MakeConstructor&gt;(F, false, proto)</font>> color="black" fillcolor="white", style=filled]
    node9480 -> node9481 [color="black"]
    node9479_name [shape=none, label=<<font color="black">Call[9479]</font>>]
    node9479_name -> node9479 [arrowhead=none, color="black", style=dashed]
    node9479 [shape=cds, label=<<font color="black">%15 = clo&lt;SetFunctionName&gt;(F, className)</font>> color="black" fillcolor="white", style=filled]
    node9479 -> node9480 [color="black"]
    node9462_name [shape=none, label=<<font color="black">Branch[9462]</font>>]
    node9462_name -> node9462 [arrowhead=none, color="black", style=dashed]
    node9462 [shape=diamond, label=<<font color="black">(! (|| (= (typeof protoParent) @Object) (= (typeof protoParent) @Null)))</font>> color="black" fillcolor="white", style=filled]
    node9462 -> node9463 [label=<<font color="black">true</font>> color="black"]
    node9462 -> node9464 [label=<<font color="black">false</font>> color="black"]
    node9481_name [shape=none, label=<<font color="black">Branch[9481]</font>>]
    node9481_name -> node9481 [arrowhead=none, color="black", style=dashed]
    node9481 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node9481 -> node9482 [label=<<font color="black">true</font>> color="black"]
    node9481 -> node9483 [label=<<font color="black">false</font>> color="black"]
    node9463_name [shape=none, label=<<font color="black">Block[9463]</font>>]
    node9463_name -> node9463 [arrowhead=none, color="black", style=dashed]
    node9463 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#737])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9463 -> cluster1696_exit [color="black"]
    node9464_name [shape=none, label=<<font color="black">Block[9464]</font>>]
    node9464_name -> node9464 [arrowhead=none, color="black", style=dashed]
    node9464 [shape=box, label=<<font color="black">[0] let constructorParent = superclass<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9464 -> node9465 [color="black"]
    node9482_name [shape=none, label=<<font color="black">Block[9482]</font>>]
    node9482_name -> node9482 [arrowhead=none, color="black", style=dashed]
    node9482 [shape=box, label=<<font color="black">[0] F.ConstructorKind = ~derived~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9482 -> node9483 [color="black"]
    node9483_name [shape=none, label=<<font color="black">Call[9483]</font>>]
    node9483_name -> node9483 [arrowhead=none, color="black", style=dashed]
    node9483 [shape=cds, label=<<font color="black">%17 = clo&lt;CreateMethodProperty&gt;(proto, &quot;constructor&quot;, F)</font>> color="black" fillcolor="white", style=filled]
    node9483 -> node9484 [color="black"]
    node9484_name [shape=none, label=<<font color="black">Branch[9484]</font>>]
    node9484_name -> node9484 [arrowhead=none, color="black", style=dashed]
    node9484 [shape=diamond, label=<<font color="black">(= this[1] absent)</font>> color="black" fillcolor="white", style=filled]
    node9484 -> node9485 [label=<<font color="black">true</font>> color="black"]
    node9484 -> node9486 [label=<<font color="black">false</font>> color="black"]
    node9485_name [shape=none, label=<<font color="black">Block[9485]</font>>]
    node9485_name -> node9485 [arrowhead=none, color="black", style=dashed]
    node9485 [shape=box, label=<<font color="black">[0] let elements = (new [])[#739]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9485 -> node9488 [color="black"]
    node9486_name [shape=none, label=<<font color="black">Call[9486]</font>>]
    node9486_name -> node9486 [arrowhead=none, color="black", style=dashed]
    node9486 [shape=cds, label=<<font color="black">%18 = this[1]-&gt;NonConstructorElements()</font>> color="black" fillcolor="white", style=filled]
    node9486 -> node9487 [color="black"]
    node9488_name [shape=none, label=<<font color="black">Block[9488]</font>>]
    node9488_name -> node9488 [arrowhead=none, color="black", style=dashed]
    node9488 [shape=box, label=<<font color="black">[0] let instancePrivateMethods = (new [])[#740]<BR ALIGN="LEFT"/>[1] let staticPrivateMethods = (new [])[#741]<BR ALIGN="LEFT"/>[2] let instanceFields = (new [])[#742]<BR ALIGN="LEFT"/>[3] let staticElements = (new [])[#743]<BR ALIGN="LEFT"/>[4] %20 = elements<BR ALIGN="LEFT"/>[5] %19 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9488 -> node9489 [color="black"]
    node9487_name [shape=none, label=<<font color="black">Block[9487]</font>>]
    node9487_name -> node9487 [arrowhead=none, color="black", style=dashed]
    node9487 [shape=box, label=<<font color="black">[0] let elements = %18<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9487 -> node9488 [color="black"]
    node9489_name [shape=none, label=<<font color="black">Branch[9489]</font>>]
    node9489_name -> node9489 [arrowhead=none, color="black", style=dashed]
    node9489 [shape=diamond, label=<<font color="black">(&lt; %19 %20.length)</font>> color="black" fillcolor="white", style=filled]
    node9489 -> node9490 [label=<<font color="black">true</font>> color="black"]
    node9489 -> node9534 [label=<<font color="black">false</font>> color="black"]
    node9490_name [shape=none, label=<<font color="black">Block[9490]</font>>]
    node9490_name -> node9490 [arrowhead=none, color="black", style=dashed]
    node9490 [shape=box, label=<<font color="black">[0] let e = %20[%19]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9490 -> node9491 [color="black"]
    node9534_name [shape=none, label=<<font color="black">Block[9534]</font>>]
    node9534_name -> node9534 [arrowhead=none, color="black", style=dashed]
    node9534 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = env<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9534 -> node9535 [color="black"]
    node9491_name [shape=none, label=<<font color="black">Call[9491]</font>>]
    node9491_name -> node9491 [arrowhead=none, color="black", style=dashed]
    node9491 [shape=cds, label=<<font color="black">%21 = e-&gt;IsStatic()</font>> color="black" fillcolor="white", style=filled]
    node9491 -> node9492 [color="black"]
    node9535_name [shape=none, label=<<font color="black">Branch[9535]</font>>]
    node9535_name -> node9535 [arrowhead=none, color="black", style=dashed]
    node9535 [shape=diamond, label=<<font color="black">(! (= classBinding undefined))</font>> color="black" fillcolor="white", style=filled]
    node9535 -> node9536 [label=<<font color="black">true</font>> color="black"]
    node9535 -> node9538 [label=<<font color="black">false</font>> color="black"]
    node9492_name [shape=none, label=<<font color="black">Branch[9492]</font>>]
    node9492_name -> node9492 [arrowhead=none, color="black", style=dashed]
    node9492 [shape=diamond, label=<<font color="black">(= %21 false)</font>> color="black" fillcolor="white", style=filled]
    node9492 -> node9493 [label=<<font color="black">true</font>> color="black"]
    node9492 -> node9496 [label=<<font color="black">false</font>> color="black"]
    node9536_name [shape=none, label=<<font color="black">Call[9536]</font>>]
    node9536_name -> node9536 [arrowhead=none, color="black", style=dashed]
    node9536 [shape=cds, label=<<font color="black">%28 = classEnv-&gt;InitializeBinding(classBinding, F)</font>> color="black" fillcolor="white", style=filled]
    node9536 -> node9537 [color="black"]
    node9538_name [shape=none, label=<<font color="black">Block[9538]</font>>]
    node9538_name -> node9538 [arrowhead=none, color="black", style=dashed]
    node9538 [shape=box, label=<<font color="black">[0] F.PrivateMethods = instancePrivateMethods<BR ALIGN="LEFT"/>[1] F.Fields = instanceFields<BR ALIGN="LEFT"/>[2] %30 = staticPrivateMethods<BR ALIGN="LEFT"/>[3] %29 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9538 -> node9539 [color="black"]
    node9493_name [shape=none, label=<<font color="black">Call[9493]</font>>]
    node9493_name -> node9493 [arrowhead=none, color="black", style=dashed]
    node9493 [shape=cds, label=<<font color="black">%22 = e-&gt;ClassElementEvaluation(proto)</font>> color="black" fillcolor="white", style=filled]
    node9493 -> node9494 [color="black"]
    node9496_name [shape=none, label=<<font color="black">Call[9496]</font>>]
    node9496_name -> node9496 [arrowhead=none, color="black", style=dashed]
    node9496 [shape=cds, label=<<font color="black">%24 = e-&gt;ClassElementEvaluation(F)</font>> color="black" fillcolor="white", style=filled]
    node9496 -> node9497 [color="black"]
    node9537_name [shape=none, label=<<font color="black">Block[9537]</font>>]
    node9537_name -> node9537 [arrowhead=none, color="black", style=dashed]
    node9537 [shape=box, label=<<font color="black">[0] [! %28]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9537 -> node9538 [color="black"]
    node9539_name [shape=none, label=<<font color="black">Branch[9539]</font>>]
    node9539_name -> node9539 [arrowhead=none, color="black", style=dashed]
    node9539 [shape=diamond, label=<<font color="black">(&lt; %29 %30.length)</font>> color="black" fillcolor="white", style=filled]
    node9539 -> node9540 [label=<<font color="black">true</font>> color="black"]
    node9539 -> node9543 [label=<<font color="black">false</font>> color="black"]
    node9494_name [shape=none, label=<<font color="black">Call[9494]</font>>]
    node9494_name -> node9494 [arrowhead=none, color="black", style=dashed]
    node9494 [shape=cds, label=<<font color="black">%23 = clo&lt;Completion&gt;(%22)</font>> color="black" fillcolor="white", style=filled]
    node9494 -> node9495 [color="black"]
    node9497_name [shape=none, label=<<font color="black">Call[9497]</font>>]
    node9497_name -> node9497 [arrowhead=none, color="black", style=dashed]
    node9497 [shape=cds, label=<<font color="black">%25 = clo&lt;Completion&gt;(%24)</font>> color="black" fillcolor="white", style=filled]
    node9497 -> node9498 [color="black"]
    node9540_name [shape=none, label=<<font color="black">Block[9540]</font>>]
    node9540_name -> node9540 [arrowhead=none, color="black", style=dashed]
    node9540 [shape=box, label=<<font color="black">[0] let method = %30[%29]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9540 -> node9541 [color="black"]
    node9543_name [shape=none, label=<<font color="black">Block[9543]</font>>]
    node9543_name -> node9543 [arrowhead=none, color="black", style=dashed]
    node9543 [shape=box, label=<<font color="black">[0] %33 = staticElements<BR ALIGN="LEFT"/>[1] %32 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9543 -> node9544 [color="black"]
    node9495_name [shape=none, label=<<font color="black">Block[9495]</font>>]
    node9495_name -> node9495 [arrowhead=none, color="black", style=dashed]
    node9495 [shape=box, label=<<font color="black">[0] let element = %23<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9495 -> node9499 [color="black"]
    node9498_name [shape=none, label=<<font color="black">Block[9498]</font>>]
    node9498_name -> node9498 [arrowhead=none, color="black", style=dashed]
    node9498 [shape=box, label=<<font color="black">[0] let element = %25<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9498 -> node9499 [color="black"]
    node9541_name [shape=none, label=<<font color="black">Call[9541]</font>>]
    node9541_name -> node9541 [arrowhead=none, color="black", style=dashed]
    node9541 [shape=cds, label=<<font color="black">%31 = clo&lt;PrivateMethodOrAccessorAdd&gt;(F, method)</font>> color="black" fillcolor="white", style=filled]
    node9541 -> node9542 [color="black"]
    node9544_name [shape=none, label=<<font color="black">Branch[9544]</font>>]
    node9544_name -> node9544 [arrowhead=none, color="black", style=dashed]
    node9544 [shape=diamond, label=<<font color="black">(&lt; %32 %33.length)</font>> color="black" fillcolor="white", style=filled]
    node9544 -> node9545 [label=<<font color="black">true</font>> color="black"]
    node9544 -> node9557 [label=<<font color="black">false</font>> color="black"]
    node9499_name [shape=none, label=<<font color="black">Branch[9499]</font>>]
    node9499_name -> node9499 [arrowhead=none, color="black", style=dashed]
    node9499 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? element) (! (= element.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node9499 -> node9500 [label=<<font color="black">true</font>> color="black"]
    node9499 -> node9501 [label=<<font color="black">false</font>> color="black"]
    node9542_name [shape=none, label=<<font color="black">Block[9542]</font>>]
    node9542_name -> node9542 [arrowhead=none, color="black", style=dashed]
    node9542 [shape=box, label=<<font color="black">[0] [! %31]<BR ALIGN="LEFT"/>[1] %29 = (+ %29 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9542 -> node9539 [color="black"]
    node9545_name [shape=none, label=<<font color="black">Block[9545]</font>>]
    node9545_name -> node9545 [arrowhead=none, color="black", style=dashed]
    node9545 [shape=box, label=<<font color="black">[0] let elementRecord = %33[%32]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9545 -> node9546 [color="black"]
    node9557_name [shape=none, label=<<font color="black">Block[9557]</font>>]
    node9557_name -> node9557 [arrowhead=none, color="black", style=dashed]
    node9557 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].PrivateEnvironment = outerPrivateEnvironment<BR ALIGN="LEFT"/>[1] return F<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9557 -> cluster1696_exit [color="black"]
    node9500_name [shape=none, label=<<font color="black">Block[9500]</font>>]
    node9500_name -> node9500 [arrowhead=none, color="black", style=dashed]
    node9500 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = env<BR ALIGN="LEFT"/>[1] @EXECUTION_STACK[0].PrivateEnvironment = outerPrivateEnvironment<BR ALIGN="LEFT"/>[2] return [? element]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9500 -> cluster1696_exit [color="black"]
    node9501_name [shape=none, label=<<font color="black">Block[9501]</font>>]
    node9501_name -> node9501 [arrowhead=none, color="black", style=dashed]
    node9501 [shape=box, label=<<font color="black">[0] element = element.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9501 -> node9502 [color="black"]
    node9546_name [shape=none, label=<<font color="black">Branch[9546]</font>>]
    node9546_name -> node9546 [arrowhead=none, color="black", style=dashed]
    node9546 [shape=diamond, label=<<font color="black">(? elementRecord: &quot;ClassFieldDefinitionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9546 -> node9547 [label=<<font color="black">true</font>> color="black"]
    node9546 -> node9550 [label=<<font color="black">false</font>> color="black"]
    node9502_name [shape=none, label=<<font color="black">Branch[9502]</font>>]
    node9502_name -> node9502 [arrowhead=none, color="black", style=dashed]
    node9502 [shape=diamond, label=<<font color="black">(? element: &quot;PrivateElement&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9502 -> node9503 [label=<<font color="black">true</font>> color="black"]
    node9502 -> node9526 [label=<<font color="black">false</font>> color="black"]
    node9547_name [shape=none, label=<<font color="black">Call[9547]</font>>]
    node9547_name -> node9547 [arrowhead=none, color="black", style=dashed]
    node9547 [shape=cds, label=<<font color="black">%34 = clo&lt;DefineField&gt;(F, elementRecord)</font>> color="black" fillcolor="white", style=filled]
    node9547 -> node9548 [color="black"]
    node9550_name [shape=none, label=<<font color="black">Block[9550]</font>>]
    node9550_name -> node9550 [arrowhead=none, color="black", style=dashed]
    node9550 [shape=box, label=<<font color="black">[0] assert (? elementRecord: &quot;ClassStaticBlockDefinitionRecord&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9550 -> node9551 [color="black"]
    node9503_name [shape=none, label=<<font color="black">Block[9503]</font>>]
    node9503_name -> node9503 [arrowhead=none, color="black", style=dashed]
    node9503 [shape=box, label=<<font color="black">[0] assert (|| (= element.Kind ~method~) (= element.Kind ~accessor~))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9503 -> node9504 [color="black"]
    node9526_name [shape=none, label=<<font color="black">Branch[9526]</font>>]
    node9526_name -> node9526 [arrowhead=none, color="black", style=dashed]
    node9526 [shape=diamond, label=<<font color="black">(? element: &quot;ClassFieldDefinitionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9526 -> node9527 [label=<<font color="black">true</font>> color="black"]
    node9526 -> node9531 [label=<<font color="black">false</font>> color="black"]
    node9548_name [shape=none, label=<<font color="black">Call[9548]</font>>]
    node9548_name -> node9548 [arrowhead=none, color="black", style=dashed]
    node9548 [shape=cds, label=<<font color="black">%35 = clo&lt;Completion&gt;(%34)</font>> color="black" fillcolor="white", style=filled]
    node9548 -> node9549 [color="black"]
    node9551_name [shape=none, label=<<font color="black">Call[9551]</font>>]
    node9551_name -> node9551 [arrowhead=none, color="black", style=dashed]
    node9551 [shape=cds, label=<<font color="black">%36 = clo&lt;Call&gt;(elementRecord.BodyFunction, F)</font>> color="black" fillcolor="white", style=filled]
    node9551 -> node9552 [color="black"]
    node9504_name [shape=none, label=<<font color="black">Call[9504]</font>>]
    node9504_name -> node9504 [arrowhead=none, color="black", style=dashed]
    node9504 [shape=cds, label=<<font color="black">%26 = e-&gt;IsStatic()</font>> color="black" fillcolor="white", style=filled]
    node9504 -> node9505 [color="black"]
    node9527_name [shape=none, label=<<font color="black">Call[9527]</font>>]
    node9527_name -> node9527 [arrowhead=none, color="black", style=dashed]
    node9527 [shape=cds, label=<<font color="black">%27 = e-&gt;IsStatic()</font>> color="black" fillcolor="white", style=filled]
    node9527 -> node9528 [color="black"]
    node9531_name [shape=none, label=<<font color="black">Branch[9531]</font>>]
    node9531_name -> node9531 [arrowhead=none, color="black", style=dashed]
    node9531 [shape=diamond, label=<<font color="black">(? element: &quot;ClassStaticBlockDefinitionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9531 -> node9532 [label=<<font color="black">true</font>> color="black"]
    node9531 -> node9533 [label=<<font color="black">false</font>> color="black"]
    node9549_name [shape=none, label=<<font color="black">Block[9549]</font>>]
    node9549_name -> node9549 [arrowhead=none, color="black", style=dashed]
    node9549 [shape=box, label=<<font color="black">[0] let result = %35<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9549 -> node9554 [color="black"]
    node9552_name [shape=none, label=<<font color="black">Call[9552]</font>>]
    node9552_name -> node9552 [arrowhead=none, color="black", style=dashed]
    node9552 [shape=cds, label=<<font color="black">%37 = clo&lt;Completion&gt;(%36)</font>> color="black" fillcolor="white", style=filled]
    node9552 -> node9553 [color="black"]
    node9505_name [shape=none, label=<<font color="black">Branch[9505]</font>>]
    node9505_name -> node9505 [arrowhead=none, color="black", style=dashed]
    node9505 [shape=diamond, label=<<font color="black">(= %26 false)</font>> color="black" fillcolor="white", style=filled]
    node9505 -> node9506 [label=<<font color="black">true</font>> color="black"]
    node9505 -> node9507 [label=<<font color="black">false</font>> color="black"]
    node9528_name [shape=none, label=<<font color="black">Branch[9528]</font>>]
    node9528_name -> node9528 [arrowhead=none, color="black", style=dashed]
    node9528 [shape=diamond, label=<<font color="black">(= %27 false)</font>> color="black" fillcolor="white", style=filled]
    node9528 -> node9529 [label=<<font color="black">true</font>> color="black"]
    node9528 -> node9530 [label=<<font color="black">false</font>> color="black"]
    node9532_name [shape=none, label=<<font color="black">Block[9532]</font>>]
    node9532_name -> node9532 [arrowhead=none, color="black", style=dashed]
    node9532 [shape=box, label=<<font color="black">[0] push staticElements &lt; element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9532 -> node9533 [color="black"]
    node9533_name [shape=none, label=<<font color="black">Block[9533]</font>>]
    node9533_name -> node9533 [arrowhead=none, color="black", style=dashed]
    node9533 [shape=box, label=<<font color="black">[0] %19 = (+ %19 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9533 -> node9489 [color="black"]
    node9554_name [shape=none, label=<<font color="black">Branch[9554]</font>>]
    node9554_name -> node9554 [arrowhead=none, color="black", style=dashed]
    node9554 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? result) (! (= result.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node9554 -> node9555 [label=<<font color="black">true</font>> color="black"]
    node9554 -> node9556 [label=<<font color="black">false</font>> color="black"]
    node9553_name [shape=none, label=<<font color="black">Block[9553]</font>>]
    node9553_name -> node9553 [arrowhead=none, color="black", style=dashed]
    node9553 [shape=box, label=<<font color="black">[0] let result = %37<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9553 -> node9554 [color="black"]
    node9506_name [shape=none, label=<<font color="black">Block[9506]</font>>]
    node9506_name -> node9506 [arrowhead=none, color="black", style=dashed]
    node9506 [shape=box, label=<<font color="black">[0] let container = instancePrivateMethods<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9506 -> node9508 [color="black"]
    node9507_name [shape=none, label=<<font color="black">Block[9507]</font>>]
    node9507_name -> node9507 [arrowhead=none, color="black", style=dashed]
    node9507 [shape=box, label=<<font color="black">[0] let container = staticPrivateMethods<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9507 -> node9508 [color="black"]
    node9529_name [shape=none, label=<<font color="black">Block[9529]</font>>]
    node9529_name -> node9529 [arrowhead=none, color="black", style=dashed]
    node9529 [shape=box, label=<<font color="black">[0] push instanceFields &lt; element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9529 -> node9533 [color="black"]
    node9530_name [shape=none, label=<<font color="black">Block[9530]</font>>]
    node9530_name -> node9530 [arrowhead=none, color="black", style=dashed]
    node9530 [shape=box, label=<<font color="black">[0] push staticElements &lt; element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9530 -> node9533 [color="black"]
    node9555_name [shape=none, label=<<font color="black">Block[9555]</font>>]
    node9555_name -> node9555 [arrowhead=none, color="black", style=dashed]
    node9555 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].PrivateEnvironment = outerPrivateEnvironment<BR ALIGN="LEFT"/>[1] return [? result]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9555 -> cluster1696_exit [color="black"]
    node9556_name [shape=none, label=<<font color="black">Block[9556]</font>>]
    node9556_name -> node9556 [arrowhead=none, color="black", style=dashed]
    node9556 [shape=box, label=<<font color="black">[0] %32 = (+ %32 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9556 -> node9544 [color="black"]
    node9508_name [shape=none, label=<<font color="black">Branch[9508]</font>>]
    node9508_name -> node9508 [arrowhead=none, color="black", style=dashed]
    node9508 [shape=diamond, label=<<font color="black">(contains container element.Key: Unknown[&quot;PrivateElement&quot;] Key)</font>> color="black" fillcolor="white", style=filled]
    node9508 -> node9509 [label=<<font color="black">true</font>> color="black"]
    node9508 -> node9525 [label=<<font color="black">false</font>> color="black"]
    node9509_name [shape=none, label=<<font color="black">Block[9509]</font>>]
    node9509_name -> node9509 [arrowhead=none, color="black", style=dashed]
    node9509 [shape=box, label=<<font color="black">[0] let elems = container<BR ALIGN="LEFT"/>[1] let idx = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9509 -> node9510 [color="black"]
    node9525_name [shape=none, label=<<font color="black">Block[9525]</font>>]
    node9525_name -> node9525 [arrowhead=none, color="black", style=dashed]
    node9525 [shape=box, label=<<font color="black">[0] push container &lt; element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9525 -> node9533 [color="black"]
    node9510_name [shape=none, label=<<font color="black">Branch[9510]</font>>]
    node9510_name -> node9510 [arrowhead=none, color="black", style=dashed]
    node9510 [shape=diamond, label=<<font color="black">(&lt; idx elems.length)</font>> color="black" fillcolor="white", style=filled]
    node9510 -> node9511 [label=<<font color="black">true</font>> color="black"]
    node9510 -> node9515 [label=<<font color="black">false</font>> color="black"]
    node9511_name [shape=none, label=<<font color="black">Block[9511]</font>>]
    node9511_name -> node9511 [arrowhead=none, color="black", style=dashed]
    node9511 [shape=box, label=<<font color="black">[0] let elem = elems[idx]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9511 -> node9512 [color="black"]
    node9515_name [shape=none, label=<<font color="black">Block[9515]</font>>]
    node9515_name -> node9515 [arrowhead=none, color="black", style=dashed]
    node9515 [shape=box, label=<<font color="black">[0] assert (&amp;&amp; (= element.Kind ~accessor~) (= existing.Kind ~accessor~))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9515 -> node9516 [color="black"]
    node9512_name [shape=none, label=<<font color="black">Branch[9512]</font>>]
    node9512_name -> node9512 [arrowhead=none, color="black", style=dashed]
    node9512 [shape=diamond, label=<<font color="black">(= elem.Key element.Key)</font>> color="black" fillcolor="white", style=filled]
    node9512 -> node9513 [label=<<font color="black">true</font>> color="black"]
    node9512 -> node9514 [label=<<font color="black">false</font>> color="black"]
    node9516_name [shape=none, label=<<font color="black">Branch[9516]</font>>]
    node9516_name -> node9516 [arrowhead=none, color="black", style=dashed]
    node9516 [shape=diamond, label=<<font color="black">(= element.Get undefined)</font>> color="black" fillcolor="white", style=filled]
    node9516 -> node9517 [label=<<font color="black">true</font>> color="black"]
    node9516 -> node9518 [label=<<font color="black">false</font>> color="black"]
    node9513_name [shape=none, label=<<font color="black">Block[9513]</font>>]
    node9513_name -> node9513 [arrowhead=none, color="black", style=dashed]
    node9513 [shape=box, label=<<font color="black">[0] let existing = elem<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9513 -> node9514 [color="black"]
    node9514_name [shape=none, label=<<font color="black">Block[9514]</font>>]
    node9514_name -> node9514 [arrowhead=none, color="black", style=dashed]
    node9514 [shape=box, label=<<font color="black">[0] idx = (+ idx 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9514 -> node9510 [color="black"]
    node9517_name [shape=none, label=<<font color="black">Block[9517]</font>>]
    node9517_name -> node9517 [arrowhead=none, color="black", style=dashed]
    node9517 [shape=box, label=<<font color="black">[0] let combined = (new PrivateElement(&quot;Key&quot; -&gt; element.Key, &quot;Kind&quot; -&gt; ~accessor~, &quot;Get&quot; -&gt; existing.Get, &quot;Set&quot; -&gt; element.Set))[#744]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9517 -> node9519 [color="black"]
    node9518_name [shape=none, label=<<font color="black">Block[9518]</font>>]
    node9518_name -> node9518 [arrowhead=none, color="black", style=dashed]
    node9518 [shape=box, label=<<font color="black">[0] let combined = (new PrivateElement(&quot;Key&quot; -&gt; element.Key, &quot;Kind&quot; -&gt; ~accessor~, &quot;Get&quot; -&gt; element.Get, &quot;Set&quot; -&gt; existing.Set))[#745]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9518 -> node9519 [color="black"]
    node9519_name [shape=none, label=<<font color="black">Block[9519]</font>>]
    node9519_name -> node9519 [arrowhead=none, color="black", style=dashed]
    node9519 [shape=box, label=<<font color="black">[0] let elems = container<BR ALIGN="LEFT"/>[1] let idx = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9519 -> node9520 [color="black"]
    node9520_name [shape=none, label=<<font color="black">Branch[9520]</font>>]
    node9520_name -> node9520 [arrowhead=none, color="black", style=dashed]
    node9520 [shape=diamond, label=<<font color="black">(&lt; idx elems.length)</font>> color="black" fillcolor="white", style=filled]
    node9520 -> node9521 [label=<<font color="black">true</font>> color="black"]
    node9520 -> node9533 [label=<<font color="black">false</font>> color="black"]
    node9521_name [shape=none, label=<<font color="black">Block[9521]</font>>]
    node9521_name -> node9521 [arrowhead=none, color="black", style=dashed]
    node9521 [shape=box, label=<<font color="black">[0] let elem = elems[idx]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9521 -> node9522 [color="black"]
    node9522_name [shape=none, label=<<font color="black">Branch[9522]</font>>]
    node9522_name -> node9522 [arrowhead=none, color="black", style=dashed]
    node9522 [shape=diamond, label=<<font color="black">(= elem existing)</font>> color="black" fillcolor="white", style=filled]
    node9522 -> node9523 [label=<<font color="black">true</font>> color="black"]
    node9522 -> node9524 [label=<<font color="black">false</font>> color="black"]
    node9523_name [shape=none, label=<<font color="black">Block[9523]</font>>]
    node9523_name -> node9523 [arrowhead=none, color="black", style=dashed]
    node9523 [shape=box, label=<<font color="black">[0] elems[idx] = combined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9523 -> node9524 [color="black"]
    node9524_name [shape=none, label=<<font color="black">Block[9524]</font>>]
    node9524_name -> node9524 [arrowhead=none, color="black", style=dashed]
    node9524 [shape=box, label=<<font color="black">[0] idx = (+ idx 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9524 -> node9520 [color="black"]
  }
}