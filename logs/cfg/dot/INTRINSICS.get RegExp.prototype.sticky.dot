digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2332 {
    label = "def <BUILTIN>:INTRINSICS.get RegExp.prototype.sticky(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2332_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2332_entry_name -> cluster2332_entry [arrowhead=none, color="black", style=dashed]
    cluster2332_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2332_entry -> node14623 [color="black"]
    cluster2332_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2332_exit_name -> cluster2332_exit [arrowhead=none, color="black", style=dashed]
    cluster2332_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node14623_name [shape=none, label=<<font color="black">Block[14623]</font>>]
    node14623_name -> node14623 [arrowhead=none, color="black", style=dashed]
    node14623 [shape=box, label=<<font color="black">[0] let R = this<BR ALIGN="LEFT"/>[1] let cu = 121cu<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14623 -> node14624 [color="black"]
    node14624_name [shape=none, label=<<font color="black">Call[14624]</font>>]
    node14624_name -> node14624 [arrowhead=none, color="black", style=dashed]
    node14624 [shape=cds, label=<<font color="black">%0 = clo&lt;RegExpHasFlag&gt;(R, cu)</font>> color="black" fillcolor="white", style=filled]
    node14624 -> node14625 [color="black"]
    node14625_name [shape=none, label=<<font color="black">Block[14625]</font>>]
    node14625_name -> node14625 [arrowhead=none, color="black", style=dashed]
    node14625 [shape=box, label=<<font color="black">[0] return [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14625 -> cluster2332_exit [color="black"]
  }
}