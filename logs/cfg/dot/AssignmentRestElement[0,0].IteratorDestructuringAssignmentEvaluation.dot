digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1372 {
    label = "def <SYNTAX>:AssignmentRestElement[0,0].IteratorDestructuringAssignmentEvaluation(this: Ast:AssignmentRestElement[0,0], iteratorRecord: Unknown): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster1372_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1372_entry_name -> cluster1372_entry [arrowhead=none, color="black", style=dashed]
    cluster1372_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1372_entry -> node7049 [color="black"]
    cluster1372_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1372_exit_name -> cluster1372_exit [arrowhead=none, color="black", style=dashed]
    cluster1372_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7049_name [shape=none, label=<<font color="black">Branch[7049]</font>>]
    node7049_name -> node7049 [arrowhead=none, color="black", style=dashed]
    node7049 [shape=diamond, label=<<font color="black">(! (|| (? this[0]: &quot;ObjectLiteral&quot;) (? this[0]: &quot;ArrayLiteral&quot;)))</font>> color="black" fillcolor="white", style=filled]
    node7049 -> node7050 [label=<<font color="black">true</font>> color="black"]
    node7049 -> node7052 [label=<<font color="black">false</font>> color="black"]
    node7050_name [shape=none, label=<<font color="black">Call[7050]</font>>]
    node7050_name -> node7050 [arrowhead=none, color="black", style=dashed]
    node7050 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7050 -> node7051 [color="black"]
    node7052_name [shape=none, label=<<font color="black">Call[7052]</font>>]
    node7052_name -> node7052 [arrowhead=none, color="black", style=dashed]
    node7052 [shape=cds, label=<<font color="black">%1 = clo&lt;ArrayCreate&gt;(0)</font>> color="black" fillcolor="white", style=filled]
    node7052 -> node7053 [color="black"]
    node7051_name [shape=none, label=<<font color="black">Block[7051]</font>>]
    node7051_name -> node7051 [arrowhead=none, color="black", style=dashed]
    node7051 [shape=box, label=<<font color="black">[0] let lref = %0<BR ALIGN="LEFT"/>[1] [? lref]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7051 -> node7052 [color="black"]
    node7053_name [shape=none, label=<<font color="black">Block[7053]</font>>]
    node7053_name -> node7053 [arrowhead=none, color="black", style=dashed]
    node7053 [shape=box, label=<<font color="black">[0] let A = [! %1]<BR ALIGN="LEFT"/>[1] let n = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7053 -> node7054 [color="black"]
    node7054_name [shape=none, label=<<font color="black">Branch[7054]</font>>]
    node7054_name -> node7054 [arrowhead=none, color="black", style=dashed]
    node7054 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white", style=filled]
    node7054 -> node7055 [label=<<font color="black">true</font>> color="black"]
    node7054 -> node7072 [label=<<font color="black">false</font>> color="black"]
    node7055_name [shape=none, label=<<font color="black">Call[7055]</font>>]
    node7055_name -> node7055 [arrowhead=none, color="black", style=dashed]
    node7055 [shape=cds, label=<<font color="black">%2 = clo&lt;IteratorStep&gt;(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node7055 -> node7056 [color="black"]
    node7072_name [shape=none, label=<<font color="black">Branch[7072]</font>>]
    node7072_name -> node7072 [arrowhead=none, color="black", style=dashed]
    node7072 [shape=diamond, label=<<font color="black">(! (|| (? this[0]: &quot;ObjectLiteral&quot;) (? this[0]: &quot;ArrayLiteral&quot;)))</font>> color="black" fillcolor="white", style=filled]
    node7072 -> node7073 [label=<<font color="black">true</font>> color="black"]
    node7072 -> node7075 [label=<<font color="black">false</font>> color="black"]
    node7056_name [shape=none, label=<<font color="black">Call[7056]</font>>]
    node7056_name -> node7056 [arrowhead=none, color="black", style=dashed]
    node7056 [shape=cds, label=<<font color="black">%3 = clo&lt;Completion&gt;(%2)</font>> color="black" fillcolor="white", style=filled]
    node7056 -> node7057 [color="black"]
    node7073_name [shape=none, label=<<font color="black">Call[7073]</font>>]
    node7073_name -> node7073 [arrowhead=none, color="black", style=dashed]
    node7073 [shape=cds, label=<<font color="black">%8 = clo&lt;PutValue&gt;(lref, A)</font>> color="black" fillcolor="white", style=filled]
    node7073 -> node7074 [color="black"]
    node7075_name [shape=none, label=<<font color="black">Block[7075]</font>>]
    node7075_name -> node7075 [arrowhead=none, color="black", style=dashed]
    node7075 [shape=box, label=<<font color="black">[0] let nestedAssignmentPattern = (parse this[0] (nt |AssignmentPattern|[]))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7075 -> node7076 [color="black"]
    node7057_name [shape=none, label=<<font color="black">Block[7057]</font>>]
    node7057_name -> node7057 [arrowhead=none, color="black", style=dashed]
    node7057 [shape=box, label=<<font color="black">[0] let next = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7057 -> node7058 [color="black"]
    node7074_name [shape=none, label=<<font color="black">Block[7074]</font>>]
    node7074_name -> node7074 [arrowhead=none, color="black", style=dashed]
    node7074 [shape=box, label=<<font color="black">[0] return [? %8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7074 -> cluster1372_exit [color="black"]
    node7076_name [shape=none, label=<<font color="black">Call[7076]</font>>]
    node7076_name -> node7076 [arrowhead=none, color="black", style=dashed]
    node7076 [shape=cds, label=<<font color="black">%9 = nestedAssignmentPattern-&gt;DestructuringAssignmentEvaluation(A)</font>> color="black" fillcolor="white", style=filled]
    node7076 -> node7077 [color="black"]
    node7058_name [shape=none, label=<<font color="black">Branch[7058]</font>>]
    node7058_name -> node7058 [arrowhead=none, color="black", style=dashed]
    node7058 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? next) (! (= next.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node7058 -> node7059 [label=<<font color="black">true</font>> color="black"]
    node7058 -> node7060 [label=<<font color="black">false</font>> color="black"]
    node7077_name [shape=none, label=<<font color="black">Block[7077]</font>>]
    node7077_name -> node7077 [arrowhead=none, color="black", style=dashed]
    node7077 [shape=box, label=<<font color="black">[0] return [? %9]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7077 -> cluster1372_exit [color="black"]
    node7059_name [shape=none, label=<<font color="black">Block[7059]</font>>]
    node7059_name -> node7059 [arrowhead=none, color="black", style=dashed]
    node7059 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7059 -> node7060 [color="black"]
    node7060_name [shape=none, label=<<font color="black">Block[7060]</font>>]
    node7060_name -> node7060 [arrowhead=none, color="black", style=dashed]
    node7060 [shape=box, label=<<font color="black">[0] [? next]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7060 -> node7061 [color="black"]
    node7061_name [shape=none, label=<<font color="black">Branch[7061]</font>>]
    node7061_name -> node7061 [arrowhead=none, color="black", style=dashed]
    node7061 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white", style=filled]
    node7061 -> node7062 [label=<<font color="black">true</font>> color="black"]
    node7061 -> node7063 [label=<<font color="black">false</font>> color="black"]
    node7062_name [shape=none, label=<<font color="black">Block[7062]</font>>]
    node7062_name -> node7062 [arrowhead=none, color="black", style=dashed]
    node7062 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7062 -> node7054 [color="black"]
    node7063_name [shape=none, label=<<font color="black">Call[7063]</font>>]
    node7063_name -> node7063 [arrowhead=none, color="black", style=dashed]
    node7063 [shape=cds, label=<<font color="black">%4 = clo&lt;IteratorValue&gt;(next)</font>> color="black" fillcolor="white", style=filled]
    node7063 -> node7064 [color="black"]
    node7064_name [shape=none, label=<<font color="black">Call[7064]</font>>]
    node7064_name -> node7064 [arrowhead=none, color="black", style=dashed]
    node7064 [shape=cds, label=<<font color="black">%5 = clo&lt;Completion&gt;(%4)</font>> color="black" fillcolor="white", style=filled]
    node7064 -> node7065 [color="black"]
    node7065_name [shape=none, label=<<font color="black">Block[7065]</font>>]
    node7065_name -> node7065 [arrowhead=none, color="black", style=dashed]
    node7065 [shape=box, label=<<font color="black">[0] let nextValue = %5<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7065 -> node7066 [color="black"]
    node7066_name [shape=none, label=<<font color="black">Branch[7066]</font>>]
    node7066_name -> node7066 [arrowhead=none, color="black", style=dashed]
    node7066 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? nextValue) (! (= nextValue.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node7066 -> node7067 [label=<<font color="black">true</font>> color="black"]
    node7066 -> node7068 [label=<<font color="black">false</font>> color="black"]
    node7067_name [shape=none, label=<<font color="black">Block[7067]</font>>]
    node7067_name -> node7067 [arrowhead=none, color="black", style=dashed]
    node7067 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7067 -> node7068 [color="black"]
    node7068_name [shape=none, label=<<font color="black">Block[7068]</font>>]
    node7068_name -> node7068 [arrowhead=none, color="black", style=dashed]
    node7068 [shape=box, label=<<font color="black">[0] [? nextValue]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7068 -> node7069 [color="black"]
    node7069_name [shape=none, label=<<font color="black">Call[7069]</font>>]
    node7069_name -> node7069 [arrowhead=none, color="black", style=dashed]
    node7069 [shape=cds, label=<<font color="black">%6 = clo&lt;ToString&gt;(([number] n))</font>> color="black" fillcolor="white", style=filled]
    node7069 -> node7070 [color="black"]
    node7070_name [shape=none, label=<<font color="black">Call[7070]</font>>]
    node7070_name -> node7070 [arrowhead=none, color="black", style=dashed]
    node7070 [shape=cds, label=<<font color="black">%7 = clo&lt;CreateDataPropertyOrThrow&gt;(A, [! %6], nextValue)</font>> color="black" fillcolor="white", style=filled]
    node7070 -> node7071 [color="black"]
    node7071_name [shape=none, label=<<font color="black">Block[7071]</font>>]
    node7071_name -> node7071 [arrowhead=none, color="black", style=dashed]
    node7071 [shape=box, label=<<font color="black">[0] [! %7]<BR ALIGN="LEFT"/>[1] n = (+ n 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7071 -> node7054 [color="black"]
  }
}