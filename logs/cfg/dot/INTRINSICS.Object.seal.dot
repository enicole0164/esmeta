digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2018 {
    label = "def <BUILTIN>:INTRINSICS.Object.seal(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2018_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2018_entry_name -> cluster2018_entry [arrowhead=none, color="black", style=dashed]
    cluster2018_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2018_entry -> node11290 [color="black"]
    cluster2018_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2018_exit_name -> cluster2018_exit [arrowhead=none, color="black", style=dashed]
    cluster2018_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11290_name [shape=none, label=<<font color="black">Branch[11290]</font>>]
    node11290_name -> node11290 [arrowhead=none, color="black", style=dashed]
    node11290 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11290 -> node11291 [label=<<font color="black">true</font>> color="black"]
    node11290 -> node11292 [label=<<font color="black">false</font>> color="black"]
    node11291_name [shape=none, label=<<font color="black">Block[11291]</font>>]
    node11291_name -> node11291 [arrowhead=none, color="black", style=dashed]
    node11291 [shape=box, label=<<font color="black">[0] let O = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11291 -> node11293 [color="black"]
    node11292_name [shape=none, label=<<font color="black">Block[11292]</font>>]
    node11292_name -> node11292 [arrowhead=none, color="black", style=dashed]
    node11292 [shape=box, label=<<font color="black">[0] let O = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11292 -> node11293 [color="black"]
    node11293_name [shape=none, label=<<font color="black">Branch[11293]</font>>]
    node11293_name -> node11293 [arrowhead=none, color="black", style=dashed]
    node11293 [shape=diamond, label=<<font color="black">(! (= (typeof O) @Object))</font>> color="black" fillcolor="white", style=filled]
    node11293 -> node11294 [label=<<font color="black">true</font>> color="black"]
    node11293 -> node11295 [label=<<font color="black">false</font>> color="black"]
    node11294_name [shape=none, label=<<font color="black">Block[11294]</font>>]
    node11294_name -> node11294 [arrowhead=none, color="black", style=dashed]
    node11294 [shape=box, label=<<font color="black">[0] return O<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11294 -> cluster2018_exit [color="black"]
    node11295_name [shape=none, label=<<font color="black">Call[11295]</font>>]
    node11295_name -> node11295 [arrowhead=none, color="black", style=dashed]
    node11295 [shape=cds, label=<<font color="black">%0 = clo&lt;SetIntegrityLevel&gt;(O, ~sealed~)</font>> color="black" fillcolor="white", style=filled]
    node11295 -> node11296 [color="black"]
    node11296_name [shape=none, label=<<font color="black">Block[11296]</font>>]
    node11296_name -> node11296 [arrowhead=none, color="black", style=dashed]
    node11296 [shape=box, label=<<font color="black">[0] let status = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11296 -> node11297 [color="black"]
    node11297_name [shape=none, label=<<font color="black">Branch[11297]</font>>]
    node11297_name -> node11297 [arrowhead=none, color="black", style=dashed]
    node11297 [shape=diamond, label=<<font color="black">(= status false)</font>> color="black" fillcolor="white", style=filled]
    node11297 -> node11298 [label=<<font color="black">true</font>> color="black"]
    node11297 -> node11299 [label=<<font color="black">false</font>> color="black"]
    node11298_name [shape=none, label=<<font color="black">Block[11298]</font>>]
    node11298_name -> node11298 [arrowhead=none, color="black", style=dashed]
    node11298 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#897])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11298 -> cluster2018_exit [color="black"]
    node11299_name [shape=none, label=<<font color="black">Block[11299]</font>>]
    node11299_name -> node11299 [arrowhead=none, color="black", style=dashed]
    node11299 [shape=box, label=<<font color="black">[0] return O<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11299 -> cluster2018_exit [color="black"]
  }
}