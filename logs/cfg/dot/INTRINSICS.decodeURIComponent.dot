digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1992 {
    label = "def <BUILTIN>:INTRINSICS.decodeURIComponent(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster1992_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1992_entry_name -> cluster1992_entry [arrowhead=none, color="black", style=dashed]
    cluster1992_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1992_entry -> node11006 [color="black"]
    cluster1992_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1992_exit_name -> cluster1992_exit [arrowhead=none, color="black", style=dashed]
    cluster1992_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11006_name [shape=none, label=<<font color="black">Branch[11006]</font>>]
    node11006_name -> node11006 [arrowhead=none, color="black", style=dashed]
    node11006 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11006 -> node11007 [label=<<font color="black">true</font>> color="black"]
    node11006 -> node11008 [label=<<font color="black">false</font>> color="black"]
    node11007_name [shape=none, label=<<font color="black">Block[11007]</font>>]
    node11007_name -> node11007 [arrowhead=none, color="black", style=dashed]
    node11007 [shape=box, label=<<font color="black">[0] let encodedURIComponent = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11007 -> node11009 [color="black"]
    node11008_name [shape=none, label=<<font color="black">Block[11008]</font>>]
    node11008_name -> node11008 [arrowhead=none, color="black", style=dashed]
    node11008 [shape=box, label=<<font color="black">[0] let encodedURIComponent = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11008 -> node11009 [color="black"]
    node11009_name [shape=none, label=<<font color="black">Call[11009]</font>>]
    node11009_name -> node11009 [arrowhead=none, color="black", style=dashed]
    node11009 [shape=cds, label=<<font color="black">%0 = clo&lt;ToString&gt;(encodedURIComponent)</font>> color="black" fillcolor="white", style=filled]
    node11009 -> node11010 [color="black"]
    node11010_name [shape=none, label=<<font color="black">Block[11010]</font>>]
    node11010_name -> node11010 [arrowhead=none, color="black", style=dashed]
    node11010 [shape=box, label=<<font color="black">[0] let componentString = [? %0]<BR ALIGN="LEFT"/>[1] let reservedURIComponentSet = &quot;&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11010 -> node11011 [color="black"]
    node11011_name [shape=none, label=<<font color="black">Call[11011]</font>>]
    node11011_name -> node11011 [arrowhead=none, color="black", style=dashed]
    node11011 [shape=cds, label=<<font color="black">%1 = clo&lt;Decode&gt;(componentString, reservedURIComponentSet)</font>> color="black" fillcolor="white", style=filled]
    node11011 -> node11012 [color="black"]
    node11012_name [shape=none, label=<<font color="black">Block[11012]</font>>]
    node11012_name -> node11012 [arrowhead=none, color="black", style=dashed]
    node11012 [shape=box, label=<<font color="black">[0] return [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11012 -> cluster1992_exit [color="black"]
  }
}