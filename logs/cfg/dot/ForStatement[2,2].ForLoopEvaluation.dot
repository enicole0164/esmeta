digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1429 {
    label = "def <SYNTAX>:ForStatement[2,2].ForLoopEvaluation(this: Ast:ForStatement[2,2], labelSet: Unknown): Normal[ESValue] | Abrupt"
    style = rounded
    cluster1429_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1429_entry_name -> cluster1429_entry [arrowhead=none, color="black", style=dashed]
    cluster1429_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1429_entry -> node7524 [color="black"]
    cluster1429_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1429_exit_name -> cluster1429_exit [arrowhead=none, color="black", style=dashed]
    cluster1429_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7524_name [shape=none, label=<<font color="black">Block[7524]</font>>]
    node7524_name -> node7524 [arrowhead=none, color="black", style=dashed]
    node7524 [shape=box, label=<<font color="black">[0] let oldEnv = @EXECUTION_STACK[0].LexicalEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7524 -> node7525 [color="black"]
    node7525_name [shape=none, label=<<font color="black">Call[7525]</font>>]
    node7525_name -> node7525 [arrowhead=none, color="black", style=dashed]
    node7525 [shape=cds, label=<<font color="black">%0 = clo&lt;NewDeclarativeEnvironment&gt;(oldEnv)</font>> color="black" fillcolor="white", style=filled]
    node7525 -> node7526 [color="black"]
    node7526_name [shape=none, label=<<font color="black">Block[7526]</font>>]
    node7526_name -> node7526 [arrowhead=none, color="black", style=dashed]
    node7526 [shape=box, label=<<font color="black">[0] let loopEnv = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7526 -> node7527 [color="black"]
    node7527_name [shape=none, label=<<font color="black">Call[7527]</font>>]
    node7527_name -> node7527 [arrowhead=none, color="black", style=dashed]
    node7527 [shape=cds, label=<<font color="black">%1 = this[0]-&gt;IsConstantDeclaration()</font>> color="black" fillcolor="white", style=filled]
    node7527 -> node7528 [color="black"]
    node7528_name [shape=none, label=<<font color="black">Block[7528]</font>>]
    node7528_name -> node7528 [arrowhead=none, color="black", style=dashed]
    node7528 [shape=box, label=<<font color="black">[0] let isConst = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7528 -> node7529 [color="black"]
    node7529_name [shape=none, label=<<font color="black">Call[7529]</font>>]
    node7529_name -> node7529 [arrowhead=none, color="black", style=dashed]
    node7529 [shape=cds, label=<<font color="black">%2 = this[0]-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node7529 -> node7530 [color="black"]
    node7530_name [shape=none, label=<<font color="black">Block[7530]</font>>]
    node7530_name -> node7530 [arrowhead=none, color="black", style=dashed]
    node7530 [shape=box, label=<<font color="black">[0] let boundNames = %2<BR ALIGN="LEFT"/>[1] %4 = boundNames<BR ALIGN="LEFT"/>[2] %3 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7530 -> node7531 [color="black"]
    node7531_name [shape=none, label=<<font color="black">Branch[7531]</font>>]
    node7531_name -> node7531 [arrowhead=none, color="black", style=dashed]
    node7531 [shape=diamond, label=<<font color="black">(&lt; %3 %4.length)</font>> color="black" fillcolor="white", style=filled]
    node7531 -> node7532 [label=<<font color="black">true</font>> color="black"]
    node7531 -> node7539 [label=<<font color="black">false</font>> color="black"]
    node7532_name [shape=none, label=<<font color="black">Block[7532]</font>>]
    node7532_name -> node7532 [arrowhead=none, color="black", style=dashed]
    node7532 [shape=box, label=<<font color="black">[0] let dn = %4[%3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7532 -> node7533 [color="black"]
    node7539_name [shape=none, label=<<font color="black">Block[7539]</font>>]
    node7539_name -> node7539 [arrowhead=none, color="black", style=dashed]
    node7539 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = loopEnv<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7539 -> node7540 [color="black"]
    node7533_name [shape=none, label=<<font color="black">Branch[7533]</font>>]
    node7533_name -> node7533 [arrowhead=none, color="black", style=dashed]
    node7533 [shape=diamond, label=<<font color="black">(= isConst true)</font>> color="black" fillcolor="white", style=filled]
    node7533 -> node7534 [label=<<font color="black">true</font>> color="black"]
    node7533 -> node7536 [label=<<font color="black">false</font>> color="black"]
    node7540_name [shape=none, label=<<font color="black">Call[7540]</font>>]
    node7540_name -> node7540 [arrowhead=none, color="black", style=dashed]
    node7540 [shape=cds, label=<<font color="black">%7 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7540 -> node7541 [color="black"]
    node7534_name [shape=none, label=<<font color="black">Call[7534]</font>>]
    node7534_name -> node7534 [arrowhead=none, color="black", style=dashed]
    node7534 [shape=cds, label=<<font color="black">%5 = loopEnv-&gt;CreateImmutableBinding(dn, true)</font>> color="black" fillcolor="white", style=filled]
    node7534 -> node7535 [color="black"]
    node7536_name [shape=none, label=<<font color="black">Call[7536]</font>>]
    node7536_name -> node7536 [arrowhead=none, color="black", style=dashed]
    node7536 [shape=cds, label=<<font color="black">%6 = loopEnv-&gt;CreateMutableBinding(dn, false)</font>> color="black" fillcolor="white", style=filled]
    node7536 -> node7537 [color="black"]
    node7541_name [shape=none, label=<<font color="black">Block[7541]</font>>]
    node7541_name -> node7541 [arrowhead=none, color="black", style=dashed]
    node7541 [shape=box, label=<<font color="black">[0] let forDcl = %7<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7541 -> node7542 [color="black"]
    node7535_name [shape=none, label=<<font color="black">Block[7535]</font>>]
    node7535_name -> node7535 [arrowhead=none, color="black", style=dashed]
    node7535 [shape=box, label=<<font color="black">[0] [! %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7535 -> node7538 [color="black"]
    node7537_name [shape=none, label=<<font color="black">Block[7537]</font>>]
    node7537_name -> node7537 [arrowhead=none, color="black", style=dashed]
    node7537 [shape=box, label=<<font color="black">[0] [! %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7537 -> node7538 [color="black"]
    node7542_name [shape=none, label=<<font color="black">Branch[7542]</font>>]
    node7542_name -> node7542 [arrowhead=none, color="black", style=dashed]
    node7542 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? forDcl) (! (= forDcl.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node7542 -> node7543 [label=<<font color="black">true</font>> color="black"]
    node7542 -> node7544 [label=<<font color="black">false</font>> color="black"]
    node7538_name [shape=none, label=<<font color="black">Block[7538]</font>>]
    node7538_name -> node7538 [arrowhead=none, color="black", style=dashed]
    node7538 [shape=box, label=<<font color="black">[0] %3 = (+ %3 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7538 -> node7531 [color="black"]
    node7543_name [shape=none, label=<<font color="black">Block[7543]</font>>]
    node7543_name -> node7543 [arrowhead=none, color="black", style=dashed]
    node7543 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = oldEnv<BR ALIGN="LEFT"/>[1] return [? forDcl]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7543 -> cluster1429_exit [color="black"]
    node7544_name [shape=none, label=<<font color="black">Branch[7544]</font>>]
    node7544_name -> node7544 [arrowhead=none, color="black", style=dashed]
    node7544 [shape=diamond, label=<<font color="black">(= isConst false)</font>> color="black" fillcolor="white", style=filled]
    node7544 -> node7545 [label=<<font color="black">true</font>> color="black"]
    node7544 -> node7546 [label=<<font color="black">false</font>> color="black"]
    node7545_name [shape=none, label=<<font color="black">Block[7545]</font>>]
    node7545_name -> node7545 [arrowhead=none, color="black", style=dashed]
    node7545 [shape=box, label=<<font color="black">[0] let perIterationLets = boundNames<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7545 -> node7547 [color="black"]
    node7546_name [shape=none, label=<<font color="black">Block[7546]</font>>]
    node7546_name -> node7546 [arrowhead=none, color="black", style=dashed]
    node7546 [shape=box, label=<<font color="black">[0] let perIterationLets = (new [])[#618]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7546 -> node7547 [color="black"]
    node7547_name [shape=none, label=<<font color="black">Call[7547]</font>>]
    node7547_name -> node7547 [arrowhead=none, color="black", style=dashed]
    node7547 [shape=cds, label=<<font color="black">%8 = clo&lt;ForBodyEvaluation&gt;(this[1], this[2], this[3], perIterationLets, labelSet)</font>> color="black" fillcolor="white", style=filled]
    node7547 -> node7548 [color="black"]
    node7548_name [shape=none, label=<<font color="black">Call[7548]</font>>]
    node7548_name -> node7548 [arrowhead=none, color="black", style=dashed]
    node7548 [shape=cds, label=<<font color="black">%9 = clo&lt;Completion&gt;(%8)</font>> color="black" fillcolor="white", style=filled]
    node7548 -> node7549 [color="black"]
    node7549_name [shape=none, label=<<font color="black">Block[7549]</font>>]
    node7549_name -> node7549 [arrowhead=none, color="black", style=dashed]
    node7549 [shape=box, label=<<font color="black">[0] let bodyResult = %9<BR ALIGN="LEFT"/>[1] @EXECUTION_STACK[0].LexicalEnvironment = oldEnv<BR ALIGN="LEFT"/>[2] return [? bodyResult]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7549 -> cluster1429_exit [color="black"]
  }
}