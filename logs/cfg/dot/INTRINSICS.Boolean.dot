digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2040 {
    label = "def <BUILTIN>:INTRINSICS.Boolean(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2040_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2040_entry_name -> cluster2040_entry [arrowhead=none, color="black", style=dashed]
    cluster2040_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2040_entry -> node11626 [color="black"]
    cluster2040_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2040_exit_name -> cluster2040_exit [arrowhead=none, color="black", style=dashed]
    cluster2040_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11626_name [shape=none, label=<<font color="black">Branch[11626]</font>>]
    node11626_name -> node11626 [arrowhead=none, color="black", style=dashed]
    node11626 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11626 -> node11627 [label=<<font color="black">true</font>> color="black"]
    node11626 -> node11628 [label=<<font color="black">false</font>> color="black"]
    node11627_name [shape=none, label=<<font color="black">Block[11627]</font>>]
    node11627_name -> node11627 [arrowhead=none, color="black", style=dashed]
    node11627 [shape=box, label=<<font color="black">[0] let value = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11627 -> node11629 [color="black"]
    node11628_name [shape=none, label=<<font color="black">Block[11628]</font>>]
    node11628_name -> node11628 [arrowhead=none, color="black", style=dashed]
    node11628 [shape=box, label=<<font color="black">[0] let value = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11628 -> node11629 [color="black"]
    node11629_name [shape=none, label=<<font color="black">Call[11629]</font>>]
    node11629_name -> node11629 [arrowhead=none, color="black", style=dashed]
    node11629 [shape=cds, label=<<font color="black">%0 = clo&lt;ToBoolean&gt;(value)</font>> color="black" fillcolor="white", style=filled]
    node11629 -> node11630 [color="black"]
    node11630_name [shape=none, label=<<font color="black">Block[11630]</font>>]
    node11630_name -> node11630 [arrowhead=none, color="black", style=dashed]
    node11630 [shape=box, label=<<font color="black">[0] let b = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11630 -> node11631 [color="black"]
    node11631_name [shape=none, label=<<font color="black">Branch[11631]</font>>]
    node11631_name -> node11631 [arrowhead=none, color="black", style=dashed]
    node11631 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white", style=filled]
    node11631 -> node11632 [label=<<font color="black">true</font>> color="black"]
    node11631 -> node11633 [label=<<font color="black">false</font>> color="black"]
    node11632_name [shape=none, label=<<font color="black">Block[11632]</font>>]
    node11632_name -> node11632 [arrowhead=none, color="black", style=dashed]
    node11632 [shape=box, label=<<font color="black">[0] return b<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11632 -> cluster2040_exit [color="black"]
    node11633_name [shape=none, label=<<font color="black">Call[11633]</font>>]
    node11633_name -> node11633 [arrowhead=none, color="black", style=dashed]
    node11633 [shape=cds, label=<<font color="black">%1 = clo&lt;OrdinaryCreateFromConstructor&gt;(NewTarget, &quot;%Boolean.prototype%&quot;, (new [&quot;BooleanData&quot;])[#914])</font>> color="black" fillcolor="white", style=filled]
    node11633 -> node11634 [color="black"]
    node11634_name [shape=none, label=<<font color="black">Block[11634]</font>>]
    node11634_name -> node11634 [arrowhead=none, color="black", style=dashed]
    node11634 [shape=box, label=<<font color="black">[0] let O = [? %1]<BR ALIGN="LEFT"/>[1] O.BooleanData = b<BR ALIGN="LEFT"/>[2] return O<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11634 -> cluster2040_exit [color="black"]
  }
}