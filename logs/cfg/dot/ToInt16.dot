digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster101 {
    label = "def ToInt16(argument: Unknown): Unknown["EitherANormalCompletionContainingAnIntegralNumberOrAnAbruptCompletion"]"
    style = rounded
    cluster101_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster101_entry_name -> cluster101_entry [arrowhead=none, color="black", style=dashed]
    cluster101_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster101_entry -> node761 [color="black"]
    cluster101_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster101_exit_name -> cluster101_exit [arrowhead=none, color="black", style=dashed]
    cluster101_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node761_name [shape=none, label=<<font color="black">Call[761]</font>>]
    node761_name -> node761 [arrowhead=none, color="black", style=dashed]
    node761 [shape=cds, label=<<font color="black">%0 = clo&lt;ToNumber&gt;(argument)</font>> color="black" fillcolor="white", style=filled]
    node761 -> node762 [color="black"]
    node762_name [shape=none, label=<<font color="black">Block[762]</font>>]
    node762_name -> node762 [arrowhead=none, color="black", style=dashed]
    node762 [shape=box, label=<<font color="black">[0] let number = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node762 -> node763 [color="black"]
    node763_name [shape=none, label=<<font color="black">Branch[763]</font>>]
    node763_name -> node763 [arrowhead=none, color="black", style=dashed]
    node763 [shape=diamond, label=<<font color="black">(|| (|| (|| (|| (= number NaN) (= number 0.0f)) (= number -0.0f)) (= number +INF)) (= number -INF))</font>> color="black" fillcolor="white", style=filled]
    node763 -> node764 [label=<<font color="black">true</font>> color="black"]
    node763 -> node765 [label=<<font color="black">false</font>> color="black"]
    node764_name [shape=none, label=<<font color="black">Block[764]</font>>]
    node764_name -> node764 [arrowhead=none, color="black", style=dashed]
    node764 [shape=box, label=<<font color="black">[0] return 0.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node764 -> cluster101_exit [color="black"]
    node765_name [shape=none, label=<<font color="black">Block[765]</font>>]
    node765_name -> node765 [arrowhead=none, color="black", style=dashed]
    node765 [shape=box, label=<<font color="black">[0] let int = (floor (abs ([math] number)))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node765 -> node766 [color="black"]
    node766_name [shape=none, label=<<font color="black">Branch[766]</font>>]
    node766_name -> node766 [arrowhead=none, color="black", style=dashed]
    node766 [shape=diamond, label=<<font color="black">(&lt; number 0.0f)</font>> color="black" fillcolor="white", style=filled]
    node766 -> node767 [label=<<font color="black">true</font>> color="black"]
    node766 -> node768 [label=<<font color="black">false</font>> color="black"]
    node767_name [shape=none, label=<<font color="black">Block[767]</font>>]
    node767_name -> node767 [arrowhead=none, color="black", style=dashed]
    node767 [shape=box, label=<<font color="black">[0] int = (* -1 int)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node767 -> node768 [color="black"]
    node768_name [shape=none, label=<<font color="black">Block[768]</font>>]
    node768_name -> node768 [arrowhead=none, color="black", style=dashed]
    node768 [shape=box, label=<<font color="black">[0] let int16bit = (% int (** 2 16))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node768 -> node769 [color="black"]
    node769_name [shape=none, label=<<font color="black">Branch[769]</font>>]
    node769_name -> node769 [arrowhead=none, color="black", style=dashed]
    node769 [shape=diamond, label=<<font color="black">(! (&lt; int16bit (** 2 15)))</font>> color="black" fillcolor="white", style=filled]
    node769 -> node770 [label=<<font color="black">true</font>> color="black"]
    node769 -> node771 [label=<<font color="black">false</font>> color="black"]
    node770_name [shape=none, label=<<font color="black">Block[770]</font>>]
    node770_name -> node770 [arrowhead=none, color="black", style=dashed]
    node770 [shape=box, label=<<font color="black">[0] return ([number] (- int16bit (** 2 16)))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node770 -> cluster101_exit [color="black"]
    node771_name [shape=none, label=<<font color="black">Block[771]</font>>]
    node771_name -> node771 [arrowhead=none, color="black", style=dashed]
    node771 [shape=box, label=<<font color="black">[0] return ([number] int16bit)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node771 -> cluster101_exit [color="black"]
  }
}