digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2585 {
    label = "def <BUILTIN>:INTRINSICS.Promise.allSettled(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2585_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2585_entry_name -> cluster2585_entry [arrowhead=none, color="black", style=dashed]
    cluster2585_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2585_entry -> node18931 [color="black"]
    cluster2585_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2585_exit_name -> cluster2585_exit [arrowhead=none, color="black", style=dashed]
    cluster2585_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node18931_name [shape=none, label=<<font color="black">Branch[18931]</font>>]
    node18931_name -> node18931 [arrowhead=none, color="black", style=dashed]
    node18931 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node18931 -> node18932 [label=<<font color="black">true</font>> color="black"]
    node18931 -> node18933 [label=<<font color="black">false</font>> color="black"]
    node18932_name [shape=none, label=<<font color="black">Block[18932]</font>>]
    node18932_name -> node18932 [arrowhead=none, color="black", style=dashed]
    node18932 [shape=box, label=<<font color="black">[0] let iterable = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18932 -> node18934 [color="black"]
    node18933_name [shape=none, label=<<font color="black">Block[18933]</font>>]
    node18933_name -> node18933 [arrowhead=none, color="black", style=dashed]
    node18933 [shape=box, label=<<font color="black">[0] let iterable = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18933 -> node18934 [color="black"]
    node18934_name [shape=none, label=<<font color="black">Block[18934]</font>>]
    node18934_name -> node18934 [arrowhead=none, color="black", style=dashed]
    node18934 [shape=box, label=<<font color="black">[0] let C = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18934 -> node18935 [color="black"]
    node18935_name [shape=none, label=<<font color="black">Call[18935]</font>>]
    node18935_name -> node18935 [arrowhead=none, color="black", style=dashed]
    node18935 [shape=cds, label=<<font color="black">%0 = clo&lt;NewPromiseCapability&gt;(C)</font>> color="black" fillcolor="white", style=filled]
    node18935 -> node18936 [color="black"]
    node18936_name [shape=none, label=<<font color="black">Block[18936]</font>>]
    node18936_name -> node18936 [arrowhead=none, color="black", style=dashed]
    node18936 [shape=box, label=<<font color="black">[0] let promiseCapability = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18936 -> node18937 [color="black"]
    node18937_name [shape=none, label=<<font color="black">Call[18937]</font>>]
    node18937_name -> node18937 [arrowhead=none, color="black", style=dashed]
    node18937 [shape=cds, label=<<font color="black">%1 = clo&lt;GetPromiseResolve&gt;(C)</font>> color="black" fillcolor="white", style=filled]
    node18937 -> node18938 [color="black"]
    node18938_name [shape=none, label=<<font color="black">Call[18938]</font>>]
    node18938_name -> node18938 [arrowhead=none, color="black", style=dashed]
    node18938 [shape=cds, label=<<font color="black">%2 = clo&lt;Completion&gt;(%1)</font>> color="black" fillcolor="white", style=filled]
    node18938 -> node18939 [color="black"]
    node18939_name [shape=none, label=<<font color="black">Block[18939]</font>>]
    node18939_name -> node18939 [arrowhead=none, color="black", style=dashed]
    node18939 [shape=box, label=<<font color="black">[0] let promiseResolve = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18939 -> node18940 [color="black"]
    node18940_name [shape=none, label=<<font color="black">Branch[18940]</font>>]
    node18940_name -> node18940 [arrowhead=none, color="black", style=dashed]
    node18940 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? promiseResolve) (! (= promiseResolve.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node18940 -> node18941 [label=<<font color="black">true</font>> color="black"]
    node18940 -> node18943 [label=<<font color="black">false</font>> color="black"]
    node18941_name [shape=none, label=<<font color="black">Call[18941]</font>>]
    node18941_name -> node18941 [arrowhead=none, color="black", style=dashed]
    node18941 [shape=cds, label=<<font color="black">%3 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [promiseResolve.Value])[#1271])</font>> color="black" fillcolor="white", style=filled]
    node18941 -> node18942 [color="black"]
    node18943_name [shape=none, label=<<font color="black">Branch[18943]</font>>]
    node18943_name -> node18943 [arrowhead=none, color="black", style=dashed]
    node18943 [shape=diamond, label=<<font color="black">(? promiseResolve: &quot;CompletionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node18943 -> node18944 [label=<<font color="black">true</font>> color="black"]
    node18943 -> node18945 [label=<<font color="black">false</font>> color="black"]
    node18942_name [shape=none, label=<<font color="black">Block[18942]</font>>]
    node18942_name -> node18942 [arrowhead=none, color="black", style=dashed]
    node18942 [shape=box, label=<<font color="black">[0] [? %3]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18942 -> cluster2585_exit [color="black"]
    node18944_name [shape=none, label=<<font color="black">Block[18944]</font>>]
    node18944_name -> node18944 [arrowhead=none, color="black", style=dashed]
    node18944 [shape=box, label=<<font color="black">[0] promiseResolve = promiseResolve.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18944 -> node18945 [color="black"]
    node18945_name [shape=none, label=<<font color="black">Call[18945]</font>>]
    node18945_name -> node18945 [arrowhead=none, color="black", style=dashed]
    node18945 [shape=cds, label=<<font color="black">%4 = clo&lt;GetIterator&gt;(iterable)</font>> color="black" fillcolor="white", style=filled]
    node18945 -> node18946 [color="black"]
    node18946_name [shape=none, label=<<font color="black">Call[18946]</font>>]
    node18946_name -> node18946 [arrowhead=none, color="black", style=dashed]
    node18946 [shape=cds, label=<<font color="black">%5 = clo&lt;Completion&gt;(%4)</font>> color="black" fillcolor="white", style=filled]
    node18946 -> node18947 [color="black"]
    node18947_name [shape=none, label=<<font color="black">Block[18947]</font>>]
    node18947_name -> node18947 [arrowhead=none, color="black", style=dashed]
    node18947 [shape=box, label=<<font color="black">[0] let iteratorRecord = %5<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18947 -> node18948 [color="black"]
    node18948_name [shape=none, label=<<font color="black">Branch[18948]</font>>]
    node18948_name -> node18948 [arrowhead=none, color="black", style=dashed]
    node18948 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? iteratorRecord) (! (= iteratorRecord.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node18948 -> node18949 [label=<<font color="black">true</font>> color="black"]
    node18948 -> node18951 [label=<<font color="black">false</font>> color="black"]
    node18949_name [shape=none, label=<<font color="black">Call[18949]</font>>]
    node18949_name -> node18949 [arrowhead=none, color="black", style=dashed]
    node18949 [shape=cds, label=<<font color="black">%6 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [iteratorRecord.Value])[#1272])</font>> color="black" fillcolor="white", style=filled]
    node18949 -> node18950 [color="black"]
    node18951_name [shape=none, label=<<font color="black">Branch[18951]</font>>]
    node18951_name -> node18951 [arrowhead=none, color="black", style=dashed]
    node18951 [shape=diamond, label=<<font color="black">(? iteratorRecord: &quot;CompletionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node18951 -> node18952 [label=<<font color="black">true</font>> color="black"]
    node18951 -> node18953 [label=<<font color="black">false</font>> color="black"]
    node18950_name [shape=none, label=<<font color="black">Block[18950]</font>>]
    node18950_name -> node18950 [arrowhead=none, color="black", style=dashed]
    node18950 [shape=box, label=<<font color="black">[0] [? %6]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18950 -> cluster2585_exit [color="black"]
    node18952_name [shape=none, label=<<font color="black">Block[18952]</font>>]
    node18952_name -> node18952 [arrowhead=none, color="black", style=dashed]
    node18952 [shape=box, label=<<font color="black">[0] iteratorRecord = iteratorRecord.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18952 -> node18953 [color="black"]
    node18953_name [shape=none, label=<<font color="black">Call[18953]</font>>]
    node18953_name -> node18953 [arrowhead=none, color="black", style=dashed]
    node18953 [shape=cds, label=<<font color="black">%7 = clo&lt;PerformPromiseAllSettled&gt;(iteratorRecord, C, promiseCapability, promiseResolve)</font>> color="black" fillcolor="white", style=filled]
    node18953 -> node18954 [color="black"]
    node18954_name [shape=none, label=<<font color="black">Call[18954]</font>>]
    node18954_name -> node18954 [arrowhead=none, color="black", style=dashed]
    node18954 [shape=cds, label=<<font color="black">%8 = clo&lt;Completion&gt;(%7)</font>> color="black" fillcolor="white", style=filled]
    node18954 -> node18955 [color="black"]
    node18955_name [shape=none, label=<<font color="black">Block[18955]</font>>]
    node18955_name -> node18955 [arrowhead=none, color="black", style=dashed]
    node18955 [shape=box, label=<<font color="black">[0] let result = %8<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18955 -> node18956 [color="black"]
    node18956_name [shape=none, label=<<font color="black">Branch[18956]</font>>]
    node18956_name -> node18956 [arrowhead=none, color="black", style=dashed]
    node18956 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? result) (! (= result.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node18956 -> node18957 [label=<<font color="black">true</font>> color="black"]
    node18956 -> node18966 [label=<<font color="black">false</font>> color="black"]
    node18957_name [shape=none, label=<<font color="black">Branch[18957]</font>>]
    node18957_name -> node18957 [arrowhead=none, color="black", style=dashed]
    node18957 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white", style=filled]
    node18957 -> node18958 [label=<<font color="black">true</font>> color="black"]
    node18957 -> node18961 [label=<<font color="black">false</font>> color="black"]
    node18966_name [shape=none, label=<<font color="black">Block[18966]</font>>]
    node18966_name -> node18966 [arrowhead=none, color="black", style=dashed]
    node18966 [shape=box, label=<<font color="black">[0] return [? result]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18966 -> cluster2585_exit [color="black"]
    node18958_name [shape=none, label=<<font color="black">Call[18958]</font>>]
    node18958_name -> node18958 [arrowhead=none, color="black", style=dashed]
    node18958 [shape=cds, label=<<font color="black">%9 = clo&lt;IteratorClose&gt;(iteratorRecord, result)</font>> color="black" fillcolor="white", style=filled]
    node18958 -> node18959 [color="black"]
    node18961_name [shape=none, label=<<font color="black">Branch[18961]</font>>]
    node18961_name -> node18961 [arrowhead=none, color="black", style=dashed]
    node18961 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? result) (! (= result.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node18961 -> node18962 [label=<<font color="black">true</font>> color="black"]
    node18961 -> node18964 [label=<<font color="black">false</font>> color="black"]
    node18959_name [shape=none, label=<<font color="black">Call[18959]</font>>]
    node18959_name -> node18959 [arrowhead=none, color="black", style=dashed]
    node18959 [shape=cds, label=<<font color="black">%10 = clo&lt;Completion&gt;(%9)</font>> color="black" fillcolor="white", style=filled]
    node18959 -> node18960 [color="black"]
    node18962_name [shape=none, label=<<font color="black">Call[18962]</font>>]
    node18962_name -> node18962 [arrowhead=none, color="black", style=dashed]
    node18962 [shape=cds, label=<<font color="black">%11 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [result.Value])[#1273])</font>> color="black" fillcolor="white", style=filled]
    node18962 -> node18963 [color="black"]
    node18964_name [shape=none, label=<<font color="black">Branch[18964]</font>>]
    node18964_name -> node18964 [arrowhead=none, color="black", style=dashed]
    node18964 [shape=diamond, label=<<font color="black">(? result: &quot;CompletionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node18964 -> node18965 [label=<<font color="black">true</font>> color="black"]
    node18964 -> node18966 [label=<<font color="black">false</font>> color="black"]
    node18960_name [shape=none, label=<<font color="black">Block[18960]</font>>]
    node18960_name -> node18960 [arrowhead=none, color="black", style=dashed]
    node18960 [shape=box, label=<<font color="black">[0] result = %10<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18960 -> node18961 [color="black"]
    node18963_name [shape=none, label=<<font color="black">Block[18963]</font>>]
    node18963_name -> node18963 [arrowhead=none, color="black", style=dashed]
    node18963 [shape=box, label=<<font color="black">[0] [? %11]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18963 -> cluster2585_exit [color="black"]
    node18965_name [shape=none, label=<<font color="black">Block[18965]</font>>]
    node18965_name -> node18965 [arrowhead=none, color="black", style=dashed]
    node18965 [shape=box, label=<<font color="black">[0] result = result.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18965 -> node18966 [color="black"]
  }
}