digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster37 {
    label = "def <NUM>:BigInt::remainder(n: BigInt, d: BigInt): Normal[BigInt] | Abrupt"
    style = rounded
    cluster37_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster37_entry_name -> cluster37_entry [arrowhead=none, color="black", style=dashed]
    cluster37_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster37_entry -> node325 [color="black"]
    cluster37_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster37_exit_name -> cluster37_exit [arrowhead=none, color="black", style=dashed]
    cluster37_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node325_name [shape=none, label=<<font color="black">Branch[325]</font>>]
    node325_name -> node325 [arrowhead=none, color="black", style=dashed]
    node325 [shape=diamond, label=<<font color="black">(= d 0n)</font>> color="black" fillcolor="white", style=filled]
    node325 -> node326 [label=<<font color="black">true</font>> color="black"]
    node325 -> node327 [label=<<font color="black">false</font>> color="black"]
    node326_name [shape=none, label=<<font color="black">Block[326]</font>>]
    node326_name -> node326 [arrowhead=none, color="black", style=dashed]
    node326 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%RangeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#10])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node326 -> cluster37_exit [color="black"]
    node327_name [shape=none, label=<<font color="black">Branch[327]</font>>]
    node327_name -> node327 [arrowhead=none, color="black", style=dashed]
    node327 [shape=diamond, label=<<font color="black">(= n 0n)</font>> color="black" fillcolor="white", style=filled]
    node327 -> node328 [label=<<font color="black">true</font>> color="black"]
    node327 -> node329 [label=<<font color="black">false</font>> color="black"]
    node328_name [shape=none, label=<<font color="black">Block[328]</font>>]
    node328_name -> node328 [arrowhead=none, color="black", style=dashed]
    node328 [shape=box, label=<<font color="black">[0] return 0n<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node328 -> cluster37_exit [color="black"]
    node329_name [shape=none, label=<<font color="black">Block[329]</font>>]
    node329_name -> node329 [arrowhead=none, color="black", style=dashed]
    node329 [shape=box, label=<<font color="black">[0] let r = (% n d)<BR ALIGN="LEFT"/>[1] return r<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node329 -> cluster37_exit [color="black"]
  }
}