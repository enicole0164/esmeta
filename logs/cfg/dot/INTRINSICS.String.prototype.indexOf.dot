digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2175 {
    label = "def <BUILTIN>:INTRINSICS.String.prototype.indexOf(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2175_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2175_entry_name -> cluster2175_entry [arrowhead=none, color="black", style=dashed]
    cluster2175_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2175_entry -> node13390 [color="black"]
    cluster2175_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2175_exit_name -> cluster2175_exit [arrowhead=none, color="black", style=dashed]
    cluster2175_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node13390_name [shape=none, label=<<font color="black">Branch[13390]</font>>]
    node13390_name -> node13390 [arrowhead=none, color="black", style=dashed]
    node13390 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node13390 -> node13391 [label=<<font color="black">true</font>> color="black"]
    node13390 -> node13392 [label=<<font color="black">false</font>> color="black"]
    node13391_name [shape=none, label=<<font color="black">Block[13391]</font>>]
    node13391_name -> node13391 [arrowhead=none, color="black", style=dashed]
    node13391 [shape=box, label=<<font color="black">[0] let searchString = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13391 -> node13393 [color="black"]
    node13392_name [shape=none, label=<<font color="black">Block[13392]</font>>]
    node13392_name -> node13392 [arrowhead=none, color="black", style=dashed]
    node13392 [shape=box, label=<<font color="black">[0] let searchString = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13392 -> node13393 [color="black"]
    node13393_name [shape=none, label=<<font color="black">Branch[13393]</font>>]
    node13393_name -> node13393 [arrowhead=none, color="black", style=dashed]
    node13393 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node13393 -> node13394 [label=<<font color="black">true</font>> color="black"]
    node13393 -> node13395 [label=<<font color="black">false</font>> color="black"]
    node13394_name [shape=none, label=<<font color="black">Block[13394]</font>>]
    node13394_name -> node13394 [arrowhead=none, color="black", style=dashed]
    node13394 [shape=box, label=<<font color="black">[0] let position = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13394 -> node13396 [color="black"]
    node13395_name [shape=none, label=<<font color="black">Block[13395]</font>>]
    node13395_name -> node13395 [arrowhead=none, color="black", style=dashed]
    node13395 [shape=box, label=<<font color="black">[0] let position = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13395 -> node13396 [color="black"]
    node13396_name [shape=none, label=<<font color="black">Call[13396]</font>>]
    node13396_name -> node13396 [arrowhead=none, color="black", style=dashed]
    node13396 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireObjectCoercible&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node13396 -> node13397 [color="black"]
    node13397_name [shape=none, label=<<font color="black">Block[13397]</font>>]
    node13397_name -> node13397 [arrowhead=none, color="black", style=dashed]
    node13397 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13397 -> node13398 [color="black"]
    node13398_name [shape=none, label=<<font color="black">Call[13398]</font>>]
    node13398_name -> node13398 [arrowhead=none, color="black", style=dashed]
    node13398 [shape=cds, label=<<font color="black">%1 = clo&lt;ToString&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node13398 -> node13399 [color="black"]
    node13399_name [shape=none, label=<<font color="black">Block[13399]</font>>]
    node13399_name -> node13399 [arrowhead=none, color="black", style=dashed]
    node13399 [shape=box, label=<<font color="black">[0] let S = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13399 -> node13400 [color="black"]
    node13400_name [shape=none, label=<<font color="black">Call[13400]</font>>]
    node13400_name -> node13400 [arrowhead=none, color="black", style=dashed]
    node13400 [shape=cds, label=<<font color="black">%2 = clo&lt;ToString&gt;(searchString)</font>> color="black" fillcolor="white", style=filled]
    node13400 -> node13401 [color="black"]
    node13401_name [shape=none, label=<<font color="black">Block[13401]</font>>]
    node13401_name -> node13401 [arrowhead=none, color="black", style=dashed]
    node13401 [shape=box, label=<<font color="black">[0] let searchStr = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13401 -> node13402 [color="black"]
    node13402_name [shape=none, label=<<font color="black">Call[13402]</font>>]
    node13402_name -> node13402 [arrowhead=none, color="black", style=dashed]
    node13402 [shape=cds, label=<<font color="black">%3 = clo&lt;ToIntegerOrInfinity&gt;(position)</font>> color="black" fillcolor="white", style=filled]
    node13402 -> node13403 [color="black"]
    node13403_name [shape=none, label=<<font color="black">Block[13403]</font>>]
    node13403_name -> node13403 [arrowhead=none, color="black", style=dashed]
    node13403 [shape=box, label=<<font color="black">[0] let pos = [? %3]<BR ALIGN="LEFT"/>[1] assert (|| (! (= position undefined)) (= pos 0))<BR ALIGN="LEFT"/>[2] let len = S.length<BR ALIGN="LEFT"/>[3] let start = (clamp pos 0 len)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13403 -> node13404 [color="black"]
    node13404_name [shape=none, label=<<font color="black">Call[13404]</font>>]
    node13404_name -> node13404 [arrowhead=none, color="black", style=dashed]
    node13404 [shape=cds, label=<<font color="black">%4 = clo&lt;StringIndexOf&gt;(S, searchStr, start)</font>> color="black" fillcolor="white", style=filled]
    node13404 -> node13405 [color="black"]
    node13405_name [shape=none, label=<<font color="black">Block[13405]</font>>]
    node13405_name -> node13405 [arrowhead=none, color="black", style=dashed]
    node13405 [shape=box, label=<<font color="black">[0] return ([number] %4)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13405 -> cluster2175_exit [color="black"]
  }
}