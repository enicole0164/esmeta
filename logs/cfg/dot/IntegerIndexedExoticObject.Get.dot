digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1128 {
    label = "def <INTERNAL>:IntegerIndexedExoticObject.Get(O: IntegerIndexedExoticObject, P: Symbol | String, Receiver: ESValue): Normal[ESValue] | Abrupt"
    style = rounded
    cluster1128_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1128_entry_name -> cluster1128_entry [arrowhead=none, color="black", style=dashed]
    cluster1128_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1128_entry -> node4852 [color="black"]
    cluster1128_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1128_exit_name -> cluster1128_exit [arrowhead=none, color="black", style=dashed]
    cluster1128_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4852_name [shape=none, label=<<font color="black">Branch[4852]</font>>]
    node4852_name -> node4852 [arrowhead=none, color="black", style=dashed]
    node4852 [shape=diamond, label=<<font color="black">(= (typeof P) @String)</font>> color="black" fillcolor="white", style=filled]
    node4852 -> node4853 [label=<<font color="black">true</font>> color="black"]
    node4852 -> node4858 [label=<<font color="black">false</font>> color="black"]
    node4853_name [shape=none, label=<<font color="black">Call[4853]</font>>]
    node4853_name -> node4853 [arrowhead=none, color="black", style=dashed]
    node4853 [shape=cds, label=<<font color="black">%0 = clo&lt;CanonicalNumericIndexString&gt;(P)</font>> color="black" fillcolor="white", style=filled]
    node4853 -> node4854 [color="black"]
    node4858_name [shape=none, label=<<font color="black">Call[4858]</font>>]
    node4858_name -> node4858 [arrowhead=none, color="black", style=dashed]
    node4858 [shape=cds, label=<<font color="black">%2 = clo&lt;OrdinaryGet&gt;(O, P, Receiver)</font>> color="black" fillcolor="white", style=filled]
    node4858 -> node4859 [color="black"]
    node4854_name [shape=none, label=<<font color="black">Block[4854]</font>>]
    node4854_name -> node4854 [arrowhead=none, color="black", style=dashed]
    node4854 [shape=box, label=<<font color="black">[0] let numericIndex = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4854 -> node4855 [color="black"]
    node4859_name [shape=none, label=<<font color="black">Block[4859]</font>>]
    node4859_name -> node4859 [arrowhead=none, color="black", style=dashed]
    node4859 [shape=box, label=<<font color="black">[0] return [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4859 -> cluster1128_exit [color="black"]
    node4855_name [shape=none, label=<<font color="black">Branch[4855]</font>>]
    node4855_name -> node4855 [arrowhead=none, color="black", style=dashed]
    node4855 [shape=diamond, label=<<font color="black">(! (= numericIndex undefined))</font>> color="black" fillcolor="white", style=filled]
    node4855 -> node4856 [label=<<font color="black">true</font>> color="black"]
    node4855 -> node4858 [label=<<font color="black">false</font>> color="black"]
    node4856_name [shape=none, label=<<font color="black">Call[4856]</font>>]
    node4856_name -> node4856 [arrowhead=none, color="black", style=dashed]
    node4856 [shape=cds, label=<<font color="black">%1 = clo&lt;IntegerIndexedElementGet&gt;(O, numericIndex)</font>> color="black" fillcolor="white", style=filled]
    node4856 -> node4857 [color="black"]
    node4857_name [shape=none, label=<<font color="black">Block[4857]</font>>]
    node4857_name -> node4857 [arrowhead=none, color="black", style=dashed]
    node4857 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4857 -> cluster1128_exit [color="black"]
  }
}