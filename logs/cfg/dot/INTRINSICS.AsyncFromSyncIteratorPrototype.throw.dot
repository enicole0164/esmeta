digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2564 {
    label = "def <BUILTIN>:INTRINSICS.AsyncFromSyncIteratorPrototype.throw(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2564_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2564_entry_name -> cluster2564_entry [arrowhead=none, color="black", style=dashed]
    cluster2564_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2564_entry -> node18621 [color="black"]
    cluster2564_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2564_exit_name -> cluster2564_exit [arrowhead=none, color="black", style=dashed]
    cluster2564_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node18621_name [shape=none, label=<<font color="black">Branch[18621]</font>>]
    node18621_name -> node18621 [arrowhead=none, color="black", style=dashed]
    node18621 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node18621 -> node18622 [label=<<font color="black">true</font>> color="black"]
    node18621 -> node18623 [label=<<font color="black">false</font>> color="black"]
    node18622_name [shape=none, label=<<font color="black">Block[18622]</font>>]
    node18622_name -> node18622 [arrowhead=none, color="black", style=dashed]
    node18622 [shape=box, label=<<font color="black">[0] let value = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18622 -> node18624 [color="black"]
    node18623_name [shape=none, label=<<font color="black">Block[18623]</font>>]
    node18623_name -> node18623 [arrowhead=none, color="black", style=dashed]
    node18623 [shape=box, label=<<font color="black">[0] let value = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18623 -> node18624 [color="black"]
    node18624_name [shape=none, label=<<font color="black">Block[18624]</font>>]
    node18624_name -> node18624 [arrowhead=none, color="black", style=dashed]
    node18624 [shape=box, label=<<font color="black">[0] let O = this<BR ALIGN="LEFT"/>[1] assert (&amp;&amp; (? O: &quot;Object&quot;) (! (= O.SyncIteratorRecord absent)))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18624 -> node18625 [color="black"]
    node18625_name [shape=none, label=<<font color="black">Call[18625]</font>>]
    node18625_name -> node18625 [arrowhead=none, color="black", style=dashed]
    node18625 [shape=cds, label=<<font color="black">%0 = clo&lt;NewPromiseCapability&gt;(@EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Promise%&quot;])</font>> color="black" fillcolor="white", style=filled]
    node18625 -> node18626 [color="black"]
    node18626_name [shape=none, label=<<font color="black">Block[18626]</font>>]
    node18626_name -> node18626 [arrowhead=none, color="black", style=dashed]
    node18626 [shape=box, label=<<font color="black">[0] let promiseCapability = [! %0]<BR ALIGN="LEFT"/>[1] let syncIterator = O.SyncIteratorRecord.Iterator<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18626 -> node18627 [color="black"]
    node18627_name [shape=none, label=<<font color="black">Call[18627]</font>>]
    node18627_name -> node18627 [arrowhead=none, color="black", style=dashed]
    node18627 [shape=cds, label=<<font color="black">%1 = clo&lt;GetMethod&gt;(syncIterator, &quot;throw&quot;)</font>> color="black" fillcolor="white", style=filled]
    node18627 -> node18628 [color="black"]
    node18628_name [shape=none, label=<<font color="black">Call[18628]</font>>]
    node18628_name -> node18628 [arrowhead=none, color="black", style=dashed]
    node18628 [shape=cds, label=<<font color="black">%2 = clo&lt;Completion&gt;(%1)</font>> color="black" fillcolor="white", style=filled]
    node18628 -> node18629 [color="black"]
    node18629_name [shape=none, label=<<font color="black">Block[18629]</font>>]
    node18629_name -> node18629 [arrowhead=none, color="black", style=dashed]
    node18629 [shape=box, label=<<font color="black">[0] let throw = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18629 -> node18630 [color="black"]
    node18630_name [shape=none, label=<<font color="black">Branch[18630]</font>>]
    node18630_name -> node18630 [arrowhead=none, color="black", style=dashed]
    node18630 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? throw) (! (= throw.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node18630 -> node18631 [label=<<font color="black">true</font>> color="black"]
    node18630 -> node18633 [label=<<font color="black">false</font>> color="black"]
    node18631_name [shape=none, label=<<font color="black">Call[18631]</font>>]
    node18631_name -> node18631 [arrowhead=none, color="black", style=dashed]
    node18631 [shape=cds, label=<<font color="black">%3 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [throw.Value])[#1223])</font>> color="black" fillcolor="white", style=filled]
    node18631 -> node18632 [color="black"]
    node18633_name [shape=none, label=<<font color="black">Branch[18633]</font>>]
    node18633_name -> node18633 [arrowhead=none, color="black", style=dashed]
    node18633 [shape=diamond, label=<<font color="black">(? throw: &quot;CompletionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node18633 -> node18634 [label=<<font color="black">true</font>> color="black"]
    node18633 -> node18635 [label=<<font color="black">false</font>> color="black"]
    node18632_name [shape=none, label=<<font color="black">Block[18632]</font>>]
    node18632_name -> node18632 [arrowhead=none, color="black", style=dashed]
    node18632 [shape=box, label=<<font color="black">[0] [? %3]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18632 -> cluster2564_exit [color="black"]
    node18634_name [shape=none, label=<<font color="black">Block[18634]</font>>]
    node18634_name -> node18634 [arrowhead=none, color="black", style=dashed]
    node18634 [shape=box, label=<<font color="black">[0] throw = throw.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18634 -> node18635 [color="black"]
    node18635_name [shape=none, label=<<font color="black">Branch[18635]</font>>]
    node18635_name -> node18635 [arrowhead=none, color="black", style=dashed]
    node18635 [shape=diamond, label=<<font color="black">(= throw undefined)</font>> color="black" fillcolor="white", style=filled]
    node18635 -> node18636 [label=<<font color="black">true</font>> color="black"]
    node18635 -> node18638 [label=<<font color="black">false</font>> color="black"]
    node18636_name [shape=none, label=<<font color="black">Call[18636]</font>>]
    node18636_name -> node18636 [arrowhead=none, color="black", style=dashed]
    node18636 [shape=cds, label=<<font color="black">%4 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [value])[#1224])</font>> color="black" fillcolor="white", style=filled]
    node18636 -> node18637 [color="black"]
    node18638_name [shape=none, label=<<font color="black">Branch[18638]</font>>]
    node18638_name -> node18638 [arrowhead=none, color="black", style=dashed]
    node18638 [shape=diamond, label=<<font color="black">(! (= value absent))</font>> color="black" fillcolor="white", style=filled]
    node18638 -> node18639 [label=<<font color="black">true</font>> color="black"]
    node18638 -> node18642 [label=<<font color="black">false</font>> color="black"]
    node18637_name [shape=none, label=<<font color="black">Block[18637]</font>>]
    node18637_name -> node18637 [arrowhead=none, color="black", style=dashed]
    node18637 [shape=box, label=<<font color="black">[0] [! %4]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18637 -> cluster2564_exit [color="black"]
    node18639_name [shape=none, label=<<font color="black">Call[18639]</font>>]
    node18639_name -> node18639 [arrowhead=none, color="black", style=dashed]
    node18639 [shape=cds, label=<<font color="black">%5 = clo&lt;Call&gt;(throw, syncIterator, (new [value])[#1225])</font>> color="black" fillcolor="white", style=filled]
    node18639 -> node18640 [color="black"]
    node18642_name [shape=none, label=<<font color="black">Call[18642]</font>>]
    node18642_name -> node18642 [arrowhead=none, color="black", style=dashed]
    node18642 [shape=cds, label=<<font color="black">%7 = clo&lt;Call&gt;(throw, syncIterator)</font>> color="black" fillcolor="white", style=filled]
    node18642 -> node18643 [color="black"]
    node18640_name [shape=none, label=<<font color="black">Call[18640]</font>>]
    node18640_name -> node18640 [arrowhead=none, color="black", style=dashed]
    node18640 [shape=cds, label=<<font color="black">%6 = clo&lt;Completion&gt;(%5)</font>> color="black" fillcolor="white", style=filled]
    node18640 -> node18641 [color="black"]
    node18643_name [shape=none, label=<<font color="black">Call[18643]</font>>]
    node18643_name -> node18643 [arrowhead=none, color="black", style=dashed]
    node18643 [shape=cds, label=<<font color="black">%8 = clo&lt;Completion&gt;(%7)</font>> color="black" fillcolor="white", style=filled]
    node18643 -> node18644 [color="black"]
    node18641_name [shape=none, label=<<font color="black">Block[18641]</font>>]
    node18641_name -> node18641 [arrowhead=none, color="black", style=dashed]
    node18641 [shape=box, label=<<font color="black">[0] let result = %6<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18641 -> node18645 [color="black"]
    node18644_name [shape=none, label=<<font color="black">Block[18644]</font>>]
    node18644_name -> node18644 [arrowhead=none, color="black", style=dashed]
    node18644 [shape=box, label=<<font color="black">[0] let result = %8<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18644 -> node18645 [color="black"]
    node18645_name [shape=none, label=<<font color="black">Branch[18645]</font>>]
    node18645_name -> node18645 [arrowhead=none, color="black", style=dashed]
    node18645 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? result) (! (= result.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node18645 -> node18646 [label=<<font color="black">true</font>> color="black"]
    node18645 -> node18648 [label=<<font color="black">false</font>> color="black"]
    node18646_name [shape=none, label=<<font color="black">Call[18646]</font>>]
    node18646_name -> node18646 [arrowhead=none, color="black", style=dashed]
    node18646 [shape=cds, label=<<font color="black">%9 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [result.Value])[#1226])</font>> color="black" fillcolor="white", style=filled]
    node18646 -> node18647 [color="black"]
    node18648_name [shape=none, label=<<font color="black">Branch[18648]</font>>]
    node18648_name -> node18648 [arrowhead=none, color="black", style=dashed]
    node18648 [shape=diamond, label=<<font color="black">(? result: &quot;CompletionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node18648 -> node18649 [label=<<font color="black">true</font>> color="black"]
    node18648 -> node18650 [label=<<font color="black">false</font>> color="black"]
    node18647_name [shape=none, label=<<font color="black">Block[18647]</font>>]
    node18647_name -> node18647 [arrowhead=none, color="black", style=dashed]
    node18647 [shape=box, label=<<font color="black">[0] [? %9]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18647 -> cluster2564_exit [color="black"]
    node18649_name [shape=none, label=<<font color="black">Block[18649]</font>>]
    node18649_name -> node18649 [arrowhead=none, color="black", style=dashed]
    node18649 [shape=box, label=<<font color="black">[0] result = result.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18649 -> node18650 [color="black"]
    node18650_name [shape=none, label=<<font color="black">Branch[18650]</font>>]
    node18650_name -> node18650 [arrowhead=none, color="black", style=dashed]
    node18650 [shape=diamond, label=<<font color="black">(! (= (typeof result) @Object))</font>> color="black" fillcolor="white", style=filled]
    node18650 -> node18651 [label=<<font color="black">true</font>> color="black"]
    node18650 -> node18653 [label=<<font color="black">false</font>> color="black"]
    node18651_name [shape=none, label=<<font color="black">Call[18651]</font>>]
    node18651_name -> node18651 [arrowhead=none, color="black", style=dashed]
    node18651 [shape=cds, label=<<font color="black">%10 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [(new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1228]])[#1227])</font>> color="black" fillcolor="white", style=filled]
    node18651 -> node18652 [color="black"]
    node18653_name [shape=none, label=<<font color="black">Call[18653]</font>>]
    node18653_name -> node18653 [arrowhead=none, color="black", style=dashed]
    node18653 [shape=cds, label=<<font color="black">%11 = clo&lt;AsyncFromSyncIteratorContinuation&gt;(result, promiseCapability)</font>> color="black" fillcolor="white", style=filled]
    node18653 -> node18654 [color="black"]
    node18652_name [shape=none, label=<<font color="black">Block[18652]</font>>]
    node18652_name -> node18652 [arrowhead=none, color="black", style=dashed]
    node18652 [shape=box, label=<<font color="black">[0] [! %10]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18652 -> cluster2564_exit [color="black"]
    node18654_name [shape=none, label=<<font color="black">Block[18654]</font>>]
    node18654_name -> node18654 [arrowhead=none, color="black", style=dashed]
    node18654 [shape=box, label=<<font color="black">[0] return %11<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18654 -> cluster2564_exit [color="black"]
  }
}