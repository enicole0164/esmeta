digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2639 {
    label = "def AsyncGeneratorDrainQueue(generator: Unknown["AsyncGenerator"]): Const[~unused~]"
    style = rounded
    cluster2639_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2639_entry_name -> cluster2639_entry [arrowhead=none, color="black", style=dashed]
    cluster2639_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2639_entry -> node19586 [color="black"]
    cluster2639_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2639_exit_name -> cluster2639_exit [arrowhead=none, color="black", style=dashed]
    cluster2639_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node19586_name [shape=none, label=<<font color="black">Block[19586]</font>>]
    node19586_name -> node19586 [arrowhead=none, color="black", style=dashed]
    node19586 [shape=box, label=<<font color="black">[0] assert (= generator.AsyncGeneratorState ~completed~)<BR ALIGN="LEFT"/>[1] let queue = generator.AsyncGeneratorQueue<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19586 -> node19587 [color="black"]
    node19587_name [shape=none, label=<<font color="black">Branch[19587]</font>>]
    node19587_name -> node19587 [arrowhead=none, color="black", style=dashed]
    node19587 [shape=diamond, label=<<font color="black">(= queue.length 0)</font>> color="black" fillcolor="white", style=filled]
    node19587 -> node19588 [label=<<font color="black">true</font>> color="black"]
    node19587 -> node19589 [label=<<font color="black">false</font>> color="black"]
    node19588_name [shape=none, label=<<font color="black">Block[19588]</font>>]
    node19588_name -> node19588 [arrowhead=none, color="black", style=dashed]
    node19588 [shape=box, label=<<font color="black">[0] return ~unused~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19588 -> cluster2639_exit [color="black"]
    node19589_name [shape=none, label=<<font color="black">Block[19589]</font>>]
    node19589_name -> node19589 [arrowhead=none, color="black", style=dashed]
    node19589 [shape=box, label=<<font color="black">[0] let done = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19589 -> node19590 [color="black"]
    node19590_name [shape=none, label=<<font color="black">Branch[19590]</font>>]
    node19590_name -> node19590 [arrowhead=none, color="black", style=dashed]
    node19590 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white", style=filled]
    node19590 -> node19591 [label=<<font color="black">true</font>> color="black"]
    node19590 -> node19604 [label=<<font color="black">false</font>> color="black"]
    node19591_name [shape=none, label=<<font color="black">Block[19591]</font>>]
    node19591_name -> node19591 [arrowhead=none, color="black", style=dashed]
    node19591 [shape=box, label=<<font color="black">[0] let next = queue[0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19591 -> node19592 [color="black"]
    node19604_name [shape=none, label=<<font color="black">Block[19604]</font>>]
    node19604_name -> node19604 [arrowhead=none, color="black", style=dashed]
    node19604 [shape=box, label=<<font color="black">[0] return ~unused~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19604 -> cluster2639_exit [color="black"]
    node19592_name [shape=none, label=<<font color="black">Call[19592]</font>>]
    node19592_name -> node19592 [arrowhead=none, color="black", style=dashed]
    node19592 [shape=cds, label=<<font color="black">%0 = clo&lt;Completion&gt;(next.Completion)</font>> color="black" fillcolor="white", style=filled]
    node19592 -> node19593 [color="black"]
    node19593_name [shape=none, label=<<font color="black">Block[19593]</font>>]
    node19593_name -> node19593 [arrowhead=none, color="black", style=dashed]
    node19593 [shape=box, label=<<font color="black">[0] let completion = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19593 -> node19594 [color="black"]
    node19594_name [shape=none, label=<<font color="black">Branch[19594]</font>>]
    node19594_name -> node19594 [arrowhead=none, color="black", style=dashed]
    node19594 [shape=diamond, label=<<font color="black">(= completion.Type ~return~)</font>> color="black" fillcolor="white", style=filled]
    node19594 -> node19595 [label=<<font color="black">true</font>> color="black"]
    node19594 -> node19598 [label=<<font color="black">false</font>> color="black"]
    node19595_name [shape=none, label=<<font color="black">Block[19595]</font>>]
    node19595_name -> node19595 [arrowhead=none, color="black", style=dashed]
    node19595 [shape=box, label=<<font color="black">[0] generator.AsyncGeneratorState = ~awaiting-return~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19595 -> node19596 [color="black"]
    node19598_name [shape=none, label=<<font color="black">Branch[19598]</font>>]
    node19598_name -> node19598 [arrowhead=none, color="black", style=dashed]
    node19598 [shape=diamond, label=<<font color="black">(= completion.Type ~normal~)</font>> color="black" fillcolor="white", style=filled]
    node19598 -> node19599 [label=<<font color="black">true</font>> color="black"]
    node19598 -> node19601 [label=<<font color="black">false</font>> color="black"]
    node19596_name [shape=none, label=<<font color="black">Call[19596]</font>>]
    node19596_name -> node19596 [arrowhead=none, color="black", style=dashed]
    node19596 [shape=cds, label=<<font color="black">%1 = clo&lt;AsyncGeneratorAwaitReturn&gt;(generator)</font>> color="black" fillcolor="white", style=filled]
    node19596 -> node19597 [color="black"]
    node19599_name [shape=none, label=<<font color="black">Call[19599]</font>>]
    node19599_name -> node19599 [arrowhead=none, color="black", style=dashed]
    node19599 [shape=cds, label=<<font color="black">%2 = clo&lt;NormalCompletion&gt;(undefined)</font>> color="black" fillcolor="white", style=filled]
    node19599 -> node19600 [color="black"]
    node19601_name [shape=none, label=<<font color="black">Call[19601]</font>>]
    node19601_name -> node19601 [arrowhead=none, color="black", style=dashed]
    node19601 [shape=cds, label=<<font color="black">%3 = clo&lt;AsyncGeneratorCompleteStep&gt;(generator, completion, true)</font>> color="black" fillcolor="white", style=filled]
    node19601 -> node19602 [color="black"]
    node19597_name [shape=none, label=<<font color="black">Block[19597]</font>>]
    node19597_name -> node19597 [arrowhead=none, color="black", style=dashed]
    node19597 [shape=box, label=<<font color="black">[0] [! %1]<BR ALIGN="LEFT"/>[1] done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19597 -> node19590 [color="black"]
    node19600_name [shape=none, label=<<font color="black">Block[19600]</font>>]
    node19600_name -> node19600 [arrowhead=none, color="black", style=dashed]
    node19600 [shape=box, label=<<font color="black">[0] completion = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19600 -> node19601 [color="black"]
    node19602_name [shape=none, label=<<font color="black">Branch[19602]</font>>]
    node19602_name -> node19602 [arrowhead=none, color="black", style=dashed]
    node19602 [shape=diamond, label=<<font color="black">(= queue.length 0)</font>> color="black" fillcolor="white", style=filled]
    node19602 -> node19603 [label=<<font color="black">true</font>> color="black"]
    node19602 -> node19590 [label=<<font color="black">false</font>> color="black"]
    node19603_name [shape=none, label=<<font color="black">Block[19603]</font>>]
    node19603_name -> node19603 [arrowhead=none, color="black", style=dashed]
    node19603 [shape=box, label=<<font color="black">[0] done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19603 -> node19590 [color="black"]
  }
}