digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2557 {
    label = "def <BUILTIN>:INTRINSICS.FinalizationRegistry.prototype.register(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2557_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2557_entry_name -> cluster2557_entry [arrowhead=none, color="black", style=dashed]
    cluster2557_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2557_entry -> node18519 [color="black"]
    cluster2557_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2557_exit_name -> cluster2557_exit [arrowhead=none, color="black", style=dashed]
    cluster2557_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node18519_name [shape=none, label=<<font color="black">Branch[18519]</font>>]
    node18519_name -> node18519 [arrowhead=none, color="black", style=dashed]
    node18519 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node18519 -> node18520 [label=<<font color="black">true</font>> color="black"]
    node18519 -> node18521 [label=<<font color="black">false</font>> color="black"]
    node18520_name [shape=none, label=<<font color="black">Block[18520]</font>>]
    node18520_name -> node18520 [arrowhead=none, color="black", style=dashed]
    node18520 [shape=box, label=<<font color="black">[0] let target = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18520 -> node18522 [color="black"]
    node18521_name [shape=none, label=<<font color="black">Block[18521]</font>>]
    node18521_name -> node18521 [arrowhead=none, color="black", style=dashed]
    node18521 [shape=box, label=<<font color="black">[0] let target = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18521 -> node18522 [color="black"]
    node18522_name [shape=none, label=<<font color="black">Branch[18522]</font>>]
    node18522_name -> node18522 [arrowhead=none, color="black", style=dashed]
    node18522 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node18522 -> node18523 [label=<<font color="black">true</font>> color="black"]
    node18522 -> node18524 [label=<<font color="black">false</font>> color="black"]
    node18523_name [shape=none, label=<<font color="black">Block[18523]</font>>]
    node18523_name -> node18523 [arrowhead=none, color="black", style=dashed]
    node18523 [shape=box, label=<<font color="black">[0] let heldValue = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18523 -> node18525 [color="black"]
    node18524_name [shape=none, label=<<font color="black">Block[18524]</font>>]
    node18524_name -> node18524 [arrowhead=none, color="black", style=dashed]
    node18524 [shape=box, label=<<font color="black">[0] let heldValue = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18524 -> node18525 [color="black"]
    node18525_name [shape=none, label=<<font color="black">Branch[18525]</font>>]
    node18525_name -> node18525 [arrowhead=none, color="black", style=dashed]
    node18525 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node18525 -> node18526 [label=<<font color="black">true</font>> color="black"]
    node18525 -> node18527 [label=<<font color="black">false</font>> color="black"]
    node18526_name [shape=none, label=<<font color="black">Block[18526]</font>>]
    node18526_name -> node18526 [arrowhead=none, color="black", style=dashed]
    node18526 [shape=box, label=<<font color="black">[0] let unregisterToken = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18526 -> node18528 [color="black"]
    node18527_name [shape=none, label=<<font color="black">Block[18527]</font>>]
    node18527_name -> node18527 [arrowhead=none, color="black", style=dashed]
    node18527 [shape=box, label=<<font color="black">[0] let unregisterToken = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18527 -> node18528 [color="black"]
    node18528_name [shape=none, label=<<font color="black">Block[18528]</font>>]
    node18528_name -> node18528 [arrowhead=none, color="black", style=dashed]
    node18528 [shape=box, label=<<font color="black">[0] let finalizationRegistry = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18528 -> node18529 [color="black"]
    node18529_name [shape=none, label=<<font color="black">Call[18529]</font>>]
    node18529_name -> node18529 [arrowhead=none, color="black", style=dashed]
    node18529 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireInternalSlot&gt;(finalizationRegistry, &quot;Cells&quot;)</font>> color="black" fillcolor="white", style=filled]
    node18529 -> node18530 [color="black"]
    node18530_name [shape=none, label=<<font color="black">Block[18530]</font>>]
    node18530_name -> node18530 [arrowhead=none, color="black", style=dashed]
    node18530 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18530 -> node18531 [color="black"]
    node18531_name [shape=none, label=<<font color="black">Branch[18531]</font>>]
    node18531_name -> node18531 [arrowhead=none, color="black", style=dashed]
    node18531 [shape=diamond, label=<<font color="black">(! (= (typeof target) @Object))</font>> color="black" fillcolor="white", style=filled]
    node18531 -> node18532 [label=<<font color="black">true</font>> color="black"]
    node18531 -> node18533 [label=<<font color="black">false</font>> color="black"]
    node18532_name [shape=none, label=<<font color="black">Block[18532]</font>>]
    node18532_name -> node18532 [arrowhead=none, color="black", style=dashed]
    node18532 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1209])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18532 -> cluster2557_exit [color="black"]
    node18533_name [shape=none, label=<<font color="black">Call[18533]</font>>]
    node18533_name -> node18533 [arrowhead=none, color="black", style=dashed]
    node18533 [shape=cds, label=<<font color="black">%1 = clo&lt;SameValue&gt;(target, heldValue)</font>> color="black" fillcolor="white", style=filled]
    node18533 -> node18534 [color="black"]
    node18534_name [shape=none, label=<<font color="black">Branch[18534]</font>>]
    node18534_name -> node18534 [arrowhead=none, color="black", style=dashed]
    node18534 [shape=diamond, label=<<font color="black">(= %1 true)</font>> color="black" fillcolor="white", style=filled]
    node18534 -> node18535 [label=<<font color="black">true</font>> color="black"]
    node18534 -> node18536 [label=<<font color="black">false</font>> color="black"]
    node18535_name [shape=none, label=<<font color="black">Block[18535]</font>>]
    node18535_name -> node18535 [arrowhead=none, color="black", style=dashed]
    node18535 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1210])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18535 -> cluster2557_exit [color="black"]
    node18536_name [shape=none, label=<<font color="black">Branch[18536]</font>>]
    node18536_name -> node18536 [arrowhead=none, color="black", style=dashed]
    node18536 [shape=diamond, label=<<font color="black">(! (= (typeof unregisterToken) @Object))</font>> color="black" fillcolor="white", style=filled]
    node18536 -> node18537 [label=<<font color="black">true</font>> color="black"]
    node18536 -> node18540 [label=<<font color="black">false</font>> color="black"]
    node18537_name [shape=none, label=<<font color="black">Branch[18537]</font>>]
    node18537_name -> node18537 [arrowhead=none, color="black", style=dashed]
    node18537 [shape=diamond, label=<<font color="black">(! (= unregisterToken undefined))</font>> color="black" fillcolor="white", style=filled]
    node18537 -> node18538 [label=<<font color="black">true</font>> color="black"]
    node18537 -> node18539 [label=<<font color="black">false</font>> color="black"]
    node18540_name [shape=none, label=<<font color="black">Block[18540]</font>>]
    node18540_name -> node18540 [arrowhead=none, color="black", style=dashed]
    node18540 [shape=box, label=<<font color="black">[0] let cell = (new Record(&quot;WeakRefTarget&quot; -&gt; target, &quot;HeldValue&quot; -&gt; heldValue, &quot;UnregisterToken&quot; -&gt; unregisterToken))[#1212]<BR ALIGN="LEFT"/>[1] push finalizationRegistry.Cells &lt; cell<BR ALIGN="LEFT"/>[2] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18540 -> cluster2557_exit [color="black"]
    node18538_name [shape=none, label=<<font color="black">Block[18538]</font>>]
    node18538_name -> node18538 [arrowhead=none, color="black", style=dashed]
    node18538 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1211])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18538 -> cluster2557_exit [color="black"]
    node18539_name [shape=none, label=<<font color="black">Block[18539]</font>>]
    node18539_name -> node18539 [arrowhead=none, color="black", style=dashed]
    node18539 [shape=box, label=<<font color="black">[0] unregisterToken = ~empty~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18539 -> node18540 [color="black"]
  }
}