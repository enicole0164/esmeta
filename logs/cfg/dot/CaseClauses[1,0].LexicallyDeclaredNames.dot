digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster265 {
    label = "def <SYNTAX>:CaseClauses[1,0].LexicallyDeclaredNames(this: Ast:CaseClauses[1,0]): List[String]"
    style = rounded
    cluster265_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster265_entry_name -> cluster265_entry [arrowhead=none, color="black", style=dashed]
    cluster265_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster265_entry -> node1722 [color="black"]
    cluster265_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster265_exit_name -> cluster265_exit [arrowhead=none, color="black", style=dashed]
    cluster265_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1722_name [shape=none, label=<<font color="black">Call[1722]</font>>]
    node1722_name -> node1722 [arrowhead=none, color="black", style=dashed]
    node1722 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1722 -> node1723 [color="black"]
    node1723_name [shape=none, label=<<font color="black">Block[1723]</font>>]
    node1723_name -> node1723 [arrowhead=none, color="black", style=dashed]
    node1723 [shape=box, label=<<font color="black">[0] let names1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1723 -> node1724 [color="black"]
    node1724_name [shape=none, label=<<font color="black">Call[1724]</font>>]
    node1724_name -> node1724 [arrowhead=none, color="black", style=dashed]
    node1724 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1724 -> node1725 [color="black"]
    node1725_name [shape=none, label=<<font color="black">Block[1725]</font>>]
    node1725_name -> node1725 [arrowhead=none, color="black", style=dashed]
    node1725 [shape=box, label=<<font color="black">[0] let names2 = %1<BR ALIGN="LEFT"/>[1] return (list-concat names1 names2)[#127]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1725 -> cluster265_exit [color="black"]
  }
}