digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2334 {
    label = "def <BUILTIN>:INTRINSICS.RegExp.prototype.toString(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2334_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2334_entry_name -> cluster2334_entry [arrowhead=none, color="black", style=dashed]
    cluster2334_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2334_entry -> node14639 [color="black"]
    cluster2334_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2334_exit_name -> cluster2334_exit [arrowhead=none, color="black", style=dashed]
    cluster2334_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node14639_name [shape=none, label=<<font color="black">Block[14639]</font>>]
    node14639_name -> node14639 [arrowhead=none, color="black", style=dashed]
    node14639 [shape=box, label=<<font color="black">[0] let R = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14639 -> node14640 [color="black"]
    node14640_name [shape=none, label=<<font color="black">Branch[14640]</font>>]
    node14640_name -> node14640 [arrowhead=none, color="black", style=dashed]
    node14640 [shape=diamond, label=<<font color="black">(! (= (typeof R) @Object))</font>> color="black" fillcolor="white", style=filled]
    node14640 -> node14641 [label=<<font color="black">true</font>> color="black"]
    node14640 -> node14642 [label=<<font color="black">false</font>> color="black"]
    node14641_name [shape=none, label=<<font color="black">Block[14641]</font>>]
    node14641_name -> node14641 [arrowhead=none, color="black", style=dashed]
    node14641 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1009])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14641 -> cluster2334_exit [color="black"]
    node14642_name [shape=none, label=<<font color="black">Call[14642]</font>>]
    node14642_name -> node14642 [arrowhead=none, color="black", style=dashed]
    node14642 [shape=cds, label=<<font color="black">%0 = clo&lt;Get&gt;(R, &quot;source&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14642 -> node14643 [color="black"]
    node14643_name [shape=none, label=<<font color="black">Call[14643]</font>>]
    node14643_name -> node14643 [arrowhead=none, color="black", style=dashed]
    node14643 [shape=cds, label=<<font color="black">%1 = clo&lt;ToString&gt;([? %0])</font>> color="black" fillcolor="white", style=filled]
    node14643 -> node14644 [color="black"]
    node14644_name [shape=none, label=<<font color="black">Block[14644]</font>>]
    node14644_name -> node14644 [arrowhead=none, color="black", style=dashed]
    node14644 [shape=box, label=<<font color="black">[0] let pattern = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14644 -> node14645 [color="black"]
    node14645_name [shape=none, label=<<font color="black">Call[14645]</font>>]
    node14645_name -> node14645 [arrowhead=none, color="black", style=dashed]
    node14645 [shape=cds, label=<<font color="black">%2 = clo&lt;Get&gt;(R, &quot;flags&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14645 -> node14646 [color="black"]
    node14646_name [shape=none, label=<<font color="black">Call[14646]</font>>]
    node14646_name -> node14646 [arrowhead=none, color="black", style=dashed]
    node14646 [shape=cds, label=<<font color="black">%3 = clo&lt;ToString&gt;([? %2])</font>> color="black" fillcolor="white", style=filled]
    node14646 -> node14647 [color="black"]
    node14647_name [shape=none, label=<<font color="black">Block[14647]</font>>]
    node14647_name -> node14647 [arrowhead=none, color="black", style=dashed]
    node14647 [shape=box, label=<<font color="black">[0] let flags = [? %3]<BR ALIGN="LEFT"/>[1] let result = (concat &quot;/&quot; pattern &quot;/&quot; flags)<BR ALIGN="LEFT"/>[2] return result<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14647 -> cluster2334_exit [color="black"]
  }
}