digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1959 {
    label = "def <SYNTAX>:ExportDeclaration[2,0].ExportEntries(this: Ast:ExportDeclaration[2,0]): Unknown["ListOfExportEntryRecords"]"
    style = rounded
    cluster1959_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1959_entry_name -> cluster1959_entry [arrowhead=none, color="black", style=dashed]
    cluster1959_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1959_entry -> node10635 [color="black"]
    cluster1959_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1959_exit_name -> cluster1959_exit [arrowhead=none, color="black", style=dashed]
    cluster1959_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node10635_name [shape=none, label=<<font color="black">Block[10635]</font>>]
    node10635_name -> node10635 [arrowhead=none, color="black", style=dashed]
    node10635 [shape=box, label=<<font color="black">[0] let entries = (new [])[#844]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10635 -> node10636 [color="black"]
    node10636_name [shape=none, label=<<font color="black">Call[10636]</font>>]
    node10636_name -> node10636 [arrowhead=none, color="black", style=dashed]
    node10636 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node10636 -> node10637 [color="black"]
    node10637_name [shape=none, label=<<font color="black">Block[10637]</font>>]
    node10637_name -> node10637 [arrowhead=none, color="black", style=dashed]
    node10637 [shape=box, label=<<font color="black">[0] let names = %0<BR ALIGN="LEFT"/>[1] %2 = names<BR ALIGN="LEFT"/>[2] %1 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10637 -> node10638 [color="black"]
    node10638_name [shape=none, label=<<font color="black">Branch[10638]</font>>]
    node10638_name -> node10638 [arrowhead=none, color="black", style=dashed]
    node10638 [shape=diamond, label=<<font color="black">(&lt; %1 %2.length)</font>> color="black" fillcolor="white", style=filled]
    node10638 -> node10639 [label=<<font color="black">true</font>> color="black"]
    node10638 -> node10640 [label=<<font color="black">false</font>> color="black"]
    node10639_name [shape=none, label=<<font color="black">Block[10639]</font>>]
    node10639_name -> node10639 [arrowhead=none, color="black", style=dashed]
    node10639 [shape=box, label=<<font color="black">[0] let name = %2[%1]<BR ALIGN="LEFT"/>[1] push entries &lt; (new ExportEntryRecord(&quot;ModuleRequest&quot; -&gt; null, &quot;ImportName&quot; -&gt; null, &quot;LocalName&quot; -&gt; name, &quot;ExportName&quot; -&gt; name))[#845]<BR ALIGN="LEFT"/>[2] %1 = (+ %1 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10639 -> node10638 [color="black"]
    node10640_name [shape=none, label=<<font color="black">Block[10640]</font>>]
    node10640_name -> node10640 [arrowhead=none, color="black", style=dashed]
    node10640 [shape=box, label=<<font color="black">[0] return entries<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10640 -> cluster1959_exit [color="black"]
  }
}