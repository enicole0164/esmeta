digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2602 {
    label = "def <BUILTIN-CLO>:INTRINSICS.Promise.prototype.finally:clo1(this: Unknown, argumentsList: Unknown, NewTarget: Unknown): Unknown"
    style = rounded
    cluster2602_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2602_entry_name -> cluster2602_entry [arrowhead=none, color="black", style=dashed]
    cluster2602_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2602_entry -> node19219 [color="black"]
    cluster2602_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2602_exit_name -> cluster2602_exit [arrowhead=none, color="black", style=dashed]
    cluster2602_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node19219_name [shape=none, label=<<font color="black">Branch[19219]</font>>]
    node19219_name -> node19219 [arrowhead=none, color="black", style=dashed]
    node19219 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node19219 -> node19220 [label=<<font color="black">true</font>> color="black"]
    node19219 -> node19221 [label=<<font color="black">false</font>> color="black"]
    node19220_name [shape=none, label=<<font color="black">Block[19220]</font>>]
    node19220_name -> node19220 [arrowhead=none, color="black", style=dashed]
    node19220 [shape=box, label=<<font color="black">[0] let reason = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19220 -> node19222 [color="black"]
    node19221_name [shape=none, label=<<font color="black">Block[19221]</font>>]
    node19221_name -> node19221 [arrowhead=none, color="black", style=dashed]
    node19221 [shape=box, label=<<font color="black">[0] let reason = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19221 -> node19222 [color="black"]
    node19222_name [shape=none, label=<<font color="black">Call[19222]</font>>]
    node19222_name -> node19222 [arrowhead=none, color="black", style=dashed]
    node19222 [shape=cds, label=<<font color="black">%0 = clo&lt;Call&gt;(onFinally, undefined)</font>> color="black" fillcolor="white", style=filled]
    node19222 -> node19223 [color="black"]
    node19223_name [shape=none, label=<<font color="black">Block[19223]</font>>]
    node19223_name -> node19223 [arrowhead=none, color="black", style=dashed]
    node19223 [shape=box, label=<<font color="black">[0] let result = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19223 -> node19224 [color="black"]
    node19224_name [shape=none, label=<<font color="black">Call[19224]</font>>]
    node19224_name -> node19224 [arrowhead=none, color="black", style=dashed]
    node19224 [shape=cds, label=<<font color="black">%1 = clo&lt;PromiseResolve&gt;(C, result)</font>> color="black" fillcolor="white", style=filled]
    node19224 -> node19225 [color="black"]
    node19225_name [shape=none, label=<<font color="black">Block[19225]</font>>]
    node19225_name -> node19225 [arrowhead=none, color="black", style=dashed]
    node19225 [shape=box, label=<<font color="black">[0] let promise = [? %1]<BR ALIGN="LEFT"/>[1] let throwReason = clo&lt;INTRINSICS.Promise.prototype.finally:clo1:clo0, [reason]&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19225 -> node19226 [color="black"]
    node19226_name [shape=none, label=<<font color="black">Call[19226]</font>>]
    node19226_name -> node19226 [arrowhead=none, color="black", style=dashed]
    node19226 [shape=cds, label=<<font color="black">%2 = clo&lt;CreateBuiltinFunction&gt;(throwReason, 0, &quot;&quot;, (new [])[#1308])</font>> color="black" fillcolor="white", style=filled]
    node19226 -> node19227 [color="black"]
    node19227_name [shape=none, label=<<font color="black">Block[19227]</font>>]
    node19227_name -> node19227 [arrowhead=none, color="black", style=dashed]
    node19227 [shape=box, label=<<font color="black">[0] let thrower = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19227 -> node19228 [color="black"]
    node19228_name [shape=none, label=<<font color="black">Call[19228]</font>>]
    node19228_name -> node19228 [arrowhead=none, color="black", style=dashed]
    node19228 [shape=cds, label=<<font color="black">%3 = clo&lt;Invoke&gt;(promise, &quot;then&quot;, (new [thrower])[#1309])</font>> color="black" fillcolor="white", style=filled]
    node19228 -> node19229 [color="black"]
    node19229_name [shape=none, label=<<font color="black">Block[19229]</font>>]
    node19229_name -> node19229 [arrowhead=none, color="black", style=dashed]
    node19229 [shape=box, label=<<font color="black">[0] return [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19229 -> cluster2602_exit [color="black"]
  }
}