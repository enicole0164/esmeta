digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster99 {
    label = "def ToInt32(argument: Unknown): Unknown["EitherANormalCompletionContainingAnIntegralNumberOrAnAbruptCompletion"]"
    style = rounded
    cluster99_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster99_entry_name -> cluster99_entry [arrowhead=none, color="black", style=dashed]
    cluster99_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster99_entry -> node742 [color="black"]
    cluster99_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster99_exit_name -> cluster99_exit [arrowhead=none, color="black", style=dashed]
    cluster99_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node742_name [shape=none, label=<<font color="black">Call[742]</font>>]
    node742_name -> node742 [arrowhead=none, color="black", style=dashed]
    node742 [shape=cds, label=<<font color="black">%0 = clo&lt;ToNumber&gt;(argument)</font>> color="black" fillcolor="white", style=filled]
    node742 -> node743 [color="black"]
    node743_name [shape=none, label=<<font color="black">Block[743]</font>>]
    node743_name -> node743 [arrowhead=none, color="black", style=dashed]
    node743 [shape=box, label=<<font color="black">[0] let number = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node743 -> node744 [color="black"]
    node744_name [shape=none, label=<<font color="black">Branch[744]</font>>]
    node744_name -> node744 [arrowhead=none, color="black", style=dashed]
    node744 [shape=diamond, label=<<font color="black">(|| (|| (|| (|| (= number NaN) (= number 0.0f)) (= number -0.0f)) (= number +INF)) (= number -INF))</font>> color="black" fillcolor="white", style=filled]
    node744 -> node745 [label=<<font color="black">true</font>> color="black"]
    node744 -> node746 [label=<<font color="black">false</font>> color="black"]
    node745_name [shape=none, label=<<font color="black">Block[745]</font>>]
    node745_name -> node745 [arrowhead=none, color="black", style=dashed]
    node745 [shape=box, label=<<font color="black">[0] return 0.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node745 -> cluster99_exit [color="black"]
    node746_name [shape=none, label=<<font color="black">Block[746]</font>>]
    node746_name -> node746 [arrowhead=none, color="black", style=dashed]
    node746 [shape=box, label=<<font color="black">[0] let int = (floor (abs ([math] number)))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node746 -> node747 [color="black"]
    node747_name [shape=none, label=<<font color="black">Branch[747]</font>>]
    node747_name -> node747 [arrowhead=none, color="black", style=dashed]
    node747 [shape=diamond, label=<<font color="black">(&lt; number 0.0f)</font>> color="black" fillcolor="white", style=filled]
    node747 -> node748 [label=<<font color="black">true</font>> color="black"]
    node747 -> node749 [label=<<font color="black">false</font>> color="black"]
    node748_name [shape=none, label=<<font color="black">Block[748]</font>>]
    node748_name -> node748 [arrowhead=none, color="black", style=dashed]
    node748 [shape=box, label=<<font color="black">[0] int = (* -1 int)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node748 -> node749 [color="black"]
    node749_name [shape=none, label=<<font color="black">Block[749]</font>>]
    node749_name -> node749 [arrowhead=none, color="black", style=dashed]
    node749 [shape=box, label=<<font color="black">[0] let int32bit = (% int (** 2 32))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node749 -> node750 [color="black"]
    node750_name [shape=none, label=<<font color="black">Branch[750]</font>>]
    node750_name -> node750 [arrowhead=none, color="black", style=dashed]
    node750 [shape=diamond, label=<<font color="black">(! (&lt; int32bit (** 2 31)))</font>> color="black" fillcolor="white", style=filled]
    node750 -> node751 [label=<<font color="black">true</font>> color="black"]
    node750 -> node752 [label=<<font color="black">false</font>> color="black"]
    node751_name [shape=none, label=<<font color="black">Block[751]</font>>]
    node751_name -> node751 [arrowhead=none, color="black", style=dashed]
    node751 [shape=box, label=<<font color="black">[0] return ([number] (- int32bit (** 2 32)))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node751 -> cluster99_exit [color="black"]
    node752_name [shape=none, label=<<font color="black">Block[752]</font>>]
    node752_name -> node752 [arrowhead=none, color="black", style=dashed]
    node752 [shape=box, label=<<font color="black">[0] return ([number] int32bit)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node752 -> cluster99_exit [color="black"]
  }
}