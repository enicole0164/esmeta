digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster181 {
    label = "def <SYNTAX>:VariableDeclarationList[1,0].BoundNames(this: Ast:VariableDeclarationList[1,0]): List[String]"
    style = rounded
    cluster181_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster181_entry_name -> cluster181_entry [arrowhead=none, color="black", style=dashed]
    cluster181_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster181_entry -> node1527 [color="black"]
    cluster181_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster181_exit_name -> cluster181_exit [arrowhead=none, color="black", style=dashed]
    cluster181_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1527_name [shape=none, label=<<font color="black">Call[1527]</font>>]
    node1527_name -> node1527 [arrowhead=none, color="black", style=dashed]
    node1527 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node1527 -> node1528 [color="black"]
    node1528_name [shape=none, label=<<font color="black">Block[1528]</font>>]
    node1528_name -> node1528 [arrowhead=none, color="black", style=dashed]
    node1528 [shape=box, label=<<font color="black">[0] let names1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1528 -> node1529 [color="black"]
    node1529_name [shape=none, label=<<font color="black">Call[1529]</font>>]
    node1529_name -> node1529 [arrowhead=none, color="black", style=dashed]
    node1529 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node1529 -> node1530 [color="black"]
    node1530_name [shape=none, label=<<font color="black">Block[1530]</font>>]
    node1530_name -> node1530 [arrowhead=none, color="black", style=dashed]
    node1530 [shape=box, label=<<font color="black">[0] let names2 = %1<BR ALIGN="LEFT"/>[1] return (list-concat names1 names2)[#86]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1530 -> cluster181_exit [color="black"]
  }
}