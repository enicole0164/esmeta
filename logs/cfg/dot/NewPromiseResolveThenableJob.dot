digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2579 {
    label = "def NewPromiseResolveThenableJob(promiseToResolve: Unknown, thenable: Unknown, then: Unknown): Unknown["RecordWithFields[[Job]](aJobAbstractClosure)And[[Realm]](aRealmRecord)"]"
    style = rounded
    cluster2579_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2579_entry_name -> cluster2579_entry [arrowhead=none, color="black", style=dashed]
    cluster2579_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2579_entry -> node18821 [color="black"]
    cluster2579_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2579_exit_name -> cluster2579_exit [arrowhead=none, color="black", style=dashed]
    cluster2579_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node18821_name [shape=none, label=<<font color="black">Block[18821]</font>>]
    node18821_name -> node18821 [arrowhead=none, color="black", style=dashed]
    node18821 [shape=box, label=<<font color="black">[0] let job = clo&lt;NewPromiseResolveThenableJob:clo0, [promiseToResolve, thenable, then]&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18821 -> node18822 [color="black"]
    node18822_name [shape=none, label=<<font color="black">Call[18822]</font>>]
    node18822_name -> node18822 [arrowhead=none, color="black", style=dashed]
    node18822 [shape=cds, label=<<font color="black">%0 = clo&lt;GetFunctionRealm&gt;(then.Callback)</font>> color="black" fillcolor="white", style=filled]
    node18822 -> node18823 [color="black"]
    node18823_name [shape=none, label=<<font color="black">Call[18823]</font>>]
    node18823_name -> node18823 [arrowhead=none, color="black", style=dashed]
    node18823 [shape=cds, label=<<font color="black">%1 = clo&lt;Completion&gt;(%0)</font>> color="black" fillcolor="white", style=filled]
    node18823 -> node18824 [color="black"]
    node18824_name [shape=none, label=<<font color="black">Block[18824]</font>>]
    node18824_name -> node18824 [arrowhead=none, color="black", style=dashed]
    node18824 [shape=box, label=<<font color="black">[0] let getThenRealmResult = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18824 -> node18825 [color="black"]
    node18825_name [shape=none, label=<<font color="black">Branch[18825]</font>>]
    node18825_name -> node18825 [arrowhead=none, color="black", style=dashed]
    node18825 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? getThenRealmResult) (= getThenRealmResult.Type ~normal~))</font>> color="black" fillcolor="white", style=filled]
    node18825 -> node18826 [label=<<font color="black">true</font>> color="black"]
    node18825 -> node18827 [label=<<font color="black">false</font>> color="black"]
    node18826_name [shape=none, label=<<font color="black">Block[18826]</font>>]
    node18826_name -> node18826 [arrowhead=none, color="black", style=dashed]
    node18826 [shape=box, label=<<font color="black">[0] let thenRealm = getThenRealmResult.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18826 -> node18828 [color="black"]
    node18827_name [shape=none, label=<<font color="black">Block[18827]</font>>]
    node18827_name -> node18827 [arrowhead=none, color="black", style=dashed]
    node18827 [shape=box, label=<<font color="black">[0] let thenRealm = @EXECUTION_STACK[0].Realm<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18827 -> node18828 [color="black"]
    node18828_name [shape=none, label=<<font color="black">Block[18828]</font>>]
    node18828_name -> node18828 [arrowhead=none, color="black", style=dashed]
    node18828 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/>[1] return (new Record(&quot;Job&quot; -&gt; job, &quot;Realm&quot; -&gt; thenRealm))[#1252]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18828 -> cluster2579_exit [color="black"]
  }
}