digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1315 {
    label = "def <SYNTAX>:AdditiveExpression[2,0].Evaluation(this: Ast:AdditiveExpression[2,0]): Unknown"
    style = rounded
    cluster1315_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1315_entry_name -> cluster1315_entry [arrowhead=none, color="black", style=dashed]
    cluster1315_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1315_entry -> node6299 [color="black"]
    cluster1315_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1315_exit_name -> cluster1315_exit [arrowhead=none, color="black", style=dashed]
    cluster1315_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6299_name [shape=none, label=<<font color="black">Call[6299]</font>>]
    node6299_name -> node6299 [arrowhead=none, color="black", style=dashed]
    node6299 [shape=cds, label=<<font color="black">%0 = clo&lt;EvaluateStringOrNumericBinaryExpression&gt;(this[0], &quot;-&quot;, this[1])</font>> color="black" fillcolor="white", style=filled]
    node6299 -> node6300 [color="black"]
    node6300_name [shape=none, label=<<font color="black">Block[6300]</font>>]
    node6300_name -> node6300 [arrowhead=none, color="black", style=dashed]
    node6300 [shape=box, label=<<font color="black">[0] return [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6300 -> cluster1315_exit [color="black"]
  }
}