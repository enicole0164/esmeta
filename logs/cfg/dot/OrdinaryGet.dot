digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1064 {
    label = "def OrdinaryGet(O: Object, P: Symbol | String, Receiver: ESValue): Normal[ESValue] | Abrupt"
    style = rounded
    cluster1064_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1064_entry_name -> cluster1064_entry [arrowhead=none, color="black", style=dashed]
    cluster1064_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1064_entry -> node4118 [color="black"]
    cluster1064_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1064_exit_name -> cluster1064_exit [arrowhead=none, color="black", style=dashed]
    cluster1064_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4118_name [shape=none, label=<<font color="black">Call[4118]</font>>]
    node4118_name -> node4118 [arrowhead=none, color="black", style=dashed]
    node4118 [shape=cds, label=<<font color="black">%0 = O-&gt;GetOwnProperty(P)</font>> color="black" fillcolor="white", style=filled]
    node4118 -> node4119 [color="black"]
    node4119_name [shape=none, label=<<font color="black">Block[4119]</font>>]
    node4119_name -> node4119 [arrowhead=none, color="black", style=dashed]
    node4119 [shape=box, label=<<font color="black">[0] let desc = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4119 -> node4120 [color="black"]
    node4120_name [shape=none, label=<<font color="black">Branch[4120]</font>>]
    node4120_name -> node4120 [arrowhead=none, color="black", style=dashed]
    node4120 [shape=diamond, label=<<font color="black">(= desc undefined)</font>> color="black" fillcolor="white", style=filled]
    node4120 -> node4121 [label=<<font color="black">true</font>> color="black"]
    node4120 -> node4127 [label=<<font color="black">false</font>> color="black"]
    node4121_name [shape=none, label=<<font color="black">Call[4121]</font>>]
    node4121_name -> node4121 [arrowhead=none, color="black", style=dashed]
    node4121 [shape=cds, label=<<font color="black">%1 = O-&gt;GetPrototypeOf()</font>> color="black" fillcolor="white", style=filled]
    node4121 -> node4122 [color="black"]
    node4127_name [shape=none, label=<<font color="black">Call[4127]</font>>]
    node4127_name -> node4127 [arrowhead=none, color="black", style=dashed]
    node4127 [shape=cds, label=<<font color="black">%3 = clo&lt;IsDataDescriptor&gt;(desc)</font>> color="black" fillcolor="white", style=filled]
    node4127 -> node4128 [color="black"]
    node4122_name [shape=none, label=<<font color="black">Block[4122]</font>>]
    node4122_name -> node4122 [arrowhead=none, color="black", style=dashed]
    node4122 [shape=box, label=<<font color="black">[0] let parent = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4122 -> node4123 [color="black"]
    node4128_name [shape=none, label=<<font color="black">Branch[4128]</font>>]
    node4128_name -> node4128 [arrowhead=none, color="black", style=dashed]
    node4128 [shape=diamond, label=<<font color="black">(= %3 true)</font>> color="black" fillcolor="white", style=filled]
    node4128 -> node4129 [label=<<font color="black">true</font>> color="black"]
    node4128 -> node4130 [label=<<font color="black">false</font>> color="black"]
    node4123_name [shape=none, label=<<font color="black">Branch[4123]</font>>]
    node4123_name -> node4123 [arrowhead=none, color="black", style=dashed]
    node4123 [shape=diamond, label=<<font color="black">(= parent null)</font>> color="black" fillcolor="white", style=filled]
    node4123 -> node4124 [label=<<font color="black">true</font>> color="black"]
    node4123 -> node4125 [label=<<font color="black">false</font>> color="black"]
    node4129_name [shape=none, label=<<font color="black">Block[4129]</font>>]
    node4129_name -> node4129 [arrowhead=none, color="black", style=dashed]
    node4129 [shape=box, label=<<font color="black">[0] return desc.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4129 -> cluster1064_exit [color="black"]
    node4130_name [shape=none, label=<<font color="black">Call[4130]</font>>]
    node4130_name -> node4130 [arrowhead=none, color="black", style=dashed]
    node4130 [shape=cds, label=<<font color="black">%4 = clo&lt;IsAccessorDescriptor&gt;(desc)</font>> color="black" fillcolor="white", style=filled]
    node4130 -> node4131 [color="black"]
    node4124_name [shape=none, label=<<font color="black">Block[4124]</font>>]
    node4124_name -> node4124 [arrowhead=none, color="black", style=dashed]
    node4124 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4124 -> cluster1064_exit [color="black"]
    node4125_name [shape=none, label=<<font color="black">Call[4125]</font>>]
    node4125_name -> node4125 [arrowhead=none, color="black", style=dashed]
    node4125 [shape=cds, label=<<font color="black">%2 = parent-&gt;Get(P, Receiver)</font>> color="black" fillcolor="white", style=filled]
    node4125 -> node4126 [color="black"]
    node4131_name [shape=none, label=<<font color="black">Block[4131]</font>>]
    node4131_name -> node4131 [arrowhead=none, color="black", style=dashed]
    node4131 [shape=box, label=<<font color="black">[0] assert (= %4 true)<BR ALIGN="LEFT"/>[1] let getter = desc.Get<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4131 -> node4132 [color="black"]
    node4126_name [shape=none, label=<<font color="black">Block[4126]</font>>]
    node4126_name -> node4126 [arrowhead=none, color="black", style=dashed]
    node4126 [shape=box, label=<<font color="black">[0] return [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4126 -> cluster1064_exit [color="black"]
    node4132_name [shape=none, label=<<font color="black">Branch[4132]</font>>]
    node4132_name -> node4132 [arrowhead=none, color="black", style=dashed]
    node4132 [shape=diamond, label=<<font color="black">(= getter undefined)</font>> color="black" fillcolor="white", style=filled]
    node4132 -> node4133 [label=<<font color="black">true</font>> color="black"]
    node4132 -> node4134 [label=<<font color="black">false</font>> color="black"]
    node4133_name [shape=none, label=<<font color="black">Block[4133]</font>>]
    node4133_name -> node4133 [arrowhead=none, color="black", style=dashed]
    node4133 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4133 -> cluster1064_exit [color="black"]
    node4134_name [shape=none, label=<<font color="black">Call[4134]</font>>]
    node4134_name -> node4134 [arrowhead=none, color="black", style=dashed]
    node4134 [shape=cds, label=<<font color="black">%5 = clo&lt;Call&gt;(getter, Receiver)</font>> color="black" fillcolor="white", style=filled]
    node4134 -> node4135 [color="black"]
    node4135_name [shape=none, label=<<font color="black">Block[4135]</font>>]
    node4135_name -> node4135 [arrowhead=none, color="black", style=dashed]
    node4135 [shape=box, label=<<font color="black">[0] return [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4135 -> cluster1064_exit [color="black"]
  }
}