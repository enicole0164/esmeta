digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2185 {
    label = "def <BUILTIN>:INTRINSICS.String.prototype.repeat(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2185_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2185_entry_name -> cluster2185_entry [arrowhead=none, color="black", style=dashed]
    cluster2185_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2185_entry -> node13546 [color="black"]
    cluster2185_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2185_exit_name -> cluster2185_exit [arrowhead=none, color="black", style=dashed]
    cluster2185_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node13546_name [shape=none, label=<<font color="black">Branch[13546]</font>>]
    node13546_name -> node13546 [arrowhead=none, color="black", style=dashed]
    node13546 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node13546 -> node13547 [label=<<font color="black">true</font>> color="black"]
    node13546 -> node13548 [label=<<font color="black">false</font>> color="black"]
    node13547_name [shape=none, label=<<font color="black">Block[13547]</font>>]
    node13547_name -> node13547 [arrowhead=none, color="black", style=dashed]
    node13547 [shape=box, label=<<font color="black">[0] let count = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13547 -> node13549 [color="black"]
    node13548_name [shape=none, label=<<font color="black">Block[13548]</font>>]
    node13548_name -> node13548 [arrowhead=none, color="black", style=dashed]
    node13548 [shape=box, label=<<font color="black">[0] let count = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13548 -> node13549 [color="black"]
    node13549_name [shape=none, label=<<font color="black">Call[13549]</font>>]
    node13549_name -> node13549 [arrowhead=none, color="black", style=dashed]
    node13549 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireObjectCoercible&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node13549 -> node13550 [color="black"]
    node13550_name [shape=none, label=<<font color="black">Block[13550]</font>>]
    node13550_name -> node13550 [arrowhead=none, color="black", style=dashed]
    node13550 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13550 -> node13551 [color="black"]
    node13551_name [shape=none, label=<<font color="black">Call[13551]</font>>]
    node13551_name -> node13551 [arrowhead=none, color="black", style=dashed]
    node13551 [shape=cds, label=<<font color="black">%1 = clo&lt;ToString&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node13551 -> node13552 [color="black"]
    node13552_name [shape=none, label=<<font color="black">Block[13552]</font>>]
    node13552_name -> node13552 [arrowhead=none, color="black", style=dashed]
    node13552 [shape=box, label=<<font color="black">[0] let S = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13552 -> node13553 [color="black"]
    node13553_name [shape=none, label=<<font color="black">Call[13553]</font>>]
    node13553_name -> node13553 [arrowhead=none, color="black", style=dashed]
    node13553 [shape=cds, label=<<font color="black">%2 = clo&lt;ToIntegerOrInfinity&gt;(count)</font>> color="black" fillcolor="white", style=filled]
    node13553 -> node13554 [color="black"]
    node13554_name [shape=none, label=<<font color="black">Block[13554]</font>>]
    node13554_name -> node13554 [arrowhead=none, color="black", style=dashed]
    node13554 [shape=box, label=<<font color="black">[0] let n = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13554 -> node13555 [color="black"]
    node13555_name [shape=none, label=<<font color="black">Branch[13555]</font>>]
    node13555_name -> node13555 [arrowhead=none, color="black", style=dashed]
    node13555 [shape=diamond, label=<<font color="black">(|| (&lt; n 0) (= n +INF))</font>> color="black" fillcolor="white", style=filled]
    node13555 -> node13556 [label=<<font color="black">true</font>> color="black"]
    node13555 -> node13557 [label=<<font color="black">false</font>> color="black"]
    node13556_name [shape=none, label=<<font color="black">Block[13556]</font>>]
    node13556_name -> node13556 [arrowhead=none, color="black", style=dashed]
    node13556 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%RangeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#955])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13556 -> cluster2185_exit [color="black"]
    node13557_name [shape=none, label=<<font color="black">Branch[13557]</font>>]
    node13557_name -> node13557 [arrowhead=none, color="black", style=dashed]
    node13557 [shape=diamond, label=<<font color="black">(= n 0)</font>> color="black" fillcolor="white", style=filled]
    node13557 -> node13558 [label=<<font color="black">true</font>> color="black"]
    node13557 -> node13559 [label=<<font color="black">false</font>> color="black"]
    node13558_name [shape=none, label=<<font color="black">Block[13558]</font>>]
    node13558_name -> node13558 [arrowhead=none, color="black", style=dashed]
    node13558 [shape=box, label=<<font color="black">[0] return &quot;&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13558 -> cluster2185_exit [color="black"]
    node13559_name [shape=none, label=<<font color="black">Block[13559]</font>>]
    node13559_name -> node13559 [arrowhead=none, color="black", style=dashed]
    node13559 [shape=box, label=<<font color="black">[0] (yet &quot;Return the String value that is made from _n_ copies of _S_ appended together.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13559 -> cluster2185_exit [color="black"]
  }
}