digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster163 {
    label = "def IteratorNext(iteratorRecord: IteratorRecord, value?: ESValue): Normal[Object] | Abrupt"
    style = rounded
    cluster163_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster163_entry_name -> cluster163_entry [arrowhead=none, color="black", style=dashed]
    cluster163_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster163_entry -> node1421 [color="black"]
    cluster163_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster163_exit_name -> cluster163_exit [arrowhead=none, color="black", style=dashed]
    cluster163_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1421_name [shape=none, label=<<font color="black">Branch[1421]</font>>]
    node1421_name -> node1421 [arrowhead=none, color="black", style=dashed]
    node1421 [shape=diamond, label=<<font color="black">(= value absent)</font>> color="black" fillcolor="white", style=filled]
    node1421 -> node1422 [label=<<font color="black">true</font>> color="black"]
    node1421 -> node1424 [label=<<font color="black">false</font>> color="black"]
    node1422_name [shape=none, label=<<font color="black">Call[1422]</font>>]
    node1422_name -> node1422 [arrowhead=none, color="black", style=dashed]
    node1422 [shape=cds, label=<<font color="black">%0 = clo&lt;Call&gt;(iteratorRecord.NextMethod, iteratorRecord.Iterator)</font>> color="black" fillcolor="white", style=filled]
    node1422 -> node1423 [color="black"]
    node1424_name [shape=none, label=<<font color="black">Call[1424]</font>>]
    node1424_name -> node1424 [arrowhead=none, color="black", style=dashed]
    node1424 [shape=cds, label=<<font color="black">%1 = clo&lt;Call&gt;(iteratorRecord.NextMethod, iteratorRecord.Iterator, (new [value])[#76])</font>> color="black" fillcolor="white", style=filled]
    node1424 -> node1425 [color="black"]
    node1423_name [shape=none, label=<<font color="black">Block[1423]</font>>]
    node1423_name -> node1423 [arrowhead=none, color="black", style=dashed]
    node1423 [shape=box, label=<<font color="black">[0] let result = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1423 -> node1426 [color="black"]
    node1425_name [shape=none, label=<<font color="black">Block[1425]</font>>]
    node1425_name -> node1425 [arrowhead=none, color="black", style=dashed]
    node1425 [shape=box, label=<<font color="black">[0] let result = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1425 -> node1426 [color="black"]
    node1426_name [shape=none, label=<<font color="black">Branch[1426]</font>>]
    node1426_name -> node1426 [arrowhead=none, color="black", style=dashed]
    node1426 [shape=diamond, label=<<font color="black">(! (= (typeof result) @Object))</font>> color="black" fillcolor="white", style=filled]
    node1426 -> node1427 [label=<<font color="black">true</font>> color="black"]
    node1426 -> node1428 [label=<<font color="black">false</font>> color="black"]
    node1427_name [shape=none, label=<<font color="black">Block[1427]</font>>]
    node1427_name -> node1427 [arrowhead=none, color="black", style=dashed]
    node1427 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#77])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1427 -> cluster163_exit [color="black"]
    node1428_name [shape=none, label=<<font color="black">Block[1428]</font>>]
    node1428_name -> node1428 [arrowhead=none, color="black", style=dashed]
    node1428 [shape=box, label=<<font color="black">[0] return result<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1428 -> cluster163_exit [color="black"]
  }
}