digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster284 {
    label = "def <SYNTAX>:ModuleItem[2,0].LexicallyDeclaredNames(this: Ast:ModuleItem[2,0]): List[String]"
    style = rounded
    cluster284_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster284_entry_name -> cluster284_entry [arrowhead=none, color="black", style=dashed]
    cluster284_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster284_entry -> node1767 [color="black"]
    cluster284_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster284_exit_name -> cluster284_exit [arrowhead=none, color="black", style=dashed]
    cluster284_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1767_name [shape=none, label=<<font color="black">Call[1767]</font>>]
    node1767_name -> node1767 [arrowhead=none, color="black", style=dashed]
    node1767 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1767 -> node1768 [color="black"]
    node1768_name [shape=none, label=<<font color="black">Block[1768]</font>>]
    node1768_name -> node1768 [arrowhead=none, color="black", style=dashed]
    node1768 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1768 -> cluster284_exit [color="black"]
  }
}