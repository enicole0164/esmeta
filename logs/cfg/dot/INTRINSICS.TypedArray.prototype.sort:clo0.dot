digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2415 {
    label = "def <CLO>:INTRINSICS.TypedArray.prototype.sort:clo0(x: Unknown, y: Unknown): Unknown"
    style = rounded
    cluster2415_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2415_entry_name -> cluster2415_entry [arrowhead=none, color="black", style=dashed]
    cluster2415_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2415_entry -> node16613 [color="black"]
    cluster2415_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2415_exit_name -> cluster2415_exit [arrowhead=none, color="black", style=dashed]
    cluster2415_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node16613_name [shape=none, label=<<font color="black">Block[16613]</font>>]
    node16613_name -> node16613 [arrowhead=none, color="black", style=dashed]
    node16613 [shape=box, label=<<font color="black">[0] assert (yet &quot;Both Type(_x_) and Type(_y_) are Number or both are BigInt.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16613 -> node16614 [color="black"]
    node16614_name [shape=none, label=<<font color="black">Branch[16614]</font>>]
    node16614_name -> node16614 [arrowhead=none, color="black", style=dashed]
    node16614 [shape=diamond, label=<<font color="black">(! (= comparefn undefined))</font>> color="black" fillcolor="white", style=filled]
    node16614 -> node16615 [label=<<font color="black">true</font>> color="black"]
    node16614 -> node16624 [label=<<font color="black">false</font>> color="black"]
    node16615_name [shape=none, label=<<font color="black">Call[16615]</font>>]
    node16615_name -> node16615 [arrowhead=none, color="black", style=dashed]
    node16615 [shape=cds, label=<<font color="black">%0 = clo&lt;Call&gt;(comparefn, undefined, (new [x, y])[#1098])</font>> color="black" fillcolor="white", style=filled]
    node16615 -> node16616 [color="black"]
    node16624_name [shape=none, label=<<font color="black">Branch[16624]</font>>]
    node16624_name -> node16624 [arrowhead=none, color="black", style=dashed]
    node16624 [shape=diamond, label=<<font color="black">(&amp;&amp; (= x NaN) (= y NaN))</font>> color="black" fillcolor="white", style=filled]
    node16624 -> node16625 [label=<<font color="black">true</font>> color="black"]
    node16624 -> node16626 [label=<<font color="black">false</font>> color="black"]
    node16616_name [shape=none, label=<<font color="black">Call[16616]</font>>]
    node16616_name -> node16616 [arrowhead=none, color="black", style=dashed]
    node16616 [shape=cds, label=<<font color="black">%1 = clo&lt;ToNumber&gt;([? %0])</font>> color="black" fillcolor="white", style=filled]
    node16616 -> node16617 [color="black"]
    node16625_name [shape=none, label=<<font color="black">Block[16625]</font>>]
    node16625_name -> node16625 [arrowhead=none, color="black", style=dashed]
    node16625 [shape=box, label=<<font color="black">[0] return 0.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16625 -> cluster2415_exit [color="black"]
    node16626_name [shape=none, label=<<font color="black">Branch[16626]</font>>]
    node16626_name -> node16626 [arrowhead=none, color="black", style=dashed]
    node16626 [shape=diamond, label=<<font color="black">(= x NaN)</font>> color="black" fillcolor="white", style=filled]
    node16626 -> node16627 [label=<<font color="black">true</font>> color="black"]
    node16626 -> node16628 [label=<<font color="black">false</font>> color="black"]
    node16617_name [shape=none, label=<<font color="black">Block[16617]</font>>]
    node16617_name -> node16617 [arrowhead=none, color="black", style=dashed]
    node16617 [shape=box, label=<<font color="black">[0] let v = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16617 -> node16618 [color="black"]
    node16627_name [shape=none, label=<<font color="black">Block[16627]</font>>]
    node16627_name -> node16627 [arrowhead=none, color="black", style=dashed]
    node16627 [shape=box, label=<<font color="black">[0] return 1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16627 -> cluster2415_exit [color="black"]
    node16628_name [shape=none, label=<<font color="black">Branch[16628]</font>>]
    node16628_name -> node16628 [arrowhead=none, color="black", style=dashed]
    node16628 [shape=diamond, label=<<font color="black">(= y NaN)</font>> color="black" fillcolor="white", style=filled]
    node16628 -> node16629 [label=<<font color="black">true</font>> color="black"]
    node16628 -> node16630 [label=<<font color="black">false</font>> color="black"]
    node16618_name [shape=none, label=<<font color="black">Call[16618]</font>>]
    node16618_name -> node16618 [arrowhead=none, color="black", style=dashed]
    node16618 [shape=cds, label=<<font color="black">%2 = clo&lt;IsDetachedBuffer&gt;(buffer)</font>> color="black" fillcolor="white", style=filled]
    node16618 -> node16619 [color="black"]
    node16629_name [shape=none, label=<<font color="black">Block[16629]</font>>]
    node16629_name -> node16629 [arrowhead=none, color="black", style=dashed]
    node16629 [shape=box, label=<<font color="black">[0] return -1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16629 -> cluster2415_exit [color="black"]
    node16630_name [shape=none, label=<<font color="black">Branch[16630]</font>>]
    node16630_name -> node16630 [arrowhead=none, color="black", style=dashed]
    node16630 [shape=diamond, label=<<font color="black">(&lt; x y)</font>> color="black" fillcolor="white", style=filled]
    node16630 -> node16631 [label=<<font color="black">true</font>> color="black"]
    node16630 -> node16632 [label=<<font color="black">false</font>> color="black"]
    node16619_name [shape=none, label=<<font color="black">Branch[16619]</font>>]
    node16619_name -> node16619 [arrowhead=none, color="black", style=dashed]
    node16619 [shape=diamond, label=<<font color="black">(= %2 true)</font>> color="black" fillcolor="white", style=filled]
    node16619 -> node16620 [label=<<font color="black">true</font>> color="black"]
    node16619 -> node16621 [label=<<font color="black">false</font>> color="black"]
    node16631_name [shape=none, label=<<font color="black">Block[16631]</font>>]
    node16631_name -> node16631 [arrowhead=none, color="black", style=dashed]
    node16631 [shape=box, label=<<font color="black">[0] return -1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16631 -> cluster2415_exit [color="black"]
    node16632_name [shape=none, label=<<font color="black">Branch[16632]</font>>]
    node16632_name -> node16632 [arrowhead=none, color="black", style=dashed]
    node16632 [shape=diamond, label=<<font color="black">(&lt; y x)</font>> color="black" fillcolor="white", style=filled]
    node16632 -> node16633 [label=<<font color="black">true</font>> color="black"]
    node16632 -> node16634 [label=<<font color="black">false</font>> color="black"]
    node16620_name [shape=none, label=<<font color="black">Block[16620]</font>>]
    node16620_name -> node16620 [arrowhead=none, color="black", style=dashed]
    node16620 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1099])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16620 -> cluster2415_exit [color="black"]
    node16621_name [shape=none, label=<<font color="black">Branch[16621]</font>>]
    node16621_name -> node16621 [arrowhead=none, color="black", style=dashed]
    node16621 [shape=diamond, label=<<font color="black">(= v NaN)</font>> color="black" fillcolor="white", style=filled]
    node16621 -> node16622 [label=<<font color="black">true</font>> color="black"]
    node16621 -> node16623 [label=<<font color="black">false</font>> color="black"]
    node16633_name [shape=none, label=<<font color="black">Block[16633]</font>>]
    node16633_name -> node16633 [arrowhead=none, color="black", style=dashed]
    node16633 [shape=box, label=<<font color="black">[0] return 1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16633 -> cluster2415_exit [color="black"]
    node16634_name [shape=none, label=<<font color="black">Branch[16634]</font>>]
    node16634_name -> node16634 [arrowhead=none, color="black", style=dashed]
    node16634 [shape=diamond, label=<<font color="black">(&amp;&amp; (= x -0.0f) (= y 0.0f))</font>> color="black" fillcolor="white", style=filled]
    node16634 -> node16635 [label=<<font color="black">true</font>> color="black"]
    node16634 -> node16636 [label=<<font color="black">false</font>> color="black"]
    node16622_name [shape=none, label=<<font color="black">Block[16622]</font>>]
    node16622_name -> node16622 [arrowhead=none, color="black", style=dashed]
    node16622 [shape=box, label=<<font color="black">[0] return 0.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16622 -> cluster2415_exit [color="black"]
    node16623_name [shape=none, label=<<font color="black">Block[16623]</font>>]
    node16623_name -> node16623 [arrowhead=none, color="black", style=dashed]
    node16623 [shape=box, label=<<font color="black">[0] return v<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16623 -> cluster2415_exit [color="black"]
    node16635_name [shape=none, label=<<font color="black">Block[16635]</font>>]
    node16635_name -> node16635 [arrowhead=none, color="black", style=dashed]
    node16635 [shape=box, label=<<font color="black">[0] return -1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16635 -> cluster2415_exit [color="black"]
    node16636_name [shape=none, label=<<font color="black">Branch[16636]</font>>]
    node16636_name -> node16636 [arrowhead=none, color="black", style=dashed]
    node16636 [shape=diamond, label=<<font color="black">(&amp;&amp; (= x 0.0f) (= y -0.0f))</font>> color="black" fillcolor="white", style=filled]
    node16636 -> node16637 [label=<<font color="black">true</font>> color="black"]
    node16636 -> node16638 [label=<<font color="black">false</font>> color="black"]
    node16637_name [shape=none, label=<<font color="black">Block[16637]</font>>]
    node16637_name -> node16637 [arrowhead=none, color="black", style=dashed]
    node16637 [shape=box, label=<<font color="black">[0] return 1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16637 -> cluster2415_exit [color="black"]
    node16638_name [shape=none, label=<<font color="black">Block[16638]</font>>]
    node16638_name -> node16638 [arrowhead=none, color="black", style=dashed]
    node16638 [shape=box, label=<<font color="black">[0] return 0.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16638 -> cluster2415_exit [color="black"]
  }
}