digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1282 {
    label = "def <SYNTAX>:TemplateLiteral[0,0].ArgumentListEvaluation(this: Ast:TemplateLiteral[0,0]): Normal[List[ESValue]] | Abrupt"
    style = rounded
    cluster1282_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1282_entry_name -> cluster1282_entry [arrowhead=none, color="black", style=dashed]
    cluster1282_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1282_entry -> node6006 [color="black"]
    cluster1282_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1282_exit_name -> cluster1282_exit [arrowhead=none, color="black", style=dashed]
    cluster1282_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6006_name [shape=none, label=<<font color="black">Block[6006]</font>>]
    node6006_name -> node6006 [arrowhead=none, color="black", style=dashed]
    node6006 [shape=box, label=<<font color="black">[0] let templateLiteral = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6006 -> node6007 [color="black"]
    node6007_name [shape=none, label=<<font color="black">Call[6007]</font>>]
    node6007_name -> node6007 [arrowhead=none, color="black", style=dashed]
    node6007 [shape=cds, label=<<font color="black">%0 = clo&lt;GetTemplateObject&gt;(templateLiteral)</font>> color="black" fillcolor="white", style=filled]
    node6007 -> node6008 [color="black"]
    node6008_name [shape=none, label=<<font color="black">Block[6008]</font>>]
    node6008_name -> node6008 [arrowhead=none, color="black", style=dashed]
    node6008 [shape=box, label=<<font color="black">[0] let siteObj = %0<BR ALIGN="LEFT"/>[1] return (new [siteObj])[#580]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6008 -> cluster1282_exit [color="black"]
  }
}