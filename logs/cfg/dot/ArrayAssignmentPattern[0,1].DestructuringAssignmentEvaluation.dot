digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1352 {
    label = "def <SYNTAX>:ArrayAssignmentPattern[0,1].DestructuringAssignmentEvaluation(this: Ast:ArrayAssignmentPattern[0,1], value: Unknown): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster1352_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1352_entry_name -> cluster1352_entry [arrowhead=none, color="black", style=dashed]
    cluster1352_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1352_entry -> node6750 [color="black"]
    cluster1352_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1352_exit_name -> cluster1352_exit [arrowhead=none, color="black", style=dashed]
    cluster1352_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6750_name [shape=none, label=<<font color="black">Call[6750]</font>>]
    node6750_name -> node6750 [arrowhead=none, color="black", style=dashed]
    node6750 [shape=cds, label=<<font color="black">%0 = clo&lt;GetIterator&gt;(value)</font>> color="black" fillcolor="white", style=filled]
    node6750 -> node6751 [color="black"]
    node6751_name [shape=none, label=<<font color="black">Block[6751]</font>>]
    node6751_name -> node6751 [arrowhead=none, color="black", style=dashed]
    node6751 [shape=box, label=<<font color="black">[0] let iteratorRecord = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6751 -> node6752 [color="black"]
    node6752_name [shape=none, label=<<font color="black">Branch[6752]</font>>]
    node6752_name -> node6752 [arrowhead=none, color="black", style=dashed]
    node6752 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node6752 -> node6753 [label=<<font color="black">true</font>> color="black"]
    node6752 -> node6758 [label=<<font color="black">false</font>> color="black"]
    node6753_name [shape=none, label=<<font color="black">Call[6753]</font>>]
    node6753_name -> node6753 [arrowhead=none, color="black", style=dashed]
    node6753 [shape=cds, label=<<font color="black">%1 = this[0]-&gt;IteratorDestructuringAssignmentEvaluation(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node6753 -> node6754 [color="black"]
    node6758_name [shape=none, label=<<font color="black">Call[6758]</font>>]
    node6758_name -> node6758 [arrowhead=none, color="black", style=dashed]
    node6758 [shape=cds, label=<<font color="black">%3 = this[1]-&gt;IteratorDestructuringAssignmentEvaluation(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node6758 -> node6759 [color="black"]
    node6754_name [shape=none, label=<<font color="black">Call[6754]</font>>]
    node6754_name -> node6754 [arrowhead=none, color="black", style=dashed]
    node6754 [shape=cds, label=<<font color="black">%2 = clo&lt;Completion&gt;(%1)</font>> color="black" fillcolor="white", style=filled]
    node6754 -> node6755 [color="black"]
    node6759_name [shape=none, label=<<font color="black">Call[6759]</font>>]
    node6759_name -> node6759 [arrowhead=none, color="black", style=dashed]
    node6759 [shape=cds, label=<<font color="black">%4 = clo&lt;Completion&gt;(%3)</font>> color="black" fillcolor="white", style=filled]
    node6759 -> node6760 [color="black"]
    node6755_name [shape=none, label=<<font color="black">Block[6755]</font>>]
    node6755_name -> node6755 [arrowhead=none, color="black", style=dashed]
    node6755 [shape=box, label=<<font color="black">[0] let status = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6755 -> node6756 [color="black"]
    node6760_name [shape=none, label=<<font color="black">Block[6760]</font>>]
    node6760_name -> node6760 [arrowhead=none, color="black", style=dashed]
    node6760 [shape=box, label=<<font color="black">[0] let result = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6760 -> node6761 [color="black"]
    node6756_name [shape=none, label=<<font color="black">Branch[6756]</font>>]
    node6756_name -> node6756 [arrowhead=none, color="black", style=dashed]
    node6756 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? status) (! (= status.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node6756 -> node6757 [label=<<font color="black">true</font>> color="black"]
    node6756 -> node6758 [label=<<font color="black">false</font>> color="black"]
    node6761_name [shape=none, label=<<font color="black">Branch[6761]</font>>]
    node6761_name -> node6761 [arrowhead=none, color="black", style=dashed]
    node6761 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white", style=filled]
    node6761 -> node6762 [label=<<font color="black">true</font>> color="black"]
    node6761 -> node6764 [label=<<font color="black">false</font>> color="black"]
    node6757_name [shape=none, label=<<font color="black">Block[6757]</font>>]
    node6757_name -> node6757 [arrowhead=none, color="black", style=dashed]
    node6757 [shape=box, label=<<font color="black">[0] assert (= iteratorRecord.Done true)<BR ALIGN="LEFT"/>[1] return [? status]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6757 -> cluster1352_exit [color="black"]
    node6762_name [shape=none, label=<<font color="black">Call[6762]</font>>]
    node6762_name -> node6762 [arrowhead=none, color="black", style=dashed]
    node6762 [shape=cds, label=<<font color="black">%5 = clo&lt;IteratorClose&gt;(iteratorRecord, result)</font>> color="black" fillcolor="white", style=filled]
    node6762 -> node6763 [color="black"]
    node6764_name [shape=none, label=<<font color="black">Block[6764]</font>>]
    node6764_name -> node6764 [arrowhead=none, color="black", style=dashed]
    node6764 [shape=box, label=<<font color="black">[0] return result<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6764 -> cluster1352_exit [color="black"]
    node6763_name [shape=none, label=<<font color="black">Block[6763]</font>>]
    node6763_name -> node6763 [arrowhead=none, color="black", style=dashed]
    node6763 [shape=box, label=<<font color="black">[0] return [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6763 -> cluster1352_exit [color="black"]
  }
}