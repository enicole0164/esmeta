digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster137 {
    label = "def DefinePropertyOrThrow(O: Object, P: Symbol | String, desc: PropertyDescriptor): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster137_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster137_entry_name -> cluster137_entry [arrowhead=none, color="black", style=dashed]
    cluster137_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster137_entry -> node1119 [color="black"]
    cluster137_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster137_exit_name -> cluster137_exit [arrowhead=none, color="black", style=dashed]
    cluster137_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1119_name [shape=none, label=<<font color="black">Call[1119]</font>>]
    node1119_name -> node1119 [arrowhead=none, color="black", style=dashed]
    node1119 [shape=cds, label=<<font color="black">%0 = O-&gt;DefineOwnProperty(P, desc)</font>> color="black" fillcolor="white", style=filled]
    node1119 -> node1120 [color="black"]
    node1120_name [shape=none, label=<<font color="black">Block[1120]</font>>]
    node1120_name -> node1120 [arrowhead=none, color="black", style=dashed]
    node1120 [shape=box, label=<<font color="black">[0] let success = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1120 -> node1121 [color="black"]
    node1121_name [shape=none, label=<<font color="black">Branch[1121]</font>>]
    node1121_name -> node1121 [arrowhead=none, color="black", style=dashed]
    node1121 [shape=diamond, label=<<font color="black">(= success false)</font>> color="black" fillcolor="white", style=filled]
    node1121 -> node1122 [label=<<font color="black">true</font>> color="black"]
    node1121 -> node1123 [label=<<font color="black">false</font>> color="black"]
    node1122_name [shape=none, label=<<font color="black">Block[1122]</font>>]
    node1122_name -> node1122 [arrowhead=none, color="black", style=dashed]
    node1122 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#45])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1122 -> cluster137_exit [color="black"]
    node1123_name [shape=none, label=<<font color="black">Block[1123]</font>>]
    node1123_name -> node1123 [arrowhead=none, color="black", style=dashed]
    node1123 [shape=box, label=<<font color="black">[0] return ~unused~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1123 -> cluster137_exit [color="black"]
  }
}