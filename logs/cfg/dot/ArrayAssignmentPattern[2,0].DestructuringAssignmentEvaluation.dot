digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1355 {
    label = "def <SYNTAX>:ArrayAssignmentPattern[2,0].DestructuringAssignmentEvaluation(this: Ast:ArrayAssignmentPattern[2,0], value: Unknown): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster1355_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1355_entry_name -> cluster1355_entry [arrowhead=none, color="black", style=dashed]
    cluster1355_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1355_entry -> node6789 [color="black"]
    cluster1355_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1355_exit_name -> cluster1355_exit [arrowhead=none, color="black", style=dashed]
    cluster1355_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6789_name [shape=none, label=<<font color="black">Call[6789]</font>>]
    node6789_name -> node6789 [arrowhead=none, color="black", style=dashed]
    node6789 [shape=cds, label=<<font color="black">%0 = clo&lt;GetIterator&gt;(value)</font>> color="black" fillcolor="white", style=filled]
    node6789 -> node6790 [color="black"]
    node6790_name [shape=none, label=<<font color="black">Block[6790]</font>>]
    node6790_name -> node6790 [arrowhead=none, color="black", style=dashed]
    node6790 [shape=box, label=<<font color="black">[0] let iteratorRecord = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6790 -> node6791 [color="black"]
    node6791_name [shape=none, label=<<font color="black">Call[6791]</font>>]
    node6791_name -> node6791 [arrowhead=none, color="black", style=dashed]
    node6791 [shape=cds, label=<<font color="black">%1 = this[0]-&gt;IteratorDestructuringAssignmentEvaluation(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node6791 -> node6792 [color="black"]
    node6792_name [shape=none, label=<<font color="black">Call[6792]</font>>]
    node6792_name -> node6792 [arrowhead=none, color="black", style=dashed]
    node6792 [shape=cds, label=<<font color="black">%2 = clo&lt;Completion&gt;(%1)</font>> color="black" fillcolor="white", style=filled]
    node6792 -> node6793 [color="black"]
    node6793_name [shape=none, label=<<font color="black">Block[6793]</font>>]
    node6793_name -> node6793 [arrowhead=none, color="black", style=dashed]
    node6793 [shape=box, label=<<font color="black">[0] let status = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6793 -> node6794 [color="black"]
    node6794_name [shape=none, label=<<font color="black">Branch[6794]</font>>]
    node6794_name -> node6794 [arrowhead=none, color="black", style=dashed]
    node6794 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? status) (! (= status.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node6794 -> node6795 [label=<<font color="black">true</font>> color="black"]
    node6794 -> node6799 [label=<<font color="black">false</font>> color="black"]
    node6795_name [shape=none, label=<<font color="black">Branch[6795]</font>>]
    node6795_name -> node6795 [arrowhead=none, color="black", style=dashed]
    node6795 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white", style=filled]
    node6795 -> node6796 [label=<<font color="black">true</font>> color="black"]
    node6795 -> node6798 [label=<<font color="black">false</font>> color="black"]
    node6799_name [shape=none, label=<<font color="black">Branch[6799]</font>>]
    node6799_name -> node6799 [arrowhead=none, color="black", style=dashed]
    node6799 [shape=diamond, label=<<font color="black">(! (= this[1] absent))</font>> color="black" fillcolor="white", style=filled]
    node6799 -> node6800 [label=<<font color="black">true</font>> color="black"]
    node6799 -> node6805 [label=<<font color="black">false</font>> color="black"]
    node6796_name [shape=none, label=<<font color="black">Call[6796]</font>>]
    node6796_name -> node6796 [arrowhead=none, color="black", style=dashed]
    node6796 [shape=cds, label=<<font color="black">%3 = clo&lt;IteratorClose&gt;(iteratorRecord, status)</font>> color="black" fillcolor="white", style=filled]
    node6796 -> node6797 [color="black"]
    node6798_name [shape=none, label=<<font color="black">Block[6798]</font>>]
    node6798_name -> node6798 [arrowhead=none, color="black", style=dashed]
    node6798 [shape=box, label=<<font color="black">[0] return [? status]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6798 -> cluster1355_exit [color="black"]
    node6800_name [shape=none, label=<<font color="black">Call[6800]</font>>]
    node6800_name -> node6800 [arrowhead=none, color="black", style=dashed]
    node6800 [shape=cds, label=<<font color="black">%4 = this[1]-&gt;IteratorDestructuringAssignmentEvaluation(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node6800 -> node6801 [color="black"]
    node6805_name [shape=none, label=<<font color="black">Branch[6805]</font>>]
    node6805_name -> node6805 [arrowhead=none, color="black", style=dashed]
    node6805 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node6805 -> node6806 [label=<<font color="black">true</font>> color="black"]
    node6805 -> node6809 [label=<<font color="black">false</font>> color="black"]
    node6797_name [shape=none, label=<<font color="black">Block[6797]</font>>]
    node6797_name -> node6797 [arrowhead=none, color="black", style=dashed]
    node6797 [shape=box, label=<<font color="black">[0] return [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6797 -> cluster1355_exit [color="black"]
    node6801_name [shape=none, label=<<font color="black">Call[6801]</font>>]
    node6801_name -> node6801 [arrowhead=none, color="black", style=dashed]
    node6801 [shape=cds, label=<<font color="black">%5 = clo&lt;Completion&gt;(%4)</font>> color="black" fillcolor="white", style=filled]
    node6801 -> node6802 [color="black"]
    node6806_name [shape=none, label=<<font color="black">Call[6806]</font>>]
    node6806_name -> node6806 [arrowhead=none, color="black", style=dashed]
    node6806 [shape=cds, label=<<font color="black">%6 = this[2]-&gt;IteratorDestructuringAssignmentEvaluation(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node6806 -> node6807 [color="black"]
    node6809_name [shape=none, label=<<font color="black">Branch[6809]</font>>]
    node6809_name -> node6809 [arrowhead=none, color="black", style=dashed]
    node6809 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white", style=filled]
    node6809 -> node6810 [label=<<font color="black">true</font>> color="black"]
    node6809 -> node6812 [label=<<font color="black">false</font>> color="black"]
    node6802_name [shape=none, label=<<font color="black">Block[6802]</font>>]
    node6802_name -> node6802 [arrowhead=none, color="black", style=dashed]
    node6802 [shape=box, label=<<font color="black">[0] status = %5<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6802 -> node6803 [color="black"]
    node6807_name [shape=none, label=<<font color="black">Call[6807]</font>>]
    node6807_name -> node6807 [arrowhead=none, color="black", style=dashed]
    node6807 [shape=cds, label=<<font color="black">%7 = clo&lt;Completion&gt;(%6)</font>> color="black" fillcolor="white", style=filled]
    node6807 -> node6808 [color="black"]
    node6810_name [shape=none, label=<<font color="black">Call[6810]</font>>]
    node6810_name -> node6810 [arrowhead=none, color="black", style=dashed]
    node6810 [shape=cds, label=<<font color="black">%8 = clo&lt;IteratorClose&gt;(iteratorRecord, status)</font>> color="black" fillcolor="white", style=filled]
    node6810 -> node6811 [color="black"]
    node6812_name [shape=none, label=<<font color="black">Block[6812]</font>>]
    node6812_name -> node6812 [arrowhead=none, color="black", style=dashed]
    node6812 [shape=box, label=<<font color="black">[0] return [? status]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6812 -> cluster1355_exit [color="black"]
    node6803_name [shape=none, label=<<font color="black">Branch[6803]</font>>]
    node6803_name -> node6803 [arrowhead=none, color="black", style=dashed]
    node6803 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? status) (! (= status.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node6803 -> node6804 [label=<<font color="black">true</font>> color="black"]
    node6803 -> node6805 [label=<<font color="black">false</font>> color="black"]
    node6808_name [shape=none, label=<<font color="black">Block[6808]</font>>]
    node6808_name -> node6808 [arrowhead=none, color="black", style=dashed]
    node6808 [shape=box, label=<<font color="black">[0] status = %7<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6808 -> node6809 [color="black"]
    node6811_name [shape=none, label=<<font color="black">Block[6811]</font>>]
    node6811_name -> node6811 [arrowhead=none, color="black", style=dashed]
    node6811 [shape=box, label=<<font color="black">[0] return [? %8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6811 -> cluster1355_exit [color="black"]
    node6804_name [shape=none, label=<<font color="black">Block[6804]</font>>]
    node6804_name -> node6804 [arrowhead=none, color="black", style=dashed]
    node6804 [shape=box, label=<<font color="black">[0] assert (= iteratorRecord.Done true)<BR ALIGN="LEFT"/>[1] return [? status]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6804 -> cluster1355_exit [color="black"]
  }
}