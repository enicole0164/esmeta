digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster127 {
    label = "def IsLooselyEqual(x: ESValue, y: ESValue): Normal[Boolean] | Abrupt"
    style = rounded
    cluster127_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster127_entry_name -> cluster127_entry [arrowhead=none, color="black", style=dashed]
    cluster127_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster127_entry -> node1029 [color="black"]
    cluster127_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster127_exit_name -> cluster127_exit [arrowhead=none, color="black", style=dashed]
    cluster127_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1029_name [shape=none, label=<<font color="black">Branch[1029]</font>>]
    node1029_name -> node1029 [arrowhead=none, color="black", style=dashed]
    node1029 [shape=diamond, label=<<font color="black">(= (typeof x) (typeof y))</font>> color="black" fillcolor="white", style=filled]
    node1029 -> node1030 [label=<<font color="black">true</font>> color="black"]
    node1029 -> node1032 [label=<<font color="black">false</font>> color="black"]
    node1030_name [shape=none, label=<<font color="black">Call[1030]</font>>]
    node1030_name -> node1030 [arrowhead=none, color="black", style=dashed]
    node1030 [shape=cds, label=<<font color="black">%0 = clo&lt;IsStrictlyEqual&gt;(x, y)</font>> color="black" fillcolor="white", style=filled]
    node1030 -> node1031 [color="black"]
    node1032_name [shape=none, label=<<font color="black">Branch[1032]</font>>]
    node1032_name -> node1032 [arrowhead=none, color="black", style=dashed]
    node1032 [shape=diamond, label=<<font color="black">(&amp;&amp; (= x null) (= y undefined))</font>> color="black" fillcolor="white", style=filled]
    node1032 -> node1033 [label=<<font color="black">true</font>> color="black"]
    node1032 -> node1034 [label=<<font color="black">false</font>> color="black"]
    node1031_name [shape=none, label=<<font color="black">Block[1031]</font>>]
    node1031_name -> node1031 [arrowhead=none, color="black", style=dashed]
    node1031 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1031 -> cluster127_exit [color="black"]
    node1033_name [shape=none, label=<<font color="black">Block[1033]</font>>]
    node1033_name -> node1033 [arrowhead=none, color="black", style=dashed]
    node1033 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1033 -> cluster127_exit [color="black"]
    node1034_name [shape=none, label=<<font color="black">Branch[1034]</font>>]
    node1034_name -> node1034 [arrowhead=none, color="black", style=dashed]
    node1034 [shape=diamond, label=<<font color="black">(&amp;&amp; (= x undefined) (= y null))</font>> color="black" fillcolor="white", style=filled]
    node1034 -> node1035 [label=<<font color="black">true</font>> color="black"]
    node1034 -> node1036 [label=<<font color="black">false</font>> color="black"]
    node1035_name [shape=none, label=<<font color="black">Block[1035]</font>>]
    node1035_name -> node1035 [arrowhead=none, color="black", style=dashed]
    node1035 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1035 -> cluster127_exit [color="black"]
    node1036_name [shape=none, label=<<font color="black">Block[1036]</font>>]
    node1036_name -> node1036 [arrowhead=none, color="black", style=dashed]
    node1036 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1036 -> node1037 [color="black"]
    node1037_name [shape=none, label=<<font color="black">Branch[1037]</font>>]
    node1037_name -> node1037 [arrowhead=none, color="black", style=dashed]
    node1037 [shape=diamond, label=<<font color="black">(&amp;&amp; (= (typeof x) @Number) (= (typeof y) @String))</font>> color="black" fillcolor="white", style=filled]
    node1037 -> node1038 [label=<<font color="black">true</font>> color="black"]
    node1037 -> node1041 [label=<<font color="black">false</font>> color="black"]
    node1038_name [shape=none, label=<<font color="black">Call[1038]</font>>]
    node1038_name -> node1038 [arrowhead=none, color="black", style=dashed]
    node1038 [shape=cds, label=<<font color="black">%1 = clo&lt;ToNumber&gt;(y)</font>> color="black" fillcolor="white", style=filled]
    node1038 -> node1039 [color="black"]
    node1041_name [shape=none, label=<<font color="black">Branch[1041]</font>>]
    node1041_name -> node1041 [arrowhead=none, color="black", style=dashed]
    node1041 [shape=diamond, label=<<font color="black">(&amp;&amp; (= (typeof x) @String) (= (typeof y) @Number))</font>> color="black" fillcolor="white", style=filled]
    node1041 -> node1042 [label=<<font color="black">true</font>> color="black"]
    node1041 -> node1045 [label=<<font color="black">false</font>> color="black"]
    node1039_name [shape=none, label=<<font color="black">Call[1039]</font>>]
    node1039_name -> node1039 [arrowhead=none, color="black", style=dashed]
    node1039 [shape=cds, label=<<font color="black">%2 = clo&lt;IsLooselyEqual&gt;(x, [! %1])</font>> color="black" fillcolor="white", style=filled]
    node1039 -> node1040 [color="black"]
    node1042_name [shape=none, label=<<font color="black">Call[1042]</font>>]
    node1042_name -> node1042 [arrowhead=none, color="black", style=dashed]
    node1042 [shape=cds, label=<<font color="black">%3 = clo&lt;ToNumber&gt;(x)</font>> color="black" fillcolor="white", style=filled]
    node1042 -> node1043 [color="black"]
    node1045_name [shape=none, label=<<font color="black">Branch[1045]</font>>]
    node1045_name -> node1045 [arrowhead=none, color="black", style=dashed]
    node1045 [shape=diamond, label=<<font color="black">(&amp;&amp; (= (typeof x) @BigInt) (= (typeof y) @String))</font>> color="black" fillcolor="white", style=filled]
    node1045 -> node1046 [label=<<font color="black">true</font>> color="black"]
    node1045 -> node1052 [label=<<font color="black">false</font>> color="black"]
    node1040_name [shape=none, label=<<font color="black">Block[1040]</font>>]
    node1040_name -> node1040 [arrowhead=none, color="black", style=dashed]
    node1040 [shape=box, label=<<font color="black">[0] return [! %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1040 -> cluster127_exit [color="black"]
    node1043_name [shape=none, label=<<font color="black">Call[1043]</font>>]
    node1043_name -> node1043 [arrowhead=none, color="black", style=dashed]
    node1043 [shape=cds, label=<<font color="black">%4 = clo&lt;IsLooselyEqual&gt;([! %3], y)</font>> color="black" fillcolor="white", style=filled]
    node1043 -> node1044 [color="black"]
    node1046_name [shape=none, label=<<font color="black">Call[1046]</font>>]
    node1046_name -> node1046 [arrowhead=none, color="black", style=dashed]
    node1046 [shape=cds, label=<<font color="black">%5 = clo&lt;StringToBigInt&gt;(y)</font>> color="black" fillcolor="white", style=filled]
    node1046 -> node1047 [color="black"]
    node1052_name [shape=none, label=<<font color="black">Branch[1052]</font>>]
    node1052_name -> node1052 [arrowhead=none, color="black", style=dashed]
    node1052 [shape=diamond, label=<<font color="black">(&amp;&amp; (= (typeof x) @String) (= (typeof y) @BigInt))</font>> color="black" fillcolor="white", style=filled]
    node1052 -> node1053 [label=<<font color="black">true</font>> color="black"]
    node1052 -> node1055 [label=<<font color="black">false</font>> color="black"]
    node1044_name [shape=none, label=<<font color="black">Block[1044]</font>>]
    node1044_name -> node1044 [arrowhead=none, color="black", style=dashed]
    node1044 [shape=box, label=<<font color="black">[0] return [! %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1044 -> cluster127_exit [color="black"]
    node1047_name [shape=none, label=<<font color="black">Block[1047]</font>>]
    node1047_name -> node1047 [arrowhead=none, color="black", style=dashed]
    node1047 [shape=box, label=<<font color="black">[0] let n = %5<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1047 -> node1048 [color="black"]
    node1053_name [shape=none, label=<<font color="black">Call[1053]</font>>]
    node1053_name -> node1053 [arrowhead=none, color="black", style=dashed]
    node1053 [shape=cds, label=<<font color="black">%7 = clo&lt;IsLooselyEqual&gt;(y, x)</font>> color="black" fillcolor="white", style=filled]
    node1053 -> node1054 [color="black"]
    node1055_name [shape=none, label=<<font color="black">Branch[1055]</font>>]
    node1055_name -> node1055 [arrowhead=none, color="black", style=dashed]
    node1055 [shape=diamond, label=<<font color="black">(= (typeof x) @Boolean)</font>> color="black" fillcolor="white", style=filled]
    node1055 -> node1056 [label=<<font color="black">true</font>> color="black"]
    node1055 -> node1059 [label=<<font color="black">false</font>> color="black"]
    node1048_name [shape=none, label=<<font color="black">Branch[1048]</font>>]
    node1048_name -> node1048 [arrowhead=none, color="black", style=dashed]
    node1048 [shape=diamond, label=<<font color="black">(= n undefined)</font>> color="black" fillcolor="white", style=filled]
    node1048 -> node1049 [label=<<font color="black">true</font>> color="black"]
    node1048 -> node1050 [label=<<font color="black">false</font>> color="black"]
    node1054_name [shape=none, label=<<font color="black">Block[1054]</font>>]
    node1054_name -> node1054 [arrowhead=none, color="black", style=dashed]
    node1054 [shape=box, label=<<font color="black">[0] return [! %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1054 -> cluster127_exit [color="black"]
    node1056_name [shape=none, label=<<font color="black">Call[1056]</font>>]
    node1056_name -> node1056 [arrowhead=none, color="black", style=dashed]
    node1056 [shape=cds, label=<<font color="black">%8 = clo&lt;ToNumber&gt;(x)</font>> color="black" fillcolor="white", style=filled]
    node1056 -> node1057 [color="black"]
    node1059_name [shape=none, label=<<font color="black">Branch[1059]</font>>]
    node1059_name -> node1059 [arrowhead=none, color="black", style=dashed]
    node1059 [shape=diamond, label=<<font color="black">(= (typeof y) @Boolean)</font>> color="black" fillcolor="white", style=filled]
    node1059 -> node1060 [label=<<font color="black">true</font>> color="black"]
    node1059 -> node1063 [label=<<font color="black">false</font>> color="black"]
    node1049_name [shape=none, label=<<font color="black">Block[1049]</font>>]
    node1049_name -> node1049 [arrowhead=none, color="black", style=dashed]
    node1049 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1049 -> cluster127_exit [color="black"]
    node1050_name [shape=none, label=<<font color="black">Call[1050]</font>>]
    node1050_name -> node1050 [arrowhead=none, color="black", style=dashed]
    node1050 [shape=cds, label=<<font color="black">%6 = clo&lt;IsLooselyEqual&gt;(x, n)</font>> color="black" fillcolor="white", style=filled]
    node1050 -> node1051 [color="black"]
    node1057_name [shape=none, label=<<font color="black">Call[1057]</font>>]
    node1057_name -> node1057 [arrowhead=none, color="black", style=dashed]
    node1057 [shape=cds, label=<<font color="black">%9 = clo&lt;IsLooselyEqual&gt;([! %8], y)</font>> color="black" fillcolor="white", style=filled]
    node1057 -> node1058 [color="black"]
    node1060_name [shape=none, label=<<font color="black">Call[1060]</font>>]
    node1060_name -> node1060 [arrowhead=none, color="black", style=dashed]
    node1060 [shape=cds, label=<<font color="black">%10 = clo&lt;ToNumber&gt;(y)</font>> color="black" fillcolor="white", style=filled]
    node1060 -> node1061 [color="black"]
    node1063_name [shape=none, label=<<font color="black">Branch[1063]</font>>]
    node1063_name -> node1063 [arrowhead=none, color="black", style=dashed]
    node1063 [shape=diamond, label=<<font color="black">(&amp;&amp; (|| (|| (|| (= (typeof x) @String) (= (typeof x) @Number)) (= (typeof x) @BigInt)) (= (typeof x) @Symbol)) (= (typeof y) @Object))</font>> color="black" fillcolor="white", style=filled]
    node1063 -> node1064 [label=<<font color="black">true</font>> color="black"]
    node1063 -> node1067 [label=<<font color="black">false</font>> color="black"]
    node1051_name [shape=none, label=<<font color="black">Block[1051]</font>>]
    node1051_name -> node1051 [arrowhead=none, color="black", style=dashed]
    node1051 [shape=box, label=<<font color="black">[0] return [! %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1051 -> cluster127_exit [color="black"]
    node1058_name [shape=none, label=<<font color="black">Block[1058]</font>>]
    node1058_name -> node1058 [arrowhead=none, color="black", style=dashed]
    node1058 [shape=box, label=<<font color="black">[0] return [! %9]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1058 -> cluster127_exit [color="black"]
    node1061_name [shape=none, label=<<font color="black">Call[1061]</font>>]
    node1061_name -> node1061 [arrowhead=none, color="black", style=dashed]
    node1061 [shape=cds, label=<<font color="black">%11 = clo&lt;IsLooselyEqual&gt;(x, [! %10])</font>> color="black" fillcolor="white", style=filled]
    node1061 -> node1062 [color="black"]
    node1064_name [shape=none, label=<<font color="black">Call[1064]</font>>]
    node1064_name -> node1064 [arrowhead=none, color="black", style=dashed]
    node1064 [shape=cds, label=<<font color="black">%12 = clo&lt;ToPrimitive&gt;(y)</font>> color="black" fillcolor="white", style=filled]
    node1064 -> node1065 [color="black"]
    node1067_name [shape=none, label=<<font color="black">Branch[1067]</font>>]
    node1067_name -> node1067 [arrowhead=none, color="black", style=dashed]
    node1067 [shape=diamond, label=<<font color="black">(&amp;&amp; (= (typeof x) @Object) (|| (|| (|| (= (typeof y) @String) (= (typeof y) @Number)) (= (typeof y) @BigInt)) (= (typeof y) @Symbol)))</font>> color="black" fillcolor="white", style=filled]
    node1067 -> node1068 [label=<<font color="black">true</font>> color="black"]
    node1067 -> node1071 [label=<<font color="black">false</font>> color="black"]
    node1062_name [shape=none, label=<<font color="black">Block[1062]</font>>]
    node1062_name -> node1062 [arrowhead=none, color="black", style=dashed]
    node1062 [shape=box, label=<<font color="black">[0] return [! %11]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1062 -> cluster127_exit [color="black"]
    node1065_name [shape=none, label=<<font color="black">Call[1065]</font>>]
    node1065_name -> node1065 [arrowhead=none, color="black", style=dashed]
    node1065 [shape=cds, label=<<font color="black">%13 = clo&lt;IsLooselyEqual&gt;(x, [? %12])</font>> color="black" fillcolor="white", style=filled]
    node1065 -> node1066 [color="black"]
    node1068_name [shape=none, label=<<font color="black">Call[1068]</font>>]
    node1068_name -> node1068 [arrowhead=none, color="black", style=dashed]
    node1068 [shape=cds, label=<<font color="black">%14 = clo&lt;ToPrimitive&gt;(x)</font>> color="black" fillcolor="white", style=filled]
    node1068 -> node1069 [color="black"]
    node1071_name [shape=none, label=<<font color="black">Branch[1071]</font>>]
    node1071_name -> node1071 [arrowhead=none, color="black", style=dashed]
    node1071 [shape=diamond, label=<<font color="black">(|| (&amp;&amp; (= (typeof x) @BigInt) (= (typeof y) @Number)) (&amp;&amp; (= (typeof x) @Number) (= (typeof y) @BigInt)))</font>> color="black" fillcolor="white", style=filled]
    node1071 -> node1072 [label=<<font color="black">true</font>> color="black"]
    node1071 -> node1076 [label=<<font color="black">false</font>> color="black"]
    node1066_name [shape=none, label=<<font color="black">Block[1066]</font>>]
    node1066_name -> node1066 [arrowhead=none, color="black", style=dashed]
    node1066 [shape=box, label=<<font color="black">[0] return [! %13]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1066 -> cluster127_exit [color="black"]
    node1069_name [shape=none, label=<<font color="black">Call[1069]</font>>]
    node1069_name -> node1069 [arrowhead=none, color="black", style=dashed]
    node1069 [shape=cds, label=<<font color="black">%15 = clo&lt;IsLooselyEqual&gt;([? %14], y)</font>> color="black" fillcolor="white", style=filled]
    node1069 -> node1070 [color="black"]
    node1072_name [shape=none, label=<<font color="black">Block[1072]</font>>]
    node1072_name -> node1072 [arrowhead=none, color="black", style=dashed]
    node1072 [shape=box, label=<<font color="black">[0] (yet &quot;If _x_ or _y_ are any of *NaN*, *+&infin;*&lt;sub&gt;𝔽&lt;/sub&gt;, or *-&infin;*&lt;sub&gt;𝔽&lt;/sub&gt;, return *false*.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1072 -> node1073 [color="black"]
    node1076_name [shape=none, label=<<font color="black">Block[1076]</font>>]
    node1076_name -> node1076 [arrowhead=none, color="black", style=dashed]
    node1076 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1076 -> cluster127_exit [color="black"]
    node1070_name [shape=none, label=<<font color="black">Block[1070]</font>>]
    node1070_name -> node1070 [arrowhead=none, color="black", style=dashed]
    node1070 [shape=box, label=<<font color="black">[0] return [! %15]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1070 -> cluster127_exit [color="black"]
    node1073_name [shape=none, label=<<font color="black">Branch[1073]</font>>]
    node1073_name -> node1073 [arrowhead=none, color="black", style=dashed]
    node1073 [shape=diamond, label=<<font color="black">(== ([math] x) ([math] y))</font>> color="black" fillcolor="white", style=filled]
    node1073 -> node1074 [label=<<font color="black">true</font>> color="black"]
    node1073 -> node1075 [label=<<font color="black">false</font>> color="black"]
    node1074_name [shape=none, label=<<font color="black">Block[1074]</font>>]
    node1074_name -> node1074 [arrowhead=none, color="black", style=dashed]
    node1074 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1074 -> cluster127_exit [color="black"]
    node1075_name [shape=none, label=<<font color="black">Block[1075]</font>>]
    node1075_name -> node1075 [arrowhead=none, color="black", style=dashed]
    node1075 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1075 -> cluster127_exit [color="black"]
  }
}