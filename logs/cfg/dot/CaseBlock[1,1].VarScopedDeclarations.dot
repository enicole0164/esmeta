digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster433 {
    label = "def <SYNTAX>:CaseBlock[1,1].VarScopedDeclarations(this: Ast:CaseBlock[1,1]): List[Ast]"
    style = rounded
    cluster433_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster433_entry_name -> cluster433_entry [arrowhead=none, color="black", style=dashed]
    cluster433_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster433_entry -> node2171 [color="black"]
    cluster433_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster433_exit_name -> cluster433_exit [arrowhead=none, color="black", style=dashed]
    cluster433_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2171_name [shape=none, label=<<font color="black">Branch[2171]</font>>]
    node2171_name -> node2171 [arrowhead=none, color="black", style=dashed]
    node2171 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node2171 -> node2172 [label=<<font color="black">true</font>> color="black"]
    node2171 -> node2174 [label=<<font color="black">false</font>> color="black"]
    node2172_name [shape=none, label=<<font color="black">Call[2172]</font>>]
    node2172_name -> node2172 [arrowhead=none, color="black", style=dashed]
    node2172 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2172 -> node2173 [color="black"]
    node2174_name [shape=none, label=<<font color="black">Block[2174]</font>>]
    node2174_name -> node2174 [arrowhead=none, color="black", style=dashed]
    node2174 [shape=box, label=<<font color="black">[0] let declarations1 = (new [])[#253]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2174 -> node2175 [color="black"]
    node2173_name [shape=none, label=<<font color="black">Block[2173]</font>>]
    node2173_name -> node2173 [arrowhead=none, color="black", style=dashed]
    node2173 [shape=box, label=<<font color="black">[0] let declarations1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2173 -> node2175 [color="black"]
    node2175_name [shape=none, label=<<font color="black">Call[2175]</font>>]
    node2175_name -> node2175 [arrowhead=none, color="black", style=dashed]
    node2175 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2175 -> node2176 [color="black"]
    node2176_name [shape=none, label=<<font color="black">Block[2176]</font>>]
    node2176_name -> node2176 [arrowhead=none, color="black", style=dashed]
    node2176 [shape=box, label=<<font color="black">[0] let declarations2 = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2176 -> node2177 [color="black"]
    node2177_name [shape=none, label=<<font color="black">Branch[2177]</font>>]
    node2177_name -> node2177 [arrowhead=none, color="black", style=dashed]
    node2177 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node2177 -> node2178 [label=<<font color="black">true</font>> color="black"]
    node2177 -> node2180 [label=<<font color="black">false</font>> color="black"]
    node2178_name [shape=none, label=<<font color="black">Call[2178]</font>>]
    node2178_name -> node2178 [arrowhead=none, color="black", style=dashed]
    node2178 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2178 -> node2179 [color="black"]
    node2180_name [shape=none, label=<<font color="black">Block[2180]</font>>]
    node2180_name -> node2180 [arrowhead=none, color="black", style=dashed]
    node2180 [shape=box, label=<<font color="black">[0] let declarations3 = (new [])[#254]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2180 -> node2181 [color="black"]
    node2179_name [shape=none, label=<<font color="black">Block[2179]</font>>]
    node2179_name -> node2179 [arrowhead=none, color="black", style=dashed]
    node2179 [shape=box, label=<<font color="black">[0] let declarations3 = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2179 -> node2181 [color="black"]
    node2181_name [shape=none, label=<<font color="black">Block[2181]</font>>]
    node2181_name -> node2181 [arrowhead=none, color="black", style=dashed]
    node2181 [shape=box, label=<<font color="black">[0] return (list-concat declarations1 declarations2 declarations3)[#255]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2181 -> cluster433_exit [color="black"]
  }
}