digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2005 {
    label = "def <BUILTIN>:INTRINSICS.Object.getOwnPropertyDescriptor(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2005_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2005_entry_name -> cluster2005_entry [arrowhead=none, color="black", style=dashed]
    cluster2005_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2005_entry -> node11167 [color="black"]
    cluster2005_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2005_exit_name -> cluster2005_exit [arrowhead=none, color="black", style=dashed]
    cluster2005_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11167_name [shape=none, label=<<font color="black">Branch[11167]</font>>]
    node11167_name -> node11167 [arrowhead=none, color="black", style=dashed]
    node11167 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11167 -> node11168 [label=<<font color="black">true</font>> color="black"]
    node11167 -> node11169 [label=<<font color="black">false</font>> color="black"]
    node11168_name [shape=none, label=<<font color="black">Block[11168]</font>>]
    node11168_name -> node11168 [arrowhead=none, color="black", style=dashed]
    node11168 [shape=box, label=<<font color="black">[0] let O = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11168 -> node11170 [color="black"]
    node11169_name [shape=none, label=<<font color="black">Block[11169]</font>>]
    node11169_name -> node11169 [arrowhead=none, color="black", style=dashed]
    node11169 [shape=box, label=<<font color="black">[0] let O = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11169 -> node11170 [color="black"]
    node11170_name [shape=none, label=<<font color="black">Branch[11170]</font>>]
    node11170_name -> node11170 [arrowhead=none, color="black", style=dashed]
    node11170 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11170 -> node11171 [label=<<font color="black">true</font>> color="black"]
    node11170 -> node11172 [label=<<font color="black">false</font>> color="black"]
    node11171_name [shape=none, label=<<font color="black">Block[11171]</font>>]
    node11171_name -> node11171 [arrowhead=none, color="black", style=dashed]
    node11171 [shape=box, label=<<font color="black">[0] let P = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11171 -> node11173 [color="black"]
    node11172_name [shape=none, label=<<font color="black">Block[11172]</font>>]
    node11172_name -> node11172 [arrowhead=none, color="black", style=dashed]
    node11172 [shape=box, label=<<font color="black">[0] let P = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11172 -> node11173 [color="black"]
    node11173_name [shape=none, label=<<font color="black">Call[11173]</font>>]
    node11173_name -> node11173 [arrowhead=none, color="black", style=dashed]
    node11173 [shape=cds, label=<<font color="black">%0 = clo&lt;ToObject&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node11173 -> node11174 [color="black"]
    node11174_name [shape=none, label=<<font color="black">Block[11174]</font>>]
    node11174_name -> node11174 [arrowhead=none, color="black", style=dashed]
    node11174 [shape=box, label=<<font color="black">[0] let obj = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11174 -> node11175 [color="black"]
    node11175_name [shape=none, label=<<font color="black">Call[11175]</font>>]
    node11175_name -> node11175 [arrowhead=none, color="black", style=dashed]
    node11175 [shape=cds, label=<<font color="black">%1 = clo&lt;ToPropertyKey&gt;(P)</font>> color="black" fillcolor="white", style=filled]
    node11175 -> node11176 [color="black"]
    node11176_name [shape=none, label=<<font color="black">Block[11176]</font>>]
    node11176_name -> node11176 [arrowhead=none, color="black", style=dashed]
    node11176 [shape=box, label=<<font color="black">[0] let key = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11176 -> node11177 [color="black"]
    node11177_name [shape=none, label=<<font color="black">Call[11177]</font>>]
    node11177_name -> node11177 [arrowhead=none, color="black", style=dashed]
    node11177 [shape=cds, label=<<font color="black">%2 = obj-&gt;GetOwnProperty(key)</font>> color="black" fillcolor="white", style=filled]
    node11177 -> node11178 [color="black"]
    node11178_name [shape=none, label=<<font color="black">Block[11178]</font>>]
    node11178_name -> node11178 [arrowhead=none, color="black", style=dashed]
    node11178 [shape=box, label=<<font color="black">[0] let desc = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11178 -> node11179 [color="black"]
    node11179_name [shape=none, label=<<font color="black">Call[11179]</font>>]
    node11179_name -> node11179 [arrowhead=none, color="black", style=dashed]
    node11179 [shape=cds, label=<<font color="black">%3 = clo&lt;FromPropertyDescriptor&gt;(desc)</font>> color="black" fillcolor="white", style=filled]
    node11179 -> node11180 [color="black"]
    node11180_name [shape=none, label=<<font color="black">Block[11180]</font>>]
    node11180_name -> node11180 [arrowhead=none, color="black", style=dashed]
    node11180 [shape=box, label=<<font color="black">[0] return %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11180 -> cluster2005_exit [color="black"]
  }
}