digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2264 {
    label = "def <SYNTAX>:QuantifierPrefix[3,0].CompileQuantifierPrefix(this: Ast:QuantifierPrefix[3,0]): Unknown["RecordWithFields[[Min]](aNonnegativeInteger)And[[Max]](aNonnegativeIntegerOr+âˆž)"]"
    style = rounded
    cluster2264_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2264_entry_name -> cluster2264_entry [arrowhead=none, color="black", style=dashed]
    cluster2264_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2264_entry -> node13974 [color="black"]
    cluster2264_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2264_exit_name -> cluster2264_exit [arrowhead=none, color="black", style=dashed]
    cluster2264_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node13974_name [shape=none, label=<<font color="black">Call[13974]</font>>]
    node13974_name -> node13974 [arrowhead=none, color="black", style=dashed]
    node13974 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;MV()</font>> color="black" fillcolor="white", style=filled]
    node13974 -> node13975 [color="black"]
    node13975_name [shape=none, label=<<font color="black">Block[13975]</font>>]
    node13975_name -> node13975 [arrowhead=none, color="black", style=dashed]
    node13975 [shape=box, label=<<font color="black">[0] let i = %0<BR ALIGN="LEFT"/>[1] return (new Record(&quot;Min&quot; -&gt; i, &quot;Max&quot; -&gt; i))[#980]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13975 -> cluster2264_exit [color="black"]
  }
}