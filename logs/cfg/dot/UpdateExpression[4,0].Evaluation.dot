digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1304 {
    label = "def <SYNTAX>:UpdateExpression[4,0].Evaluation(this: Ast:UpdateExpression[4,0]): Unknown"
    style = rounded
    cluster1304_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1304_entry_name -> cluster1304_entry [arrowhead=none, color="black", style=dashed]
    cluster1304_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1304_entry -> node6190 [color="black"]
    cluster1304_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1304_exit_name -> cluster1304_exit [arrowhead=none, color="black", style=dashed]
    cluster1304_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6190_name [shape=none, label=<<font color="black">Call[6190]</font>>]
    node6190_name -> node6190 [arrowhead=none, color="black", style=dashed]
    node6190 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6190 -> node6191 [color="black"]
    node6191_name [shape=none, label=<<font color="black">Block[6191]</font>>]
    node6191_name -> node6191 [arrowhead=none, color="black", style=dashed]
    node6191 [shape=box, label=<<font color="black">[0] let expr = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6191 -> node6192 [color="black"]
    node6192_name [shape=none, label=<<font color="black">Call[6192]</font>>]
    node6192_name -> node6192 [arrowhead=none, color="black", style=dashed]
    node6192 [shape=cds, label=<<font color="black">%1 = clo&lt;GetValue&gt;(expr)</font>> color="black" fillcolor="white", style=filled]
    node6192 -> node6193 [color="black"]
    node6193_name [shape=none, label=<<font color="black">Call[6193]</font>>]
    node6193_name -> node6193 [arrowhead=none, color="black", style=dashed]
    node6193 [shape=cds, label=<<font color="black">%2 = clo&lt;ToNumeric&gt;([? %1])</font>> color="black" fillcolor="white", style=filled]
    node6193 -> node6194 [color="black"]
    node6194_name [shape=none, label=<<font color="black">Block[6194]</font>>]
    node6194_name -> node6194 [arrowhead=none, color="black", style=dashed]
    node6194 [shape=box, label=<<font color="black">[0] let oldValue = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6194 -> node6195 [color="black"]
    node6195_name [shape=none, label=<<font color="black">Branch[6195]</font>>]
    node6195_name -> node6195 [arrowhead=none, color="black", style=dashed]
    node6195 [shape=diamond, label=<<font color="black">(= (typeof oldValue) @Number)</font>> color="black" fillcolor="white", style=filled]
    node6195 -> node6196 [label=<<font color="black">true</font>> color="black"]
    node6195 -> node6198 [label=<<font color="black">false</font>> color="black"]
    node6196_name [shape=none, label=<<font color="black">Call[6196]</font>>]
    node6196_name -> node6196 [arrowhead=none, color="black", style=dashed]
    node6196 [shape=cds, label=<<font color="black">%3 = clo&lt;Number::subtract&gt;(oldValue, 1.0f)</font>> color="black" fillcolor="white", style=filled]
    node6196 -> node6197 [color="black"]
    node6198_name [shape=none, label=<<font color="black">Block[6198]</font>>]
    node6198_name -> node6198 [arrowhead=none, color="black", style=dashed]
    node6198 [shape=box, label=<<font color="black">[0] assert (= (typeof oldValue) @BigInt)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6198 -> node6199 [color="black"]
    node6197_name [shape=none, label=<<font color="black">Block[6197]</font>>]
    node6197_name -> node6197 [arrowhead=none, color="black", style=dashed]
    node6197 [shape=box, label=<<font color="black">[0] let newValue = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6197 -> node6201 [color="black"]
    node6199_name [shape=none, label=<<font color="black">Call[6199]</font>>]
    node6199_name -> node6199 [arrowhead=none, color="black", style=dashed]
    node6199 [shape=cds, label=<<font color="black">%4 = clo&lt;BigInt::subtract&gt;(oldValue, 1n)</font>> color="black" fillcolor="white", style=filled]
    node6199 -> node6200 [color="black"]
    node6201_name [shape=none, label=<<font color="black">Call[6201]</font>>]
    node6201_name -> node6201 [arrowhead=none, color="black", style=dashed]
    node6201 [shape=cds, label=<<font color="black">%5 = clo&lt;PutValue&gt;(expr, newValue)</font>> color="black" fillcolor="white", style=filled]
    node6201 -> node6202 [color="black"]
    node6200_name [shape=none, label=<<font color="black">Block[6200]</font>>]
    node6200_name -> node6200 [arrowhead=none, color="black", style=dashed]
    node6200 [shape=box, label=<<font color="black">[0] let newValue = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6200 -> node6201 [color="black"]
    node6202_name [shape=none, label=<<font color="black">Block[6202]</font>>]
    node6202_name -> node6202 [arrowhead=none, color="black", style=dashed]
    node6202 [shape=box, label=<<font color="black">[0] [? %5]<BR ALIGN="LEFT"/>[1] return newValue<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6202 -> cluster1304_exit [color="black"]
  }
}