digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1766 {
    label = "def <SYNTAX>:CaseBlock[1,2].HasCallInTailPosition(this: Ast:CaseBlock[1,2], call: Unknown): Boolean"
    style = rounded
    cluster1766_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1766_entry_name -> cluster1766_entry [arrowhead=none, color="black", style=dashed]
    cluster1766_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1766_entry -> node9792 [color="black"]
    cluster1766_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1766_exit_name -> cluster1766_exit [arrowhead=none, color="black", style=dashed]
    cluster1766_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9792_name [shape=none, label=<<font color="black">Block[9792]</font>>]
    node9792_name -> node9792 [arrowhead=none, color="black", style=dashed]
    node9792 [shape=box, label=<<font color="black">[0] let has = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9792 -> node9793 [color="black"]
    node9793_name [shape=none, label=<<font color="black">Branch[9793]</font>>]
    node9793_name -> node9793 [arrowhead=none, color="black", style=dashed]
    node9793 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node9793 -> node9794 [label=<<font color="black">true</font>> color="black"]
    node9793 -> node9796 [label=<<font color="black">false</font>> color="black"]
    node9794_name [shape=none, label=<<font color="black">Call[9794]</font>>]
    node9794_name -> node9794 [arrowhead=none, color="black", style=dashed]
    node9794 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9794 -> node9795 [color="black"]
    node9796_name [shape=none, label=<<font color="black">Branch[9796]</font>>]
    node9796_name -> node9796 [arrowhead=none, color="black", style=dashed]
    node9796 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white", style=filled]
    node9796 -> node9797 [label=<<font color="black">true</font>> color="black"]
    node9796 -> node9798 [label=<<font color="black">false</font>> color="black"]
    node9795_name [shape=none, label=<<font color="black">Block[9795]</font>>]
    node9795_name -> node9795 [arrowhead=none, color="black", style=dashed]
    node9795 [shape=box, label=<<font color="black">[0] let has = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9795 -> node9796 [color="black"]
    node9797_name [shape=none, label=<<font color="black">Block[9797]</font>>]
    node9797_name -> node9797 [arrowhead=none, color="black", style=dashed]
    node9797 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9797 -> cluster1766_exit [color="black"]
    node9798_name [shape=none, label=<<font color="black">Call[9798]</font>>]
    node9798_name -> node9798 [arrowhead=none, color="black", style=dashed]
    node9798 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9798 -> node9799 [color="black"]
    node9799_name [shape=none, label=<<font color="black">Block[9799]</font>>]
    node9799_name -> node9799 [arrowhead=none, color="black", style=dashed]
    node9799 [shape=box, label=<<font color="black">[0] let has = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9799 -> node9800 [color="black"]
    node9800_name [shape=none, label=<<font color="black">Branch[9800]</font>>]
    node9800_name -> node9800 [arrowhead=none, color="black", style=dashed]
    node9800 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white", style=filled]
    node9800 -> node9801 [label=<<font color="black">true</font>> color="black"]
    node9800 -> node9802 [label=<<font color="black">false</font>> color="black"]
    node9801_name [shape=none, label=<<font color="black">Block[9801]</font>>]
    node9801_name -> node9801 [arrowhead=none, color="black", style=dashed]
    node9801 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9801 -> cluster1766_exit [color="black"]
    node9802_name [shape=none, label=<<font color="black">Branch[9802]</font>>]
    node9802_name -> node9802 [arrowhead=none, color="black", style=dashed]
    node9802 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node9802 -> node9803 [label=<<font color="black">true</font>> color="black"]
    node9802 -> node9805 [label=<<font color="black">false</font>> color="black"]
    node9803_name [shape=none, label=<<font color="black">Call[9803]</font>>]
    node9803_name -> node9803 [arrowhead=none, color="black", style=dashed]
    node9803 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9803 -> node9804 [color="black"]
    node9805_name [shape=none, label=<<font color="black">Block[9805]</font>>]
    node9805_name -> node9805 [arrowhead=none, color="black", style=dashed]
    node9805 [shape=box, label=<<font color="black">[0] return has<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9805 -> cluster1766_exit [color="black"]
    node9804_name [shape=none, label=<<font color="black">Block[9804]</font>>]
    node9804_name -> node9804 [arrowhead=none, color="black", style=dashed]
    node9804 [shape=box, label=<<font color="black">[0] let has = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9804 -> node9805 [color="black"]
  }
}