digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster147 {
    label = "def LengthOfArrayLike(obj: Object): Unknown["EitherANormalCompletionContainingANonnegativeIntegerOrAnAbruptCompletion"]"
    style = rounded
    cluster147_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster147_entry_name -> cluster147_entry [arrowhead=none, color="black", style=dashed]
    cluster147_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster147_entry -> node1214 [color="black"]
    cluster147_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster147_exit_name -> cluster147_exit [arrowhead=none, color="black", style=dashed]
    cluster147_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1214_name [shape=none, label=<<font color="black">Call[1214]</font>>]
    node1214_name -> node1214 [arrowhead=none, color="black", style=dashed]
    node1214 [shape=cds, label=<<font color="black">%0 = clo&lt;Get&gt;(obj, &quot;length&quot;)</font>> color="black" fillcolor="white", style=filled]
    node1214 -> node1215 [color="black"]
    node1215_name [shape=none, label=<<font color="black">Call[1215]</font>>]
    node1215_name -> node1215 [arrowhead=none, color="black", style=dashed]
    node1215 [shape=cds, label=<<font color="black">%1 = clo&lt;ToLength&gt;([? %0])</font>> color="black" fillcolor="white", style=filled]
    node1215 -> node1216 [color="black"]
    node1216_name [shape=none, label=<<font color="black">Block[1216]</font>>]
    node1216_name -> node1216 [arrowhead=none, color="black", style=dashed]
    node1216 [shape=box, label=<<font color="black">[0] return ([math] [? %1])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1216 -> cluster147_exit [color="black"]
  }
}