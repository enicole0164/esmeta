digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1149 {
    label = "def SetImmutablePrototype(O: Unknown, V: Object | Null): Normal[Boolean] | Abrupt"
    style = rounded
    cluster1149_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1149_entry_name -> cluster1149_entry [arrowhead=none, color="black", style=dashed]
    cluster1149_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1149_entry -> node4997 [color="black"]
    cluster1149_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1149_exit_name -> cluster1149_exit [arrowhead=none, color="black", style=dashed]
    cluster1149_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4997_name [shape=none, label=<<font color="black">Call[4997]</font>>]
    node4997_name -> node4997 [arrowhead=none, color="black", style=dashed]
    node4997 [shape=cds, label=<<font color="black">%0 = O-&gt;GetPrototypeOf()</font>> color="black" fillcolor="white", style=filled]
    node4997 -> node4998 [color="black"]
    node4998_name [shape=none, label=<<font color="black">Block[4998]</font>>]
    node4998_name -> node4998 [arrowhead=none, color="black", style=dashed]
    node4998 [shape=box, label=<<font color="black">[0] let current = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4998 -> node4999 [color="black"]
    node4999_name [shape=none, label=<<font color="black">Call[4999]</font>>]
    node4999_name -> node4999 [arrowhead=none, color="black", style=dashed]
    node4999 [shape=cds, label=<<font color="black">%1 = clo&lt;SameValue&gt;(V, current)</font>> color="black" fillcolor="white", style=filled]
    node4999 -> node5000 [color="black"]
    node5000_name [shape=none, label=<<font color="black">Branch[5000]</font>>]
    node5000_name -> node5000 [arrowhead=none, color="black", style=dashed]
    node5000 [shape=diamond, label=<<font color="black">(= %1 true)</font>> color="black" fillcolor="white", style=filled]
    node5000 -> node5001 [label=<<font color="black">true</font>> color="black"]
    node5000 -> node5002 [label=<<font color="black">false</font>> color="black"]
    node5001_name [shape=none, label=<<font color="black">Block[5001]</font>>]
    node5001_name -> node5001 [arrowhead=none, color="black", style=dashed]
    node5001 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5001 -> cluster1149_exit [color="black"]
    node5002_name [shape=none, label=<<font color="black">Block[5002]</font>>]
    node5002_name -> node5002 [arrowhead=none, color="black", style=dashed]
    node5002 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5002 -> cluster1149_exit [color="black"]
  }
}