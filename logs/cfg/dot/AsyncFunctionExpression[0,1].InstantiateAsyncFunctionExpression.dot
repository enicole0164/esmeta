digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1707 {
    label = "def <SYNTAX>:AsyncFunctionExpression[0,1].InstantiateAsyncFunctionExpression(this: Ast:AsyncFunctionExpression[0,1], name?: Unknown): FunctionObject"
    style = rounded
    cluster1707_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1707_entry_name -> cluster1707_entry [arrowhead=none, color="black", style=dashed]
    cluster1707_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1707_entry -> node9601 [color="black"]
    cluster1707_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1707_exit_name -> cluster1707_exit [arrowhead=none, color="black", style=dashed]
    cluster1707_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9601_name [shape=none, label=<<font color="black">Block[9601]</font>>]
    node9601_name -> node9601 [arrowhead=none, color="black", style=dashed]
    node9601 [shape=box, label=<<font color="black">[0] assert (= name absent)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9601 -> node9602 [color="black"]
    node9602_name [shape=none, label=<<font color="black">Call[9602]</font>>]
    node9602_name -> node9602 [arrowhead=none, color="black", style=dashed]
    node9602 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;StringValue()</font>> color="black" fillcolor="white", style=filled]
    node9602 -> node9603 [color="black"]
    node9603_name [shape=none, label=<<font color="black">Block[9603]</font>>]
    node9603_name -> node9603 [arrowhead=none, color="black", style=dashed]
    node9603 [shape=box, label=<<font color="black">[0] name = %0<BR ALIGN="LEFT"/>[1] let outerEnv = @EXECUTION_STACK[0].LexicalEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9603 -> node9604 [color="black"]
    node9604_name [shape=none, label=<<font color="black">Call[9604]</font>>]
    node9604_name -> node9604 [arrowhead=none, color="black", style=dashed]
    node9604 [shape=cds, label=<<font color="black">%1 = clo&lt;NewDeclarativeEnvironment&gt;(outerEnv)</font>> color="black" fillcolor="white", style=filled]
    node9604 -> node9605 [color="black"]
    node9605_name [shape=none, label=<<font color="black">Block[9605]</font>>]
    node9605_name -> node9605 [arrowhead=none, color="black", style=dashed]
    node9605 [shape=box, label=<<font color="black">[0] let funcEnv = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9605 -> node9606 [color="black"]
    node9606_name [shape=none, label=<<font color="black">Call[9606]</font>>]
    node9606_name -> node9606 [arrowhead=none, color="black", style=dashed]
    node9606 [shape=cds, label=<<font color="black">%2 = funcEnv-&gt;CreateImmutableBinding(name, false)</font>> color="black" fillcolor="white", style=filled]
    node9606 -> node9607 [color="black"]
    node9607_name [shape=none, label=<<font color="black">Block[9607]</font>>]
    node9607_name -> node9607 [arrowhead=none, color="black", style=dashed]
    node9607 [shape=box, label=<<font color="black">[0] [! %2]<BR ALIGN="LEFT"/>[1] let privateEnv = @EXECUTION_STACK[0].PrivateEnvironment<BR ALIGN="LEFT"/>[2] let sourceText = (source-text this)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9607 -> node9608 [color="black"]
    node9608_name [shape=none, label=<<font color="black">Call[9608]</font>>]
    node9608_name -> node9608 [arrowhead=none, color="black", style=dashed]
    node9608 [shape=cds, label=<<font color="black">%3 = clo&lt;OrdinaryFunctionCreate&gt;(@EXECUTION_STACK[0].Realm.Intrinsics[&quot;%AsyncFunction.prototype%&quot;], sourceText, this[1], this[2], ~non-lexical-this~, funcEnv, privateEnv)</font>> color="black" fillcolor="white", style=filled]
    node9608 -> node9609 [color="black"]
    node9609_name [shape=none, label=<<font color="black">Block[9609]</font>>]
    node9609_name -> node9609 [arrowhead=none, color="black", style=dashed]
    node9609 [shape=box, label=<<font color="black">[0] let closure = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9609 -> node9610 [color="black"]
    node9610_name [shape=none, label=<<font color="black">Call[9610]</font>>]
    node9610_name -> node9610 [arrowhead=none, color="black", style=dashed]
    node9610 [shape=cds, label=<<font color="black">%4 = clo&lt;SetFunctionName&gt;(closure, name)</font>> color="black" fillcolor="white", style=filled]
    node9610 -> node9611 [color="black"]
    node9611_name [shape=none, label=<<font color="black">Call[9611]</font>>]
    node9611_name -> node9611 [arrowhead=none, color="black", style=dashed]
    node9611 [shape=cds, label=<<font color="black">%5 = funcEnv-&gt;InitializeBinding(name, closure)</font>> color="black" fillcolor="white", style=filled]
    node9611 -> node9612 [color="black"]
    node9612_name [shape=none, label=<<font color="black">Block[9612]</font>>]
    node9612_name -> node9612 [arrowhead=none, color="black", style=dashed]
    node9612 [shape=box, label=<<font color="black">[0] [! %5]<BR ALIGN="LEFT"/>[1] return closure<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9612 -> cluster1707_exit [color="black"]
  }
}