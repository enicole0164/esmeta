digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster853 {
    label = "def <SYNTAX>:ObjectBindingPattern[1,0].BindingInitialization(this: Ast:ObjectBindingPattern[1,0], value: Unknown, environment: Unknown): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster853_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster853_entry_name -> cluster853_entry [arrowhead=none, color="black", style=dashed]
    cluster853_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster853_entry -> node3207 [color="black"]
    cluster853_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster853_exit_name -> cluster853_exit [arrowhead=none, color="black", style=dashed]
    cluster853_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3207_name [shape=none, label=<<font color="black">Block[3207]</font>>]
    node3207_name -> node3207 [arrowhead=none, color="black", style=dashed]
    node3207 [shape=box, label=<<font color="black">[0] let excludedNames = (new [])[#365]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3207 -> node3208 [color="black"]
    node3208_name [shape=none, label=<<font color="black">Call[3208]</font>>]
    node3208_name -> node3208 [arrowhead=none, color="black", style=dashed]
    node3208 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;RestBindingInitialization(value, environment, excludedNames)</font>> color="black" fillcolor="white", style=filled]
    node3208 -> node3209 [color="black"]
    node3209_name [shape=none, label=<<font color="black">Block[3209]</font>>]
    node3209_name -> node3209 [arrowhead=none, color="black", style=dashed]
    node3209 [shape=box, label=<<font color="black">[0] return [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3209 -> cluster853_exit [color="black"]
  }
}