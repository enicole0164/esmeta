digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster5 {
    label = "def Await(value: Unknown): Unknown"
    style = rounded
    cluster5_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster5_entry_name -> cluster5_entry [arrowhead=none, color="black", style=dashed]
    cluster5_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster5_entry -> node21 [color="black"]
    cluster5_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster5_exit_name -> cluster5_exit [arrowhead=none, color="black", style=dashed]
    cluster5_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node21_name [shape=none, label=<<font color="black">Block[21]</font>>]
    node21_name -> node21 [arrowhead=none, color="black", style=dashed]
    node21 [shape=box, label=<<font color="black">[0] let asyncContext = @EXECUTION_STACK[0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node21 -> node22 [color="black"]
    node22_name [shape=none, label=<<font color="black">Call[22]</font>>]
    node22_name -> node22 [arrowhead=none, color="black", style=dashed]
    node22 [shape=cds, label=<<font color="black">%0 = clo&lt;PromiseResolve&gt;(@EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Promise%&quot;], value)</font>> color="black" fillcolor="white", style=filled]
    node22 -> node23 [color="black"]
    node23_name [shape=none, label=<<font color="black">Block[23]</font>>]
    node23_name -> node23 [arrowhead=none, color="black", style=dashed]
    node23 [shape=box, label=<<font color="black">[0] let promise = [? %0]<BR ALIGN="LEFT"/>[1] let fulfilledClosure = clo&lt;Await:clo0, [asyncContext]&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node23 -> node24 [color="black"]
    node24_name [shape=none, label=<<font color="black">Call[24]</font>>]
    node24_name -> node24 [arrowhead=none, color="black", style=dashed]
    node24 [shape=cds, label=<<font color="black">%1 = clo&lt;CreateBuiltinFunction&gt;(fulfilledClosure, 1, &quot;&quot;, (new [])[#2])</font>> color="black" fillcolor="white", style=filled]
    node24 -> node25 [color="black"]
    node25_name [shape=none, label=<<font color="black">Block[25]</font>>]
    node25_name -> node25 [arrowhead=none, color="black", style=dashed]
    node25 [shape=box, label=<<font color="black">[0] let onFulfilled = %1<BR ALIGN="LEFT"/>[1] let rejectedClosure = clo&lt;Await:clo1, [asyncContext]&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node25 -> node26 [color="black"]
    node26_name [shape=none, label=<<font color="black">Call[26]</font>>]
    node26_name -> node26 [arrowhead=none, color="black", style=dashed]
    node26 [shape=cds, label=<<font color="black">%2 = clo&lt;CreateBuiltinFunction&gt;(rejectedClosure, 1, &quot;&quot;, (new [])[#3])</font>> color="black" fillcolor="white", style=filled]
    node26 -> node27 [color="black"]
    node27_name [shape=none, label=<<font color="black">Block[27]</font>>]
    node27_name -> node27 [arrowhead=none, color="black", style=dashed]
    node27 [shape=box, label=<<font color="black">[0] let onRejected = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node27 -> node28 [color="black"]
    node28_name [shape=none, label=<<font color="black">Call[28]</font>>]
    node28_name -> node28 [arrowhead=none, color="black", style=dashed]
    node28 [shape=cds, label=<<font color="black">%3 = clo&lt;PerformPromiseThen&gt;(promise, onFulfilled, onRejected)</font>> color="black" fillcolor="white", style=filled]
    node28 -> node29 [color="black"]
    node29_name [shape=none, label=<<font color="black">Block[29]</font>>]
    node29_name -> node29 [arrowhead=none, color="black", style=dashed]
    node29 [shape=box, label=<<font color="black">[0] (pop &lt; @EXECUTION_STACK)<BR ALIGN="LEFT"/>[1] asyncContext.ResumeCont = cont&lt;Await:cont2&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node29 -> node30 [color="black"]
    node30_name [shape=none, label=<<font color="black">Call[30]</font>>]
    node30_name -> node30 [arrowhead=none, color="black", style=dashed]
    node30 [shape=cds, label=<<font color="black">%4 = clo&lt;NormalCompletion&gt;(~unused~)</font>> color="black" fillcolor="white", style=filled]
    node30 -> node31 [color="black"]
    node31_name [shape=none, label=<<font color="black">Call[31]</font>>]
    node31_name -> node31 [arrowhead=none, color="black", style=dashed]
    node31 [shape=cds, label=<<font color="black">%5 = (pop &lt; asyncContext.ReturnCont)(%4)</font>> color="black" fillcolor="white", style=filled]
    node31 -> cluster5_exit [color="black"]
  }
}