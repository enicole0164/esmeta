digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2542 {
    label = "def <BUILTIN>:INTRINSICS.Atomics.wait(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2542_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2542_entry_name -> cluster2542_entry [arrowhead=none, color="black", style=dashed]
    cluster2542_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2542_entry -> node18176 [color="black"]
    cluster2542_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2542_exit_name -> cluster2542_exit [arrowhead=none, color="black", style=dashed]
    cluster2542_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node18176_name [shape=none, label=<<font color="black">Branch[18176]</font>>]
    node18176_name -> node18176 [arrowhead=none, color="black", style=dashed]
    node18176 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node18176 -> node18177 [label=<<font color="black">true</font>> color="black"]
    node18176 -> node18178 [label=<<font color="black">false</font>> color="black"]
    node18177_name [shape=none, label=<<font color="black">Block[18177]</font>>]
    node18177_name -> node18177 [arrowhead=none, color="black", style=dashed]
    node18177 [shape=box, label=<<font color="black">[0] let typedArray = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18177 -> node18179 [color="black"]
    node18178_name [shape=none, label=<<font color="black">Block[18178]</font>>]
    node18178_name -> node18178 [arrowhead=none, color="black", style=dashed]
    node18178 [shape=box, label=<<font color="black">[0] let typedArray = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18178 -> node18179 [color="black"]
    node18179_name [shape=none, label=<<font color="black">Branch[18179]</font>>]
    node18179_name -> node18179 [arrowhead=none, color="black", style=dashed]
    node18179 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node18179 -> node18180 [label=<<font color="black">true</font>> color="black"]
    node18179 -> node18181 [label=<<font color="black">false</font>> color="black"]
    node18180_name [shape=none, label=<<font color="black">Block[18180]</font>>]
    node18180_name -> node18180 [arrowhead=none, color="black", style=dashed]
    node18180 [shape=box, label=<<font color="black">[0] let index = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18180 -> node18182 [color="black"]
    node18181_name [shape=none, label=<<font color="black">Block[18181]</font>>]
    node18181_name -> node18181 [arrowhead=none, color="black", style=dashed]
    node18181 [shape=box, label=<<font color="black">[0] let index = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18181 -> node18182 [color="black"]
    node18182_name [shape=none, label=<<font color="black">Branch[18182]</font>>]
    node18182_name -> node18182 [arrowhead=none, color="black", style=dashed]
    node18182 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node18182 -> node18183 [label=<<font color="black">true</font>> color="black"]
    node18182 -> node18184 [label=<<font color="black">false</font>> color="black"]
    node18183_name [shape=none, label=<<font color="black">Block[18183]</font>>]
    node18183_name -> node18183 [arrowhead=none, color="black", style=dashed]
    node18183 [shape=box, label=<<font color="black">[0] let value = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18183 -> node18185 [color="black"]
    node18184_name [shape=none, label=<<font color="black">Block[18184]</font>>]
    node18184_name -> node18184 [arrowhead=none, color="black", style=dashed]
    node18184 [shape=box, label=<<font color="black">[0] let value = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18184 -> node18185 [color="black"]
    node18185_name [shape=none, label=<<font color="black">Branch[18185]</font>>]
    node18185_name -> node18185 [arrowhead=none, color="black", style=dashed]
    node18185 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node18185 -> node18186 [label=<<font color="black">true</font>> color="black"]
    node18185 -> node18187 [label=<<font color="black">false</font>> color="black"]
    node18186_name [shape=none, label=<<font color="black">Block[18186]</font>>]
    node18186_name -> node18186 [arrowhead=none, color="black", style=dashed]
    node18186 [shape=box, label=<<font color="black">[0] let timeout = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18186 -> node18188 [color="black"]
    node18187_name [shape=none, label=<<font color="black">Block[18187]</font>>]
    node18187_name -> node18187 [arrowhead=none, color="black", style=dashed]
    node18187 [shape=box, label=<<font color="black">[0] let timeout = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18187 -> node18188 [color="black"]
    node18188_name [shape=none, label=<<font color="black">Call[18188]</font>>]
    node18188_name -> node18188 [arrowhead=none, color="black", style=dashed]
    node18188 [shape=cds, label=<<font color="black">%0 = clo&lt;ValidateIntegerTypedArray&gt;(typedArray, true)</font>> color="black" fillcolor="white", style=filled]
    node18188 -> node18189 [color="black"]
    node18189_name [shape=none, label=<<font color="black">Block[18189]</font>>]
    node18189_name -> node18189 [arrowhead=none, color="black", style=dashed]
    node18189 [shape=box, label=<<font color="black">[0] let buffer = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18189 -> node18190 [color="black"]
    node18190_name [shape=none, label=<<font color="black">Call[18190]</font>>]
    node18190_name -> node18190 [arrowhead=none, color="black", style=dashed]
    node18190 [shape=cds, label=<<font color="black">%1 = clo&lt;IsSharedArrayBuffer&gt;(buffer)</font>> color="black" fillcolor="white", style=filled]
    node18190 -> node18191 [color="black"]
    node18191_name [shape=none, label=<<font color="black">Branch[18191]</font>>]
    node18191_name -> node18191 [arrowhead=none, color="black", style=dashed]
    node18191 [shape=diamond, label=<<font color="black">(= %1 false)</font>> color="black" fillcolor="white", style=filled]
    node18191 -> node18192 [label=<<font color="black">true</font>> color="black"]
    node18191 -> node18193 [label=<<font color="black">false</font>> color="black"]
    node18192_name [shape=none, label=<<font color="black">Block[18192]</font>>]
    node18192_name -> node18192 [arrowhead=none, color="black", style=dashed]
    node18192 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1191])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18192 -> cluster2542_exit [color="black"]
    node18193_name [shape=none, label=<<font color="black">Call[18193]</font>>]
    node18193_name -> node18193 [arrowhead=none, color="black", style=dashed]
    node18193 [shape=cds, label=<<font color="black">%2 = clo&lt;ValidateAtomicAccess&gt;(typedArray, index)</font>> color="black" fillcolor="white", style=filled]
    node18193 -> node18194 [color="black"]
    node18194_name [shape=none, label=<<font color="black">Block[18194]</font>>]
    node18194_name -> node18194 [arrowhead=none, color="black", style=dashed]
    node18194 [shape=box, label=<<font color="black">[0] let indexedPosition = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18194 -> node18195 [color="black"]
    node18195_name [shape=none, label=<<font color="black">Branch[18195]</font>>]
    node18195_name -> node18195 [arrowhead=none, color="black", style=dashed]
    node18195 [shape=diamond, label=<<font color="black">(= typedArray.TypedArrayName &quot;BigInt64Array&quot;)</font>> color="black" fillcolor="white", style=filled]
    node18195 -> node18196 [label=<<font color="black">true</font>> color="black"]
    node18195 -> node18198 [label=<<font color="black">false</font>> color="black"]
    node18196_name [shape=none, label=<<font color="black">Call[18196]</font>>]
    node18196_name -> node18196 [arrowhead=none, color="black", style=dashed]
    node18196 [shape=cds, label=<<font color="black">%3 = clo&lt;ToBigInt64&gt;(value)</font>> color="black" fillcolor="white", style=filled]
    node18196 -> node18197 [color="black"]
    node18198_name [shape=none, label=<<font color="black">Call[18198]</font>>]
    node18198_name -> node18198 [arrowhead=none, color="black", style=dashed]
    node18198 [shape=cds, label=<<font color="black">%4 = clo&lt;ToInt32&gt;(value)</font>> color="black" fillcolor="white", style=filled]
    node18198 -> node18199 [color="black"]
    node18197_name [shape=none, label=<<font color="black">Block[18197]</font>>]
    node18197_name -> node18197 [arrowhead=none, color="black", style=dashed]
    node18197 [shape=box, label=<<font color="black">[0] let v = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18197 -> node18200 [color="black"]
    node18199_name [shape=none, label=<<font color="black">Block[18199]</font>>]
    node18199_name -> node18199 [arrowhead=none, color="black", style=dashed]
    node18199 [shape=box, label=<<font color="black">[0] let v = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18199 -> node18200 [color="black"]
    node18200_name [shape=none, label=<<font color="black">Call[18200]</font>>]
    node18200_name -> node18200 [arrowhead=none, color="black", style=dashed]
    node18200 [shape=cds, label=<<font color="black">%5 = clo&lt;ToNumber&gt;(timeout)</font>> color="black" fillcolor="white", style=filled]
    node18200 -> node18201 [color="black"]
    node18201_name [shape=none, label=<<font color="black">Block[18201]</font>>]
    node18201_name -> node18201 [arrowhead=none, color="black", style=dashed]
    node18201 [shape=box, label=<<font color="black">[0] let q = [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18201 -> node18202 [color="black"]
    node18202_name [shape=none, label=<<font color="black">Branch[18202]</font>>]
    node18202_name -> node18202 [arrowhead=none, color="black", style=dashed]
    node18202 [shape=diamond, label=<<font color="black">(|| (= q NaN) (= q +INF))</font>> color="black" fillcolor="white", style=filled]
    node18202 -> node18203 [label=<<font color="black">true</font>> color="black"]
    node18202 -> node18204 [label=<<font color="black">false</font>> color="black"]
    node18203_name [shape=none, label=<<font color="black">Block[18203]</font>>]
    node18203_name -> node18203 [arrowhead=none, color="black", style=dashed]
    node18203 [shape=box, label=<<font color="black">[0] let t = +INF<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18203 -> node18207 [color="black"]
    node18204_name [shape=none, label=<<font color="black">Branch[18204]</font>>]
    node18204_name -> node18204 [arrowhead=none, color="black", style=dashed]
    node18204 [shape=diamond, label=<<font color="black">(= q -INF)</font>> color="black" fillcolor="white", style=filled]
    node18204 -> node18205 [label=<<font color="black">true</font>> color="black"]
    node18204 -> node18206 [label=<<font color="black">false</font>> color="black"]
    node18207_name [shape=none, label=<<font color="black">Call[18207]</font>>]
    node18207_name -> node18207 [arrowhead=none, color="black", style=dashed]
    node18207 [shape=cds, label=<<font color="black">%6 = clo&lt;AgentCanSuspend&gt;()</font>> color="black" fillcolor="white", style=filled]
    node18207 -> node18208 [color="black"]
    node18205_name [shape=none, label=<<font color="black">Block[18205]</font>>]
    node18205_name -> node18205 [arrowhead=none, color="black", style=dashed]
    node18205 [shape=box, label=<<font color="black">[0] let t = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18205 -> node18207 [color="black"]
    node18206_name [shape=none, label=<<font color="black">Block[18206]</font>>]
    node18206_name -> node18206 [arrowhead=none, color="black", style=dashed]
    node18206 [shape=box, label=<<font color="black">[0] let t = (max ([math] q) 0)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18206 -> node18207 [color="black"]
    node18208_name [shape=none, label=<<font color="black">Block[18208]</font>>]
    node18208_name -> node18208 [arrowhead=none, color="black", style=dashed]
    node18208 [shape=box, label=<<font color="black">[0] let B = %6<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18208 -> node18209 [color="black"]
    node18209_name [shape=none, label=<<font color="black">Branch[18209]</font>>]
    node18209_name -> node18209 [arrowhead=none, color="black", style=dashed]
    node18209 [shape=diamond, label=<<font color="black">(= B false)</font>> color="black" fillcolor="white", style=filled]
    node18209 -> node18210 [label=<<font color="black">true</font>> color="black"]
    node18209 -> node18211 [label=<<font color="black">false</font>> color="black"]
    node18210_name [shape=none, label=<<font color="black">Block[18210]</font>>]
    node18210_name -> node18210 [arrowhead=none, color="black", style=dashed]
    node18210 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1192])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18210 -> cluster2542_exit [color="black"]
    node18211_name [shape=none, label=<<font color="black">Block[18211]</font>>]
    node18211_name -> node18211 [arrowhead=none, color="black", style=dashed]
    node18211 [shape=box, label=<<font color="black">[0] let block = buffer.ArrayBufferData<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18211 -> node18212 [color="black"]
    node18212_name [shape=none, label=<<font color="black">Call[18212]</font>>]
    node18212_name -> node18212 [arrowhead=none, color="black", style=dashed]
    node18212 [shape=cds, label=<<font color="black">%7 = clo&lt;GetWaiterList&gt;(block, indexedPosition)</font>> color="black" fillcolor="white", style=filled]
    node18212 -> node18213 [color="black"]
    node18213_name [shape=none, label=<<font color="black">Block[18213]</font>>]
    node18213_name -> node18213 [arrowhead=none, color="black", style=dashed]
    node18213 [shape=box, label=<<font color="black">[0] let WL = %7<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18213 -> node18214 [color="black"]
    node18214_name [shape=none, label=<<font color="black">Call[18214]</font>>]
    node18214_name -> node18214 [arrowhead=none, color="black", style=dashed]
    node18214 [shape=cds, label=<<font color="black">%8 = clo&lt;EnterCriticalSection&gt;(WL)</font>> color="black" fillcolor="white", style=filled]
    node18214 -> node18215 [color="black"]
    node18215_name [shape=none, label=<<font color="black">Call[18215]</font>>]
    node18215_name -> node18215 [arrowhead=none, color="black", style=dashed]
    node18215 [shape=cds, label=<<font color="black">%9 = clo&lt;TypedArrayElementType&gt;(typedArray)</font>> color="black" fillcolor="white", style=filled]
    node18215 -> node18216 [color="black"]
    node18216_name [shape=none, label=<<font color="black">Block[18216]</font>>]
    node18216_name -> node18216 [arrowhead=none, color="black", style=dashed]
    node18216 [shape=box, label=<<font color="black">[0] let elementType = %9<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18216 -> node18217 [color="black"]
    node18217_name [shape=none, label=<<font color="black">Call[18217]</font>>]
    node18217_name -> node18217 [arrowhead=none, color="black", style=dashed]
    node18217 [shape=cds, label=<<font color="black">%10 = clo&lt;GetValueFromBuffer&gt;(buffer, indexedPosition, elementType, true, ~SeqCst~)</font>> color="black" fillcolor="white", style=filled]
    node18217 -> node18218 [color="black"]
    node18218_name [shape=none, label=<<font color="black">Block[18218]</font>>]
    node18218_name -> node18218 [arrowhead=none, color="black", style=dashed]
    node18218 [shape=box, label=<<font color="black">[0] let w = %10<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18218 -> node18219 [color="black"]
    node18219_name [shape=none, label=<<font color="black">Branch[18219]</font>>]
    node18219_name -> node18219 [arrowhead=none, color="black", style=dashed]
    node18219 [shape=diamond, label=<<font color="black">(! (== v w))</font>> color="black" fillcolor="white", style=filled]
    node18219 -> node18220 [label=<<font color="black">true</font>> color="black"]
    node18219 -> node18222 [label=<<font color="black">false</font>> color="black"]
    node18220_name [shape=none, label=<<font color="black">Call[18220]</font>>]
    node18220_name -> node18220 [arrowhead=none, color="black", style=dashed]
    node18220 [shape=cds, label=<<font color="black">%11 = clo&lt;LeaveCriticalSection&gt;(WL)</font>> color="black" fillcolor="white", style=filled]
    node18220 -> node18221 [color="black"]
    node18222_name [shape=none, label=<<font color="black">Call[18222]</font>>]
    node18222_name -> node18222 [arrowhead=none, color="black", style=dashed]
    node18222 [shape=cds, label=<<font color="black">%12 = clo&lt;AgentSignifier&gt;()</font>> color="black" fillcolor="white", style=filled]
    node18222 -> node18223 [color="black"]
    node18221_name [shape=none, label=<<font color="black">Block[18221]</font>>]
    node18221_name -> node18221 [arrowhead=none, color="black", style=dashed]
    node18221 [shape=box, label=<<font color="black">[0] return &quot;not-equal&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18221 -> cluster2542_exit [color="black"]
    node18223_name [shape=none, label=<<font color="black">Block[18223]</font>>]
    node18223_name -> node18223 [arrowhead=none, color="black", style=dashed]
    node18223 [shape=box, label=<<font color="black">[0] let W = %12<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18223 -> node18224 [color="black"]
    node18224_name [shape=none, label=<<font color="black">Call[18224]</font>>]
    node18224_name -> node18224 [arrowhead=none, color="black", style=dashed]
    node18224 [shape=cds, label=<<font color="black">%13 = clo&lt;AddWaiter&gt;(WL, W)</font>> color="black" fillcolor="white", style=filled]
    node18224 -> node18225 [color="black"]
    node18225_name [shape=none, label=<<font color="black">Call[18225]</font>>]
    node18225_name -> node18225 [arrowhead=none, color="black", style=dashed]
    node18225 [shape=cds, label=<<font color="black">%14 = clo&lt;SuspendAgent&gt;(WL, W, t)</font>> color="black" fillcolor="white", style=filled]
    node18225 -> node18226 [color="black"]
    node18226_name [shape=none, label=<<font color="black">Block[18226]</font>>]
    node18226_name -> node18226 [arrowhead=none, color="black", style=dashed]
    node18226 [shape=box, label=<<font color="black">[0] let notified = %14<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18226 -> node18227 [color="black"]
    node18227_name [shape=none, label=<<font color="black">Branch[18227]</font>>]
    node18227_name -> node18227 [arrowhead=none, color="black", style=dashed]
    node18227 [shape=diamond, label=<<font color="black">(= notified true)</font>> color="black" fillcolor="white", style=filled]
    node18227 -> node18228 [label=<<font color="black">true</font>> color="black"]
    node18227 -> node18229 [label=<<font color="black">false</font>> color="black"]
    node18228_name [shape=none, label=<<font color="black">Block[18228]</font>>]
    node18228_name -> node18228 [arrowhead=none, color="black", style=dashed]
    node18228 [shape=box, label=<<font color="black">[0] assert (yet &quot;_W_ is not on the list of waiters in _WL_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18228 -> node18230 [color="black"]
    node18229_name [shape=none, label=<<font color="black">Call[18229]</font>>]
    node18229_name -> node18229 [arrowhead=none, color="black", style=dashed]
    node18229 [shape=cds, label=<<font color="black">%15 = clo&lt;RemoveWaiter&gt;(WL, W)</font>> color="black" fillcolor="white", style=filled]
    node18229 -> node18230 [color="black"]
    node18230_name [shape=none, label=<<font color="black">Call[18230]</font>>]
    node18230_name -> node18230 [arrowhead=none, color="black", style=dashed]
    node18230 [shape=cds, label=<<font color="black">%16 = clo&lt;LeaveCriticalSection&gt;(WL)</font>> color="black" fillcolor="white", style=filled]
    node18230 -> node18231 [color="black"]
    node18231_name [shape=none, label=<<font color="black">Branch[18231]</font>>]
    node18231_name -> node18231 [arrowhead=none, color="black", style=dashed]
    node18231 [shape=diamond, label=<<font color="black">(= notified true)</font>> color="black" fillcolor="white", style=filled]
    node18231 -> node18232 [label=<<font color="black">true</font>> color="black"]
    node18231 -> node18233 [label=<<font color="black">false</font>> color="black"]
    node18232_name [shape=none, label=<<font color="black">Block[18232]</font>>]
    node18232_name -> node18232 [arrowhead=none, color="black", style=dashed]
    node18232 [shape=box, label=<<font color="black">[0] return &quot;ok&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18232 -> cluster2542_exit [color="black"]
    node18233_name [shape=none, label=<<font color="black">Block[18233]</font>>]
    node18233_name -> node18233 [arrowhead=none, color="black", style=dashed]
    node18233 [shape=box, label=<<font color="black">[0] return &quot;timed-out&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18233 -> cluster2542_exit [color="black"]
  }
}