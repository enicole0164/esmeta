digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2037 {
    label = "def <BUILTIN>:INTRINSICS.Function.prototype.call(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2037_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2037_entry_name -> cluster2037_entry [arrowhead=none, color="black", style=dashed]
    cluster2037_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2037_entry -> node11601 [color="black"]
    cluster2037_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2037_exit_name -> cluster2037_exit [arrowhead=none, color="black", style=dashed]
    cluster2037_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11601_name [shape=none, label=<<font color="black">Branch[11601]</font>>]
    node11601_name -> node11601 [arrowhead=none, color="black", style=dashed]
    node11601 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11601 -> node11602 [label=<<font color="black">true</font>> color="black"]
    node11601 -> node11603 [label=<<font color="black">false</font>> color="black"]
    node11602_name [shape=none, label=<<font color="black">Block[11602]</font>>]
    node11602_name -> node11602 [arrowhead=none, color="black", style=dashed]
    node11602 [shape=box, label=<<font color="black">[0] let thisArg = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11602 -> node11604 [color="black"]
    node11603_name [shape=none, label=<<font color="black">Block[11603]</font>>]
    node11603_name -> node11603 [arrowhead=none, color="black", style=dashed]
    node11603 [shape=box, label=<<font color="black">[0] let thisArg = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11603 -> node11604 [color="black"]
    node11604_name [shape=none, label=<<font color="black">Block[11604]</font>>]
    node11604_name -> node11604 [arrowhead=none, color="black", style=dashed]
    node11604 [shape=box, label=<<font color="black">[0] let args = argumentsList<BR ALIGN="LEFT"/>[1] let func = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11604 -> node11605 [color="black"]
    node11605_name [shape=none, label=<<font color="black">Call[11605]</font>>]
    node11605_name -> node11605 [arrowhead=none, color="black", style=dashed]
    node11605 [shape=cds, label=<<font color="black">%0 = clo&lt;IsCallable&gt;(func)</font>> color="black" fillcolor="white", style=filled]
    node11605 -> node11606 [color="black"]
    node11606_name [shape=none, label=<<font color="black">Branch[11606]</font>>]
    node11606_name -> node11606 [arrowhead=none, color="black", style=dashed]
    node11606 [shape=diamond, label=<<font color="black">(= %0 false)</font>> color="black" fillcolor="white", style=filled]
    node11606 -> node11607 [label=<<font color="black">true</font>> color="black"]
    node11606 -> node11608 [label=<<font color="black">false</font>> color="black"]
    node11607_name [shape=none, label=<<font color="black">Block[11607]</font>>]
    node11607_name -> node11607 [arrowhead=none, color="black", style=dashed]
    node11607 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#912])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11607 -> cluster2037_exit [color="black"]
    node11608_name [shape=none, label=<<font color="black">Call[11608]</font>>]
    node11608_name -> node11608 [arrowhead=none, color="black", style=dashed]
    node11608 [shape=cds, label=<<font color="black">%1 = clo&lt;PrepareForTailCall&gt;()</font>> color="black" fillcolor="white", style=filled]
    node11608 -> node11609 [color="black"]
    node11609_name [shape=none, label=<<font color="black">Call[11609]</font>>]
    node11609_name -> node11609 [arrowhead=none, color="black", style=dashed]
    node11609 [shape=cds, label=<<font color="black">%2 = clo&lt;Call&gt;(func, thisArg, args)</font>> color="black" fillcolor="white", style=filled]
    node11609 -> node11610 [color="black"]
    node11610_name [shape=none, label=<<font color="black">Block[11610]</font>>]
    node11610_name -> node11610 [arrowhead=none, color="black", style=dashed]
    node11610 [shape=box, label=<<font color="black">[0] return [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11610 -> cluster2037_exit [color="black"]
  }
}