digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster436 {
    label = "def <SYNTAX>:CaseClauses[1,0].VarScopedDeclarations(this: Ast:CaseClauses[1,0]): List[Ast]"
    style = rounded
    cluster436_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster436_entry_name -> cluster436_entry [arrowhead=none, color="black", style=dashed]
    cluster436_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster436_entry -> node2204 [color="black"]
    cluster436_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster436_exit_name -> cluster436_exit [arrowhead=none, color="black", style=dashed]
    cluster436_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2204_name [shape=none, label=<<font color="black">Call[2204]</font>>]
    node2204_name -> node2204 [arrowhead=none, color="black", style=dashed]
    node2204 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2204 -> node2205 [color="black"]
    node2205_name [shape=none, label=<<font color="black">Block[2205]</font>>]
    node2205_name -> node2205 [arrowhead=none, color="black", style=dashed]
    node2205 [shape=box, label=<<font color="black">[0] let declarations1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2205 -> node2206 [color="black"]
    node2206_name [shape=none, label=<<font color="black">Call[2206]</font>>]
    node2206_name -> node2206 [arrowhead=none, color="black", style=dashed]
    node2206 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2206 -> node2207 [color="black"]
    node2207_name [shape=none, label=<<font color="black">Block[2207]</font>>]
    node2207_name -> node2207 [arrowhead=none, color="black", style=dashed]
    node2207 [shape=box, label=<<font color="black">[0] let declarations2 = %1<BR ALIGN="LEFT"/>[1] return (list-concat declarations1 declarations2)[#262]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2207 -> cluster436_exit [color="black"]
  }
}