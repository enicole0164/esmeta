digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1385 {
    label = "def BlockDeclarationInstantiation(code: Ast, env: DeclarativeEnvironmentRecord): Const[~unused~]"
    style = rounded
    cluster1385_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1385_entry_name -> cluster1385_entry [arrowhead=none, color="black", style=dashed]
    cluster1385_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1385_entry -> node7155 [color="black"]
    cluster1385_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1385_exit_name -> cluster1385_exit [arrowhead=none, color="black", style=dashed]
    cluster1385_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7155_name [shape=none, label=<<font color="black">Call[7155]</font>>]
    node7155_name -> node7155 [arrowhead=none, color="black", style=dashed]
    node7155 [shape=cds, label=<<font color="black">%0 = code-&gt;LexicallyScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node7155 -> node7156 [color="black"]
    node7156_name [shape=none, label=<<font color="black">Block[7156]</font>>]
    node7156_name -> node7156 [arrowhead=none, color="black", style=dashed]
    node7156 [shape=box, label=<<font color="black">[0] let declarations = %0<BR ALIGN="LEFT"/>[1] let privateEnv = @EXECUTION_STACK[0].PrivateEnvironment<BR ALIGN="LEFT"/>[2] %2 = declarations<BR ALIGN="LEFT"/>[3] %1 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7156 -> node7157 [color="black"]
    node7157_name [shape=none, label=<<font color="black">Branch[7157]</font>>]
    node7157_name -> node7157 [arrowhead=none, color="black", style=dashed]
    node7157 [shape=diamond, label=<<font color="black">(&lt; %1 %2.length)</font>> color="black" fillcolor="white", style=filled]
    node7157 -> node7158 [label=<<font color="black">true</font>> color="black"]
    node7157 -> node7178 [label=<<font color="black">false</font>> color="black"]
    node7158_name [shape=none, label=<<font color="black">Block[7158]</font>>]
    node7158_name -> node7158 [arrowhead=none, color="black", style=dashed]
    node7158 [shape=box, label=<<font color="black">[0] let d = %2[%1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7158 -> node7159 [color="black"]
    node7178_name [shape=none, label=<<font color="black">Block[7178]</font>>]
    node7178_name -> node7178 [arrowhead=none, color="black", style=dashed]
    node7178 [shape=box, label=<<font color="black">[0] return ~unused~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7178 -> cluster1385_exit [color="black"]
    node7159_name [shape=none, label=<<font color="black">Call[7159]</font>>]
    node7159_name -> node7159 [arrowhead=none, color="black", style=dashed]
    node7159 [shape=cds, label=<<font color="black">%5 = d-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node7159 -> node7160 [color="black"]
    node7160_name [shape=none, label=<<font color="black">Block[7160]</font>>]
    node7160_name -> node7160 [arrowhead=none, color="black", style=dashed]
    node7160 [shape=box, label=<<font color="black">[0] %4 = %5<BR ALIGN="LEFT"/>[1] %3 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7160 -> node7161 [color="black"]
    node7161_name [shape=none, label=<<font color="black">Branch[7161]</font>>]
    node7161_name -> node7161 [arrowhead=none, color="black", style=dashed]
    node7161 [shape=diamond, label=<<font color="black">(&lt; %3 %4.length)</font>> color="black" fillcolor="white", style=filled]
    node7161 -> node7162 [label=<<font color="black">true</font>> color="black"]
    node7161 -> node7170 [label=<<font color="black">false</font>> color="black"]
    node7162_name [shape=none, label=<<font color="black">Block[7162]</font>>]
    node7162_name -> node7162 [arrowhead=none, color="black", style=dashed]
    node7162 [shape=box, label=<<font color="black">[0] let dn = %4[%3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7162 -> node7163 [color="black"]
    node7170_name [shape=none, label=<<font color="black">Branch[7170]</font>>]
    node7170_name -> node7170 [arrowhead=none, color="black", style=dashed]
    node7170 [shape=diamond, label=<<font color="black">(|| (|| (|| (? d: &quot;FunctionDeclaration&quot;) (? d: &quot;GeneratorDeclaration&quot;)) (? d: &quot;AsyncFunctionDeclaration&quot;)) (? d: &quot;AsyncGeneratorDeclaration&quot;))</font>> color="black" fillcolor="white", style=filled]
    node7170 -> node7171 [label=<<font color="black">true</font>> color="black"]
    node7170 -> node7177 [label=<<font color="black">false</font>> color="black"]
    node7163_name [shape=none, label=<<font color="black">Call[7163]</font>>]
    node7163_name -> node7163 [arrowhead=none, color="black", style=dashed]
    node7163 [shape=cds, label=<<font color="black">%6 = d-&gt;IsConstantDeclaration()</font>> color="black" fillcolor="white", style=filled]
    node7163 -> node7164 [color="black"]
    node7171_name [shape=none, label=<<font color="black">Call[7171]</font>>]
    node7171_name -> node7171 [arrowhead=none, color="black", style=dashed]
    node7171 [shape=cds, label=<<font color="black">%9 = d-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node7171 -> node7172 [color="black"]
    node7177_name [shape=none, label=<<font color="black">Block[7177]</font>>]
    node7177_name -> node7177 [arrowhead=none, color="black", style=dashed]
    node7177 [shape=box, label=<<font color="black">[0] %1 = (+ %1 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7177 -> node7157 [color="black"]
    node7164_name [shape=none, label=<<font color="black">Branch[7164]</font>>]
    node7164_name -> node7164 [arrowhead=none, color="black", style=dashed]
    node7164 [shape=diamond, label=<<font color="black">(= %6 true)</font>> color="black" fillcolor="white", style=filled]
    node7164 -> node7165 [label=<<font color="black">true</font>> color="black"]
    node7164 -> node7167 [label=<<font color="black">false</font>> color="black"]
    node7172_name [shape=none, label=<<font color="black">Block[7172]</font>>]
    node7172_name -> node7172 [arrowhead=none, color="black", style=dashed]
    node7172 [shape=box, label=<<font color="black">[0] let fn = %9[0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7172 -> node7173 [color="black"]
    node7165_name [shape=none, label=<<font color="black">Call[7165]</font>>]
    node7165_name -> node7165 [arrowhead=none, color="black", style=dashed]
    node7165 [shape=cds, label=<<font color="black">%7 = env-&gt;CreateImmutableBinding(dn, true)</font>> color="black" fillcolor="white", style=filled]
    node7165 -> node7166 [color="black"]
    node7167_name [shape=none, label=<<font color="black">Call[7167]</font>>]
    node7167_name -> node7167 [arrowhead=none, color="black", style=dashed]
    node7167 [shape=cds, label=<<font color="black">%8 = env-&gt;CreateMutableBinding(dn, false)</font>> color="black" fillcolor="white", style=filled]
    node7167 -> node7168 [color="black"]
    node7173_name [shape=none, label=<<font color="black">Call[7173]</font>>]
    node7173_name -> node7173 [arrowhead=none, color="black", style=dashed]
    node7173 [shape=cds, label=<<font color="black">%10 = d-&gt;InstantiateFunctionObject(env, privateEnv)</font>> color="black" fillcolor="white", style=filled]
    node7173 -> node7174 [color="black"]
    node7166_name [shape=none, label=<<font color="black">Block[7166]</font>>]
    node7166_name -> node7166 [arrowhead=none, color="black", style=dashed]
    node7166 [shape=box, label=<<font color="black">[0] [! %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7166 -> node7169 [color="black"]
    node7168_name [shape=none, label=<<font color="black">Block[7168]</font>>]
    node7168_name -> node7168 [arrowhead=none, color="black", style=dashed]
    node7168 [shape=box, label=<<font color="black">[0] [! %8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7168 -> node7169 [color="black"]
    node7174_name [shape=none, label=<<font color="black">Block[7174]</font>>]
    node7174_name -> node7174 [arrowhead=none, color="black", style=dashed]
    node7174 [shape=box, label=<<font color="black">[0] let fo = %10<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7174 -> node7175 [color="black"]
    node7169_name [shape=none, label=<<font color="black">Block[7169]</font>>]
    node7169_name -> node7169 [arrowhead=none, color="black", style=dashed]
    node7169 [shape=box, label=<<font color="black">[0] %3 = (+ %3 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7169 -> node7161 [color="black"]
    node7175_name [shape=none, label=<<font color="black">Call[7175]</font>>]
    node7175_name -> node7175 [arrowhead=none, color="black", style=dashed]
    node7175 [shape=cds, label=<<font color="black">%11 = env-&gt;InitializeBinding(fn, fo)</font>> color="black" fillcolor="white", style=filled]
    node7175 -> node7176 [color="black"]
    node7176_name [shape=none, label=<<font color="black">Block[7176]</font>>]
    node7176_name -> node7176 [arrowhead=none, color="black", style=dashed]
    node7176 [shape=box, label=<<font color="black">[0] [! %11]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7176 -> node7177 [color="black"]
  }
}