digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1981 {
    label = "def <SYNTAX>:ExportDeclaration[6,0].Evaluation(this: Ast:ExportDeclaration[6,0]): Unknown"
    style = rounded
    cluster1981_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1981_entry_name -> cluster1981_entry [arrowhead=none, color="black", style=dashed]
    cluster1981_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1981_entry -> node10700 [color="black"]
    cluster1981_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1981_exit_name -> cluster1981_exit [arrowhead=none, color="black", style=dashed]
    cluster1981_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node10700_name [shape=none, label=<<font color="black">Call[10700]</font>>]
    node10700_name -> node10700 [arrowhead=none, color="black", style=dashed]
    node10700 [shape=cds, label=<<font color="black">%0 = clo&lt;IsAnonymousFunctionDefinition&gt;(this[0])</font>> color="black" fillcolor="white", style=filled]
    node10700 -> node10701 [color="black"]
    node10701_name [shape=none, label=<<font color="black">Branch[10701]</font>>]
    node10701_name -> node10701 [arrowhead=none, color="black", style=dashed]
    node10701 [shape=diamond, label=<<font color="black">(= %0 true)</font>> color="black" fillcolor="white", style=filled]
    node10701 -> node10702 [label=<<font color="black">true</font>> color="black"]
    node10701 -> node10704 [label=<<font color="black">false</font>> color="black"]
    node10702_name [shape=none, label=<<font color="black">Call[10702]</font>>]
    node10702_name -> node10702 [arrowhead=none, color="black", style=dashed]
    node10702 [shape=cds, label=<<font color="black">%1 = this[0]-&gt;NamedEvaluation(&quot;default&quot;)</font>> color="black" fillcolor="white", style=filled]
    node10702 -> node10703 [color="black"]
    node10704_name [shape=none, label=<<font color="black">Call[10704]</font>>]
    node10704_name -> node10704 [arrowhead=none, color="black", style=dashed]
    node10704 [shape=cds, label=<<font color="black">%2 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node10704 -> node10705 [color="black"]
    node10703_name [shape=none, label=<<font color="black">Block[10703]</font>>]
    node10703_name -> node10703 [arrowhead=none, color="black", style=dashed]
    node10703 [shape=box, label=<<font color="black">[0] let value = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10703 -> node10708 [color="black"]
    node10705_name [shape=none, label=<<font color="black">Block[10705]</font>>]
    node10705_name -> node10705 [arrowhead=none, color="black", style=dashed]
    node10705 [shape=box, label=<<font color="black">[0] let rhs = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10705 -> node10706 [color="black"]
    node10708_name [shape=none, label=<<font color="black">Block[10708]</font>>]
    node10708_name -> node10708 [arrowhead=none, color="black", style=dashed]
    node10708 [shape=box, label=<<font color="black">[0] let env = @EXECUTION_STACK[0].LexicalEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10708 -> node10709 [color="black"]
    node10706_name [shape=none, label=<<font color="black">Call[10706]</font>>]
    node10706_name -> node10706 [arrowhead=none, color="black", style=dashed]
    node10706 [shape=cds, label=<<font color="black">%3 = clo&lt;GetValue&gt;(rhs)</font>> color="black" fillcolor="white", style=filled]
    node10706 -> node10707 [color="black"]
    node10709_name [shape=none, label=<<font color="black">Call[10709]</font>>]
    node10709_name -> node10709 [arrowhead=none, color="black", style=dashed]
    node10709 [shape=cds, label=<<font color="black">%4 = clo&lt;InitializeBoundName&gt;(&quot;*default*&quot;, value, env)</font>> color="black" fillcolor="white", style=filled]
    node10709 -> node10710 [color="black"]
    node10707_name [shape=none, label=<<font color="black">Block[10707]</font>>]
    node10707_name -> node10707 [arrowhead=none, color="black", style=dashed]
    node10707 [shape=box, label=<<font color="black">[0] let value = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10707 -> node10708 [color="black"]
    node10710_name [shape=none, label=<<font color="black">Block[10710]</font>>]
    node10710_name -> node10710 [arrowhead=none, color="black", style=dashed]
    node10710 [shape=box, label=<<font color="black">[0] [? %4]<BR ALIGN="LEFT"/>[1] return ~empty~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10710 -> cluster1981_exit [color="black"]
  }
}