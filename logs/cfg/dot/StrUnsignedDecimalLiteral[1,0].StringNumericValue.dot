digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster89 {
    label = "def <SYNTAX>:StrUnsignedDecimalLiteral[1,0].StringNumericValue(this: Ast:StrUnsignedDecimalLiteral[1,0]): Number"
    style = rounded
    cluster89_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster89_entry_name -> cluster89_entry [arrowhead=none, color="black", style=dashed]
    cluster89_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster89_entry -> node647 [color="black"]
    cluster89_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster89_exit_name -> cluster89_exit [arrowhead=none, color="black", style=dashed]
    cluster89_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node647_name [shape=none, label=<<font color="black">Call[647]</font>>]
    node647_name -> node647 [arrowhead=none, color="black", style=dashed]
    node647 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;MV()</font>> color="black" fillcolor="white", style=filled]
    node647 -> node648 [color="black"]
    node648_name [shape=none, label=<<font color="black">Block[648]</font>>]
    node648_name -> node648 [arrowhead=none, color="black", style=dashed]
    node648 [shape=box, label=<<font color="black">[0] let a = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node648 -> node649 [color="black"]
    node649_name [shape=none, label=<<font color="black">Branch[649]</font>>]
    node649_name -> node649 [arrowhead=none, color="black", style=dashed]
    node649 [shape=diamond, label=<<font color="black">(! (= this[1] absent))</font>> color="black" fillcolor="white", style=filled]
    node649 -> node650 [label=<<font color="black">true</font>> color="black"]
    node649 -> node652 [label=<<font color="black">false</font>> color="black"]
    node650_name [shape=none, label=<<font color="black">Call[650]</font>>]
    node650_name -> node650 [arrowhead=none, color="black", style=dashed]
    node650 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;MV()</font>> color="black" fillcolor="white", style=filled]
    node650 -> node651 [color="black"]
    node652_name [shape=none, label=<<font color="black">Block[652]</font>>]
    node652_name -> node652 [arrowhead=none, color="black", style=dashed]
    node652 [shape=box, label=<<font color="black">[0] let b = 0<BR ALIGN="LEFT"/>[1] let n = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node652 -> node653 [color="black"]
    node651_name [shape=none, label=<<font color="black">Block[651]</font>>]
    node651_name -> node651 [arrowhead=none, color="black", style=dashed]
    node651 [shape=box, label=<<font color="black">[0] let b = %1<BR ALIGN="LEFT"/>[1] (yet &quot;Let _n_ be the number of code points in the second |DecimalDigits|.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node651 -> node653 [color="black"]
    node653_name [shape=none, label=<<font color="black">Branch[653]</font>>]
    node653_name -> node653 [arrowhead=none, color="black", style=dashed]
    node653 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node653 -> node654 [label=<<font color="black">true</font>> color="black"]
    node653 -> node656 [label=<<font color="black">false</font>> color="black"]
    node654_name [shape=none, label=<<font color="black">Call[654]</font>>]
    node654_name -> node654 [arrowhead=none, color="black", style=dashed]
    node654 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;MV()</font>> color="black" fillcolor="white", style=filled]
    node654 -> node655 [color="black"]
    node656_name [shape=none, label=<<font color="black">Block[656]</font>>]
    node656_name -> node656 [arrowhead=none, color="black", style=dashed]
    node656 [shape=box, label=<<font color="black">[0] let e = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node656 -> node657 [color="black"]
    node655_name [shape=none, label=<<font color="black">Block[655]</font>>]
    node655_name -> node655 [arrowhead=none, color="black", style=dashed]
    node655 [shape=box, label=<<font color="black">[0] let e = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node655 -> node657 [color="black"]
    node657_name [shape=none, label=<<font color="black">Call[657]</font>>]
    node657_name -> node657 [arrowhead=none, color="black", style=dashed]
    node657 [shape=cds, label=<<font color="black">%3 = clo&lt;RoundMVResult&gt;((* (+ a (* b (** 10 (- n)))) (** 10 e)))</font>> color="black" fillcolor="white", style=filled]
    node657 -> node658 [color="black"]
    node658_name [shape=none, label=<<font color="black">Block[658]</font>>]
    node658_name -> node658 [arrowhead=none, color="black", style=dashed]
    node658 [shape=box, label=<<font color="black">[0] return %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node658 -> cluster89_exit [color="black"]
  }
}