digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1895 {
    label = "def ParseModule(sourceText: Unknown["ECMAScriptSourceText"], realm: Unknown, hostDefined: Unknown): Unknown["SourceTextModuleRecordOrANonemptyListOf*SyntaxError*Objects"]"
    style = rounded
    cluster1895_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1895_entry_name -> cluster1895_entry [arrowhead=none, color="black", style=dashed]
    cluster1895_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1895_entry -> node10277 [color="black"]
    cluster1895_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1895_exit_name -> cluster1895_exit [arrowhead=none, color="black", style=dashed]
    cluster1895_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node10277_name [shape=none, label=<<font color="black">Block[10277]</font>>]
    node10277_name -> node10277 [arrowhead=none, color="black", style=dashed]
    node10277 [shape=box, label=<<font color="black">[0] let body = (parse sourceText (nt |Module|[]))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10277 -> node10278 [color="black"]
    node10278_name [shape=none, label=<<font color="black">Branch[10278]</font>>]
    node10278_name -> node10278 [arrowhead=none, color="black", style=dashed]
    node10278 [shape=diamond, label=<<font color="black">(? body: &quot;ListOfErrors&quot;)</font>> color="black" fillcolor="white", style=filled]
    node10278 -> node10279 [label=<<font color="black">true</font>> color="black"]
    node10278 -> node10280 [label=<<font color="black">false</font>> color="black"]
    node10279_name [shape=none, label=<<font color="black">Block[10279]</font>>]
    node10279_name -> node10279 [arrowhead=none, color="black", style=dashed]
    node10279 [shape=box, label=<<font color="black">[0] return body<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10279 -> cluster1895_exit [color="black"]
    node10280_name [shape=none, label=<<font color="black">Call[10280]</font>>]
    node10280_name -> node10280 [arrowhead=none, color="black", style=dashed]
    node10280 [shape=cds, label=<<font color="black">%0 = body-&gt;ModuleRequests()</font>> color="black" fillcolor="white", style=filled]
    node10280 -> node10281 [color="black"]
    node10281_name [shape=none, label=<<font color="black">Block[10281]</font>>]
    node10281_name -> node10281 [arrowhead=none, color="black", style=dashed]
    node10281 [shape=box, label=<<font color="black">[0] let requestedModules = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10281 -> node10282 [color="black"]
    node10282_name [shape=none, label=<<font color="black">Call[10282]</font>>]
    node10282_name -> node10282 [arrowhead=none, color="black", style=dashed]
    node10282 [shape=cds, label=<<font color="black">%1 = body-&gt;ImportEntries()</font>> color="black" fillcolor="white", style=filled]
    node10282 -> node10283 [color="black"]
    node10283_name [shape=none, label=<<font color="black">Block[10283]</font>>]
    node10283_name -> node10283 [arrowhead=none, color="black", style=dashed]
    node10283 [shape=box, label=<<font color="black">[0] let importEntries = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10283 -> node10284 [color="black"]
    node10284_name [shape=none, label=<<font color="black">Call[10284]</font>>]
    node10284_name -> node10284 [arrowhead=none, color="black", style=dashed]
    node10284 [shape=cds, label=<<font color="black">%2 = clo&lt;ImportedLocalNames&gt;(importEntries)</font>> color="black" fillcolor="white", style=filled]
    node10284 -> node10285 [color="black"]
    node10285_name [shape=none, label=<<font color="black">Block[10285]</font>>]
    node10285_name -> node10285 [arrowhead=none, color="black", style=dashed]
    node10285 [shape=box, label=<<font color="black">[0] let importedBoundNames = %2<BR ALIGN="LEFT"/>[1] let indirectExportEntries = (new [])[#779]<BR ALIGN="LEFT"/>[2] let localExportEntries = (new [])[#780]<BR ALIGN="LEFT"/>[3] let starExportEntries = (new [])[#781]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10285 -> node10286 [color="black"]
    node10286_name [shape=none, label=<<font color="black">Call[10286]</font>>]
    node10286_name -> node10286 [arrowhead=none, color="black", style=dashed]
    node10286 [shape=cds, label=<<font color="black">%3 = body-&gt;ExportEntries()</font>> color="black" fillcolor="white", style=filled]
    node10286 -> node10287 [color="black"]
    node10287_name [shape=none, label=<<font color="black">Block[10287]</font>>]
    node10287_name -> node10287 [arrowhead=none, color="black", style=dashed]
    node10287 [shape=box, label=<<font color="black">[0] let exportEntries = %3<BR ALIGN="LEFT"/>[1] %5 = exportEntries<BR ALIGN="LEFT"/>[2] %4 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10287 -> node10288 [color="black"]
    node10288_name [shape=none, label=<<font color="black">Branch[10288]</font>>]
    node10288_name -> node10288 [arrowhead=none, color="black", style=dashed]
    node10288 [shape=diamond, label=<<font color="black">(&lt; %4 %5.length)</font>> color="black" fillcolor="white", style=filled]
    node10288 -> node10289 [label=<<font color="black">true</font>> color="black"]
    node10288 -> node10301 [label=<<font color="black">false</font>> color="black"]
    node10289_name [shape=none, label=<<font color="black">Block[10289]</font>>]
    node10289_name -> node10289 [arrowhead=none, color="black", style=dashed]
    node10289 [shape=box, label=<<font color="black">[0] let ee = %5[%4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10289 -> node10290 [color="black"]
    node10301_name [shape=none, label=<<font color="black">Call[10301]</font>>]
    node10301_name -> node10301 [arrowhead=none, color="black", style=dashed]
    node10301 [shape=cds, label=<<font color="black">%6 = body-&gt;Contains(&quot;await&quot;)</font>> color="black" fillcolor="white", style=filled]
    node10301 -> node10302 [color="black"]
    node10290_name [shape=none, label=<<font color="black">Branch[10290]</font>>]
    node10290_name -> node10290 [arrowhead=none, color="black", style=dashed]
    node10290 [shape=diamond, label=<<font color="black">(= ee.ModuleRequest null)</font>> color="black" fillcolor="white", style=filled]
    node10290 -> node10291 [label=<<font color="black">true</font>> color="black"]
    node10290 -> node10297 [label=<<font color="black">false</font>> color="black"]
    node10302_name [shape=none, label=<<font color="black">Block[10302]</font>>]
    node10302_name -> node10302 [arrowhead=none, color="black", style=dashed]
    node10302 [shape=box, label=<<font color="black">[0] let async = %6<BR ALIGN="LEFT"/>[1] return (new SourceTextModuleRecord(&quot;Realm&quot; -&gt; realm, &quot;Environment&quot; -&gt; ~empty~, &quot;Namespace&quot; -&gt; ~empty~, &quot;CycleRoot&quot; -&gt; ~empty~, &quot;HasTLA&quot; -&gt; async, &quot;AsyncEvaluation&quot; -&gt; false, &quot;TopLevelCapability&quot; -&gt; ~empty~, &quot;AsyncParentModules&quot; -&gt; (new [])[#784], &quot;PendingAsyncDependencies&quot; -&gt; ~empty~, &quot;Status&quot; -&gt; ~unlinked~, &quot;EvaluationError&quot; -&gt; ~empty~, &quot;HostDefined&quot; -&gt; hostDefined, &quot;ECMAScriptCode&quot; -&gt; body, &quot;Context&quot; -&gt; ~empty~, &quot;ImportMeta&quot; -&gt; ~empty~, &quot;RequestedModules&quot; -&gt; requestedModules, &quot;ImportEntries&quot; -&gt; importEntries, &quot;LocalExportEntries&quot; -&gt; localExportEntries, &quot;IndirectExportEntries&quot; -&gt; indirectExportEntries, &quot;StarExportEntries&quot; -&gt; starExportEntries, &quot;DFSIndex&quot; -&gt; ~empty~, &quot;DFSAncestorIndex&quot; -&gt; ~empty~))[#783]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10302 -> cluster1895_exit [color="black"]
    node10291_name [shape=none, label=<<font color="black">Branch[10291]</font>>]
    node10291_name -> node10291 [arrowhead=none, color="black", style=dashed]
    node10291 [shape=diamond, label=<<font color="black">(! (contains importedBoundNames ee.LocalName))</font>> color="black" fillcolor="white", style=filled]
    node10291 -> node10292 [label=<<font color="black">true</font>> color="black"]
    node10291 -> node10293 [label=<<font color="black">false</font>> color="black"]
    node10297_name [shape=none, label=<<font color="black">Branch[10297]</font>>]
    node10297_name -> node10297 [arrowhead=none, color="black", style=dashed]
    node10297 [shape=diamond, label=<<font color="black">(= ee.ImportName ~all-but-default~)</font>> color="black" fillcolor="white", style=filled]
    node10297 -> node10298 [label=<<font color="black">true</font>> color="black"]
    node10297 -> node10299 [label=<<font color="black">false</font>> color="black"]
    node10292_name [shape=none, label=<<font color="black">Block[10292]</font>>]
    node10292_name -> node10292 [arrowhead=none, color="black", style=dashed]
    node10292 [shape=box, label=<<font color="black">[0] push localExportEntries &lt; ee<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10292 -> node10300 [color="black"]
    node10293_name [shape=none, label=<<font color="black">Block[10293]</font>>]
    node10293_name -> node10293 [arrowhead=none, color="black", style=dashed]
    node10293 [shape=box, label=<<font color="black">[0] (yet &quot;Let _ie_ be the element of _importEntries_ whose [[LocalName]] is the same as _ee_.[[LocalName]].&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10293 -> node10294 [color="black"]
    node10298_name [shape=none, label=<<font color="black">Block[10298]</font>>]
    node10298_name -> node10298 [arrowhead=none, color="black", style=dashed]
    node10298 [shape=box, label=<<font color="black">[0] assert (= ee.ExportName null)<BR ALIGN="LEFT"/>[1] push starExportEntries &lt; ee<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10298 -> node10300 [color="black"]
    node10299_name [shape=none, label=<<font color="black">Block[10299]</font>>]
    node10299_name -> node10299 [arrowhead=none, color="black", style=dashed]
    node10299 [shape=box, label=<<font color="black">[0] push indirectExportEntries &lt; ee<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10299 -> node10300 [color="black"]
    node10300_name [shape=none, label=<<font color="black">Block[10300]</font>>]
    node10300_name -> node10300 [arrowhead=none, color="black", style=dashed]
    node10300 [shape=box, label=<<font color="black">[0] %4 = (+ %4 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10300 -> node10288 [color="black"]
    node10294_name [shape=none, label=<<font color="black">Branch[10294]</font>>]
    node10294_name -> node10294 [arrowhead=none, color="black", style=dashed]
    node10294 [shape=diamond, label=<<font color="black">(= ie.ImportName ~namespace-object~)</font>> color="black" fillcolor="white", style=filled]
    node10294 -> node10295 [label=<<font color="black">true</font>> color="black"]
    node10294 -> node10296 [label=<<font color="black">false</font>> color="black"]
    node10295_name [shape=none, label=<<font color="black">Block[10295]</font>>]
    node10295_name -> node10295 [arrowhead=none, color="black", style=dashed]
    node10295 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/>[1] push localExportEntries &lt; ee<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10295 -> node10300 [color="black"]
    node10296_name [shape=none, label=<<font color="black">Block[10296]</font>>]
    node10296_name -> node10296 [arrowhead=none, color="black", style=dashed]
    node10296 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/>[1] push indirectExportEntries &lt; (new ExportEntryRecord(&quot;ModuleRequest&quot; -&gt; ie.ModuleRequest, &quot;ImportName&quot; -&gt; ie.ImportName, &quot;LocalName&quot; -&gt; null, &quot;ExportName&quot; -&gt; ee.ExportName))[#782]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10296 -> node10300 [color="black"]
  }
}