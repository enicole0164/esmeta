digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1495 {
    label = "def <SYNTAX>:Statement[4,0].LabelledEvaluation(this: Ast:Statement[4,0], labelSet: Unknown): Normal[ESValue] | Abrupt"
    style = rounded
    cluster1495_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1495_entry_name -> cluster1495_entry [arrowhead=none, color="black", style=dashed]
    cluster1495_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1495_entry -> node8207 [color="black"]
    cluster1495_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1495_exit_name -> cluster1495_exit [arrowhead=none, color="black", style=dashed]
    cluster1495_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8207_name [shape=none, label=<<font color="black">Call[8207]</font>>]
    node8207_name -> node8207 [arrowhead=none, color="black", style=dashed]
    node8207 [shape=cds, label=<<font color="black">%0 = this-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node8207 -> node8208 [color="black"]
    node8208_name [shape=none, label=<<font color="black">Block[8208]</font>>]
    node8208_name -> node8208 [arrowhead=none, color="black", style=dashed]
    node8208 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8208 -> cluster1495_exit [color="black"]
  }
}