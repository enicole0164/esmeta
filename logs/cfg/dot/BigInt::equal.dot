digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster44 {
    label = "def <NUM>:BigInt::equal(x: BigInt, y: BigInt): Boolean"
    style = rounded
    cluster44_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster44_entry_name -> cluster44_entry [arrowhead=none, color="black", style=dashed]
    cluster44_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster44_entry -> node339 [color="black"]
    cluster44_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster44_exit_name -> cluster44_exit [arrowhead=none, color="black", style=dashed]
    cluster44_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node339_name [shape=none, label=<<font color="black">Branch[339]</font>>]
    node339_name -> node339 [arrowhead=none, color="black", style=dashed]
    node339 [shape=diamond, label=<<font color="black">(== ([math] x) ([math] y))</font>> color="black" fillcolor="white", style=filled]
    node339 -> node340 [label=<<font color="black">true</font>> color="black"]
    node339 -> node341 [label=<<font color="black">false</font>> color="black"]
    node340_name [shape=none, label=<<font color="black">Block[340]</font>>]
    node340_name -> node340 [arrowhead=none, color="black", style=dashed]
    node340 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node340 -> cluster44_exit [color="black"]
    node341_name [shape=none, label=<<font color="black">Block[341]</font>>]
    node341_name -> node341 [arrowhead=none, color="black", style=dashed]
    node341 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node341 -> cluster44_exit [color="black"]
  }
}