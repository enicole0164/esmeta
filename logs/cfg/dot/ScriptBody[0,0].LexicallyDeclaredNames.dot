digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster280 {
    label = "def <SYNTAX>:ScriptBody[0,0].LexicallyDeclaredNames(this: Ast:ScriptBody[0,0]): List[String]"
    style = rounded
    cluster280_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster280_entry_name -> cluster280_entry [arrowhead=none, color="black", style=dashed]
    cluster280_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster280_entry -> node1756 [color="black"]
    cluster280_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster280_exit_name -> cluster280_exit [arrowhead=none, color="black", style=dashed]
    cluster280_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1756_name [shape=none, label=<<font color="black">Call[1756]</font>>]
    node1756_name -> node1756 [arrowhead=none, color="black", style=dashed]
    node1756 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;TopLevelLexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1756 -> node1757 [color="black"]
    node1757_name [shape=none, label=<<font color="black">Block[1757]</font>>]
    node1757_name -> node1757 [arrowhead=none, color="black", style=dashed]
    node1757 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1757 -> cluster280_exit [color="black"]
  }
}