digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1276 {
    label = "def MakeSuperPropertyReference(actualThis: Unknown, propertyKey: Unknown, strict: Unknown): Unknown["EitherANormalCompletionContainingASuperReferenceRecordOrAnAbruptCompletion"]"
    style = rounded
    cluster1276_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1276_entry_name -> cluster1276_entry [arrowhead=none, color="black", style=dashed]
    cluster1276_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1276_entry -> node5961 [color="black"]
    cluster1276_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1276_exit_name -> cluster1276_exit [arrowhead=none, color="black", style=dashed]
    cluster1276_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node5961_name [shape=none, label=<<font color="black">Call[5961]</font>>]
    node5961_name -> node5961 [arrowhead=none, color="black", style=dashed]
    node5961 [shape=cds, label=<<font color="black">%0 = clo&lt;GetThisEnvironment&gt;()</font>> color="black" fillcolor="white", style=filled]
    node5961 -> node5962 [color="black"]
    node5962_name [shape=none, label=<<font color="black">Block[5962]</font>>]
    node5962_name -> node5962 [arrowhead=none, color="black", style=dashed]
    node5962 [shape=box, label=<<font color="black">[0] let env = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5962 -> node5963 [color="black"]
    node5963_name [shape=none, label=<<font color="black">Call[5963]</font>>]
    node5963_name -> node5963 [arrowhead=none, color="black", style=dashed]
    node5963 [shape=cds, label=<<font color="black">%1 = env-&gt;HasSuperBinding()</font>> color="black" fillcolor="white", style=filled]
    node5963 -> node5964 [color="black"]
    node5964_name [shape=none, label=<<font color="black">Block[5964]</font>>]
    node5964_name -> node5964 [arrowhead=none, color="black", style=dashed]
    node5964 [shape=box, label=<<font color="black">[0] assert (= %1 true)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5964 -> node5965 [color="black"]
    node5965_name [shape=none, label=<<font color="black">Call[5965]</font>>]
    node5965_name -> node5965 [arrowhead=none, color="black", style=dashed]
    node5965 [shape=cds, label=<<font color="black">%2 = env-&gt;GetSuperBase()</font>> color="black" fillcolor="white", style=filled]
    node5965 -> node5966 [color="black"]
    node5966_name [shape=none, label=<<font color="black">Block[5966]</font>>]
    node5966_name -> node5966 [arrowhead=none, color="black", style=dashed]
    node5966 [shape=box, label=<<font color="black">[0] let baseValue = [? %2]<BR ALIGN="LEFT"/>[1] return (new ReferenceRecord(&quot;Base&quot; -&gt; baseValue, &quot;ReferencedName&quot; -&gt; propertyKey, &quot;Strict&quot; -&gt; strict, &quot;ThisValue&quot; -&gt; actualThis))[#574]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5966 -> cluster1276_exit [color="black"]
  }
}