digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster308 {
    label = "def <SYNTAX>:ScriptBody[0,0].LexicallyScopedDeclarations(this: Ast:ScriptBody[0,0]): List[Ast]"
    style = rounded
    cluster308_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster308_entry_name -> cluster308_entry [arrowhead=none, color="black", style=dashed]
    cluster308_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster308_entry -> node1857 [color="black"]
    cluster308_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster308_exit_name -> cluster308_exit [arrowhead=none, color="black", style=dashed]
    cluster308_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1857_name [shape=none, label=<<font color="black">Call[1857]</font>>]
    node1857_name -> node1857 [arrowhead=none, color="black", style=dashed]
    node1857 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;TopLevelLexicallyScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node1857 -> node1858 [color="black"]
    node1858_name [shape=none, label=<<font color="black">Block[1858]</font>>]
    node1858_name -> node1858 [arrowhead=none, color="black", style=dashed]
    node1858 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1858 -> cluster308_exit [color="black"]
  }
}