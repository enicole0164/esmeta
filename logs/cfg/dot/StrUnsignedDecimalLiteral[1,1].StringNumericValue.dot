digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster90 {
    label = "def <SYNTAX>:StrUnsignedDecimalLiteral[1,1].StringNumericValue(this: Ast:StrUnsignedDecimalLiteral[1,1]): Number"
    style = rounded
    cluster90_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster90_entry_name -> cluster90_entry [arrowhead=none, color="black", style=dashed]
    cluster90_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster90_entry -> node659 [color="black"]
    cluster90_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster90_exit_name -> cluster90_exit [arrowhead=none, color="black", style=dashed]
    cluster90_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node659_name [shape=none, label=<<font color="black">Call[659]</font>>]
    node659_name -> node659 [arrowhead=none, color="black", style=dashed]
    node659 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;MV()</font>> color="black" fillcolor="white", style=filled]
    node659 -> node660 [color="black"]
    node660_name [shape=none, label=<<font color="black">Block[660]</font>>]
    node660_name -> node660 [arrowhead=none, color="black", style=dashed]
    node660 [shape=box, label=<<font color="black">[0] let a = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node660 -> node661 [color="black"]
    node661_name [shape=none, label=<<font color="black">Branch[661]</font>>]
    node661_name -> node661 [arrowhead=none, color="black", style=dashed]
    node661 [shape=diamond, label=<<font color="black">(! (= this[1] absent))</font>> color="black" fillcolor="white", style=filled]
    node661 -> node662 [label=<<font color="black">true</font>> color="black"]
    node661 -> node664 [label=<<font color="black">false</font>> color="black"]
    node662_name [shape=none, label=<<font color="black">Call[662]</font>>]
    node662_name -> node662 [arrowhead=none, color="black", style=dashed]
    node662 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;MV()</font>> color="black" fillcolor="white", style=filled]
    node662 -> node663 [color="black"]
    node664_name [shape=none, label=<<font color="black">Block[664]</font>>]
    node664_name -> node664 [arrowhead=none, color="black", style=dashed]
    node664 [shape=box, label=<<font color="black">[0] let b = 0<BR ALIGN="LEFT"/>[1] let n = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node664 -> node665 [color="black"]
    node663_name [shape=none, label=<<font color="black">Block[663]</font>>]
    node663_name -> node663 [arrowhead=none, color="black", style=dashed]
    node663 [shape=box, label=<<font color="black">[0] let b = %1<BR ALIGN="LEFT"/>[1] (yet &quot;Let _n_ be the number of code points in the second |DecimalDigits|.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node663 -> node665 [color="black"]
    node665_name [shape=none, label=<<font color="black">Branch[665]</font>>]
    node665_name -> node665 [arrowhead=none, color="black", style=dashed]
    node665 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node665 -> node666 [label=<<font color="black">true</font>> color="black"]
    node665 -> node668 [label=<<font color="black">false</font>> color="black"]
    node666_name [shape=none, label=<<font color="black">Call[666]</font>>]
    node666_name -> node666 [arrowhead=none, color="black", style=dashed]
    node666 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;MV()</font>> color="black" fillcolor="white", style=filled]
    node666 -> node667 [color="black"]
    node668_name [shape=none, label=<<font color="black">Block[668]</font>>]
    node668_name -> node668 [arrowhead=none, color="black", style=dashed]
    node668 [shape=box, label=<<font color="black">[0] let e = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node668 -> node669 [color="black"]
    node667_name [shape=none, label=<<font color="black">Block[667]</font>>]
    node667_name -> node667 [arrowhead=none, color="black", style=dashed]
    node667 [shape=box, label=<<font color="black">[0] let e = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node667 -> node669 [color="black"]
    node669_name [shape=none, label=<<font color="black">Call[669]</font>>]
    node669_name -> node669 [arrowhead=none, color="black", style=dashed]
    node669 [shape=cds, label=<<font color="black">%3 = clo&lt;RoundMVResult&gt;((* (+ a (* b (** 10 (- n)))) (** 10 e)))</font>> color="black" fillcolor="white", style=filled]
    node669 -> node670 [color="black"]
    node670_name [shape=none, label=<<font color="black">Block[670]</font>>]
    node670_name -> node670 [arrowhead=none, color="black", style=dashed]
    node670 [shape=box, label=<<font color="black">[0] return %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node670 -> cluster90_exit [color="black"]
  }
}