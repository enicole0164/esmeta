digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster855 {
    label = "def InitializeBoundName(name: String, value: Unknown, environment: Unknown): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster855_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster855_entry_name -> cluster855_entry [arrowhead=none, color="black", style=dashed]
    cluster855_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster855_entry -> node3214 [color="black"]
    cluster855_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster855_exit_name -> cluster855_exit [arrowhead=none, color="black", style=dashed]
    cluster855_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3214_name [shape=none, label=<<font color="black">Branch[3214]</font>>]
    node3214_name -> node3214 [arrowhead=none, color="black", style=dashed]
    node3214 [shape=diamond, label=<<font color="black">(! (= environment undefined))</font>> color="black" fillcolor="white", style=filled]
    node3214 -> node3215 [label=<<font color="black">true</font>> color="black"]
    node3214 -> node3217 [label=<<font color="black">false</font>> color="black"]
    node3215_name [shape=none, label=<<font color="black">Call[3215]</font>>]
    node3215_name -> node3215 [arrowhead=none, color="black", style=dashed]
    node3215 [shape=cds, label=<<font color="black">%0 = environment-&gt;InitializeBinding(name, value)</font>> color="black" fillcolor="white", style=filled]
    node3215 -> node3216 [color="black"]
    node3217_name [shape=none, label=<<font color="black">Call[3217]</font>>]
    node3217_name -> node3217 [arrowhead=none, color="black", style=dashed]
    node3217 [shape=cds, label=<<font color="black">%1 = clo&lt;ResolveBinding&gt;(name)</font>> color="black" fillcolor="white", style=filled]
    node3217 -> node3218 [color="black"]
    node3216_name [shape=none, label=<<font color="black">Block[3216]</font>>]
    node3216_name -> node3216 [arrowhead=none, color="black", style=dashed]
    node3216 [shape=box, label=<<font color="black">[0] [! %0]<BR ALIGN="LEFT"/>[1] return ~unused~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3216 -> cluster855_exit [color="black"]
    node3218_name [shape=none, label=<<font color="black">Block[3218]</font>>]
    node3218_name -> node3218 [arrowhead=none, color="black", style=dashed]
    node3218 [shape=box, label=<<font color="black">[0] let lhs = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3218 -> node3219 [color="black"]
    node3219_name [shape=none, label=<<font color="black">Call[3219]</font>>]
    node3219_name -> node3219 [arrowhead=none, color="black", style=dashed]
    node3219 [shape=cds, label=<<font color="black">%2 = clo&lt;PutValue&gt;(lhs, value)</font>> color="black" fillcolor="white", style=filled]
    node3219 -> node3220 [color="black"]
    node3220_name [shape=none, label=<<font color="black">Block[3220]</font>>]
    node3220_name -> node3220 [arrowhead=none, color="black", style=dashed]
    node3220 [shape=box, label=<<font color="black">[0] return [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3220 -> cluster855_exit [color="black"]
  }
}