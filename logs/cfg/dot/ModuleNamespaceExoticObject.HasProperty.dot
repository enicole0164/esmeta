digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1142 {
    label = "def <INTERNAL>:ModuleNamespaceExoticObject.HasProperty(O: ModuleNamespaceExoticObject, P: Symbol | String): Normal[Boolean]"
    style = rounded
    cluster1142_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1142_entry_name -> cluster1142_entry [arrowhead=none, color="black", style=dashed]
    cluster1142_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1142_entry -> node4957 [color="black"]
    cluster1142_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1142_exit_name -> cluster1142_exit [arrowhead=none, color="black", style=dashed]
    cluster1142_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4957_name [shape=none, label=<<font color="black">Branch[4957]</font>>]
    node4957_name -> node4957 [arrowhead=none, color="black", style=dashed]
    node4957 [shape=diamond, label=<<font color="black">(= (typeof P) @Symbol)</font>> color="black" fillcolor="white", style=filled]
    node4957 -> node4958 [label=<<font color="black">true</font>> color="black"]
    node4957 -> node4960 [label=<<font color="black">false</font>> color="black"]
    node4958_name [shape=none, label=<<font color="black">Call[4958]</font>>]
    node4958_name -> node4958 [arrowhead=none, color="black", style=dashed]
    node4958 [shape=cds, label=<<font color="black">%0 = clo&lt;OrdinaryHasProperty&gt;(O, P)</font>> color="black" fillcolor="white", style=filled]
    node4958 -> node4959 [color="black"]
    node4960_name [shape=none, label=<<font color="black">Block[4960]</font>>]
    node4960_name -> node4960 [arrowhead=none, color="black", style=dashed]
    node4960 [shape=box, label=<<font color="black">[0] let exports = O.Exports<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4960 -> node4961 [color="black"]
    node4959_name [shape=none, label=<<font color="black">Block[4959]</font>>]
    node4959_name -> node4959 [arrowhead=none, color="black", style=dashed]
    node4959 [shape=box, label=<<font color="black">[0] return [! %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4959 -> cluster1142_exit [color="black"]
    node4961_name [shape=none, label=<<font color="black">Branch[4961]</font>>]
    node4961_name -> node4961 [arrowhead=none, color="black", style=dashed]
    node4961 [shape=diamond, label=<<font color="black">(contains exports P)</font>> color="black" fillcolor="white", style=filled]
    node4961 -> node4962 [label=<<font color="black">true</font>> color="black"]
    node4961 -> node4963 [label=<<font color="black">false</font>> color="black"]
    node4962_name [shape=none, label=<<font color="black">Block[4962]</font>>]
    node4962_name -> node4962 [arrowhead=none, color="black", style=dashed]
    node4962 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4962 -> cluster1142_exit [color="black"]
    node4963_name [shape=none, label=<<font color="black">Block[4963]</font>>]
    node4963_name -> node4963 [arrowhead=none, color="black", style=dashed]
    node4963 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4963 -> cluster1142_exit [color="black"]
  }
}