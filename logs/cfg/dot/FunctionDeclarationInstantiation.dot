digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1098 {
    label = "def FunctionDeclarationInstantiation(func: FunctionObject, argumentsList: Unknown): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster1098_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1098_entry_name -> cluster1098_entry [arrowhead=none, color="black", style=dashed]
    cluster1098_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1098_entry -> node4377 [color="black"]
    cluster1098_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1098_exit_name -> cluster1098_exit [arrowhead=none, color="black", style=dashed]
    cluster1098_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4377_name [shape=none, label=<<font color="black">Block[4377]</font>>]
    node4377_name -> node4377 [arrowhead=none, color="black", style=dashed]
    node4377 [shape=box, label=<<font color="black">[0] let calleeContext = @EXECUTION_STACK[0]<BR ALIGN="LEFT"/>[1] let code = func.ECMAScriptCode<BR ALIGN="LEFT"/>[2] let strict = func.Strict<BR ALIGN="LEFT"/>[3] let formals = func.FormalParameters<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4377 -> node4378 [color="black"]
    node4378_name [shape=none, label=<<font color="black">Call[4378]</font>>]
    node4378_name -> node4378 [arrowhead=none, color="black", style=dashed]
    node4378 [shape=cds, label=<<font color="black">%0 = formals-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node4378 -> node4379 [color="black"]
    node4379_name [shape=none, label=<<font color="black">Block[4379]</font>>]
    node4379_name -> node4379 [arrowhead=none, color="black", style=dashed]
    node4379 [shape=box, label=<<font color="black">[0] let parameterNames = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4379 -> node4380 [color="black"]
    node4380_name [shape=none, label=<<font color="black">Branch[4380]</font>>]
    node4380_name -> node4380 [arrowhead=none, color="black", style=dashed]
    node4380 [shape=diamond, label=<<font color="black">(duplicated parameterNames)</font>> color="black" fillcolor="white", style=filled]
    node4380 -> node4381 [label=<<font color="black">true</font>> color="black"]
    node4380 -> node4382 [label=<<font color="black">false</font>> color="black"]
    node4381_name [shape=none, label=<<font color="black">Block[4381]</font>>]
    node4381_name -> node4381 [arrowhead=none, color="black", style=dashed]
    node4381 [shape=box, label=<<font color="black">[0] let hasDuplicates = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4381 -> node4383 [color="black"]
    node4382_name [shape=none, label=<<font color="black">Block[4382]</font>>]
    node4382_name -> node4382 [arrowhead=none, color="black", style=dashed]
    node4382 [shape=box, label=<<font color="black">[0] let hasDuplicates = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4382 -> node4383 [color="black"]
    node4383_name [shape=none, label=<<font color="black">Call[4383]</font>>]
    node4383_name -> node4383 [arrowhead=none, color="black", style=dashed]
    node4383 [shape=cds, label=<<font color="black">%1 = formals-&gt;IsSimpleParameterList()</font>> color="black" fillcolor="white", style=filled]
    node4383 -> node4384 [color="black"]
    node4384_name [shape=none, label=<<font color="black">Block[4384]</font>>]
    node4384_name -> node4384 [arrowhead=none, color="black", style=dashed]
    node4384 [shape=box, label=<<font color="black">[0] let simpleParameterList = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4384 -> node4385 [color="black"]
    node4385_name [shape=none, label=<<font color="black">Call[4385]</font>>]
    node4385_name -> node4385 [arrowhead=none, color="black", style=dashed]
    node4385 [shape=cds, label=<<font color="black">%2 = formals-&gt;ContainsExpression()</font>> color="black" fillcolor="white", style=filled]
    node4385 -> node4386 [color="black"]
    node4386_name [shape=none, label=<<font color="black">Block[4386]</font>>]
    node4386_name -> node4386 [arrowhead=none, color="black", style=dashed]
    node4386 [shape=box, label=<<font color="black">[0] let hasParameterExpressions = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4386 -> node4387 [color="black"]
    node4387_name [shape=none, label=<<font color="black">Call[4387]</font>>]
    node4387_name -> node4387 [arrowhead=none, color="black", style=dashed]
    node4387 [shape=cds, label=<<font color="black">%3 = code-&gt;VarDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node4387 -> node4388 [color="black"]
    node4388_name [shape=none, label=<<font color="black">Block[4388]</font>>]
    node4388_name -> node4388 [arrowhead=none, color="black", style=dashed]
    node4388 [shape=box, label=<<font color="black">[0] let varNames = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4388 -> node4389 [color="black"]
    node4389_name [shape=none, label=<<font color="black">Call[4389]</font>>]
    node4389_name -> node4389 [arrowhead=none, color="black", style=dashed]
    node4389 [shape=cds, label=<<font color="black">%4 = code-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node4389 -> node4390 [color="black"]
    node4390_name [shape=none, label=<<font color="black">Block[4390]</font>>]
    node4390_name -> node4390 [arrowhead=none, color="black", style=dashed]
    node4390 [shape=box, label=<<font color="black">[0] let varDeclarations = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4390 -> node4391 [color="black"]
    node4391_name [shape=none, label=<<font color="black">Call[4391]</font>>]
    node4391_name -> node4391 [arrowhead=none, color="black", style=dashed]
    node4391 [shape=cds, label=<<font color="black">%5 = code-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node4391 -> node4392 [color="black"]
    node4392_name [shape=none, label=<<font color="black">Block[4392]</font>>]
    node4392_name -> node4392 [arrowhead=none, color="black", style=dashed]
    node4392 [shape=box, label=<<font color="black">[0] let lexicalNames = %5<BR ALIGN="LEFT"/>[1] let functionNames = (new [])[#432]<BR ALIGN="LEFT"/>[2] let functionsToInitialize = (new [])[#433]<BR ALIGN="LEFT"/>[3] %7 = varDeclarations<BR ALIGN="LEFT"/>[4] %6 = %7.length<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4392 -> node4393 [color="black"]
    node4393_name [shape=none, label=<<font color="black">Branch[4393]</font>>]
    node4393_name -> node4393 [arrowhead=none, color="black", style=dashed]
    node4393 [shape=diamond, label=<<font color="black">(&lt; 0 %6)</font>> color="black" fillcolor="white", style=filled]
    node4393 -> node4394 [label=<<font color="black">true</font>> color="black"]
    node4393 -> node4401 [label=<<font color="black">false</font>> color="black"]
    node4394_name [shape=none, label=<<font color="black">Block[4394]</font>>]
    node4394_name -> node4394 [arrowhead=none, color="black", style=dashed]
    node4394 [shape=box, label=<<font color="black">[0] %6 = (- %6 1)<BR ALIGN="LEFT"/>[1] let d = %7[%6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4394 -> node4395 [color="black"]
    node4401_name [shape=none, label=<<font color="black">Block[4401]</font>>]
    node4401_name -> node4401 [arrowhead=none, color="black", style=dashed]
    node4401 [shape=box, label=<<font color="black">[0] let argumentsObjectNeeded = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4401 -> node4402 [color="black"]
    node4395_name [shape=none, label=<<font color="black">Branch[4395]</font>>]
    node4395_name -> node4395 [arrowhead=none, color="black", style=dashed]
    node4395 [shape=diamond, label=<<font color="black">(! (|| (|| (? d: &quot;VariableDeclaration&quot;) (? d: &quot;ForBinding&quot;)) (? d: &quot;BindingIdentifier&quot;)))</font>> color="black" fillcolor="white", style=filled]
    node4395 -> node4396 [label=<<font color="black">true</font>> color="black"]
    node4395 -> node4393 [label=<<font color="black">false</font>> color="black"]
    node4402_name [shape=none, label=<<font color="black">Branch[4402]</font>>]
    node4402_name -> node4402 [arrowhead=none, color="black", style=dashed]
    node4402 [shape=diamond, label=<<font color="black">(= func.ThisMode ~lexical~)</font>> color="black" fillcolor="white", style=filled]
    node4402 -> node4403 [label=<<font color="black">true</font>> color="black"]
    node4402 -> node4404 [label=<<font color="black">false</font>> color="black"]
    node4396_name [shape=none, label=<<font color="black">Block[4396]</font>>]
    node4396_name -> node4396 [arrowhead=none, color="black", style=dashed]
    node4396 [shape=box, label=<<font color="black">[0] assert (|| (|| (|| (? d: &quot;FunctionDeclaration&quot;) (? d: &quot;GeneratorDeclaration&quot;)) (? d: &quot;AsyncFunctionDeclaration&quot;)) (? d: &quot;AsyncGeneratorDeclaration&quot;))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4396 -> node4397 [color="black"]
    node4403_name [shape=none, label=<<font color="black">Block[4403]</font>>]
    node4403_name -> node4403 [arrowhead=none, color="black", style=dashed]
    node4403 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/>[1] argumentsObjectNeeded = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4403 -> node4409 [color="black"]
    node4404_name [shape=none, label=<<font color="black">Branch[4404]</font>>]
    node4404_name -> node4404 [arrowhead=none, color="black", style=dashed]
    node4404 [shape=diamond, label=<<font color="black">(contains parameterNames &quot;arguments&quot;)</font>> color="black" fillcolor="white", style=filled]
    node4404 -> node4405 [label=<<font color="black">true</font>> color="black"]
    node4404 -> node4406 [label=<<font color="black">false</font>> color="black"]
    node4397_name [shape=none, label=<<font color="black">Call[4397]</font>>]
    node4397_name -> node4397 [arrowhead=none, color="black", style=dashed]
    node4397 [shape=cds, label=<<font color="black">%8 = d-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node4397 -> node4398 [color="black"]
    node4409_name [shape=none, label=<<font color="black">Branch[4409]</font>>]
    node4409_name -> node4409 [arrowhead=none, color="black", style=dashed]
    node4409 [shape=diamond, label=<<font color="black">(|| (= strict true) (= hasParameterExpressions false))</font>> color="black" fillcolor="white", style=filled]
    node4409 -> node4410 [label=<<font color="black">true</font>> color="black"]
    node4409 -> node4411 [label=<<font color="black">false</font>> color="black"]
    node4405_name [shape=none, label=<<font color="black">Block[4405]</font>>]
    node4405_name -> node4405 [arrowhead=none, color="black", style=dashed]
    node4405 [shape=box, label=<<font color="black">[0] argumentsObjectNeeded = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4405 -> node4409 [color="black"]
    node4406_name [shape=none, label=<<font color="black">Branch[4406]</font>>]
    node4406_name -> node4406 [arrowhead=none, color="black", style=dashed]
    node4406 [shape=diamond, label=<<font color="black">(= hasParameterExpressions false)</font>> color="black" fillcolor="white", style=filled]
    node4406 -> node4407 [label=<<font color="black">true</font>> color="black"]
    node4406 -> node4409 [label=<<font color="black">false</font>> color="black"]
    node4398_name [shape=none, label=<<font color="black">Block[4398]</font>>]
    node4398_name -> node4398 [arrowhead=none, color="black", style=dashed]
    node4398 [shape=box, label=<<font color="black">[0] let fn = %8[0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4398 -> node4399 [color="black"]
    node4410_name [shape=none, label=<<font color="black">Block[4410]</font>>]
    node4410_name -> node4410 [arrowhead=none, color="black", style=dashed]
    node4410 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/>[1] let env = calleeContext.LexicalEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4410 -> node4414 [color="black"]
    node4411_name [shape=none, label=<<font color="black">Block[4411]</font>>]
    node4411_name -> node4411 [arrowhead=none, color="black", style=dashed]
    node4411 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/>[1] let calleeEnv = calleeContext.LexicalEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4411 -> node4412 [color="black"]
    node4407_name [shape=none, label=<<font color="black">Branch[4407]</font>>]
    node4407_name -> node4407 [arrowhead=none, color="black", style=dashed]
    node4407 [shape=diamond, label=<<font color="black">(|| (contains functionNames &quot;arguments&quot;) (contains lexicalNames &quot;arguments&quot;))</font>> color="black" fillcolor="white", style=filled]
    node4407 -> node4408 [label=<<font color="black">true</font>> color="black"]
    node4407 -> node4409 [label=<<font color="black">false</font>> color="black"]
    node4399_name [shape=none, label=<<font color="black">Branch[4399]</font>>]
    node4399_name -> node4399 [arrowhead=none, color="black", style=dashed]
    node4399 [shape=diamond, label=<<font color="black">(! (contains functionNames fn))</font>> color="black" fillcolor="white", style=filled]
    node4399 -> node4400 [label=<<font color="black">true</font>> color="black"]
    node4399 -> node4393 [label=<<font color="black">false</font>> color="black"]
    node4414_name [shape=none, label=<<font color="black">Block[4414]</font>>]
    node4414_name -> node4414 [arrowhead=none, color="black", style=dashed]
    node4414 [shape=box, label=<<font color="black">[0] %11 = parameterNames<BR ALIGN="LEFT"/>[1] %10 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4414 -> node4415 [color="black"]
    node4412_name [shape=none, label=<<font color="black">Call[4412]</font>>]
    node4412_name -> node4412 [arrowhead=none, color="black", style=dashed]
    node4412 [shape=cds, label=<<font color="black">%9 = clo&lt;NewDeclarativeEnvironment&gt;(calleeEnv)</font>> color="black" fillcolor="white", style=filled]
    node4412 -> node4413 [color="black"]
    node4408_name [shape=none, label=<<font color="black">Block[4408]</font>>]
    node4408_name -> node4408 [arrowhead=none, color="black", style=dashed]
    node4408 [shape=box, label=<<font color="black">[0] argumentsObjectNeeded = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4408 -> node4409 [color="black"]
    node4400_name [shape=none, label=<<font color="black">Block[4400]</font>>]
    node4400_name -> node4400 [arrowhead=none, color="black", style=dashed]
    node4400 [shape=box, label=<<font color="black">[0] push fn &gt; functionNames<BR ALIGN="LEFT"/>[1] nop<BR ALIGN="LEFT"/>[2] push d &gt; functionsToInitialize<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4400 -> node4393 [color="black"]
    node4415_name [shape=none, label=<<font color="black">Branch[4415]</font>>]
    node4415_name -> node4415 [arrowhead=none, color="black", style=dashed]
    node4415 [shape=diamond, label=<<font color="black">(&lt; %10 %11.length)</font>> color="black" fillcolor="white", style=filled]
    node4415 -> node4416 [label=<<font color="black">true</font>> color="black"]
    node4415 -> node4426 [label=<<font color="black">false</font>> color="black"]
    node4413_name [shape=none, label=<<font color="black">Block[4413]</font>>]
    node4413_name -> node4413 [arrowhead=none, color="black", style=dashed]
    node4413 [shape=box, label=<<font color="black">[0] let env = %9<BR ALIGN="LEFT"/>[1] assert (= calleeContext.VariableEnvironment calleeEnv)<BR ALIGN="LEFT"/>[2] calleeContext.LexicalEnvironment = env<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4413 -> node4414 [color="black"]
    node4416_name [shape=none, label=<<font color="black">Block[4416]</font>>]
    node4416_name -> node4416 [arrowhead=none, color="black", style=dashed]
    node4416 [shape=box, label=<<font color="black">[0] let paramName = %11[%10]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4416 -> node4417 [color="black"]
    node4426_name [shape=none, label=<<font color="black">Branch[4426]</font>>]
    node4426_name -> node4426 [arrowhead=none, color="black", style=dashed]
    node4426 [shape=diamond, label=<<font color="black">(= argumentsObjectNeeded true)</font>> color="black" fillcolor="white", style=filled]
    node4426 -> node4427 [label=<<font color="black">true</font>> color="black"]
    node4426 -> node4440 [label=<<font color="black">false</font>> color="black"]
    node4417_name [shape=none, label=<<font color="black">Call[4417]</font>>]
    node4417_name -> node4417 [arrowhead=none, color="black", style=dashed]
    node4417 [shape=cds, label=<<font color="black">%12 = env-&gt;HasBinding(paramName)</font>> color="black" fillcolor="white", style=filled]
    node4417 -> node4418 [color="black"]
    node4427_name [shape=none, label=<<font color="black">Branch[4427]</font>>]
    node4427_name -> node4427 [arrowhead=none, color="black", style=dashed]
    node4427 [shape=diamond, label=<<font color="black">(|| (= strict true) (= simpleParameterList false))</font>> color="black" fillcolor="white", style=filled]
    node4427 -> node4428 [label=<<font color="black">true</font>> color="black"]
    node4427 -> node4430 [label=<<font color="black">false</font>> color="black"]
    node4440_name [shape=none, label=<<font color="black">Block[4440]</font>>]
    node4440_name -> node4440 [arrowhead=none, color="black", style=dashed]
    node4440 [shape=box, label=<<font color="black">[0] let parameterBindings = parameterNames<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4440 -> node4441 [color="black"]
    node4418_name [shape=none, label=<<font color="black">Block[4418]</font>>]
    node4418_name -> node4418 [arrowhead=none, color="black", style=dashed]
    node4418 [shape=box, label=<<font color="black">[0] let alreadyDeclared = [! %12]<BR ALIGN="LEFT"/>[1] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4418 -> node4419 [color="black"]
    node4428_name [shape=none, label=<<font color="black">Call[4428]</font>>]
    node4428_name -> node4428 [arrowhead=none, color="black", style=dashed]
    node4428 [shape=cds, label=<<font color="black">%15 = clo&lt;CreateUnmappedArgumentsObject&gt;(argumentsList)</font>> color="black" fillcolor="white", style=filled]
    node4428 -> node4429 [color="black"]
    node4430_name [shape=none, label=<<font color="black">Block[4430]</font>>]
    node4430_name -> node4430 [arrowhead=none, color="black", style=dashed]
    node4430 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4430 -> node4431 [color="black"]
    node4441_name [shape=none, label=<<font color="black">Call[4441]</font>>]
    node4441_name -> node4441 [arrowhead=none, color="black", style=dashed]
    node4441 [shape=cds, label=<<font color="black">%20 = clo&lt;CreateListIteratorRecord&gt;(argumentsList)</font>> color="black" fillcolor="white", style=filled]
    node4441 -> node4442 [color="black"]
    node4419_name [shape=none, label=<<font color="black">Branch[4419]</font>>]
    node4419_name -> node4419 [arrowhead=none, color="black", style=dashed]
    node4419 [shape=diamond, label=<<font color="black">(= alreadyDeclared false)</font>> color="black" fillcolor="white", style=filled]
    node4419 -> node4420 [label=<<font color="black">true</font>> color="black"]
    node4419 -> node4425 [label=<<font color="black">false</font>> color="black"]
    node4429_name [shape=none, label=<<font color="black">Block[4429]</font>>]
    node4429_name -> node4429 [arrowhead=none, color="black", style=dashed]
    node4429 [shape=box, label=<<font color="black">[0] let ao = %15<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4429 -> node4433 [color="black"]
    node4431_name [shape=none, label=<<font color="black">Call[4431]</font>>]
    node4431_name -> node4431 [arrowhead=none, color="black", style=dashed]
    node4431 [shape=cds, label=<<font color="black">%16 = clo&lt;CreateMappedArgumentsObject&gt;(func, formals, argumentsList, env)</font>> color="black" fillcolor="white", style=filled]
    node4431 -> node4432 [color="black"]
    node4442_name [shape=none, label=<<font color="black">Block[4442]</font>>]
    node4442_name -> node4442 [arrowhead=none, color="black", style=dashed]
    node4442 [shape=box, label=<<font color="black">[0] let iteratorRecord = %20<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4442 -> node4443 [color="black"]
    node4420_name [shape=none, label=<<font color="black">Call[4420]</font>>]
    node4420_name -> node4420 [arrowhead=none, color="black", style=dashed]
    node4420 [shape=cds, label=<<font color="black">%13 = env-&gt;CreateMutableBinding(paramName, false)</font>> color="black" fillcolor="white", style=filled]
    node4420 -> node4421 [color="black"]
    node4425_name [shape=none, label=<<font color="black">Block[4425]</font>>]
    node4425_name -> node4425 [arrowhead=none, color="black", style=dashed]
    node4425 [shape=box, label=<<font color="black">[0] %10 = (+ %10 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4425 -> node4415 [color="black"]
    node4433_name [shape=none, label=<<font color="black">Branch[4433]</font>>]
    node4433_name -> node4433 [arrowhead=none, color="black", style=dashed]
    node4433 [shape=diamond, label=<<font color="black">(= strict true)</font>> color="black" fillcolor="white", style=filled]
    node4433 -> node4434 [label=<<font color="black">true</font>> color="black"]
    node4433 -> node4436 [label=<<font color="black">false</font>> color="black"]
    node4432_name [shape=none, label=<<font color="black">Block[4432]</font>>]
    node4432_name -> node4432 [arrowhead=none, color="black", style=dashed]
    node4432 [shape=box, label=<<font color="black">[0] let ao = %16<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4432 -> node4433 [color="black"]
    node4443_name [shape=none, label=<<font color="black">Branch[4443]</font>>]
    node4443_name -> node4443 [arrowhead=none, color="black", style=dashed]
    node4443 [shape=diamond, label=<<font color="black">(= hasDuplicates true)</font>> color="black" fillcolor="white", style=filled]
    node4443 -> node4444 [label=<<font color="black">true</font>> color="black"]
    node4443 -> node4446 [label=<<font color="black">false</font>> color="black"]
    node4421_name [shape=none, label=<<font color="black">Block[4421]</font>>]
    node4421_name -> node4421 [arrowhead=none, color="black", style=dashed]
    node4421 [shape=box, label=<<font color="black">[0] [! %13]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4421 -> node4422 [color="black"]
    node4434_name [shape=none, label=<<font color="black">Call[4434]</font>>]
    node4434_name -> node4434 [arrowhead=none, color="black", style=dashed]
    node4434 [shape=cds, label=<<font color="black">%17 = env-&gt;CreateImmutableBinding(&quot;arguments&quot;, false)</font>> color="black" fillcolor="white", style=filled]
    node4434 -> node4435 [color="black"]
    node4436_name [shape=none, label=<<font color="black">Call[4436]</font>>]
    node4436_name -> node4436 [arrowhead=none, color="black", style=dashed]
    node4436 [shape=cds, label=<<font color="black">%18 = env-&gt;CreateMutableBinding(&quot;arguments&quot;, false)</font>> color="black" fillcolor="white", style=filled]
    node4436 -> node4437 [color="black"]
    node4444_name [shape=none, label=<<font color="black">Call[4444]</font>>]
    node4444_name -> node4444 [arrowhead=none, color="black", style=dashed]
    node4444 [shape=cds, label=<<font color="black">%21 = formals-&gt;IteratorBindingInitialization(iteratorRecord, undefined)</font>> color="black" fillcolor="white", style=filled]
    node4444 -> node4445 [color="black"]
    node4446_name [shape=none, label=<<font color="black">Call[4446]</font>>]
    node4446_name -> node4446 [arrowhead=none, color="black", style=dashed]
    node4446 [shape=cds, label=<<font color="black">%22 = formals-&gt;IteratorBindingInitialization(iteratorRecord, env)</font>> color="black" fillcolor="white", style=filled]
    node4446 -> node4447 [color="black"]
    node4422_name [shape=none, label=<<font color="black">Branch[4422]</font>>]
    node4422_name -> node4422 [arrowhead=none, color="black", style=dashed]
    node4422 [shape=diamond, label=<<font color="black">(= hasDuplicates true)</font>> color="black" fillcolor="white", style=filled]
    node4422 -> node4423 [label=<<font color="black">true</font>> color="black"]
    node4422 -> node4425 [label=<<font color="black">false</font>> color="black"]
    node4435_name [shape=none, label=<<font color="black">Block[4435]</font>>]
    node4435_name -> node4435 [arrowhead=none, color="black", style=dashed]
    node4435 [shape=box, label=<<font color="black">[0] [! %17]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4435 -> node4438 [color="black"]
    node4437_name [shape=none, label=<<font color="black">Block[4437]</font>>]
    node4437_name -> node4437 [arrowhead=none, color="black", style=dashed]
    node4437 [shape=box, label=<<font color="black">[0] [! %18]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4437 -> node4438 [color="black"]
    node4445_name [shape=none, label=<<font color="black">Block[4445]</font>>]
    node4445_name -> node4445 [arrowhead=none, color="black", style=dashed]
    node4445 [shape=box, label=<<font color="black">[0] [? %21]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4445 -> node4448 [color="black"]
    node4447_name [shape=none, label=<<font color="black">Block[4447]</font>>]
    node4447_name -> node4447 [arrowhead=none, color="black", style=dashed]
    node4447 [shape=box, label=<<font color="black">[0] [? %22]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4447 -> node4448 [color="black"]
    node4423_name [shape=none, label=<<font color="black">Call[4423]</font>>]
    node4423_name -> node4423 [arrowhead=none, color="black", style=dashed]
    node4423 [shape=cds, label=<<font color="black">%14 = env-&gt;InitializeBinding(paramName, undefined)</font>> color="black" fillcolor="white", style=filled]
    node4423 -> node4424 [color="black"]
    node4438_name [shape=none, label=<<font color="black">Call[4438]</font>>]
    node4438_name -> node4438 [arrowhead=none, color="black", style=dashed]
    node4438 [shape=cds, label=<<font color="black">%19 = env-&gt;InitializeBinding(&quot;arguments&quot;, ao)</font>> color="black" fillcolor="white", style=filled]
    node4438 -> node4439 [color="black"]
    node4448_name [shape=none, label=<<font color="black">Branch[4448]</font>>]
    node4448_name -> node4448 [arrowhead=none, color="black", style=dashed]
    node4448 [shape=diamond, label=<<font color="black">(= hasParameterExpressions false)</font>> color="black" fillcolor="white", style=filled]
    node4448 -> node4449 [label=<<font color="black">true</font>> color="black"]
    node4448 -> node4460 [label=<<font color="black">false</font>> color="black"]
    node4424_name [shape=none, label=<<font color="black">Block[4424]</font>>]
    node4424_name -> node4424 [arrowhead=none, color="black", style=dashed]
    node4424 [shape=box, label=<<font color="black">[0] [! %14]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4424 -> node4425 [color="black"]
    node4439_name [shape=none, label=<<font color="black">Block[4439]</font>>]
    node4439_name -> node4439 [arrowhead=none, color="black", style=dashed]
    node4439 [shape=box, label=<<font color="black">[0] [! %19]<BR ALIGN="LEFT"/>[1] let parameterBindings = (list-concat parameterNames (new [&quot;arguments&quot;])[#435])[#434]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4439 -> node4441 [color="black"]
    node4449_name [shape=none, label=<<font color="black">Block[4449]</font>>]
    node4449_name -> node4449 [arrowhead=none, color="black", style=dashed]
    node4449 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/>[1] let instantiatedVarNames = (copy parameterBindings)[#436]<BR ALIGN="LEFT"/>[2] %24 = varNames<BR ALIGN="LEFT"/>[3] %23 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4449 -> node4450 [color="black"]
    node4460_name [shape=none, label=<<font color="black">Block[4460]</font>>]
    node4460_name -> node4460 [arrowhead=none, color="black", style=dashed]
    node4460 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4460 -> node4461 [color="black"]
    node4450_name [shape=none, label=<<font color="black">Branch[4450]</font>>]
    node4450_name -> node4450 [arrowhead=none, color="black", style=dashed]
    node4450 [shape=diamond, label=<<font color="black">(&lt; %23 %24.length)</font>> color="black" fillcolor="white", style=filled]
    node4450 -> node4451 [label=<<font color="black">true</font>> color="black"]
    node4450 -> node4459 [label=<<font color="black">false</font>> color="black"]
    node4461_name [shape=none, label=<<font color="black">Call[4461]</font>>]
    node4461_name -> node4461 [arrowhead=none, color="black", style=dashed]
    node4461 [shape=cds, label=<<font color="black">%27 = clo&lt;NewDeclarativeEnvironment&gt;(env)</font>> color="black" fillcolor="white", style=filled]
    node4461 -> node4462 [color="black"]
    node4451_name [shape=none, label=<<font color="black">Block[4451]</font>>]
    node4451_name -> node4451 [arrowhead=none, color="black", style=dashed]
    node4451 [shape=box, label=<<font color="black">[0] let n = %24[%23]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4451 -> node4452 [color="black"]
    node4459_name [shape=none, label=<<font color="black">Block[4459]</font>>]
    node4459_name -> node4459 [arrowhead=none, color="black", style=dashed]
    node4459 [shape=box, label=<<font color="black">[0] let varEnv = env<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4459 -> node4476 [color="black"]
    node4462_name [shape=none, label=<<font color="black">Block[4462]</font>>]
    node4462_name -> node4462 [arrowhead=none, color="black", style=dashed]
    node4462 [shape=box, label=<<font color="black">[0] let varEnv = %27<BR ALIGN="LEFT"/>[1] calleeContext.VariableEnvironment = varEnv<BR ALIGN="LEFT"/>[2] let instantiatedVarNames = (new [])[#437]<BR ALIGN="LEFT"/>[3] %29 = varNames<BR ALIGN="LEFT"/>[4] %28 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4462 -> node4463 [color="black"]
    node4452_name [shape=none, label=<<font color="black">Branch[4452]</font>>]
    node4452_name -> node4452 [arrowhead=none, color="black", style=dashed]
    node4452 [shape=diamond, label=<<font color="black">(! (contains instantiatedVarNames n))</font>> color="black" fillcolor="white", style=filled]
    node4452 -> node4453 [label=<<font color="black">true</font>> color="black"]
    node4452 -> node4458 [label=<<font color="black">false</font>> color="black"]
    node4476_name [shape=none, label=<<font color="black">Block[4476]</font>>]
    node4476_name -> node4476 [arrowhead=none, color="black", style=dashed]
    node4476 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4476 -> node4477 [color="black"]
    node4463_name [shape=none, label=<<font color="black">Branch[4463]</font>>]
    node4463_name -> node4463 [arrowhead=none, color="black", style=dashed]
    node4463 [shape=diamond, label=<<font color="black">(&lt; %28 %29.length)</font>> color="black" fillcolor="white", style=filled]
    node4463 -> node4464 [label=<<font color="black">true</font>> color="black"]
    node4463 -> node4476 [label=<<font color="black">false</font>> color="black"]
    node4453_name [shape=none, label=<<font color="black">Block[4453]</font>>]
    node4453_name -> node4453 [arrowhead=none, color="black", style=dashed]
    node4453 [shape=box, label=<<font color="black">[0] push instantiatedVarNames &lt; n<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4453 -> node4454 [color="black"]
    node4458_name [shape=none, label=<<font color="black">Block[4458]</font>>]
    node4458_name -> node4458 [arrowhead=none, color="black", style=dashed]
    node4458 [shape=box, label=<<font color="black">[0] %23 = (+ %23 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4458 -> node4450 [color="black"]
    node4477_name [shape=none, label=<<font color="black">Branch[4477]</font>>]
    node4477_name -> node4477 [arrowhead=none, color="black", style=dashed]
    node4477 [shape=diamond, label=<<font color="black">(= strict false)</font>> color="black" fillcolor="white", style=filled]
    node4477 -> node4478 [label=<<font color="black">true</font>> color="black"]
    node4477 -> node4480 [label=<<font color="black">false</font>> color="black"]
    node4464_name [shape=none, label=<<font color="black">Block[4464]</font>>]
    node4464_name -> node4464 [arrowhead=none, color="black", style=dashed]
    node4464 [shape=box, label=<<font color="black">[0] let n = %29[%28]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4464 -> node4465 [color="black"]
    node4454_name [shape=none, label=<<font color="black">Call[4454]</font>>]
    node4454_name -> node4454 [arrowhead=none, color="black", style=dashed]
    node4454 [shape=cds, label=<<font color="black">%25 = env-&gt;CreateMutableBinding(n, false)</font>> color="black" fillcolor="white", style=filled]
    node4454 -> node4455 [color="black"]
    node4478_name [shape=none, label=<<font color="black">Call[4478]</font>>]
    node4478_name -> node4478 [arrowhead=none, color="black", style=dashed]
    node4478 [shape=cds, label=<<font color="black">%33 = clo&lt;NewDeclarativeEnvironment&gt;(varEnv)</font>> color="black" fillcolor="white", style=filled]
    node4478 -> node4479 [color="black"]
    node4480_name [shape=none, label=<<font color="black">Block[4480]</font>>]
    node4480_name -> node4480 [arrowhead=none, color="black", style=dashed]
    node4480 [shape=box, label=<<font color="black">[0] let lexEnv = varEnv<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4480 -> node4481 [color="black"]
    node4465_name [shape=none, label=<<font color="black">Branch[4465]</font>>]
    node4465_name -> node4465 [arrowhead=none, color="black", style=dashed]
    node4465 [shape=diamond, label=<<font color="black">(! (contains instantiatedVarNames n))</font>> color="black" fillcolor="white", style=filled]
    node4465 -> node4466 [label=<<font color="black">true</font>> color="black"]
    node4465 -> node4475 [label=<<font color="black">false</font>> color="black"]
    node4455_name [shape=none, label=<<font color="black">Block[4455]</font>>]
    node4455_name -> node4455 [arrowhead=none, color="black", style=dashed]
    node4455 [shape=box, label=<<font color="black">[0] [! %25]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4455 -> node4456 [color="black"]
    node4479_name [shape=none, label=<<font color="black">Block[4479]</font>>]
    node4479_name -> node4479 [arrowhead=none, color="black", style=dashed]
    node4479 [shape=box, label=<<font color="black">[0] let lexEnv = %33<BR ALIGN="LEFT"/>[1] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4479 -> node4481 [color="black"]
    node4481_name [shape=none, label=<<font color="black">Block[4481]</font>>]
    node4481_name -> node4481 [arrowhead=none, color="black", style=dashed]
    node4481 [shape=box, label=<<font color="black">[0] calleeContext.LexicalEnvironment = lexEnv<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4481 -> node4482 [color="black"]
    node4466_name [shape=none, label=<<font color="black">Block[4466]</font>>]
    node4466_name -> node4466 [arrowhead=none, color="black", style=dashed]
    node4466 [shape=box, label=<<font color="black">[0] push instantiatedVarNames &lt; n<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4466 -> node4467 [color="black"]
    node4475_name [shape=none, label=<<font color="black">Block[4475]</font>>]
    node4475_name -> node4475 [arrowhead=none, color="black", style=dashed]
    node4475 [shape=box, label=<<font color="black">[0] %28 = (+ %28 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4475 -> node4463 [color="black"]
    node4456_name [shape=none, label=<<font color="black">Call[4456]</font>>]
    node4456_name -> node4456 [arrowhead=none, color="black", style=dashed]
    node4456 [shape=cds, label=<<font color="black">%26 = env-&gt;InitializeBinding(n, undefined)</font>> color="black" fillcolor="white", style=filled]
    node4456 -> node4457 [color="black"]
    node4482_name [shape=none, label=<<font color="black">Call[4482]</font>>]
    node4482_name -> node4482 [arrowhead=none, color="black", style=dashed]
    node4482 [shape=cds, label=<<font color="black">%34 = code-&gt;LexicallyScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node4482 -> node4483 [color="black"]
    node4467_name [shape=none, label=<<font color="black">Call[4467]</font>>]
    node4467_name -> node4467 [arrowhead=none, color="black", style=dashed]
    node4467 [shape=cds, label=<<font color="black">%30 = varEnv-&gt;CreateMutableBinding(n, false)</font>> color="black" fillcolor="white", style=filled]
    node4467 -> node4468 [color="black"]
    node4457_name [shape=none, label=<<font color="black">Block[4457]</font>>]
    node4457_name -> node4457 [arrowhead=none, color="black", style=dashed]
    node4457 [shape=box, label=<<font color="black">[0] [! %26]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4457 -> node4458 [color="black"]
    node4483_name [shape=none, label=<<font color="black">Block[4483]</font>>]
    node4483_name -> node4483 [arrowhead=none, color="black", style=dashed]
    node4483 [shape=box, label=<<font color="black">[0] let lexDeclarations = %34<BR ALIGN="LEFT"/>[1] %36 = lexDeclarations<BR ALIGN="LEFT"/>[2] %35 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4483 -> node4484 [color="black"]
    node4468_name [shape=none, label=<<font color="black">Block[4468]</font>>]
    node4468_name -> node4468 [arrowhead=none, color="black", style=dashed]
    node4468 [shape=box, label=<<font color="black">[0] [! %30]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4468 -> node4469 [color="black"]
    node4484_name [shape=none, label=<<font color="black">Branch[4484]</font>>]
    node4484_name -> node4484 [arrowhead=none, color="black", style=dashed]
    node4484 [shape=diamond, label=<<font color="black">(&lt; %35 %36.length)</font>> color="black" fillcolor="white", style=filled]
    node4484 -> node4485 [label=<<font color="black">true</font>> color="black"]
    node4484 -> node4498 [label=<<font color="black">false</font>> color="black"]
    node4469_name [shape=none, label=<<font color="black">Branch[4469]</font>>]
    node4469_name -> node4469 [arrowhead=none, color="black", style=dashed]
    node4469 [shape=diamond, label=<<font color="black">(|| (! (contains parameterBindings n)) (contains functionNames n))</font>> color="black" fillcolor="white", style=filled]
    node4469 -> node4470 [label=<<font color="black">true</font>> color="black"]
    node4469 -> node4471 [label=<<font color="black">false</font>> color="black"]
    node4485_name [shape=none, label=<<font color="black">Block[4485]</font>>]
    node4485_name -> node4485 [arrowhead=none, color="black", style=dashed]
    node4485 [shape=box, label=<<font color="black">[0] let d = %36[%35]<BR ALIGN="LEFT"/>[1] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4485 -> node4486 [color="black"]
    node4498_name [shape=none, label=<<font color="black">Block[4498]</font>>]
    node4498_name -> node4498 [arrowhead=none, color="black", style=dashed]
    node4498 [shape=box, label=<<font color="black">[0] let privateEnv = calleeContext.PrivateEnvironment<BR ALIGN="LEFT"/>[1] %44 = functionsToInitialize<BR ALIGN="LEFT"/>[2] %43 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4498 -> node4499 [color="black"]
    node4470_name [shape=none, label=<<font color="black">Block[4470]</font>>]
    node4470_name -> node4470 [arrowhead=none, color="black", style=dashed]
    node4470 [shape=box, label=<<font color="black">[0] let initialValue = undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4470 -> node4473 [color="black"]
    node4471_name [shape=none, label=<<font color="black">Call[4471]</font>>]
    node4471_name -> node4471 [arrowhead=none, color="black", style=dashed]
    node4471 [shape=cds, label=<<font color="black">%31 = env-&gt;GetBindingValue(n, false)</font>> color="black" fillcolor="white", style=filled]
    node4471 -> node4472 [color="black"]
    node4486_name [shape=none, label=<<font color="black">Call[4486]</font>>]
    node4486_name -> node4486 [arrowhead=none, color="black", style=dashed]
    node4486 [shape=cds, label=<<font color="black">%39 = d-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node4486 -> node4487 [color="black"]
    node4499_name [shape=none, label=<<font color="black">Branch[4499]</font>>]
    node4499_name -> node4499 [arrowhead=none, color="black", style=dashed]
    node4499 [shape=diamond, label=<<font color="black">(&lt; %43 %44.length)</font>> color="black" fillcolor="white", style=filled]
    node4499 -> node4500 [label=<<font color="black">true</font>> color="black"]
    node4499 -> node4507 [label=<<font color="black">false</font>> color="black"]
    node4473_name [shape=none, label=<<font color="black">Call[4473]</font>>]
    node4473_name -> node4473 [arrowhead=none, color="black", style=dashed]
    node4473 [shape=cds, label=<<font color="black">%32 = varEnv-&gt;InitializeBinding(n, initialValue)</font>> color="black" fillcolor="white", style=filled]
    node4473 -> node4474 [color="black"]
    node4472_name [shape=none, label=<<font color="black">Block[4472]</font>>]
    node4472_name -> node4472 [arrowhead=none, color="black", style=dashed]
    node4472 [shape=box, label=<<font color="black">[0] let initialValue = [! %31]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4472 -> node4473 [color="black"]
    node4487_name [shape=none, label=<<font color="black">Block[4487]</font>>]
    node4487_name -> node4487 [arrowhead=none, color="black", style=dashed]
    node4487 [shape=box, label=<<font color="black">[0] %38 = %39<BR ALIGN="LEFT"/>[1] %37 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4487 -> node4488 [color="black"]
    node4500_name [shape=none, label=<<font color="black">Block[4500]</font>>]
    node4500_name -> node4500 [arrowhead=none, color="black", style=dashed]
    node4500 [shape=box, label=<<font color="black">[0] let f = %44[%43]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4500 -> node4501 [color="black"]
    node4507_name [shape=none, label=<<font color="black">Block[4507]</font>>]
    node4507_name -> node4507 [arrowhead=none, color="black", style=dashed]
    node4507 [shape=box, label=<<font color="black">[0] return ~unused~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4507 -> cluster1098_exit [color="black"]
    node4474_name [shape=none, label=<<font color="black">Block[4474]</font>>]
    node4474_name -> node4474 [arrowhead=none, color="black", style=dashed]
    node4474 [shape=box, label=<<font color="black">[0] [! %32]<BR ALIGN="LEFT"/>[1] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4474 -> node4475 [color="black"]
    node4488_name [shape=none, label=<<font color="black">Branch[4488]</font>>]
    node4488_name -> node4488 [arrowhead=none, color="black", style=dashed]
    node4488 [shape=diamond, label=<<font color="black">(&lt; %37 %38.length)</font>> color="black" fillcolor="white", style=filled]
    node4488 -> node4489 [label=<<font color="black">true</font>> color="black"]
    node4488 -> node4497 [label=<<font color="black">false</font>> color="black"]
    node4501_name [shape=none, label=<<font color="black">Call[4501]</font>>]
    node4501_name -> node4501 [arrowhead=none, color="black", style=dashed]
    node4501 [shape=cds, label=<<font color="black">%45 = f-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node4501 -> node4502 [color="black"]
    node4489_name [shape=none, label=<<font color="black">Block[4489]</font>>]
    node4489_name -> node4489 [arrowhead=none, color="black", style=dashed]
    node4489 [shape=box, label=<<font color="black">[0] let dn = %38[%37]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4489 -> node4490 [color="black"]
    node4497_name [shape=none, label=<<font color="black">Block[4497]</font>>]
    node4497_name -> node4497 [arrowhead=none, color="black", style=dashed]
    node4497 [shape=box, label=<<font color="black">[0] %35 = (+ %35 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4497 -> node4484 [color="black"]
    node4502_name [shape=none, label=<<font color="black">Block[4502]</font>>]
    node4502_name -> node4502 [arrowhead=none, color="black", style=dashed]
    node4502 [shape=box, label=<<font color="black">[0] let fn = %45[0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4502 -> node4503 [color="black"]
    node4490_name [shape=none, label=<<font color="black">Call[4490]</font>>]
    node4490_name -> node4490 [arrowhead=none, color="black", style=dashed]
    node4490 [shape=cds, label=<<font color="black">%40 = d-&gt;IsConstantDeclaration()</font>> color="black" fillcolor="white", style=filled]
    node4490 -> node4491 [color="black"]
    node4503_name [shape=none, label=<<font color="black">Call[4503]</font>>]
    node4503_name -> node4503 [arrowhead=none, color="black", style=dashed]
    node4503 [shape=cds, label=<<font color="black">%46 = f-&gt;InstantiateFunctionObject(lexEnv, privateEnv)</font>> color="black" fillcolor="white", style=filled]
    node4503 -> node4504 [color="black"]
    node4491_name [shape=none, label=<<font color="black">Branch[4491]</font>>]
    node4491_name -> node4491 [arrowhead=none, color="black", style=dashed]
    node4491 [shape=diamond, label=<<font color="black">(= %40 true)</font>> color="black" fillcolor="white", style=filled]
    node4491 -> node4492 [label=<<font color="black">true</font>> color="black"]
    node4491 -> node4494 [label=<<font color="black">false</font>> color="black"]
    node4504_name [shape=none, label=<<font color="black">Block[4504]</font>>]
    node4504_name -> node4504 [arrowhead=none, color="black", style=dashed]
    node4504 [shape=box, label=<<font color="black">[0] let fo = %46<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4504 -> node4505 [color="black"]
    node4492_name [shape=none, label=<<font color="black">Call[4492]</font>>]
    node4492_name -> node4492 [arrowhead=none, color="black", style=dashed]
    node4492 [shape=cds, label=<<font color="black">%41 = lexEnv-&gt;CreateImmutableBinding(dn, true)</font>> color="black" fillcolor="white", style=filled]
    node4492 -> node4493 [color="black"]
    node4494_name [shape=none, label=<<font color="black">Call[4494]</font>>]
    node4494_name -> node4494 [arrowhead=none, color="black", style=dashed]
    node4494 [shape=cds, label=<<font color="black">%42 = lexEnv-&gt;CreateMutableBinding(dn, false)</font>> color="black" fillcolor="white", style=filled]
    node4494 -> node4495 [color="black"]
    node4505_name [shape=none, label=<<font color="black">Call[4505]</font>>]
    node4505_name -> node4505 [arrowhead=none, color="black", style=dashed]
    node4505 [shape=cds, label=<<font color="black">%47 = varEnv-&gt;SetMutableBinding(fn, fo, false)</font>> color="black" fillcolor="white", style=filled]
    node4505 -> node4506 [color="black"]
    node4493_name [shape=none, label=<<font color="black">Block[4493]</font>>]
    node4493_name -> node4493 [arrowhead=none, color="black", style=dashed]
    node4493 [shape=box, label=<<font color="black">[0] [! %41]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4493 -> node4496 [color="black"]
    node4495_name [shape=none, label=<<font color="black">Block[4495]</font>>]
    node4495_name -> node4495 [arrowhead=none, color="black", style=dashed]
    node4495 [shape=box, label=<<font color="black">[0] [! %42]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4495 -> node4496 [color="black"]
    node4506_name [shape=none, label=<<font color="black">Block[4506]</font>>]
    node4506_name -> node4506 [arrowhead=none, color="black", style=dashed]
    node4506 [shape=box, label=<<font color="black">[0] [! %47]<BR ALIGN="LEFT"/>[1] %43 = (+ %43 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4506 -> node4499 [color="black"]
    node4496_name [shape=none, label=<<font color="black">Block[4496]</font>>]
    node4496_name -> node4496 [arrowhead=none, color="black", style=dashed]
    node4496 [shape=box, label=<<font color="black">[0] %37 = (+ %37 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4496 -> node4488 [color="black"]
  }
}