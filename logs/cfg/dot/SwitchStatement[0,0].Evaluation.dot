digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1480 {
    label = "def <SYNTAX>:SwitchStatement[0,0].Evaluation(this: Ast:SwitchStatement[0,0]): Unknown"
    style = rounded
    cluster1480_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1480_entry_name -> cluster1480_entry [arrowhead=none, color="black", style=dashed]
    cluster1480_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1480_entry -> node8137 [color="black"]
    cluster1480_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1480_exit_name -> cluster1480_exit [arrowhead=none, color="black", style=dashed]
    cluster1480_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8137_name [shape=none, label=<<font color="black">Call[8137]</font>>]
    node8137_name -> node8137 [arrowhead=none, color="black", style=dashed]
    node8137 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node8137 -> node8138 [color="black"]
    node8138_name [shape=none, label=<<font color="black">Block[8138]</font>>]
    node8138_name -> node8138 [arrowhead=none, color="black", style=dashed]
    node8138 [shape=box, label=<<font color="black">[0] let exprRef = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8138 -> node8139 [color="black"]
    node8139_name [shape=none, label=<<font color="black">Call[8139]</font>>]
    node8139_name -> node8139 [arrowhead=none, color="black", style=dashed]
    node8139 [shape=cds, label=<<font color="black">%1 = clo&lt;GetValue&gt;(exprRef)</font>> color="black" fillcolor="white", style=filled]
    node8139 -> node8140 [color="black"]
    node8140_name [shape=none, label=<<font color="black">Block[8140]</font>>]
    node8140_name -> node8140 [arrowhead=none, color="black", style=dashed]
    node8140 [shape=box, label=<<font color="black">[0] let switchValue = [? %1]<BR ALIGN="LEFT"/>[1] let oldEnv = @EXECUTION_STACK[0].LexicalEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8140 -> node8141 [color="black"]
    node8141_name [shape=none, label=<<font color="black">Call[8141]</font>>]
    node8141_name -> node8141 [arrowhead=none, color="black", style=dashed]
    node8141 [shape=cds, label=<<font color="black">%2 = clo&lt;NewDeclarativeEnvironment&gt;(oldEnv)</font>> color="black" fillcolor="white", style=filled]
    node8141 -> node8142 [color="black"]
    node8142_name [shape=none, label=<<font color="black">Block[8142]</font>>]
    node8142_name -> node8142 [arrowhead=none, color="black", style=dashed]
    node8142 [shape=box, label=<<font color="black">[0] let blockEnv = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8142 -> node8143 [color="black"]
    node8143_name [shape=none, label=<<font color="black">Call[8143]</font>>]
    node8143_name -> node8143 [arrowhead=none, color="black", style=dashed]
    node8143 [shape=cds, label=<<font color="black">%3 = clo&lt;BlockDeclarationInstantiation&gt;(this[1], blockEnv)</font>> color="black" fillcolor="white", style=filled]
    node8143 -> node8144 [color="black"]
    node8144_name [shape=none, label=<<font color="black">Block[8144]</font>>]
    node8144_name -> node8144 [arrowhead=none, color="black", style=dashed]
    node8144 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = blockEnv<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8144 -> node8145 [color="black"]
    node8145_name [shape=none, label=<<font color="black">Call[8145]</font>>]
    node8145_name -> node8145 [arrowhead=none, color="black", style=dashed]
    node8145 [shape=cds, label=<<font color="black">%4 = this[1]-&gt;CaseBlockEvaluation(switchValue)</font>> color="black" fillcolor="white", style=filled]
    node8145 -> node8146 [color="black"]
    node8146_name [shape=none, label=<<font color="black">Call[8146]</font>>]
    node8146_name -> node8146 [arrowhead=none, color="black", style=dashed]
    node8146 [shape=cds, label=<<font color="black">%5 = clo&lt;Completion&gt;(%4)</font>> color="black" fillcolor="white", style=filled]
    node8146 -> node8147 [color="black"]
    node8147_name [shape=none, label=<<font color="black">Block[8147]</font>>]
    node8147_name -> node8147 [arrowhead=none, color="black", style=dashed]
    node8147 [shape=box, label=<<font color="black">[0] let R = %5<BR ALIGN="LEFT"/>[1] @EXECUTION_STACK[0].LexicalEnvironment = oldEnv<BR ALIGN="LEFT"/>[2] return R<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8147 -> cluster1480_exit [color="black"]
  }
}