digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster358 {
    label = "def <SYNTAX>:ForInOfStatement[7,0].VarDeclaredNames(this: Ast:ForInOfStatement[7,0]): List[String]"
    style = rounded
    cluster358_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster358_entry_name -> cluster358_entry [arrowhead=none, color="black", style=dashed]
    cluster358_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster358_entry -> node1959 [color="black"]
    cluster358_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster358_exit_name -> cluster358_exit [arrowhead=none, color="black", style=dashed]
    cluster358_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1959_name [shape=none, label=<<font color="black">Call[1959]</font>>]
    node1959_name -> node1959 [arrowhead=none, color="black", style=dashed]
    node1959 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node1959 -> node1960 [color="black"]
    node1960_name [shape=none, label=<<font color="black">Block[1960]</font>>]
    node1960_name -> node1960 [arrowhead=none, color="black", style=dashed]
    node1960 [shape=box, label=<<font color="black">[0] let names1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1960 -> node1961 [color="black"]
    node1961_name [shape=none, label=<<font color="black">Call[1961]</font>>]
    node1961_name -> node1961 [arrowhead=none, color="black", style=dashed]
    node1961 [shape=cds, label=<<font color="black">%1 = this[2]-&gt;VarDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1961 -> node1962 [color="black"]
    node1962_name [shape=none, label=<<font color="black">Block[1962]</font>>]
    node1962_name -> node1962 [arrowhead=none, color="black", style=dashed]
    node1962 [shape=box, label=<<font color="black">[0] let names2 = %1<BR ALIGN="LEFT"/>[1] return (list-concat names1 names2)[#194]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1962 -> cluster358_exit [color="black"]
  }
}