digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1283 {
    label = "def <SYNTAX>:TemplateLiteral[1,0].ArgumentListEvaluation(this: Ast:TemplateLiteral[1,0]): Normal[List[ESValue]] | Abrupt"
    style = rounded
    cluster1283_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1283_entry_name -> cluster1283_entry [arrowhead=none, color="black", style=dashed]
    cluster1283_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1283_entry -> node6009 [color="black"]
    cluster1283_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1283_exit_name -> cluster1283_exit [arrowhead=none, color="black", style=dashed]
    cluster1283_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6009_name [shape=none, label=<<font color="black">Block[6009]</font>>]
    node6009_name -> node6009 [arrowhead=none, color="black", style=dashed]
    node6009 [shape=box, label=<<font color="black">[0] let templateLiteral = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6009 -> node6010 [color="black"]
    node6010_name [shape=none, label=<<font color="black">Call[6010]</font>>]
    node6010_name -> node6010 [arrowhead=none, color="black", style=dashed]
    node6010 [shape=cds, label=<<font color="black">%0 = clo&lt;GetTemplateObject&gt;(templateLiteral)</font>> color="black" fillcolor="white", style=filled]
    node6010 -> node6011 [color="black"]
    node6011_name [shape=none, label=<<font color="black">Block[6011]</font>>]
    node6011_name -> node6011 [arrowhead=none, color="black", style=dashed]
    node6011 [shape=box, label=<<font color="black">[0] let siteObj = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6011 -> node6012 [color="black"]
    node6012_name [shape=none, label=<<font color="black">Call[6012]</font>>]
    node6012_name -> node6012 [arrowhead=none, color="black", style=dashed]
    node6012 [shape=cds, label=<<font color="black">%1 = this[0]-&gt;ArgumentListEvaluation()</font>> color="black" fillcolor="white", style=filled]
    node6012 -> node6013 [color="black"]
    node6013_name [shape=none, label=<<font color="black">Block[6013]</font>>]
    node6013_name -> node6013 [arrowhead=none, color="black", style=dashed]
    node6013 [shape=box, label=<<font color="black">[0] let remaining = [? %1]<BR ALIGN="LEFT"/>[1] return (list-concat (new [siteObj])[#582] remaining)[#581]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6013 -> cluster1283_exit [color="black"]
  }
}