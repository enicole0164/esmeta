digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1997 {
    label = "def <BUILTIN>:INTRINSICS.Object.create(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster1997_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1997_entry_name -> cluster1997_entry [arrowhead=none, color="black", style=dashed]
    cluster1997_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1997_entry -> node11066 [color="black"]
    cluster1997_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1997_exit_name -> cluster1997_exit [arrowhead=none, color="black", style=dashed]
    cluster1997_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11066_name [shape=none, label=<<font color="black">Branch[11066]</font>>]
    node11066_name -> node11066 [arrowhead=none, color="black", style=dashed]
    node11066 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11066 -> node11067 [label=<<font color="black">true</font>> color="black"]
    node11066 -> node11068 [label=<<font color="black">false</font>> color="black"]
    node11067_name [shape=none, label=<<font color="black">Block[11067]</font>>]
    node11067_name -> node11067 [arrowhead=none, color="black", style=dashed]
    node11067 [shape=box, label=<<font color="black">[0] let O = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11067 -> node11069 [color="black"]
    node11068_name [shape=none, label=<<font color="black">Block[11068]</font>>]
    node11068_name -> node11068 [arrowhead=none, color="black", style=dashed]
    node11068 [shape=box, label=<<font color="black">[0] let O = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11068 -> node11069 [color="black"]
    node11069_name [shape=none, label=<<font color="black">Branch[11069]</font>>]
    node11069_name -> node11069 [arrowhead=none, color="black", style=dashed]
    node11069 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11069 -> node11070 [label=<<font color="black">true</font>> color="black"]
    node11069 -> node11071 [label=<<font color="black">false</font>> color="black"]
    node11070_name [shape=none, label=<<font color="black">Block[11070]</font>>]
    node11070_name -> node11070 [arrowhead=none, color="black", style=dashed]
    node11070 [shape=box, label=<<font color="black">[0] let Properties = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11070 -> node11072 [color="black"]
    node11071_name [shape=none, label=<<font color="black">Block[11071]</font>>]
    node11071_name -> node11071 [arrowhead=none, color="black", style=dashed]
    node11071 [shape=box, label=<<font color="black">[0] let Properties = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11071 -> node11072 [color="black"]
    node11072_name [shape=none, label=<<font color="black">Branch[11072]</font>>]
    node11072_name -> node11072 [arrowhead=none, color="black", style=dashed]
    node11072 [shape=diamond, label=<<font color="black">(! (|| (= (typeof O) @Object) (= (typeof O) @Null)))</font>> color="black" fillcolor="white", style=filled]
    node11072 -> node11073 [label=<<font color="black">true</font>> color="black"]
    node11072 -> node11074 [label=<<font color="black">false</font>> color="black"]
    node11073_name [shape=none, label=<<font color="black">Block[11073]</font>>]
    node11073_name -> node11073 [arrowhead=none, color="black", style=dashed]
    node11073 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#888])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11073 -> cluster1997_exit [color="black"]
    node11074_name [shape=none, label=<<font color="black">Call[11074]</font>>]
    node11074_name -> node11074 [arrowhead=none, color="black", style=dashed]
    node11074 [shape=cds, label=<<font color="black">%0 = clo&lt;OrdinaryObjectCreate&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node11074 -> node11075 [color="black"]
    node11075_name [shape=none, label=<<font color="black">Block[11075]</font>>]
    node11075_name -> node11075 [arrowhead=none, color="black", style=dashed]
    node11075 [shape=box, label=<<font color="black">[0] let obj = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11075 -> node11076 [color="black"]
    node11076_name [shape=none, label=<<font color="black">Branch[11076]</font>>]
    node11076_name -> node11076 [arrowhead=none, color="black", style=dashed]
    node11076 [shape=diamond, label=<<font color="black">(! (= Properties undefined))</font>> color="black" fillcolor="white", style=filled]
    node11076 -> node11077 [label=<<font color="black">true</font>> color="black"]
    node11076 -> node11079 [label=<<font color="black">false</font>> color="black"]
    node11077_name [shape=none, label=<<font color="black">Call[11077]</font>>]
    node11077_name -> node11077 [arrowhead=none, color="black", style=dashed]
    node11077 [shape=cds, label=<<font color="black">%1 = clo&lt;ObjectDefineProperties&gt;(obj, Properties)</font>> color="black" fillcolor="white", style=filled]
    node11077 -> node11078 [color="black"]
    node11079_name [shape=none, label=<<font color="black">Block[11079]</font>>]
    node11079_name -> node11079 [arrowhead=none, color="black", style=dashed]
    node11079 [shape=box, label=<<font color="black">[0] return obj<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11079 -> cluster1997_exit [color="black"]
    node11078_name [shape=none, label=<<font color="black">Block[11078]</font>>]
    node11078_name -> node11078 [arrowhead=none, color="black", style=dashed]
    node11078 [shape=box, label=<<font color="black">[0] return [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11078 -> cluster1997_exit [color="black"]
  }
}