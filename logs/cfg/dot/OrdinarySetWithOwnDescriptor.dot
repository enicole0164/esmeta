digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1067 {
    label = "def OrdinarySetWithOwnDescriptor(O: Object, P: Symbol | String, V: ESValue, Receiver: ESValue, ownDesc: PropertyDescriptor | Undefined): Normal[Boolean] | Abrupt"
    style = rounded
    cluster1067_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1067_entry_name -> cluster1067_entry [arrowhead=none, color="black", style=dashed]
    cluster1067_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1067_entry -> node4142 [color="black"]
    cluster1067_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1067_exit_name -> cluster1067_exit [arrowhead=none, color="black", style=dashed]
    cluster1067_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4142_name [shape=none, label=<<font color="black">Branch[4142]</font>>]
    node4142_name -> node4142 [arrowhead=none, color="black", style=dashed]
    node4142 [shape=diamond, label=<<font color="black">(= ownDesc undefined)</font>> color="black" fillcolor="white", style=filled]
    node4142 -> node4143 [label=<<font color="black">true</font>> color="black"]
    node4142 -> node4149 [label=<<font color="black">false</font>> color="black"]
    node4143_name [shape=none, label=<<font color="black">Call[4143]</font>>]
    node4143_name -> node4143 [arrowhead=none, color="black", style=dashed]
    node4143 [shape=cds, label=<<font color="black">%0 = O-&gt;GetPrototypeOf()</font>> color="black" fillcolor="white", style=filled]
    node4143 -> node4144 [color="black"]
    node4149_name [shape=none, label=<<font color="black">Call[4149]</font>>]
    node4149_name -> node4149 [arrowhead=none, color="black", style=dashed]
    node4149 [shape=cds, label=<<font color="black">%2 = clo&lt;IsDataDescriptor&gt;(ownDesc)</font>> color="black" fillcolor="white", style=filled]
    node4149 -> node4150 [color="black"]
    node4144_name [shape=none, label=<<font color="black">Block[4144]</font>>]
    node4144_name -> node4144 [arrowhead=none, color="black", style=dashed]
    node4144 [shape=box, label=<<font color="black">[0] let parent = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4144 -> node4145 [color="black"]
    node4150_name [shape=none, label=<<font color="black">Branch[4150]</font>>]
    node4150_name -> node4150 [arrowhead=none, color="black", style=dashed]
    node4150 [shape=diamond, label=<<font color="black">(= %2 true)</font>> color="black" fillcolor="white", style=filled]
    node4150 -> node4151 [label=<<font color="black">true</font>> color="black"]
    node4150 -> node4169 [label=<<font color="black">false</font>> color="black"]
    node4145_name [shape=none, label=<<font color="black">Branch[4145]</font>>]
    node4145_name -> node4145 [arrowhead=none, color="black", style=dashed]
    node4145 [shape=diamond, label=<<font color="black">(! (= parent null))</font>> color="black" fillcolor="white", style=filled]
    node4145 -> node4146 [label=<<font color="black">true</font>> color="black"]
    node4145 -> node4148 [label=<<font color="black">false</font>> color="black"]
    node4151_name [shape=none, label=<<font color="black">Branch[4151]</font>>]
    node4151_name -> node4151 [arrowhead=none, color="black", style=dashed]
    node4151 [shape=diamond, label=<<font color="black">(= ownDesc.Writable false)</font>> color="black" fillcolor="white", style=filled]
    node4151 -> node4152 [label=<<font color="black">true</font>> color="black"]
    node4151 -> node4153 [label=<<font color="black">false</font>> color="black"]
    node4169_name [shape=none, label=<<font color="black">Call[4169]</font>>]
    node4169_name -> node4169 [arrowhead=none, color="black", style=dashed]
    node4169 [shape=cds, label=<<font color="black">%7 = clo&lt;IsAccessorDescriptor&gt;(ownDesc)</font>> color="black" fillcolor="white", style=filled]
    node4169 -> node4170 [color="black"]
    node4146_name [shape=none, label=<<font color="black">Call[4146]</font>>]
    node4146_name -> node4146 [arrowhead=none, color="black", style=dashed]
    node4146 [shape=cds, label=<<font color="black">%1 = parent-&gt;Set(P, V, Receiver)</font>> color="black" fillcolor="white", style=filled]
    node4146 -> node4147 [color="black"]
    node4148_name [shape=none, label=<<font color="black">Block[4148]</font>>]
    node4148_name -> node4148 [arrowhead=none, color="black", style=dashed]
    node4148 [shape=box, label=<<font color="black">[0] ownDesc = (new PropertyDescriptor(&quot;Value&quot; -&gt; undefined, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; true, &quot;Configurable&quot; -&gt; true))[#407]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4148 -> node4149 [color="black"]
    node4152_name [shape=none, label=<<font color="black">Block[4152]</font>>]
    node4152_name -> node4152 [arrowhead=none, color="black", style=dashed]
    node4152 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4152 -> cluster1067_exit [color="black"]
    node4153_name [shape=none, label=<<font color="black">Branch[4153]</font>>]
    node4153_name -> node4153 [arrowhead=none, color="black", style=dashed]
    node4153 [shape=diamond, label=<<font color="black">(! (= (typeof Receiver) @Object))</font>> color="black" fillcolor="white", style=filled]
    node4153 -> node4154 [label=<<font color="black">true</font>> color="black"]
    node4153 -> node4155 [label=<<font color="black">false</font>> color="black"]
    node4170_name [shape=none, label=<<font color="black">Block[4170]</font>>]
    node4170_name -> node4170 [arrowhead=none, color="black", style=dashed]
    node4170 [shape=box, label=<<font color="black">[0] assert (= %7 true)<BR ALIGN="LEFT"/>[1] let setter = ownDesc.Set<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4170 -> node4171 [color="black"]
    node4147_name [shape=none, label=<<font color="black">Block[4147]</font>>]
    node4147_name -> node4147 [arrowhead=none, color="black", style=dashed]
    node4147 [shape=box, label=<<font color="black">[0] return [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4147 -> cluster1067_exit [color="black"]
    node4154_name [shape=none, label=<<font color="black">Block[4154]</font>>]
    node4154_name -> node4154 [arrowhead=none, color="black", style=dashed]
    node4154 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4154 -> cluster1067_exit [color="black"]
    node4155_name [shape=none, label=<<font color="black">Call[4155]</font>>]
    node4155_name -> node4155 [arrowhead=none, color="black", style=dashed]
    node4155 [shape=cds, label=<<font color="black">%3 = Receiver-&gt;GetOwnProperty(P)</font>> color="black" fillcolor="white", style=filled]
    node4155 -> node4156 [color="black"]
    node4171_name [shape=none, label=<<font color="black">Branch[4171]</font>>]
    node4171_name -> node4171 [arrowhead=none, color="black", style=dashed]
    node4171 [shape=diamond, label=<<font color="black">(= setter undefined)</font>> color="black" fillcolor="white", style=filled]
    node4171 -> node4172 [label=<<font color="black">true</font>> color="black"]
    node4171 -> node4173 [label=<<font color="black">false</font>> color="black"]
    node4156_name [shape=none, label=<<font color="black">Block[4156]</font>>]
    node4156_name -> node4156 [arrowhead=none, color="black", style=dashed]
    node4156 [shape=box, label=<<font color="black">[0] let existingDescriptor = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4156 -> node4157 [color="black"]
    node4172_name [shape=none, label=<<font color="black">Block[4172]</font>>]
    node4172_name -> node4172 [arrowhead=none, color="black", style=dashed]
    node4172 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4172 -> cluster1067_exit [color="black"]
    node4173_name [shape=none, label=<<font color="black">Call[4173]</font>>]
    node4173_name -> node4173 [arrowhead=none, color="black", style=dashed]
    node4173 [shape=cds, label=<<font color="black">%8 = clo&lt;Call&gt;(setter, Receiver, (new [V])[#409])</font>> color="black" fillcolor="white", style=filled]
    node4173 -> node4174 [color="black"]
    node4157_name [shape=none, label=<<font color="black">Branch[4157]</font>>]
    node4157_name -> node4157 [arrowhead=none, color="black", style=dashed]
    node4157 [shape=diamond, label=<<font color="black">(! (= existingDescriptor undefined))</font>> color="black" fillcolor="white", style=filled]
    node4157 -> node4158 [label=<<font color="black">true</font>> color="black"]
    node4157 -> node4166 [label=<<font color="black">false</font>> color="black"]
    node4174_name [shape=none, label=<<font color="black">Block[4174]</font>>]
    node4174_name -> node4174 [arrowhead=none, color="black", style=dashed]
    node4174 [shape=box, label=<<font color="black">[0] [? %8]<BR ALIGN="LEFT"/>[1] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4174 -> cluster1067_exit [color="black"]
    node4158_name [shape=none, label=<<font color="black">Call[4158]</font>>]
    node4158_name -> node4158 [arrowhead=none, color="black", style=dashed]
    node4158 [shape=cds, label=<<font color="black">%4 = clo&lt;IsAccessorDescriptor&gt;(existingDescriptor)</font>> color="black" fillcolor="white", style=filled]
    node4158 -> node4159 [color="black"]
    node4166_name [shape=none, label=<<font color="black">Block[4166]</font>>]
    node4166_name -> node4166 [arrowhead=none, color="black", style=dashed]
    node4166 [shape=box, label=<<font color="black">[0] assert (= Receiver.SubMap[P] absent)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4166 -> node4167 [color="black"]
    node4159_name [shape=none, label=<<font color="black">Branch[4159]</font>>]
    node4159_name -> node4159 [arrowhead=none, color="black", style=dashed]
    node4159 [shape=diamond, label=<<font color="black">(= %4 true)</font>> color="black" fillcolor="white", style=filled]
    node4159 -> node4160 [label=<<font color="black">true</font>> color="black"]
    node4159 -> node4161 [label=<<font color="black">false</font>> color="black"]
    node4167_name [shape=none, label=<<font color="black">Call[4167]</font>>]
    node4167_name -> node4167 [arrowhead=none, color="black", style=dashed]
    node4167 [shape=cds, label=<<font color="black">%6 = clo&lt;CreateDataProperty&gt;(Receiver, P, V)</font>> color="black" fillcolor="white", style=filled]
    node4167 -> node4168 [color="black"]
    node4160_name [shape=none, label=<<font color="black">Block[4160]</font>>]
    node4160_name -> node4160 [arrowhead=none, color="black", style=dashed]
    node4160 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4160 -> cluster1067_exit [color="black"]
    node4161_name [shape=none, label=<<font color="black">Branch[4161]</font>>]
    node4161_name -> node4161 [arrowhead=none, color="black", style=dashed]
    node4161 [shape=diamond, label=<<font color="black">(= existingDescriptor.Writable false)</font>> color="black" fillcolor="white", style=filled]
    node4161 -> node4162 [label=<<font color="black">true</font>> color="black"]
    node4161 -> node4163 [label=<<font color="black">false</font>> color="black"]
    node4168_name [shape=none, label=<<font color="black">Block[4168]</font>>]
    node4168_name -> node4168 [arrowhead=none, color="black", style=dashed]
    node4168 [shape=box, label=<<font color="black">[0] return [? %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4168 -> cluster1067_exit [color="black"]
    node4162_name [shape=none, label=<<font color="black">Block[4162]</font>>]
    node4162_name -> node4162 [arrowhead=none, color="black", style=dashed]
    node4162 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4162 -> cluster1067_exit [color="black"]
    node4163_name [shape=none, label=<<font color="black">Block[4163]</font>>]
    node4163_name -> node4163 [arrowhead=none, color="black", style=dashed]
    node4163 [shape=box, label=<<font color="black">[0] let valueDesc = (new PropertyDescriptor(&quot;Value&quot; -&gt; V))[#408]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4163 -> node4164 [color="black"]
    node4164_name [shape=none, label=<<font color="black">Call[4164]</font>>]
    node4164_name -> node4164 [arrowhead=none, color="black", style=dashed]
    node4164 [shape=cds, label=<<font color="black">%5 = Receiver-&gt;DefineOwnProperty(P, valueDesc)</font>> color="black" fillcolor="white", style=filled]
    node4164 -> node4165 [color="black"]
    node4165_name [shape=none, label=<<font color="black">Block[4165]</font>>]
    node4165_name -> node4165 [arrowhead=none, color="black", style=dashed]
    node4165 [shape=box, label=<<font color="black">[0] return [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4165 -> cluster1067_exit [color="black"]
  }
}