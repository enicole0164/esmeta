digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2509 {
    label = "def <BUILTIN>:INTRINSICS.DataView.prototype.getUint32(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2509_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2509_entry_name -> cluster2509_entry [arrowhead=none, color="black", style=dashed]
    cluster2509_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2509_entry -> node17793 [color="black"]
    cluster2509_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2509_exit_name -> cluster2509_exit [arrowhead=none, color="black", style=dashed]
    cluster2509_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17793_name [shape=none, label=<<font color="black">Branch[17793]</font>>]
    node17793_name -> node17793 [arrowhead=none, color="black", style=dashed]
    node17793 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node17793 -> node17794 [label=<<font color="black">true</font>> color="black"]
    node17793 -> node17795 [label=<<font color="black">false</font>> color="black"]
    node17794_name [shape=none, label=<<font color="black">Block[17794]</font>>]
    node17794_name -> node17794 [arrowhead=none, color="black", style=dashed]
    node17794 [shape=box, label=<<font color="black">[0] let byteOffset = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17794 -> node17796 [color="black"]
    node17795_name [shape=none, label=<<font color="black">Block[17795]</font>>]
    node17795_name -> node17795 [arrowhead=none, color="black", style=dashed]
    node17795 [shape=box, label=<<font color="black">[0] let byteOffset = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17795 -> node17796 [color="black"]
    node17796_name [shape=none, label=<<font color="black">Branch[17796]</font>>]
    node17796_name -> node17796 [arrowhead=none, color="black", style=dashed]
    node17796 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node17796 -> node17797 [label=<<font color="black">true</font>> color="black"]
    node17796 -> node17798 [label=<<font color="black">false</font>> color="black"]
    node17797_name [shape=none, label=<<font color="black">Block[17797]</font>>]
    node17797_name -> node17797 [arrowhead=none, color="black", style=dashed]
    node17797 [shape=box, label=<<font color="black">[0] let littleEndian = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17797 -> node17799 [color="black"]
    node17798_name [shape=none, label=<<font color="black">Block[17798]</font>>]
    node17798_name -> node17798 [arrowhead=none, color="black", style=dashed]
    node17798 [shape=box, label=<<font color="black">[0] let littleEndian = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17798 -> node17799 [color="black"]
    node17799_name [shape=none, label=<<font color="black">Block[17799]</font>>]
    node17799_name -> node17799 [arrowhead=none, color="black", style=dashed]
    node17799 [shape=box, label=<<font color="black">[0] let v = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17799 -> node17800 [color="black"]
    node17800_name [shape=none, label=<<font color="black">Branch[17800]</font>>]
    node17800_name -> node17800 [arrowhead=none, color="black", style=dashed]
    node17800 [shape=diamond, label=<<font color="black">(= littleEndian absent)</font>> color="black" fillcolor="white", style=filled]
    node17800 -> node17801 [label=<<font color="black">true</font>> color="black"]
    node17800 -> node17802 [label=<<font color="black">false</font>> color="black"]
    node17801_name [shape=none, label=<<font color="black">Block[17801]</font>>]
    node17801_name -> node17801 [arrowhead=none, color="black", style=dashed]
    node17801 [shape=box, label=<<font color="black">[0] littleEndian = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17801 -> node17802 [color="black"]
    node17802_name [shape=none, label=<<font color="black">Call[17802]</font>>]
    node17802_name -> node17802 [arrowhead=none, color="black", style=dashed]
    node17802 [shape=cds, label=<<font color="black">%0 = clo&lt;GetViewValue&gt;(v, byteOffset, littleEndian, ~Uint32~)</font>> color="black" fillcolor="white", style=filled]
    node17802 -> node17803 [color="black"]
    node17803_name [shape=none, label=<<font color="black">Block[17803]</font>>]
    node17803_name -> node17803 [arrowhead=none, color="black", style=dashed]
    node17803 [shape=box, label=<<font color="black">[0] return [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17803 -> cluster2509_exit [color="black"]
  }
}