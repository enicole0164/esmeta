digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2444 {
    label = "def <BUILTIN>:INTRINSICS.Map.prototype.values(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2444_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2444_entry_name -> cluster2444_entry [arrowhead=none, color="black", style=dashed]
    cluster2444_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2444_entry -> node17010 [color="black"]
    cluster2444_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2444_exit_name -> cluster2444_exit [arrowhead=none, color="black", style=dashed]
    cluster2444_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17010_name [shape=none, label=<<font color="black">Block[17010]</font>>]
    node17010_name -> node17010 [arrowhead=none, color="black", style=dashed]
    node17010 [shape=box, label=<<font color="black">[0] let M = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17010 -> node17011 [color="black"]
    node17011_name [shape=none, label=<<font color="black">Call[17011]</font>>]
    node17011_name -> node17011 [arrowhead=none, color="black", style=dashed]
    node17011 [shape=cds, label=<<font color="black">%0 = clo&lt;CreateMapIterator&gt;(M, ~value~)</font>> color="black" fillcolor="white", style=filled]
    node17011 -> node17012 [color="black"]
    node17012_name [shape=none, label=<<font color="black">Block[17012]</font>>]
    node17012_name -> node17012 [arrowhead=none, color="black", style=dashed]
    node17012 [shape=box, label=<<font color="black">[0] return [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17012 -> cluster2444_exit [color="black"]
  }
}