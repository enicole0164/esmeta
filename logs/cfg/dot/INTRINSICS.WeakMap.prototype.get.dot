digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2463 {
    label = "def <BUILTIN>:INTRINSICS.WeakMap.prototype.get(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2463_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2463_entry_name -> cluster2463_entry [arrowhead=none, color="black", style=dashed]
    cluster2463_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2463_entry -> node17208 [color="black"]
    cluster2463_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2463_exit_name -> cluster2463_exit [arrowhead=none, color="black", style=dashed]
    cluster2463_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17208_name [shape=none, label=<<font color="black">Branch[17208]</font>>]
    node17208_name -> node17208 [arrowhead=none, color="black", style=dashed]
    node17208 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node17208 -> node17209 [label=<<font color="black">true</font>> color="black"]
    node17208 -> node17210 [label=<<font color="black">false</font>> color="black"]
    node17209_name [shape=none, label=<<font color="black">Block[17209]</font>>]
    node17209_name -> node17209 [arrowhead=none, color="black", style=dashed]
    node17209 [shape=box, label=<<font color="black">[0] let key = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17209 -> node17211 [color="black"]
    node17210_name [shape=none, label=<<font color="black">Block[17210]</font>>]
    node17210_name -> node17210 [arrowhead=none, color="black", style=dashed]
    node17210 [shape=box, label=<<font color="black">[0] let key = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17210 -> node17211 [color="black"]
    node17211_name [shape=none, label=<<font color="black">Block[17211]</font>>]
    node17211_name -> node17211 [arrowhead=none, color="black", style=dashed]
    node17211 [shape=box, label=<<font color="black">[0] let M = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17211 -> node17212 [color="black"]
    node17212_name [shape=none, label=<<font color="black">Call[17212]</font>>]
    node17212_name -> node17212 [arrowhead=none, color="black", style=dashed]
    node17212 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireInternalSlot&gt;(M, &quot;WeakMapData&quot;)</font>> color="black" fillcolor="white", style=filled]
    node17212 -> node17213 [color="black"]
    node17213_name [shape=none, label=<<font color="black">Block[17213]</font>>]
    node17213_name -> node17213 [arrowhead=none, color="black", style=dashed]
    node17213 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/>[1] let entries = M.WeakMapData<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17213 -> node17214 [color="black"]
    node17214_name [shape=none, label=<<font color="black">Branch[17214]</font>>]
    node17214_name -> node17214 [arrowhead=none, color="black", style=dashed]
    node17214 [shape=diamond, label=<<font color="black">(! (= (typeof key) @Object))</font>> color="black" fillcolor="white", style=filled]
    node17214 -> node17215 [label=<<font color="black">true</font>> color="black"]
    node17214 -> node17216 [label=<<font color="black">false</font>> color="black"]
    node17215_name [shape=none, label=<<font color="black">Block[17215]</font>>]
    node17215_name -> node17215 [arrowhead=none, color="black", style=dashed]
    node17215 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17215 -> cluster2463_exit [color="black"]
    node17216_name [shape=none, label=<<font color="black">Block[17216]</font>>]
    node17216_name -> node17216 [arrowhead=none, color="black", style=dashed]
    node17216 [shape=box, label=<<font color="black">[0] %2 = entries<BR ALIGN="LEFT"/>[1] %1 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17216 -> node17217 [color="black"]
    node17217_name [shape=none, label=<<font color="black">Branch[17217]</font>>]
    node17217_name -> node17217 [arrowhead=none, color="black", style=dashed]
    node17217 [shape=diamond, label=<<font color="black">(&lt; %1 %2.length)</font>> color="black" fillcolor="white", style=filled]
    node17217 -> node17218 [label=<<font color="black">true</font>> color="black"]
    node17217 -> node17225 [label=<<font color="black">false</font>> color="black"]
    node17218_name [shape=none, label=<<font color="black">Block[17218]</font>>]
    node17218_name -> node17218 [arrowhead=none, color="black", style=dashed]
    node17218 [shape=box, label=<<font color="black">[0] let p = %2[%1]<BR ALIGN="LEFT"/>[1] %3 = (! (= p.Key ~empty~))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17218 -> node17219 [color="black"]
    node17225_name [shape=none, label=<<font color="black">Block[17225]</font>>]
    node17225_name -> node17225 [arrowhead=none, color="black", style=dashed]
    node17225 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17225 -> cluster2463_exit [color="black"]
    node17219_name [shape=none, label=<<font color="black">Branch[17219]</font>>]
    node17219_name -> node17219 [arrowhead=none, color="black", style=dashed]
    node17219 [shape=diamond, label=<<font color="black">%3</font>> color="black" fillcolor="white", style=filled]
    node17219 -> node17220 [label=<<font color="black">true</font>> color="black"]
    node17219 -> node17222 [label=<<font color="black">false</font>> color="black"]
    node17220_name [shape=none, label=<<font color="black">Call[17220]</font>>]
    node17220_name -> node17220 [arrowhead=none, color="black", style=dashed]
    node17220 [shape=cds, label=<<font color="black">%4 = clo&lt;SameValue&gt;(p.Key, key)</font>> color="black" fillcolor="white", style=filled]
    node17220 -> node17221 [color="black"]
    node17222_name [shape=none, label=<<font color="black">Branch[17222]</font>>]
    node17222_name -> node17222 [arrowhead=none, color="black", style=dashed]
    node17222 [shape=diamond, label=<<font color="black">%3</font>> color="black" fillcolor="white", style=filled]
    node17222 -> node17223 [label=<<font color="black">true</font>> color="black"]
    node17222 -> node17224 [label=<<font color="black">false</font>> color="black"]
    node17221_name [shape=none, label=<<font color="black">Block[17221]</font>>]
    node17221_name -> node17221 [arrowhead=none, color="black", style=dashed]
    node17221 [shape=box, label=<<font color="black">[0] %3 = (= %4 true)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17221 -> node17222 [color="black"]
    node17223_name [shape=none, label=<<font color="black">Block[17223]</font>>]
    node17223_name -> node17223 [arrowhead=none, color="black", style=dashed]
    node17223 [shape=box, label=<<font color="black">[0] return p.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17223 -> cluster2463_exit [color="black"]
    node17224_name [shape=none, label=<<font color="black">Block[17224]</font>>]
    node17224_name -> node17224 [arrowhead=none, color="black", style=dashed]
    node17224 [shape=box, label=<<font color="black">[0] %1 = (+ %1 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17224 -> node17217 [color="black"]
  }
}