digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2651 {
    label = "def <BUILTIN>:INTRINSICS.Reflect.getOwnPropertyDescriptor(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2651_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2651_entry_name -> cluster2651_entry [arrowhead=none, color="black", style=dashed]
    cluster2651_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2651_entry -> node19719 [color="black"]
    cluster2651_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2651_exit_name -> cluster2651_exit [arrowhead=none, color="black", style=dashed]
    cluster2651_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node19719_name [shape=none, label=<<font color="black">Branch[19719]</font>>]
    node19719_name -> node19719 [arrowhead=none, color="black", style=dashed]
    node19719 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node19719 -> node19720 [label=<<font color="black">true</font>> color="black"]
    node19719 -> node19721 [label=<<font color="black">false</font>> color="black"]
    node19720_name [shape=none, label=<<font color="black">Block[19720]</font>>]
    node19720_name -> node19720 [arrowhead=none, color="black", style=dashed]
    node19720 [shape=box, label=<<font color="black">[0] let target = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19720 -> node19722 [color="black"]
    node19721_name [shape=none, label=<<font color="black">Block[19721]</font>>]
    node19721_name -> node19721 [arrowhead=none, color="black", style=dashed]
    node19721 [shape=box, label=<<font color="black">[0] let target = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19721 -> node19722 [color="black"]
    node19722_name [shape=none, label=<<font color="black">Branch[19722]</font>>]
    node19722_name -> node19722 [arrowhead=none, color="black", style=dashed]
    node19722 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node19722 -> node19723 [label=<<font color="black">true</font>> color="black"]
    node19722 -> node19724 [label=<<font color="black">false</font>> color="black"]
    node19723_name [shape=none, label=<<font color="black">Block[19723]</font>>]
    node19723_name -> node19723 [arrowhead=none, color="black", style=dashed]
    node19723 [shape=box, label=<<font color="black">[0] let propertyKey = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19723 -> node19725 [color="black"]
    node19724_name [shape=none, label=<<font color="black">Block[19724]</font>>]
    node19724_name -> node19724 [arrowhead=none, color="black", style=dashed]
    node19724 [shape=box, label=<<font color="black">[0] let propertyKey = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19724 -> node19725 [color="black"]
    node19725_name [shape=none, label=<<font color="black">Branch[19725]</font>>]
    node19725_name -> node19725 [arrowhead=none, color="black", style=dashed]
    node19725 [shape=diamond, label=<<font color="black">(! (= (typeof target) @Object))</font>> color="black" fillcolor="white", style=filled]
    node19725 -> node19726 [label=<<font color="black">true</font>> color="black"]
    node19725 -> node19727 [label=<<font color="black">false</font>> color="black"]
    node19726_name [shape=none, label=<<font color="black">Block[19726]</font>>]
    node19726_name -> node19726 [arrowhead=none, color="black", style=dashed]
    node19726 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1349])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19726 -> cluster2651_exit [color="black"]
    node19727_name [shape=none, label=<<font color="black">Call[19727]</font>>]
    node19727_name -> node19727 [arrowhead=none, color="black", style=dashed]
    node19727 [shape=cds, label=<<font color="black">%0 = clo&lt;ToPropertyKey&gt;(propertyKey)</font>> color="black" fillcolor="white", style=filled]
    node19727 -> node19728 [color="black"]
    node19728_name [shape=none, label=<<font color="black">Block[19728]</font>>]
    node19728_name -> node19728 [arrowhead=none, color="black", style=dashed]
    node19728 [shape=box, label=<<font color="black">[0] let key = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19728 -> node19729 [color="black"]
    node19729_name [shape=none, label=<<font color="black">Call[19729]</font>>]
    node19729_name -> node19729 [arrowhead=none, color="black", style=dashed]
    node19729 [shape=cds, label=<<font color="black">%1 = target-&gt;GetOwnProperty(key)</font>> color="black" fillcolor="white", style=filled]
    node19729 -> node19730 [color="black"]
    node19730_name [shape=none, label=<<font color="black">Block[19730]</font>>]
    node19730_name -> node19730 [arrowhead=none, color="black", style=dashed]
    node19730 [shape=box, label=<<font color="black">[0] let desc = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19730 -> node19731 [color="black"]
    node19731_name [shape=none, label=<<font color="black">Call[19731]</font>>]
    node19731_name -> node19731 [arrowhead=none, color="black", style=dashed]
    node19731 [shape=cds, label=<<font color="black">%2 = clo&lt;FromPropertyDescriptor&gt;(desc)</font>> color="black" fillcolor="white", style=filled]
    node19731 -> node19732 [color="black"]
    node19732_name [shape=none, label=<<font color="black">Block[19732]</font>>]
    node19732_name -> node19732 [arrowhead=none, color="black", style=dashed]
    node19732 [shape=box, label=<<font color="black">[0] return %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19732 -> cluster2651_exit [color="black"]
  }
}