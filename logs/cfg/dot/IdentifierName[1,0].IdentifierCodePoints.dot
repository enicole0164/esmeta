digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1171 {
    label = "def <SYNTAX>:IdentifierName[1,0].IdentifierCodePoints(this: Ast:IdentifierName[1,0]): Unknown["ListOfCodePoints"]"
    style = rounded
    cluster1171_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1171_entry_name -> cluster1171_entry [arrowhead=none, color="black", style=dashed]
    cluster1171_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1171_entry -> node5368 [color="black"]
    cluster1171_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1171_exit_name -> cluster1171_exit [arrowhead=none, color="black", style=dashed]
    cluster1171_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node5368_name [shape=none, label=<<font color="black">Block[5368]</font>>]
    node5368_name -> node5368 [arrowhead=none, color="black", style=dashed]
    node5368 [shape=box, label=<<font color="black">[0] (yet &quot;Let _cps_ be IdentifierCodePoints of the derived |IdentifierName|.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5368 -> node5369 [color="black"]
    node5369_name [shape=none, label=<<font color="black">Call[5369]</font>>]
    node5369_name -> node5369 [arrowhead=none, color="black", style=dashed]
    node5369 [shape=cds, label=<<font color="black">%0 = this[1]-&gt;IdentifierCodePoint()</font>> color="black" fillcolor="white", style=filled]
    node5369 -> node5370 [color="black"]
    node5370_name [shape=none, label=<<font color="black">Block[5370]</font>>]
    node5370_name -> node5370 [arrowhead=none, color="black", style=dashed]
    node5370 [shape=box, label=<<font color="black">[0] let cp = %0<BR ALIGN="LEFT"/>[1] return (list-concat cps (new [cp])[#544])[#543]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5370 -> cluster1171_exit [color="black"]
  }
}