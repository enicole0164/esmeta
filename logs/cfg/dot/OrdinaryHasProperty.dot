digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1062 {
    label = "def OrdinaryHasProperty(O: Object, P: Symbol | String): Normal[Boolean] | Abrupt"
    style = rounded
    cluster1062_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1062_entry_name -> cluster1062_entry [arrowhead=none, color="black", style=dashed]
    cluster1062_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1062_entry -> node4106 [color="black"]
    cluster1062_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1062_exit_name -> cluster1062_exit [arrowhead=none, color="black", style=dashed]
    cluster1062_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4106_name [shape=none, label=<<font color="black">Call[4106]</font>>]
    node4106_name -> node4106 [arrowhead=none, color="black", style=dashed]
    node4106 [shape=cds, label=<<font color="black">%0 = O-&gt;GetOwnProperty(P)</font>> color="black" fillcolor="white", style=filled]
    node4106 -> node4107 [color="black"]
    node4107_name [shape=none, label=<<font color="black">Block[4107]</font>>]
    node4107_name -> node4107 [arrowhead=none, color="black", style=dashed]
    node4107 [shape=box, label=<<font color="black">[0] let hasOwn = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4107 -> node4108 [color="black"]
    node4108_name [shape=none, label=<<font color="black">Branch[4108]</font>>]
    node4108_name -> node4108 [arrowhead=none, color="black", style=dashed]
    node4108 [shape=diamond, label=<<font color="black">(! (= hasOwn undefined))</font>> color="black" fillcolor="white", style=filled]
    node4108 -> node4109 [label=<<font color="black">true</font>> color="black"]
    node4108 -> node4110 [label=<<font color="black">false</font>> color="black"]
    node4109_name [shape=none, label=<<font color="black">Block[4109]</font>>]
    node4109_name -> node4109 [arrowhead=none, color="black", style=dashed]
    node4109 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4109 -> cluster1062_exit [color="black"]
    node4110_name [shape=none, label=<<font color="black">Call[4110]</font>>]
    node4110_name -> node4110 [arrowhead=none, color="black", style=dashed]
    node4110 [shape=cds, label=<<font color="black">%1 = O-&gt;GetPrototypeOf()</font>> color="black" fillcolor="white", style=filled]
    node4110 -> node4111 [color="black"]
    node4111_name [shape=none, label=<<font color="black">Block[4111]</font>>]
    node4111_name -> node4111 [arrowhead=none, color="black", style=dashed]
    node4111 [shape=box, label=<<font color="black">[0] let parent = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4111 -> node4112 [color="black"]
    node4112_name [shape=none, label=<<font color="black">Branch[4112]</font>>]
    node4112_name -> node4112 [arrowhead=none, color="black", style=dashed]
    node4112 [shape=diamond, label=<<font color="black">(! (= parent null))</font>> color="black" fillcolor="white", style=filled]
    node4112 -> node4113 [label=<<font color="black">true</font>> color="black"]
    node4112 -> node4115 [label=<<font color="black">false</font>> color="black"]
    node4113_name [shape=none, label=<<font color="black">Call[4113]</font>>]
    node4113_name -> node4113 [arrowhead=none, color="black", style=dashed]
    node4113 [shape=cds, label=<<font color="black">%2 = parent-&gt;HasProperty(P)</font>> color="black" fillcolor="white", style=filled]
    node4113 -> node4114 [color="black"]
    node4115_name [shape=none, label=<<font color="black">Block[4115]</font>>]
    node4115_name -> node4115 [arrowhead=none, color="black", style=dashed]
    node4115 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4115 -> cluster1062_exit [color="black"]
    node4114_name [shape=none, label=<<font color="black">Block[4114]</font>>]
    node4114_name -> node4114 [arrowhead=none, color="black", style=dashed]
    node4114 [shape=box, label=<<font color="black">[0] return [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4114 -> cluster1062_exit [color="black"]
  }
}