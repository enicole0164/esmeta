digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2038 {
    label = "def <BUILTIN>:INTRINSICS.Function.prototype.toString(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2038_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2038_entry_name -> cluster2038_entry [arrowhead=none, color="black", style=dashed]
    cluster2038_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2038_entry -> node11611 [color="black"]
    cluster2038_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2038_exit_name -> cluster2038_exit [arrowhead=none, color="black", style=dashed]
    cluster2038_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11611_name [shape=none, label=<<font color="black">Block[11611]</font>>]
    node11611_name -> node11611 [arrowhead=none, color="black", style=dashed]
    node11611 [shape=box, label=<<font color="black">[0] let func = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11611 -> node11612 [color="black"]
    node11612_name [shape=none, label=<<font color="black">Branch[11612]</font>>]
    node11612_name -> node11612 [arrowhead=none, color="black", style=dashed]
    node11612 [shape=diamond, label=<<font color="black">(&amp;&amp; (= (typeof func) @Object) (&amp;&amp; (! (= func.SourceText absent)) (= (typeof func.SourceText) @String)))</font>> color="black" fillcolor="white", style=filled]
    node11612 -> node11613 [label=<<font color="black">true</font>> color="black"]
    node11612 -> node11614 [label=<<font color="black">false</font>> color="black"]
    node11613_name [shape=none, label=<<font color="black">Block[11613]</font>>]
    node11613_name -> node11613 [arrowhead=none, color="black", style=dashed]
    node11613 [shape=box, label=<<font color="black">[0] return (yet &quot;Function.prototype.toString&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11613 -> cluster2038_exit [color="black"]
    node11614_name [shape=none, label=<<font color="black">Branch[11614]</font>>]
    node11614_name -> node11614 [arrowhead=none, color="black", style=dashed]
    node11614 [shape=diamond, label=<<font color="black">(? func: &quot;BuiltinFunctionObject&quot;)</font>> color="black" fillcolor="white", style=filled]
    node11614 -> node11615 [label=<<font color="black">true</font>> color="black"]
    node11614 -> node11616 [label=<<font color="black">false</font>> color="black"]
    node11615_name [shape=none, label=<<font color="black">Block[11615]</font>>]
    node11615_name -> node11615 [arrowhead=none, color="black", style=dashed]
    node11615 [shape=box, label=<<font color="black">[0] return (concat &quot;function &quot; func.InitialName &quot;() { [native code] }&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11615 -> cluster2038_exit [color="black"]
    node11616_name [shape=none, label=<<font color="black">Call[11616]</font>>]
    node11616_name -> node11616 [arrowhead=none, color="black", style=dashed]
    node11616 [shape=cds, label=<<font color="black">%0 = clo&lt;IsCallable&gt;(func)</font>> color="black" fillcolor="white", style=filled]
    node11616 -> node11617 [color="black"]
    node11617_name [shape=none, label=<<font color="black">Branch[11617]</font>>]
    node11617_name -> node11617 [arrowhead=none, color="black", style=dashed]
    node11617 [shape=diamond, label=<<font color="black">(&amp;&amp; (= (typeof func) @Object) (= %0 true))</font>> color="black" fillcolor="white", style=filled]
    node11617 -> node11618 [label=<<font color="black">true</font>> color="black"]
    node11617 -> node11619 [label=<<font color="black">false</font>> color="black"]
    node11618_name [shape=none, label=<<font color="black">Block[11618]</font>>]
    node11618_name -> node11618 [arrowhead=none, color="black", style=dashed]
    node11618 [shape=box, label=<<font color="black">[0] return (yet &quot;Function.prototype.toString&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11618 -> cluster2038_exit [color="black"]
    node11619_name [shape=none, label=<<font color="black">Block[11619]</font>>]
    node11619_name -> node11619 [arrowhead=none, color="black", style=dashed]
    node11619 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#913])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11619 -> cluster2038_exit [color="black"]
  }
}