digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1011 {
    label = "def <CONC>:GlobalEnvironmentRecord.HasRestrictedGlobalProperty(envRec: GlobalEnvironmentRecord, N: String): Normal[Boolean] | Abrupt"
    style = rounded
    cluster1011_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1011_entry_name -> cluster1011_entry [arrowhead=none, color="black", style=dashed]
    cluster1011_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1011_entry -> node3764 [color="black"]
    cluster1011_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1011_exit_name -> cluster1011_exit [arrowhead=none, color="black", style=dashed]
    cluster1011_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3764_name [shape=none, label=<<font color="black">Block[3764]</font>>]
    node3764_name -> node3764 [arrowhead=none, color="black", style=dashed]
    node3764 [shape=box, label=<<font color="black">[0] let ObjRec = envRec.ObjectRecord<BR ALIGN="LEFT"/>[1] let globalObject = ObjRec.BindingObject<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3764 -> node3765 [color="black"]
    node3765_name [shape=none, label=<<font color="black">Call[3765]</font>>]
    node3765_name -> node3765 [arrowhead=none, color="black", style=dashed]
    node3765 [shape=cds, label=<<font color="black">%0 = globalObject-&gt;GetOwnProperty(N)</font>> color="black" fillcolor="white", style=filled]
    node3765 -> node3766 [color="black"]
    node3766_name [shape=none, label=<<font color="black">Block[3766]</font>>]
    node3766_name -> node3766 [arrowhead=none, color="black", style=dashed]
    node3766 [shape=box, label=<<font color="black">[0] let existingProp = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3766 -> node3767 [color="black"]
    node3767_name [shape=none, label=<<font color="black">Branch[3767]</font>>]
    node3767_name -> node3767 [arrowhead=none, color="black", style=dashed]
    node3767 [shape=diamond, label=<<font color="black">(= existingProp undefined)</font>> color="black" fillcolor="white", style=filled]
    node3767 -> node3768 [label=<<font color="black">true</font>> color="black"]
    node3767 -> node3769 [label=<<font color="black">false</font>> color="black"]
    node3768_name [shape=none, label=<<font color="black">Block[3768]</font>>]
    node3768_name -> node3768 [arrowhead=none, color="black", style=dashed]
    node3768 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3768 -> cluster1011_exit [color="black"]
    node3769_name [shape=none, label=<<font color="black">Branch[3769]</font>>]
    node3769_name -> node3769 [arrowhead=none, color="black", style=dashed]
    node3769 [shape=diamond, label=<<font color="black">(= existingProp.Configurable true)</font>> color="black" fillcolor="white", style=filled]
    node3769 -> node3770 [label=<<font color="black">true</font>> color="black"]
    node3769 -> node3771 [label=<<font color="black">false</font>> color="black"]
    node3770_name [shape=none, label=<<font color="black">Block[3770]</font>>]
    node3770_name -> node3770 [arrowhead=none, color="black", style=dashed]
    node3770 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3770 -> cluster1011_exit [color="black"]
    node3771_name [shape=none, label=<<font color="black">Block[3771]</font>>]
    node3771_name -> node3771 [arrowhead=none, color="black", style=dashed]
    node3771 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3771 -> cluster1011_exit [color="black"]
  }
}