digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster289 {
    label = "def <SYNTAX>:CaseBlock[1,0].LexicallyScopedDeclarations(this: Ast:CaseBlock[1,0]): List[Ast]"
    style = rounded
    cluster289_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster289_entry_name -> cluster289_entry [arrowhead=none, color="black", style=dashed]
    cluster289_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster289_entry -> node1780 [color="black"]
    cluster289_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster289_exit_name -> cluster289_exit [arrowhead=none, color="black", style=dashed]
    cluster289_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1780_name [shape=none, label=<<font color="black">Branch[1780]</font>>]
    node1780_name -> node1780 [arrowhead=none, color="black", style=dashed]
    node1780 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node1780 -> node1781 [label=<<font color="black">true</font>> color="black"]
    node1780 -> node1783 [label=<<font color="black">false</font>> color="black"]
    node1781_name [shape=none, label=<<font color="black">Call[1781]</font>>]
    node1781_name -> node1781 [arrowhead=none, color="black", style=dashed]
    node1781 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;LexicallyScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node1781 -> node1782 [color="black"]
    node1783_name [shape=none, label=<<font color="black">Block[1783]</font>>]
    node1783_name -> node1783 [arrowhead=none, color="black", style=dashed]
    node1783 [shape=box, label=<<font color="black">[0] let declarations1 = (new [])[#143]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1783 -> node1784 [color="black"]
    node1782_name [shape=none, label=<<font color="black">Block[1782]</font>>]
    node1782_name -> node1782 [arrowhead=none, color="black", style=dashed]
    node1782 [shape=box, label=<<font color="black">[0] let declarations1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1782 -> node1784 [color="black"]
    node1784_name [shape=none, label=<<font color="black">Call[1784]</font>>]
    node1784_name -> node1784 [arrowhead=none, color="black", style=dashed]
    node1784 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;LexicallyScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node1784 -> node1785 [color="black"]
    node1785_name [shape=none, label=<<font color="black">Block[1785]</font>>]
    node1785_name -> node1785 [arrowhead=none, color="black", style=dashed]
    node1785 [shape=box, label=<<font color="black">[0] let declarations2 = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1785 -> node1786 [color="black"]
    node1786_name [shape=none, label=<<font color="black">Branch[1786]</font>>]
    node1786_name -> node1786 [arrowhead=none, color="black", style=dashed]
    node1786 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node1786 -> node1787 [label=<<font color="black">true</font>> color="black"]
    node1786 -> node1789 [label=<<font color="black">false</font>> color="black"]
    node1787_name [shape=none, label=<<font color="black">Call[1787]</font>>]
    node1787_name -> node1787 [arrowhead=none, color="black", style=dashed]
    node1787 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;LexicallyScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node1787 -> node1788 [color="black"]
    node1789_name [shape=none, label=<<font color="black">Block[1789]</font>>]
    node1789_name -> node1789 [arrowhead=none, color="black", style=dashed]
    node1789 [shape=box, label=<<font color="black">[0] let declarations3 = (new [])[#144]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1789 -> node1790 [color="black"]
    node1788_name [shape=none, label=<<font color="black">Block[1788]</font>>]
    node1788_name -> node1788 [arrowhead=none, color="black", style=dashed]
    node1788 [shape=box, label=<<font color="black">[0] let declarations3 = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1788 -> node1790 [color="black"]
    node1790_name [shape=none, label=<<font color="black">Block[1790]</font>>]
    node1790_name -> node1790 [arrowhead=none, color="black", style=dashed]
    node1790 [shape=box, label=<<font color="black">[0] return (list-concat declarations1 declarations2 declarations3)[#145]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1790 -> cluster289_exit [color="black"]
  }
}