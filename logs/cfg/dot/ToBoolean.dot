digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2685 {
    label = "def ToBoolean(argument: Unknown): Unknown"
    style = rounded
    cluster2685_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2685_entry_name -> cluster2685_entry [arrowhead=none, color="black", style=dashed]
    cluster2685_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2685_entry -> node19996 [color="black"]
    cluster2685_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2685_exit_name -> cluster2685_exit [arrowhead=none, color="black", style=dashed]
    cluster2685_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node19996_name [shape=none, label=<<font color="black">Branch[19996]</font>>]
    node19996_name -> node19996 [arrowhead=none, color="black", style=dashed]
    node19996 [shape=diamond, label=<<font color="black">(= (typeof argument) @Undefined)</font>> color="black" fillcolor="white", style=filled]
    node19996 -> node19997 [label=<<font color="black">true</font>> color="black"]
    node19996 -> node19998 [label=<<font color="black">false</font>> color="black"]
    node19997_name [shape=none, label=<<font color="black">Block[19997]</font>>]
    node19997_name -> node19997 [arrowhead=none, color="black", style=dashed]
    node19997 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19997 -> cluster2685_exit [color="black"]
    node19998_name [shape=none, label=<<font color="black">Branch[19998]</font>>]
    node19998_name -> node19998 [arrowhead=none, color="black", style=dashed]
    node19998 [shape=diamond, label=<<font color="black">(= (typeof argument) @Null)</font>> color="black" fillcolor="white", style=filled]
    node19998 -> node19999 [label=<<font color="black">true</font>> color="black"]
    node19998 -> node20000 [label=<<font color="black">false</font>> color="black"]
    node19999_name [shape=none, label=<<font color="black">Block[19999]</font>>]
    node19999_name -> node19999 [arrowhead=none, color="black", style=dashed]
    node19999 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19999 -> cluster2685_exit [color="black"]
    node20000_name [shape=none, label=<<font color="black">Branch[20000]</font>>]
    node20000_name -> node20000 [arrowhead=none, color="black", style=dashed]
    node20000 [shape=diamond, label=<<font color="black">(= (typeof argument) @Boolean)</font>> color="black" fillcolor="white", style=filled]
    node20000 -> node20001 [label=<<font color="black">true</font>> color="black"]
    node20000 -> node20002 [label=<<font color="black">false</font>> color="black"]
    node20001_name [shape=none, label=<<font color="black">Block[20001]</font>>]
    node20001_name -> node20001 [arrowhead=none, color="black", style=dashed]
    node20001 [shape=box, label=<<font color="black">[0] return argument<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node20001 -> cluster2685_exit [color="black"]
    node20002_name [shape=none, label=<<font color="black">Branch[20002]</font>>]
    node20002_name -> node20002 [arrowhead=none, color="black", style=dashed]
    node20002 [shape=diamond, label=<<font color="black">(= (typeof argument) @BigInt)</font>> color="black" fillcolor="white", style=filled]
    node20002 -> node20003 [label=<<font color="black">true</font>> color="black"]
    node20002 -> node20006 [label=<<font color="black">false</font>> color="black"]
    node20003_name [shape=none, label=<<font color="black">Branch[20003]</font>>]
    node20003_name -> node20003 [arrowhead=none, color="black", style=dashed]
    node20003 [shape=diamond, label=<<font color="black">(= argument 0n)</font>> color="black" fillcolor="white", style=filled]
    node20003 -> node20004 [label=<<font color="black">true</font>> color="black"]
    node20003 -> node20005 [label=<<font color="black">false</font>> color="black"]
    node20006_name [shape=none, label=<<font color="black">Branch[20006]</font>>]
    node20006_name -> node20006 [arrowhead=none, color="black", style=dashed]
    node20006 [shape=diamond, label=<<font color="black">(= (typeof argument) @Number)</font>> color="black" fillcolor="white", style=filled]
    node20006 -> node20007 [label=<<font color="black">true</font>> color="black"]
    node20006 -> node20010 [label=<<font color="black">false</font>> color="black"]
    node20004_name [shape=none, label=<<font color="black">Block[20004]</font>>]
    node20004_name -> node20004 [arrowhead=none, color="black", style=dashed]
    node20004 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node20004 -> cluster2685_exit [color="black"]
    node20005_name [shape=none, label=<<font color="black">Block[20005]</font>>]
    node20005_name -> node20005 [arrowhead=none, color="black", style=dashed]
    node20005 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node20005 -> cluster2685_exit [color="black"]
    node20007_name [shape=none, label=<<font color="black">Branch[20007]</font>>]
    node20007_name -> node20007 [arrowhead=none, color="black", style=dashed]
    node20007 [shape=diamond, label=<<font color="black">(|| (|| (= argument 0.0f) (= argument -0.0f)) (= argument NaN))</font>> color="black" fillcolor="white", style=filled]
    node20007 -> node20008 [label=<<font color="black">true</font>> color="black"]
    node20007 -> node20009 [label=<<font color="black">false</font>> color="black"]
    node20010_name [shape=none, label=<<font color="black">Branch[20010]</font>>]
    node20010_name -> node20010 [arrowhead=none, color="black", style=dashed]
    node20010 [shape=diamond, label=<<font color="black">(= (typeof argument) @String)</font>> color="black" fillcolor="white", style=filled]
    node20010 -> node20011 [label=<<font color="black">true</font>> color="black"]
    node20010 -> node20014 [label=<<font color="black">false</font>> color="black"]
    node20008_name [shape=none, label=<<font color="black">Block[20008]</font>>]
    node20008_name -> node20008 [arrowhead=none, color="black", style=dashed]
    node20008 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node20008 -> cluster2685_exit [color="black"]
    node20009_name [shape=none, label=<<font color="black">Block[20009]</font>>]
    node20009_name -> node20009 [arrowhead=none, color="black", style=dashed]
    node20009 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node20009 -> cluster2685_exit [color="black"]
    node20011_name [shape=none, label=<<font color="black">Branch[20011]</font>>]
    node20011_name -> node20011 [arrowhead=none, color="black", style=dashed]
    node20011 [shape=diamond, label=<<font color="black">(= argument &quot;&quot;)</font>> color="black" fillcolor="white", style=filled]
    node20011 -> node20012 [label=<<font color="black">true</font>> color="black"]
    node20011 -> node20013 [label=<<font color="black">false</font>> color="black"]
    node20014_name [shape=none, label=<<font color="black">Branch[20014]</font>>]
    node20014_name -> node20014 [arrowhead=none, color="black", style=dashed]
    node20014 [shape=diamond, label=<<font color="black">(= (typeof argument) @Symbol)</font>> color="black" fillcolor="white", style=filled]
    node20014 -> node20015 [label=<<font color="black">true</font>> color="black"]
    node20014 -> node20016 [label=<<font color="black">false</font>> color="black"]
    node20012_name [shape=none, label=<<font color="black">Block[20012]</font>>]
    node20012_name -> node20012 [arrowhead=none, color="black", style=dashed]
    node20012 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node20012 -> cluster2685_exit [color="black"]
    node20013_name [shape=none, label=<<font color="black">Block[20013]</font>>]
    node20013_name -> node20013 [arrowhead=none, color="black", style=dashed]
    node20013 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node20013 -> cluster2685_exit [color="black"]
    node20015_name [shape=none, label=<<font color="black">Block[20015]</font>>]
    node20015_name -> node20015 [arrowhead=none, color="black", style=dashed]
    node20015 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node20015 -> cluster2685_exit [color="black"]
    node20016_name [shape=none, label=<<font color="black">Block[20016]</font>>]
    node20016_name -> node20016 [arrowhead=none, color="black", style=dashed]
    node20016 [shape=box, label=<<font color="black">[0] assert (= (typeof argument) @Object)<BR ALIGN="LEFT"/>[1] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node20016 -> cluster2685_exit [color="black"]
  }
}