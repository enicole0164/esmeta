digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster34 {
    label = "def <NUM>:BigInt::exponentiate(base: BigInt, exponent: BigInt): Normal[BigInt] | Abrupt"
    style = rounded
    cluster34_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster34_entry_name -> cluster34_entry [arrowhead=none, color="black", style=dashed]
    cluster34_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster34_entry -> node316 [color="black"]
    cluster34_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster34_exit_name -> cluster34_exit [arrowhead=none, color="black", style=dashed]
    cluster34_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node316_name [shape=none, label=<<font color="black">Branch[316]</font>>]
    node316_name -> node316 [arrowhead=none, color="black", style=dashed]
    node316 [shape=diamond, label=<<font color="black">(&lt; exponent 0n)</font>> color="black" fillcolor="white", style=filled]
    node316 -> node317 [label=<<font color="black">true</font>> color="black"]
    node316 -> node318 [label=<<font color="black">false</font>> color="black"]
    node317_name [shape=none, label=<<font color="black">Block[317]</font>>]
    node317_name -> node317 [arrowhead=none, color="black", style=dashed]
    node317 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%RangeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#8])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node317 -> cluster34_exit [color="black"]
    node318_name [shape=none, label=<<font color="black">Branch[318]</font>>]
    node318_name -> node318 [arrowhead=none, color="black", style=dashed]
    node318 [shape=diamond, label=<<font color="black">(&amp;&amp; (= base 0n) (= exponent 0n))</font>> color="black" fillcolor="white", style=filled]
    node318 -> node319 [label=<<font color="black">true</font>> color="black"]
    node318 -> node320 [label=<<font color="black">false</font>> color="black"]
    node319_name [shape=none, label=<<font color="black">Block[319]</font>>]
    node319_name -> node319 [arrowhead=none, color="black", style=dashed]
    node319 [shape=box, label=<<font color="black">[0] return 1n<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node319 -> cluster34_exit [color="black"]
    node320_name [shape=none, label=<<font color="black">Block[320]</font>>]
    node320_name -> node320 [arrowhead=none, color="black", style=dashed]
    node320 [shape=box, label=<<font color="black">[0] return (** base exponent)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node320 -> cluster34_exit [color="black"]
  }
}