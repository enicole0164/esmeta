digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2569 {
    label = "def <BUILTIN>:INTRINSICS.yet:PromiseResolveFunction(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2569_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2569_entry_name -> cluster2569_entry [arrowhead=none, color="black", style=dashed]
    cluster2569_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2569_entry -> node18704 [color="black"]
    cluster2569_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2569_exit_name -> cluster2569_exit [arrowhead=none, color="black", style=dashed]
    cluster2569_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node18704_name [shape=none, label=<<font color="black">Branch[18704]</font>>]
    node18704_name -> node18704 [arrowhead=none, color="black", style=dashed]
    node18704 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node18704 -> node18705 [label=<<font color="black">true</font>> color="black"]
    node18704 -> node18706 [label=<<font color="black">false</font>> color="black"]
    node18705_name [shape=none, label=<<font color="black">Block[18705]</font>>]
    node18705_name -> node18705 [arrowhead=none, color="black", style=dashed]
    node18705 [shape=box, label=<<font color="black">[0] let resolution = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18705 -> node18707 [color="black"]
    node18706_name [shape=none, label=<<font color="black">Block[18706]</font>>]
    node18706_name -> node18706 [arrowhead=none, color="black", style=dashed]
    node18706 [shape=box, label=<<font color="black">[0] let resolution = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18706 -> node18707 [color="black"]
    node18707_name [shape=none, label=<<font color="black">Block[18707]</font>>]
    node18707_name -> node18707 [arrowhead=none, color="black", style=dashed]
    node18707 [shape=box, label=<<font color="black">[0] let F = @EXECUTION_STACK[0].Function<BR ALIGN="LEFT"/>[1] assert (&amp;&amp; (! (= F.Promise absent)) (? F.Promise: &quot;Object&quot;))<BR ALIGN="LEFT"/>[2] let promise = F.Promise<BR ALIGN="LEFT"/>[3] let alreadyResolved = F.AlreadyResolved<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18707 -> node18708 [color="black"]
    node18708_name [shape=none, label=<<font color="black">Branch[18708]</font>>]
    node18708_name -> node18708 [arrowhead=none, color="black", style=dashed]
    node18708 [shape=diamond, label=<<font color="black">(= alreadyResolved.Value true)</font>> color="black" fillcolor="white", style=filled]
    node18708 -> node18709 [label=<<font color="black">true</font>> color="black"]
    node18708 -> node18710 [label=<<font color="black">false</font>> color="black"]
    node18709_name [shape=none, label=<<font color="black">Block[18709]</font>>]
    node18709_name -> node18709 [arrowhead=none, color="black", style=dashed]
    node18709 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18709 -> cluster2569_exit [color="black"]
    node18710_name [shape=none, label=<<font color="black">Block[18710]</font>>]
    node18710_name -> node18710 [arrowhead=none, color="black", style=dashed]
    node18710 [shape=box, label=<<font color="black">[0] alreadyResolved.Value = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18710 -> node18711 [color="black"]
    node18711_name [shape=none, label=<<font color="black">Call[18711]</font>>]
    node18711_name -> node18711 [arrowhead=none, color="black", style=dashed]
    node18711 [shape=cds, label=<<font color="black">%0 = clo&lt;SameValue&gt;(resolution, promise)</font>> color="black" fillcolor="white", style=filled]
    node18711 -> node18712 [color="black"]
    node18712_name [shape=none, label=<<font color="black">Branch[18712]</font>>]
    node18712_name -> node18712 [arrowhead=none, color="black", style=dashed]
    node18712 [shape=diamond, label=<<font color="black">(= %0 true)</font>> color="black" fillcolor="white", style=filled]
    node18712 -> node18713 [label=<<font color="black">true</font>> color="black"]
    node18712 -> node18716 [label=<<font color="black">false</font>> color="black"]
    node18713_name [shape=none, label=<<font color="black">Block[18713]</font>>]
    node18713_name -> node18713 [arrowhead=none, color="black", style=dashed]
    node18713 [shape=box, label=<<font color="black">[0] let selfResolutionError = (new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1237]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18713 -> node18714 [color="black"]
    node18716_name [shape=none, label=<<font color="black">Branch[18716]</font>>]
    node18716_name -> node18716 [arrowhead=none, color="black", style=dashed]
    node18716 [shape=diamond, label=<<font color="black">(! (= (typeof resolution) @Object))</font>> color="black" fillcolor="white", style=filled]
    node18716 -> node18717 [label=<<font color="black">true</font>> color="black"]
    node18716 -> node18719 [label=<<font color="black">false</font>> color="black"]
    node18714_name [shape=none, label=<<font color="black">Call[18714]</font>>]
    node18714_name -> node18714 [arrowhead=none, color="black", style=dashed]
    node18714 [shape=cds, label=<<font color="black">%1 = clo&lt;RejectPromise&gt;(promise, selfResolutionError)</font>> color="black" fillcolor="white", style=filled]
    node18714 -> node18715 [color="black"]
    node18717_name [shape=none, label=<<font color="black">Call[18717]</font>>]
    node18717_name -> node18717 [arrowhead=none, color="black", style=dashed]
    node18717 [shape=cds, label=<<font color="black">%2 = clo&lt;FulfillPromise&gt;(promise, resolution)</font>> color="black" fillcolor="white", style=filled]
    node18717 -> node18718 [color="black"]
    node18719_name [shape=none, label=<<font color="black">Call[18719]</font>>]
    node18719_name -> node18719 [arrowhead=none, color="black", style=dashed]
    node18719 [shape=cds, label=<<font color="black">%3 = clo&lt;Get&gt;(resolution, &quot;then&quot;)</font>> color="black" fillcolor="white", style=filled]
    node18719 -> node18720 [color="black"]
    node18715_name [shape=none, label=<<font color="black">Block[18715]</font>>]
    node18715_name -> node18715 [arrowhead=none, color="black", style=dashed]
    node18715 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18715 -> cluster2569_exit [color="black"]
    node18718_name [shape=none, label=<<font color="black">Block[18718]</font>>]
    node18718_name -> node18718 [arrowhead=none, color="black", style=dashed]
    node18718 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18718 -> cluster2569_exit [color="black"]
    node18720_name [shape=none, label=<<font color="black">Call[18720]</font>>]
    node18720_name -> node18720 [arrowhead=none, color="black", style=dashed]
    node18720 [shape=cds, label=<<font color="black">%4 = clo&lt;Completion&gt;(%3)</font>> color="black" fillcolor="white", style=filled]
    node18720 -> node18721 [color="black"]
    node18721_name [shape=none, label=<<font color="black">Block[18721]</font>>]
    node18721_name -> node18721 [arrowhead=none, color="black", style=dashed]
    node18721 [shape=box, label=<<font color="black">[0] let then = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18721 -> node18722 [color="black"]
    node18722_name [shape=none, label=<<font color="black">Branch[18722]</font>>]
    node18722_name -> node18722 [arrowhead=none, color="black", style=dashed]
    node18722 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? then) (! (= then.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node18722 -> node18723 [label=<<font color="black">true</font>> color="black"]
    node18722 -> node18725 [label=<<font color="black">false</font>> color="black"]
    node18723_name [shape=none, label=<<font color="black">Call[18723]</font>>]
    node18723_name -> node18723 [arrowhead=none, color="black", style=dashed]
    node18723 [shape=cds, label=<<font color="black">%5 = clo&lt;RejectPromise&gt;(promise, then.Value)</font>> color="black" fillcolor="white", style=filled]
    node18723 -> node18724 [color="black"]
    node18725_name [shape=none, label=<<font color="black">Block[18725]</font>>]
    node18725_name -> node18725 [arrowhead=none, color="black", style=dashed]
    node18725 [shape=box, label=<<font color="black">[0] let thenAction = then.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18725 -> node18726 [color="black"]
    node18724_name [shape=none, label=<<font color="black">Block[18724]</font>>]
    node18724_name -> node18724 [arrowhead=none, color="black", style=dashed]
    node18724 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18724 -> cluster2569_exit [color="black"]
    node18726_name [shape=none, label=<<font color="black">Call[18726]</font>>]
    node18726_name -> node18726 [arrowhead=none, color="black", style=dashed]
    node18726 [shape=cds, label=<<font color="black">%6 = clo&lt;IsCallable&gt;(thenAction)</font>> color="black" fillcolor="white", style=filled]
    node18726 -> node18727 [color="black"]
    node18727_name [shape=none, label=<<font color="black">Branch[18727]</font>>]
    node18727_name -> node18727 [arrowhead=none, color="black", style=dashed]
    node18727 [shape=diamond, label=<<font color="black">(= %6 false)</font>> color="black" fillcolor="white", style=filled]
    node18727 -> node18728 [label=<<font color="black">true</font>> color="black"]
    node18727 -> node18730 [label=<<font color="black">false</font>> color="black"]
    node18728_name [shape=none, label=<<font color="black">Call[18728]</font>>]
    node18728_name -> node18728 [arrowhead=none, color="black", style=dashed]
    node18728 [shape=cds, label=<<font color="black">%7 = clo&lt;FulfillPromise&gt;(promise, resolution)</font>> color="black" fillcolor="white", style=filled]
    node18728 -> node18729 [color="black"]
    node18730_name [shape=none, label=<<font color="black">Call[18730]</font>>]
    node18730_name -> node18730 [arrowhead=none, color="black", style=dashed]
    node18730 [shape=cds, label=<<font color="black">%8 = clo&lt;HostMakeJobCallback&gt;(thenAction)</font>> color="black" fillcolor="white", style=filled]
    node18730 -> node18731 [color="black"]
    node18729_name [shape=none, label=<<font color="black">Block[18729]</font>>]
    node18729_name -> node18729 [arrowhead=none, color="black", style=dashed]
    node18729 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18729 -> cluster2569_exit [color="black"]
    node18731_name [shape=none, label=<<font color="black">Block[18731]</font>>]
    node18731_name -> node18731 [arrowhead=none, color="black", style=dashed]
    node18731 [shape=box, label=<<font color="black">[0] let thenJobCallback = %8<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18731 -> node18732 [color="black"]
    node18732_name [shape=none, label=<<font color="black">Call[18732]</font>>]
    node18732_name -> node18732 [arrowhead=none, color="black", style=dashed]
    node18732 [shape=cds, label=<<font color="black">%9 = clo&lt;NewPromiseResolveThenableJob&gt;(promise, resolution, thenJobCallback)</font>> color="black" fillcolor="white", style=filled]
    node18732 -> node18733 [color="black"]
    node18733_name [shape=none, label=<<font color="black">Block[18733]</font>>]
    node18733_name -> node18733 [arrowhead=none, color="black", style=dashed]
    node18733 [shape=box, label=<<font color="black">[0] let job = %9<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18733 -> node18734 [color="black"]
    node18734_name [shape=none, label=<<font color="black">Call[18734]</font>>]
    node18734_name -> node18734 [arrowhead=none, color="black", style=dashed]
    node18734 [shape=cds, label=<<font color="black">%10 = clo&lt;HostEnqueuePromiseJob&gt;(job.Job, job.Realm)</font>> color="black" fillcolor="white", style=filled]
    node18734 -> node18735 [color="black"]
    node18735_name [shape=none, label=<<font color="black">Block[18735]</font>>]
    node18735_name -> node18735 [arrowhead=none, color="black", style=dashed]
    node18735 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18735 -> cluster2569_exit [color="black"]
  }
}