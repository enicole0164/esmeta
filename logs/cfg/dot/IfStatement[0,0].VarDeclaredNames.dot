digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster330 {
    label = "def <SYNTAX>:IfStatement[0,0].VarDeclaredNames(this: Ast:IfStatement[0,0]): List[String]"
    style = rounded
    cluster330_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster330_entry_name -> cluster330_entry [arrowhead=none, color="black", style=dashed]
    cluster330_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster330_entry -> node1889 [color="black"]
    cluster330_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster330_exit_name -> cluster330_exit [arrowhead=none, color="black", style=dashed]
    cluster330_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1889_name [shape=none, label=<<font color="black">Call[1889]</font>>]
    node1889_name -> node1889 [arrowhead=none, color="black", style=dashed]
    node1889 [shape=cds, label=<<font color="black">%0 = this[1]-&gt;VarDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1889 -> node1890 [color="black"]
    node1890_name [shape=none, label=<<font color="black">Block[1890]</font>>]
    node1890_name -> node1890 [arrowhead=none, color="black", style=dashed]
    node1890 [shape=box, label=<<font color="black">[0] let names1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1890 -> node1891 [color="black"]
    node1891_name [shape=none, label=<<font color="black">Call[1891]</font>>]
    node1891_name -> node1891 [arrowhead=none, color="black", style=dashed]
    node1891 [shape=cds, label=<<font color="black">%1 = this[2]-&gt;VarDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1891 -> node1892 [color="black"]
    node1892_name [shape=none, label=<<font color="black">Block[1892]</font>>]
    node1892_name -> node1892 [arrowhead=none, color="black", style=dashed]
    node1892 [shape=box, label=<<font color="black">[0] let names2 = %1<BR ALIGN="LEFT"/>[1] return (list-concat names1 names2)[#187]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1892 -> cluster330_exit [color="black"]
  }
}