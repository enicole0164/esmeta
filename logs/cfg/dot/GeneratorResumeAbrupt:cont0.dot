digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2616 {
    label = "def <CONT>:GeneratorResumeAbrupt:cont0(result: Unknown): Normal[ESValue] | Abrupt"
    style = rounded
    cluster2616_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2616_entry_name -> cluster2616_entry [arrowhead=none, color="black", style=dashed]
    cluster2616_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2616_entry -> node19362 [color="black"]
    cluster2616_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2616_exit_name -> cluster2616_exit [arrowhead=none, color="black", style=dashed]
    cluster2616_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node19362_name [shape=none, label=<<font color="black">Block[19362]</font>>]
    node19362_name -> node19362 [arrowhead=none, color="black", style=dashed]
    node19362 [shape=box, label=<<font color="black">[0] assert (= methodContext @EXECUTION_STACK[0])<BR ALIGN="LEFT"/>[1] return [? result]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19362 -> cluster2616_exit [color="black"]
  }
}