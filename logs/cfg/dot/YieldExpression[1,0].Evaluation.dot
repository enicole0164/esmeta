digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1608 {
    label = "def <SYNTAX>:YieldExpression[1,0].Evaluation(this: Ast:YieldExpression[1,0]): Unknown"
    style = rounded
    cluster1608_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1608_entry_name -> cluster1608_entry [arrowhead=none, color="black", style=dashed]
    cluster1608_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1608_entry -> node8629 [color="black"]
    cluster1608_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1608_exit_name -> cluster1608_exit [arrowhead=none, color="black", style=dashed]
    cluster1608_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8629_name [shape=none, label=<<font color="black">Call[8629]</font>>]
    node8629_name -> node8629 [arrowhead=none, color="black", style=dashed]
    node8629 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node8629 -> node8630 [color="black"]
    node8630_name [shape=none, label=<<font color="black">Block[8630]</font>>]
    node8630_name -> node8630 [arrowhead=none, color="black", style=dashed]
    node8630 [shape=box, label=<<font color="black">[0] let exprRef = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8630 -> node8631 [color="black"]
    node8631_name [shape=none, label=<<font color="black">Call[8631]</font>>]
    node8631_name -> node8631 [arrowhead=none, color="black", style=dashed]
    node8631 [shape=cds, label=<<font color="black">%1 = clo&lt;GetValue&gt;(exprRef)</font>> color="black" fillcolor="white", style=filled]
    node8631 -> node8632 [color="black"]
    node8632_name [shape=none, label=<<font color="black">Block[8632]</font>>]
    node8632_name -> node8632 [arrowhead=none, color="black", style=dashed]
    node8632 [shape=box, label=<<font color="black">[0] let value = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8632 -> node8633 [color="black"]
    node8633_name [shape=none, label=<<font color="black">Call[8633]</font>>]
    node8633_name -> node8633 [arrowhead=none, color="black", style=dashed]
    node8633 [shape=cds, label=<<font color="black">%2 = clo&lt;Yield&gt;(value)</font>> color="black" fillcolor="white", style=filled]
    node8633 -> node8634 [color="black"]
    node8634_name [shape=none, label=<<font color="black">Block[8634]</font>>]
    node8634_name -> node8634 [arrowhead=none, color="black", style=dashed]
    node8634 [shape=box, label=<<font color="black">[0] return [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8634 -> cluster1608_exit [color="black"]
  }
}