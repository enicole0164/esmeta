digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1985 {
    label = "def <BUILTIN>:INTRINSICS.isFinite(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster1985_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1985_entry_name -> cluster1985_entry [arrowhead=none, color="black", style=dashed]
    cluster1985_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1985_entry -> node10911 [color="black"]
    cluster1985_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1985_exit_name -> cluster1985_exit [arrowhead=none, color="black", style=dashed]
    cluster1985_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node10911_name [shape=none, label=<<font color="black">Branch[10911]</font>>]
    node10911_name -> node10911 [arrowhead=none, color="black", style=dashed]
    node10911 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node10911 -> node10912 [label=<<font color="black">true</font>> color="black"]
    node10911 -> node10913 [label=<<font color="black">false</font>> color="black"]
    node10912_name [shape=none, label=<<font color="black">Block[10912]</font>>]
    node10912_name -> node10912 [arrowhead=none, color="black", style=dashed]
    node10912 [shape=box, label=<<font color="black">[0] let number = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10912 -> node10914 [color="black"]
    node10913_name [shape=none, label=<<font color="black">Block[10913]</font>>]
    node10913_name -> node10913 [arrowhead=none, color="black", style=dashed]
    node10913 [shape=box, label=<<font color="black">[0] let number = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10913 -> node10914 [color="black"]
    node10914_name [shape=none, label=<<font color="black">Call[10914]</font>>]
    node10914_name -> node10914 [arrowhead=none, color="black", style=dashed]
    node10914 [shape=cds, label=<<font color="black">%0 = clo&lt;ToNumber&gt;(number)</font>> color="black" fillcolor="white", style=filled]
    node10914 -> node10915 [color="black"]
    node10915_name [shape=none, label=<<font color="black">Block[10915]</font>>]
    node10915_name -> node10915 [arrowhead=none, color="black", style=dashed]
    node10915 [shape=box, label=<<font color="black">[0] let num = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10915 -> node10916 [color="black"]
    node10916_name [shape=none, label=<<font color="black">Branch[10916]</font>>]
    node10916_name -> node10916 [arrowhead=none, color="black", style=dashed]
    node10916 [shape=diamond, label=<<font color="black">(|| (|| (= num NaN) (= num +INF)) (= num -INF))</font>> color="black" fillcolor="white", style=filled]
    node10916 -> node10917 [label=<<font color="black">true</font>> color="black"]
    node10916 -> node10918 [label=<<font color="black">false</font>> color="black"]
    node10917_name [shape=none, label=<<font color="black">Block[10917]</font>>]
    node10917_name -> node10917 [arrowhead=none, color="black", style=dashed]
    node10917 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10917 -> cluster1985_exit [color="black"]
    node10918_name [shape=none, label=<<font color="black">Block[10918]</font>>]
    node10918_name -> node10918 [arrowhead=none, color="black", style=dashed]
    node10918 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10918 -> cluster1985_exit [color="black"]
  }
}