digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster876 {
    label = "def <SYNTAX>:AsyncArrowBindingIdentifier[0,0].IteratorBindingInitialization(this: Ast:AsyncArrowBindingIdentifier[0,0], iteratorRecord: Unknown, environment: Unknown): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster876_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster876_entry_name -> cluster876_entry [arrowhead=none, color="black", style=dashed]
    cluster876_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster876_entry -> node3455 [color="black"]
    cluster876_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster876_exit_name -> cluster876_exit [arrowhead=none, color="black", style=dashed]
    cluster876_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3455_name [shape=none, label=<<font color="black">Block[3455]</font>>]
    node3455_name -> node3455 [arrowhead=none, color="black", style=dashed]
    node3455 [shape=box, label=<<font color="black">[0] let v = undefined<BR ALIGN="LEFT"/>[1] assert (= iteratorRecord.Done false)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3455 -> node3456 [color="black"]
    node3456_name [shape=none, label=<<font color="black">Call[3456]</font>>]
    node3456_name -> node3456 [arrowhead=none, color="black", style=dashed]
    node3456 [shape=cds, label=<<font color="black">%0 = clo&lt;IteratorStep&gt;(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node3456 -> node3457 [color="black"]
    node3457_name [shape=none, label=<<font color="black">Call[3457]</font>>]
    node3457_name -> node3457 [arrowhead=none, color="black", style=dashed]
    node3457 [shape=cds, label=<<font color="black">%1 = clo&lt;Completion&gt;(%0)</font>> color="black" fillcolor="white", style=filled]
    node3457 -> node3458 [color="black"]
    node3458_name [shape=none, label=<<font color="black">Block[3458]</font>>]
    node3458_name -> node3458 [arrowhead=none, color="black", style=dashed]
    node3458 [shape=box, label=<<font color="black">[0] let next = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3458 -> node3459 [color="black"]
    node3459_name [shape=none, label=<<font color="black">Branch[3459]</font>>]
    node3459_name -> node3459 [arrowhead=none, color="black", style=dashed]
    node3459 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? next) (! (= next.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node3459 -> node3460 [label=<<font color="black">true</font>> color="black"]
    node3459 -> node3461 [label=<<font color="black">false</font>> color="black"]
    node3460_name [shape=none, label=<<font color="black">Block[3460]</font>>]
    node3460_name -> node3460 [arrowhead=none, color="black", style=dashed]
    node3460 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3460 -> node3461 [color="black"]
    node3461_name [shape=none, label=<<font color="black">Block[3461]</font>>]
    node3461_name -> node3461 [arrowhead=none, color="black", style=dashed]
    node3461 [shape=box, label=<<font color="black">[0] [? next]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3461 -> node3462 [color="black"]
    node3462_name [shape=none, label=<<font color="black">Branch[3462]</font>>]
    node3462_name -> node3462 [arrowhead=none, color="black", style=dashed]
    node3462 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white", style=filled]
    node3462 -> node3463 [label=<<font color="black">true</font>> color="black"]
    node3462 -> node3464 [label=<<font color="black">false</font>> color="black"]
    node3463_name [shape=none, label=<<font color="black">Block[3463]</font>>]
    node3463_name -> node3463 [arrowhead=none, color="black", style=dashed]
    node3463 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3463 -> node3470 [color="black"]
    node3464_name [shape=none, label=<<font color="black">Call[3464]</font>>]
    node3464_name -> node3464 [arrowhead=none, color="black", style=dashed]
    node3464 [shape=cds, label=<<font color="black">%2 = clo&lt;IteratorValue&gt;(next)</font>> color="black" fillcolor="white", style=filled]
    node3464 -> node3465 [color="black"]
    node3470_name [shape=none, label=<<font color="black">Call[3470]</font>>]
    node3470_name -> node3470 [arrowhead=none, color="black", style=dashed]
    node3470 [shape=cds, label=<<font color="black">%4 = this[0]-&gt;BindingInitialization(v, environment)</font>> color="black" fillcolor="white", style=filled]
    node3470 -> node3471 [color="black"]
    node3465_name [shape=none, label=<<font color="black">Call[3465]</font>>]
    node3465_name -> node3465 [arrowhead=none, color="black", style=dashed]
    node3465 [shape=cds, label=<<font color="black">%3 = clo&lt;Completion&gt;(%2)</font>> color="black" fillcolor="white", style=filled]
    node3465 -> node3466 [color="black"]
    node3471_name [shape=none, label=<<font color="black">Block[3471]</font>>]
    node3471_name -> node3471 [arrowhead=none, color="black", style=dashed]
    node3471 [shape=box, label=<<font color="black">[0] return [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3471 -> cluster876_exit [color="black"]
    node3466_name [shape=none, label=<<font color="black">Block[3466]</font>>]
    node3466_name -> node3466 [arrowhead=none, color="black", style=dashed]
    node3466 [shape=box, label=<<font color="black">[0] v = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3466 -> node3467 [color="black"]
    node3467_name [shape=none, label=<<font color="black">Branch[3467]</font>>]
    node3467_name -> node3467 [arrowhead=none, color="black", style=dashed]
    node3467 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? v) (! (= v.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node3467 -> node3468 [label=<<font color="black">true</font>> color="black"]
    node3467 -> node3469 [label=<<font color="black">false</font>> color="black"]
    node3468_name [shape=none, label=<<font color="black">Block[3468]</font>>]
    node3468_name -> node3468 [arrowhead=none, color="black", style=dashed]
    node3468 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3468 -> node3469 [color="black"]
    node3469_name [shape=none, label=<<font color="black">Block[3469]</font>>]
    node3469_name -> node3469 [arrowhead=none, color="black", style=dashed]
    node3469 [shape=box, label=<<font color="black">[0] [? v]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3469 -> node3470 [color="black"]
  }
}