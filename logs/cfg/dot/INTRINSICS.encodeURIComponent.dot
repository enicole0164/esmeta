digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1994 {
    label = "def <BUILTIN>:INTRINSICS.encodeURIComponent(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster1994_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1994_entry_name -> cluster1994_entry [arrowhead=none, color="black", style=dashed]
    cluster1994_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1994_entry -> node11020 [color="black"]
    cluster1994_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1994_exit_name -> cluster1994_exit [arrowhead=none, color="black", style=dashed]
    cluster1994_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11020_name [shape=none, label=<<font color="black">Branch[11020]</font>>]
    node11020_name -> node11020 [arrowhead=none, color="black", style=dashed]
    node11020 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11020 -> node11021 [label=<<font color="black">true</font>> color="black"]
    node11020 -> node11022 [label=<<font color="black">false</font>> color="black"]
    node11021_name [shape=none, label=<<font color="black">Block[11021]</font>>]
    node11021_name -> node11021 [arrowhead=none, color="black", style=dashed]
    node11021 [shape=box, label=<<font color="black">[0] let uriComponent = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11021 -> node11023 [color="black"]
    node11022_name [shape=none, label=<<font color="black">Block[11022]</font>>]
    node11022_name -> node11022 [arrowhead=none, color="black", style=dashed]
    node11022 [shape=box, label=<<font color="black">[0] let uriComponent = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11022 -> node11023 [color="black"]
    node11023_name [shape=none, label=<<font color="black">Call[11023]</font>>]
    node11023_name -> node11023 [arrowhead=none, color="black", style=dashed]
    node11023 [shape=cds, label=<<font color="black">%0 = clo&lt;ToString&gt;(uriComponent)</font>> color="black" fillcolor="white", style=filled]
    node11023 -> node11024 [color="black"]
    node11024_name [shape=none, label=<<font color="black">Block[11024]</font>>]
    node11024_name -> node11024 [arrowhead=none, color="black", style=dashed]
    node11024 [shape=box, label=<<font color="black">[0] let componentString = [? %0]<BR ALIGN="LEFT"/>[1] (yet &quot;Let _unescapedURIComponentSet_ be a String containing one instance of each code unit valid in |uriUnescaped|.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11024 -> node11025 [color="black"]
    node11025_name [shape=none, label=<<font color="black">Call[11025]</font>>]
    node11025_name -> node11025 [arrowhead=none, color="black", style=dashed]
    node11025 [shape=cds, label=<<font color="black">%1 = clo&lt;Encode&gt;(componentString, unescapedURIComponentSet)</font>> color="black" fillcolor="white", style=filled]
    node11025 -> node11026 [color="black"]
    node11026_name [shape=none, label=<<font color="black">Block[11026]</font>>]
    node11026_name -> node11026 [arrowhead=none, color="black", style=dashed]
    node11026 [shape=box, label=<<font color="black">[0] return [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11026 -> cluster1994_exit [color="black"]
  }
}