digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1969 {
    label = "def <SYNTAX>:ExportSpecifier[1,0].ExportEntriesForModule(this: Ast:ExportSpecifier[1,0], module: Unknown): Unknown["ListOfExportEntryRecords"]"
    style = rounded
    cluster1969_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1969_entry_name -> cluster1969_entry [arrowhead=none, color="black", style=dashed]
    cluster1969_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1969_entry -> node10666 [color="black"]
    cluster1969_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1969_exit_name -> cluster1969_exit [arrowhead=none, color="black", style=dashed]
    cluster1969_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node10666_name [shape=none, label=<<font color="black">Call[10666]</font>>]
    node10666_name -> node10666 [arrowhead=none, color="black", style=dashed]
    node10666 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;StringValue()</font>> color="black" fillcolor="white", style=filled]
    node10666 -> node10667 [color="black"]
    node10667_name [shape=none, label=<<font color="black">Block[10667]</font>>]
    node10667_name -> node10667 [arrowhead=none, color="black", style=dashed]
    node10667 [shape=box, label=<<font color="black">[0] let sourceName = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10667 -> node10668 [color="black"]
    node10668_name [shape=none, label=<<font color="black">Call[10668]</font>>]
    node10668_name -> node10668 [arrowhead=none, color="black", style=dashed]
    node10668 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;StringValue()</font>> color="black" fillcolor="white", style=filled]
    node10668 -> node10669 [color="black"]
    node10669_name [shape=none, label=<<font color="black">Block[10669]</font>>]
    node10669_name -> node10669 [arrowhead=none, color="black", style=dashed]
    node10669 [shape=box, label=<<font color="black">[0] let exportName = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10669 -> node10670 [color="black"]
    node10670_name [shape=none, label=<<font color="black">Branch[10670]</font>>]
    node10670_name -> node10670 [arrowhead=none, color="black", style=dashed]
    node10670 [shape=diamond, label=<<font color="black">(= module null)</font>> color="black" fillcolor="white", style=filled]
    node10670 -> node10671 [label=<<font color="black">true</font>> color="black"]
    node10670 -> node10672 [label=<<font color="black">false</font>> color="black"]
    node10671_name [shape=none, label=<<font color="black">Block[10671]</font>>]
    node10671_name -> node10671 [arrowhead=none, color="black", style=dashed]
    node10671 [shape=box, label=<<font color="black">[0] let localName = sourceName<BR ALIGN="LEFT"/>[1] let importName = null<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10671 -> node10673 [color="black"]
    node10672_name [shape=none, label=<<font color="black">Block[10672]</font>>]
    node10672_name -> node10672 [arrowhead=none, color="black", style=dashed]
    node10672 [shape=box, label=<<font color="black">[0] let localName = null<BR ALIGN="LEFT"/>[1] let importName = sourceName<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10672 -> node10673 [color="black"]
    node10673_name [shape=none, label=<<font color="black">Block[10673]</font>>]
    node10673_name -> node10673 [arrowhead=none, color="black", style=dashed]
    node10673 [shape=box, label=<<font color="black">[0] return (new [(new ExportEntryRecord(&quot;ModuleRequest&quot; -&gt; module, &quot;ImportName&quot; -&gt; importName, &quot;LocalName&quot; -&gt; localName, &quot;ExportName&quot; -&gt; exportName))[#863]])[#862]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10673 -> cluster1969_exit [color="black"]
  }
}