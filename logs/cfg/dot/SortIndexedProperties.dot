digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2374 {
    label = "def SortIndexedProperties(obj: Object, len: Unknown["NonnegativeInteger"], SortCompare: Unknown["AbstractClosureWithTwoParameters"]): Normal[Object] | Abrupt"
    style = rounded
    cluster2374_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2374_entry_name -> cluster2374_entry [arrowhead=none, color="black", style=dashed]
    cluster2374_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2374_entry -> node15637 [color="black"]
    cluster2374_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2374_exit_name -> cluster2374_exit [arrowhead=none, color="black", style=dashed]
    cluster2374_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node15637_name [shape=none, label=<<font color="black">Block[15637]</font>>]
    node15637_name -> node15637 [arrowhead=none, color="black", style=dashed]
    node15637 [shape=box, label=<<font color="black">[0] let items = (new [])[#1047]<BR ALIGN="LEFT"/>[1] let k = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15637 -> node15638 [color="black"]
    node15638_name [shape=none, label=<<font color="black">Branch[15638]</font>>]
    node15638_name -> node15638 [arrowhead=none, color="black", style=dashed]
    node15638 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white", style=filled]
    node15638 -> node15639 [label=<<font color="black">true</font>> color="black"]
    node15638 -> node15647 [label=<<font color="black">false</font>> color="black"]
    node15639_name [shape=none, label=<<font color="black">Call[15639]</font>>]
    node15639_name -> node15639 [arrowhead=none, color="black", style=dashed]
    node15639 [shape=cds, label=<<font color="black">%0 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node15639 -> node15640 [color="black"]
    node15647_name [shape=none, label=<<font color="black">Block[15647]</font>>]
    node15647_name -> node15647 [arrowhead=none, color="black", style=dashed]
    node15647 [shape=box, label=<<font color="black">[0] let itemCount = items.length<BR ALIGN="LEFT"/>[1] (yet &quot;Sort _items_ using an implementation-defined sequence of calls to _SortCompare_. If any such call returns an abrupt completion, stop before performing any further calls to _SortCompare_ and return that Completion Record.&quot;)<BR ALIGN="LEFT"/>[2] let j = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15647 -> node15648 [color="black"]
    node15640_name [shape=none, label=<<font color="black">Block[15640]</font>>]
    node15640_name -> node15640 [arrowhead=none, color="black", style=dashed]
    node15640 [shape=box, label=<<font color="black">[0] let Pk = [! %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15640 -> node15641 [color="black"]
    node15648_name [shape=none, label=<<font color="black">Branch[15648]</font>>]
    node15648_name -> node15648 [arrowhead=none, color="black", style=dashed]
    node15648 [shape=diamond, label=<<font color="black">(&lt; j itemCount)</font>> color="black" fillcolor="white", style=filled]
    node15648 -> node15649 [label=<<font color="black">true</font>> color="black"]
    node15648 -> node15652 [label=<<font color="black">false</font>> color="black"]
    node15641_name [shape=none, label=<<font color="black">Call[15641]</font>>]
    node15641_name -> node15641 [arrowhead=none, color="black", style=dashed]
    node15641 [shape=cds, label=<<font color="black">%1 = clo&lt;HasProperty&gt;(obj, Pk)</font>> color="black" fillcolor="white", style=filled]
    node15641 -> node15642 [color="black"]
    node15649_name [shape=none, label=<<font color="black">Call[15649]</font>>]
    node15649_name -> node15649 [arrowhead=none, color="black", style=dashed]
    node15649 [shape=cds, label=<<font color="black">%3 = clo&lt;ToString&gt;(([number] j))</font>> color="black" fillcolor="white", style=filled]
    node15649 -> node15650 [color="black"]
    node15652_name [shape=none, label=<<font color="black">Branch[15652]</font>>]
    node15652_name -> node15652 [arrowhead=none, color="black", style=dashed]
    node15652 [shape=diamond, label=<<font color="black">(&lt; j len)</font>> color="black" fillcolor="white", style=filled]
    node15652 -> node15653 [label=<<font color="black">true</font>> color="black"]
    node15652 -> node15656 [label=<<font color="black">false</font>> color="black"]
    node15642_name [shape=none, label=<<font color="black">Block[15642]</font>>]
    node15642_name -> node15642 [arrowhead=none, color="black", style=dashed]
    node15642 [shape=box, label=<<font color="black">[0] let kPresent = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15642 -> node15643 [color="black"]
    node15650_name [shape=none, label=<<font color="black">Call[15650]</font>>]
    node15650_name -> node15650 [arrowhead=none, color="black", style=dashed]
    node15650 [shape=cds, label=<<font color="black">%4 = clo&lt;Set&gt;(obj, [! %3], items[j], true)</font>> color="black" fillcolor="white", style=filled]
    node15650 -> node15651 [color="black"]
    node15653_name [shape=none, label=<<font color="black">Call[15653]</font>>]
    node15653_name -> node15653 [arrowhead=none, color="black", style=dashed]
    node15653 [shape=cds, label=<<font color="black">%5 = clo&lt;ToString&gt;(([number] j))</font>> color="black" fillcolor="white", style=filled]
    node15653 -> node15654 [color="black"]
    node15656_name [shape=none, label=<<font color="black">Block[15656]</font>>]
    node15656_name -> node15656 [arrowhead=none, color="black", style=dashed]
    node15656 [shape=box, label=<<font color="black">[0] return obj<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15656 -> cluster2374_exit [color="black"]
    node15643_name [shape=none, label=<<font color="black">Branch[15643]</font>>]
    node15643_name -> node15643 [arrowhead=none, color="black", style=dashed]
    node15643 [shape=diamond, label=<<font color="black">(= kPresent true)</font>> color="black" fillcolor="white", style=filled]
    node15643 -> node15644 [label=<<font color="black">true</font>> color="black"]
    node15643 -> node15646 [label=<<font color="black">false</font>> color="black"]
    node15651_name [shape=none, label=<<font color="black">Block[15651]</font>>]
    node15651_name -> node15651 [arrowhead=none, color="black", style=dashed]
    node15651 [shape=box, label=<<font color="black">[0] [? %4]<BR ALIGN="LEFT"/>[1] j = (+ j 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15651 -> node15648 [color="black"]
    node15654_name [shape=none, label=<<font color="black">Call[15654]</font>>]
    node15654_name -> node15654 [arrowhead=none, color="black", style=dashed]
    node15654 [shape=cds, label=<<font color="black">%6 = clo&lt;DeletePropertyOrThrow&gt;(obj, [! %5])</font>> color="black" fillcolor="white", style=filled]
    node15654 -> node15655 [color="black"]
    node15644_name [shape=none, label=<<font color="black">Call[15644]</font>>]
    node15644_name -> node15644 [arrowhead=none, color="black", style=dashed]
    node15644 [shape=cds, label=<<font color="black">%2 = clo&lt;Get&gt;(obj, Pk)</font>> color="black" fillcolor="white", style=filled]
    node15644 -> node15645 [color="black"]
    node15646_name [shape=none, label=<<font color="black">Block[15646]</font>>]
    node15646_name -> node15646 [arrowhead=none, color="black", style=dashed]
    node15646 [shape=box, label=<<font color="black">[0] k = (+ k 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15646 -> node15638 [color="black"]
    node15655_name [shape=none, label=<<font color="black">Block[15655]</font>>]
    node15655_name -> node15655 [arrowhead=none, color="black", style=dashed]
    node15655 [shape=box, label=<<font color="black">[0] [? %6]<BR ALIGN="LEFT"/>[1] j = (+ j 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15655 -> node15652 [color="black"]
    node15645_name [shape=none, label=<<font color="black">Block[15645]</font>>]
    node15645_name -> node15645 [arrowhead=none, color="black", style=dashed]
    node15645 [shape=box, label=<<font color="black">[0] let kValue = [? %2]<BR ALIGN="LEFT"/>[1] push items &lt; kValue<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15645 -> node15646 [color="black"]
  }
}