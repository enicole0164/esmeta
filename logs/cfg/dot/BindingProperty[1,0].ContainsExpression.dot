digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1525 {
    label = "def <SYNTAX>:BindingProperty[1,0].ContainsExpression(this: Ast:BindingProperty[1,0]): Boolean"
    style = rounded
    cluster1525_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1525_entry_name -> cluster1525_entry [arrowhead=none, color="black", style=dashed]
    cluster1525_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1525_entry -> node8321 [color="black"]
    cluster1525_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1525_exit_name -> cluster1525_exit [arrowhead=none, color="black", style=dashed]
    cluster1525_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8321_name [shape=none, label=<<font color="black">Call[8321]</font>>]
    node8321_name -> node8321 [arrowhead=none, color="black", style=dashed]
    node8321 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;IsComputedPropertyKey()</font>> color="black" fillcolor="white", style=filled]
    node8321 -> node8322 [color="black"]
    node8322_name [shape=none, label=<<font color="black">Block[8322]</font>>]
    node8322_name -> node8322 [arrowhead=none, color="black", style=dashed]
    node8322 [shape=box, label=<<font color="black">[0] let has = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8322 -> node8323 [color="black"]
    node8323_name [shape=none, label=<<font color="black">Branch[8323]</font>>]
    node8323_name -> node8323 [arrowhead=none, color="black", style=dashed]
    node8323 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white", style=filled]
    node8323 -> node8324 [label=<<font color="black">true</font>> color="black"]
    node8323 -> node8325 [label=<<font color="black">false</font>> color="black"]
    node8324_name [shape=none, label=<<font color="black">Block[8324]</font>>]
    node8324_name -> node8324 [arrowhead=none, color="black", style=dashed]
    node8324 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8324 -> cluster1525_exit [color="black"]
    node8325_name [shape=none, label=<<font color="black">Call[8325]</font>>]
    node8325_name -> node8325 [arrowhead=none, color="black", style=dashed]
    node8325 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;ContainsExpression()</font>> color="black" fillcolor="white", style=filled]
    node8325 -> node8326 [color="black"]
    node8326_name [shape=none, label=<<font color="black">Block[8326]</font>>]
    node8326_name -> node8326 [arrowhead=none, color="black", style=dashed]
    node8326 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8326 -> cluster1525_exit [color="black"]
  }
}