digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster458 {
    label = "def <SYNTAX>:ModuleItem[1,0].VarScopedDeclarations(this: Ast:ModuleItem[1,0]): List[Ast]"
    style = rounded
    cluster458_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster458_entry_name -> cluster458_entry [arrowhead=none, color="black", style=dashed]
    cluster458_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster458_entry -> node2260 [color="black"]
    cluster458_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster458_exit_name -> cluster458_exit [arrowhead=none, color="black", style=dashed]
    cluster458_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2260_name [shape=none, label=<<font color="black">Block[2260]</font>>]
    node2260_name -> node2260 [arrowhead=none, color="black", style=dashed]
    node2260 [shape=box, label=<<font color="black">[0] (yet &quot;If |ExportDeclaration| is `export` |VariableStatement|, return VarScopedDeclarations of |VariableStatement|.&quot;)<BR ALIGN="LEFT"/>[1] return (new [])[#279]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2260 -> cluster458_exit [color="black"]
  }
}