digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2607 {
    label = "def <BUILTIN>:INTRINSICS.AsyncGeneratorFunction(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2607_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2607_entry_name -> cluster2607_entry [arrowhead=none, color="black", style=dashed]
    cluster2607_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2607_entry -> node19301 [color="black"]
    cluster2607_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2607_exit_name -> cluster2607_exit [arrowhead=none, color="black", style=dashed]
    cluster2607_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node19301_name [shape=none, label=<<font color="black">Block[19301]</font>>]
    node19301_name -> node19301 [arrowhead=none, color="black", style=dashed]
    node19301 [shape=box, label=<<font color="black">[0] let C = @EXECUTION_STACK[0].Function<BR ALIGN="LEFT"/>[1] let args = argumentsList<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19301 -> node19302 [color="black"]
    node19302_name [shape=none, label=<<font color="black">Call[19302]</font>>]
    node19302_name -> node19302 [arrowhead=none, color="black", style=dashed]
    node19302 [shape=cds, label=<<font color="black">%0 = clo&lt;CreateDynamicFunction&gt;(C, NewTarget, ~asyncGenerator~, args)</font>> color="black" fillcolor="white", style=filled]
    node19302 -> node19303 [color="black"]
    node19303_name [shape=none, label=<<font color="black">Block[19303]</font>>]
    node19303_name -> node19303 [arrowhead=none, color="black", style=dashed]
    node19303 [shape=box, label=<<font color="black">[0] return [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19303 -> cluster2607_exit [color="black"]
  }
}