digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster61 {
    label = "def IsPrivateReference(V: ReferenceRecord): Boolean"
    style = rounded
    cluster61_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster61_entry_name -> cluster61_entry [arrowhead=none, color="black", style=dashed]
    cluster61_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster61_entry -> node396 [color="black"]
    cluster61_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster61_exit_name -> cluster61_exit [arrowhead=none, color="black", style=dashed]
    cluster61_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node396_name [shape=none, label=<<font color="black">Branch[396]</font>>]
    node396_name -> node396 [arrowhead=none, color="black", style=dashed]
    node396 [shape=diamond, label=<<font color="black">(? V.ReferencedName: &quot;PrivateName&quot;)</font>> color="black" fillcolor="white", style=filled]
    node396 -> node397 [label=<<font color="black">true</font>> color="black"]
    node396 -> node398 [label=<<font color="black">false</font>> color="black"]
    node397_name [shape=none, label=<<font color="black">Block[397]</font>>]
    node397_name -> node397 [arrowhead=none, color="black", style=dashed]
    node397 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node397 -> cluster61_exit [color="black"]
    node398_name [shape=none, label=<<font color="black">Block[398]</font>>]
    node398_name -> node398 [arrowhead=none, color="black", style=dashed]
    node398 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node398 -> cluster61_exit [color="black"]
  }
}