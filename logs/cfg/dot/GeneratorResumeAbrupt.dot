digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2617 {
    label = "def GeneratorResumeAbrupt(generator: Unknown, abruptCompletion: Abrupt[return, throw], generatorBrand: Unknown): Normal[ESValue] | Abrupt"
    style = rounded
    cluster2617_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2617_entry_name -> cluster2617_entry [arrowhead=none, color="black", style=dashed]
    cluster2617_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2617_entry -> node19363 [color="black"]
    cluster2617_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2617_exit_name -> cluster2617_exit [arrowhead=none, color="black", style=dashed]
    cluster2617_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node19363_name [shape=none, label=<<font color="black">Call[19363]</font>>]
    node19363_name -> node19363 [arrowhead=none, color="black", style=dashed]
    node19363 [shape=cds, label=<<font color="black">%0 = clo&lt;GeneratorValidate&gt;(generator, generatorBrand)</font>> color="black" fillcolor="white", style=filled]
    node19363 -> node19364 [color="black"]
    node19364_name [shape=none, label=<<font color="black">Block[19364]</font>>]
    node19364_name -> node19364 [arrowhead=none, color="black", style=dashed]
    node19364 [shape=box, label=<<font color="black">[0] let state = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19364 -> node19365 [color="black"]
    node19365_name [shape=none, label=<<font color="black">Branch[19365]</font>>]
    node19365_name -> node19365 [arrowhead=none, color="black", style=dashed]
    node19365 [shape=diamond, label=<<font color="black">(= state ~suspendedStart~)</font>> color="black" fillcolor="white", style=filled]
    node19365 -> node19366 [label=<<font color="black">true</font>> color="black"]
    node19365 -> node19367 [label=<<font color="black">false</font>> color="black"]
    node19366_name [shape=none, label=<<font color="black">Block[19366]</font>>]
    node19366_name -> node19366 [arrowhead=none, color="black", style=dashed]
    node19366 [shape=box, label=<<font color="black">[0] generator.GeneratorState = ~completed~<BR ALIGN="LEFT"/>[1] nop<BR ALIGN="LEFT"/>[2] state = ~completed~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19366 -> node19367 [color="black"]
    node19367_name [shape=none, label=<<font color="black">Branch[19367]</font>>]
    node19367_name -> node19367 [arrowhead=none, color="black", style=dashed]
    node19367 [shape=diamond, label=<<font color="black">(= state ~completed~)</font>> color="black" fillcolor="white", style=filled]
    node19367 -> node19368 [label=<<font color="black">true</font>> color="black"]
    node19367 -> node19372 [label=<<font color="black">false</font>> color="black"]
    node19368_name [shape=none, label=<<font color="black">Branch[19368]</font>>]
    node19368_name -> node19368 [arrowhead=none, color="black", style=dashed]
    node19368 [shape=diamond, label=<<font color="black">(= abruptCompletion.Type ~return~)</font>> color="black" fillcolor="white", style=filled]
    node19368 -> node19369 [label=<<font color="black">true</font>> color="black"]
    node19368 -> node19371 [label=<<font color="black">false</font>> color="black"]
    node19372_name [shape=none, label=<<font color="black">Block[19372]</font>>]
    node19372_name -> node19372 [arrowhead=none, color="black", style=dashed]
    node19372 [shape=box, label=<<font color="black">[0] assert (= state ~suspendedYield~)<BR ALIGN="LEFT"/>[1] let genContext = generator.GeneratorContext<BR ALIGN="LEFT"/>[2] let methodContext = @EXECUTION_STACK[0]<BR ALIGN="LEFT"/>[3] nop<BR ALIGN="LEFT"/>[4] generator.GeneratorState = ~executing~<BR ALIGN="LEFT"/>[5] push genContext &gt; @EXECUTION_STACK<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19372 -> node19373 [color="black"]
    node19369_name [shape=none, label=<<font color="black">Call[19369]</font>>]
    node19369_name -> node19369 [arrowhead=none, color="black", style=dashed]
    node19369 [shape=cds, label=<<font color="black">%1 = clo&lt;CreateIterResultObject&gt;(abruptCompletion.Value, true)</font>> color="black" fillcolor="white", style=filled]
    node19369 -> node19370 [color="black"]
    node19371_name [shape=none, label=<<font color="black">Block[19371]</font>>]
    node19371_name -> node19371 [arrowhead=none, color="black", style=dashed]
    node19371 [shape=box, label=<<font color="black">[0] return [? abruptCompletion]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19371 -> cluster2617_exit [color="black"]
    node19373_name [shape=none, label=<<font color="black">Branch[19373]</font>>]
    node19373_name -> node19373 [arrowhead=none, color="black", style=dashed]
    node19373 [shape=diamond, label=<<font color="black">(= genContext.ReturnCont absent)</font>> color="black" fillcolor="white", style=filled]
    node19373 -> node19374 [label=<<font color="black">true</font>> color="black"]
    node19373 -> node19375 [label=<<font color="black">false</font>> color="black"]
    node19370_name [shape=none, label=<<font color="black">Block[19370]</font>>]
    node19370_name -> node19370 [arrowhead=none, color="black", style=dashed]
    node19370 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19370 -> cluster2617_exit [color="black"]
    node19374_name [shape=none, label=<<font color="black">Block[19374]</font>>]
    node19374_name -> node19374 [arrowhead=none, color="black", style=dashed]
    node19374 [shape=box, label=<<font color="black">[0] genContext.ReturnCont = (new [])[#1320]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19374 -> node19375 [color="black"]
    node19375_name [shape=none, label=<<font color="black">Block[19375]</font>>]
    node19375_name -> node19375 [arrowhead=none, color="black", style=dashed]
    node19375 [shape=box, label=<<font color="black">[0] push cont&lt;GeneratorResumeAbrupt:cont0&gt; &gt; genContext.ReturnCont<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19375 -> node19376 [color="black"]
    node19376_name [shape=none, label=<<font color="black">Call[19376]</font>>]
    node19376_name -> node19376 [arrowhead=none, color="black", style=dashed]
    node19376 [shape=cds, label=<<font color="black">%2 = genContext.ResumeCont(abruptCompletion)</font>> color="black" fillcolor="white", style=filled]
    node19376 -> cluster2617_exit [color="black"]
  }
}