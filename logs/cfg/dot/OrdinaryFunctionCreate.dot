digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1089 {
    label = "def OrdinaryFunctionCreate(functionPrototype: Object, sourceText: Unknown["SequenceOfUnicodeCodePoints"], ParameterList: Ast, Body: Ast, thisMode: Const[~lexical-this~, ~non-lexical-this~], env: EnvironmentRecord, privateEnv: PrivateEnvironmentRecord | Null): FunctionObject"
    style = rounded
    cluster1089_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1089_entry_name -> cluster1089_entry [arrowhead=none, color="black", style=dashed]
    cluster1089_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1089_entry -> node4311 [color="black"]
    cluster1089_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1089_exit_name -> cluster1089_exit [arrowhead=none, color="black", style=dashed]
    cluster1089_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4311_name [shape=none, label=<<font color="black">Block[4311]</font>>]
    node4311_name -> node4311 [arrowhead=none, color="black", style=dashed]
    node4311 [shape=box, label=<<font color="black">[0] let internalSlotsList = (new [&quot;Environment&quot;, &quot;PrivateEnvironment&quot;, &quot;FormalParameters&quot;, &quot;ECMAScriptCode&quot;, &quot;ConstructorKind&quot;, &quot;Realm&quot;, &quot;ScriptOrModule&quot;, &quot;ThisMode&quot;, &quot;Strict&quot;, &quot;HomeObject&quot;, &quot;SourceText&quot;, &quot;Fields&quot;, &quot;PrivateMethods&quot;, &quot;ClassFieldInitializerName&quot;, &quot;IsClassConstructor&quot;])[#420]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4311 -> node4312 [color="black"]
    node4312_name [shape=none, label=<<font color="black">Call[4312]</font>>]
    node4312_name -> node4312 [arrowhead=none, color="black", style=dashed]
    node4312 [shape=cds, label=<<font color="black">%0 = clo&lt;OrdinaryObjectCreate&gt;(functionPrototype, internalSlotsList)</font>> color="black" fillcolor="white", style=filled]
    node4312 -> node4313 [color="black"]
    node4313_name [shape=none, label=<<font color="black">Block[4313]</font>>]
    node4313_name -> node4313 [arrowhead=none, color="black", style=dashed]
    node4313 [shape=box, label=<<font color="black">[0] let F = %0<BR ALIGN="LEFT"/>[1] F.Call = clo&lt;ECMAScriptFunctionObject.Call&gt;<BR ALIGN="LEFT"/>[2] F.SourceText = sourceText<BR ALIGN="LEFT"/>[3] F.FormalParameters = ParameterList<BR ALIGN="LEFT"/>[4] F.ECMAScriptCode = Body<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4313 -> node4314 [color="black"]
    node4314_name [shape=none, label=<<font color="black">Branch[4314]</font>>]
    node4314_name -> node4314 [arrowhead=none, color="black", style=dashed]
    node4314 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white", style=filled]
    node4314 -> node4315 [label=<<font color="black">true</font>> color="black"]
    node4314 -> node4316 [label=<<font color="black">false</font>> color="black"]
    node4315_name [shape=none, label=<<font color="black">Block[4315]</font>>]
    node4315_name -> node4315 [arrowhead=none, color="black", style=dashed]
    node4315 [shape=box, label=<<font color="black">[0] let Strict = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4315 -> node4317 [color="black"]
    node4316_name [shape=none, label=<<font color="black">Block[4316]</font>>]
    node4316_name -> node4316 [arrowhead=none, color="black", style=dashed]
    node4316 [shape=box, label=<<font color="black">[0] let Strict = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4316 -> node4317 [color="black"]
    node4317_name [shape=none, label=<<font color="black">Block[4317]</font>>]
    node4317_name -> node4317 [arrowhead=none, color="black", style=dashed]
    node4317 [shape=box, label=<<font color="black">[0] F.Strict = Strict<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4317 -> node4318 [color="black"]
    node4318_name [shape=none, label=<<font color="black">Branch[4318]</font>>]
    node4318_name -> node4318 [arrowhead=none, color="black", style=dashed]
    node4318 [shape=diamond, label=<<font color="black">(= thisMode ~lexical-this~)</font>> color="black" fillcolor="white", style=filled]
    node4318 -> node4319 [label=<<font color="black">true</font>> color="black"]
    node4318 -> node4320 [label=<<font color="black">false</font>> color="black"]
    node4319_name [shape=none, label=<<font color="black">Block[4319]</font>>]
    node4319_name -> node4319 [arrowhead=none, color="black", style=dashed]
    node4319 [shape=box, label=<<font color="black">[0] F.ThisMode = ~lexical~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4319 -> node4323 [color="black"]
    node4320_name [shape=none, label=<<font color="black">Branch[4320]</font>>]
    node4320_name -> node4320 [arrowhead=none, color="black", style=dashed]
    node4320 [shape=diamond, label=<<font color="black">(= Strict true)</font>> color="black" fillcolor="white", style=filled]
    node4320 -> node4321 [label=<<font color="black">true</font>> color="black"]
    node4320 -> node4322 [label=<<font color="black">false</font>> color="black"]
    node4323_name [shape=none, label=<<font color="black">Block[4323]</font>>]
    node4323_name -> node4323 [arrowhead=none, color="black", style=dashed]
    node4323 [shape=box, label=<<font color="black">[0] F.IsClassConstructor = false<BR ALIGN="LEFT"/>[1] F.Environment = env<BR ALIGN="LEFT"/>[2] F.PrivateEnvironment = privateEnv<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4323 -> node4324 [color="black"]
    node4321_name [shape=none, label=<<font color="black">Block[4321]</font>>]
    node4321_name -> node4321 [arrowhead=none, color="black", style=dashed]
    node4321 [shape=box, label=<<font color="black">[0] F.ThisMode = ~strict~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4321 -> node4323 [color="black"]
    node4322_name [shape=none, label=<<font color="black">Block[4322]</font>>]
    node4322_name -> node4322 [arrowhead=none, color="black", style=dashed]
    node4322 [shape=box, label=<<font color="black">[0] F.ThisMode = ~global~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4322 -> node4323 [color="black"]
    node4324_name [shape=none, label=<<font color="black">Call[4324]</font>>]
    node4324_name -> node4324 [arrowhead=none, color="black", style=dashed]
    node4324 [shape=cds, label=<<font color="black">%1 = clo&lt;GetActiveScriptOrModule&gt;()</font>> color="black" fillcolor="white", style=filled]
    node4324 -> node4325 [color="black"]
    node4325_name [shape=none, label=<<font color="black">Block[4325]</font>>]
    node4325_name -> node4325 [arrowhead=none, color="black", style=dashed]
    node4325 [shape=box, label=<<font color="black">[0] F.ScriptOrModule = %1<BR ALIGN="LEFT"/>[1] F.Realm = @EXECUTION_STACK[0].Realm<BR ALIGN="LEFT"/>[2] F.HomeObject = undefined<BR ALIGN="LEFT"/>[3] F.Fields = (new [])[#421]<BR ALIGN="LEFT"/>[4] F.PrivateMethods = (new [])[#422]<BR ALIGN="LEFT"/>[5] F.ClassFieldInitializerName = ~empty~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4325 -> node4326 [color="black"]
    node4326_name [shape=none, label=<<font color="black">Call[4326]</font>>]
    node4326_name -> node4326 [arrowhead=none, color="black", style=dashed]
    node4326 [shape=cds, label=<<font color="black">%2 = ParameterList-&gt;ExpectedArgumentCount()</font>> color="black" fillcolor="white", style=filled]
    node4326 -> node4327 [color="black"]
    node4327_name [shape=none, label=<<font color="black">Block[4327]</font>>]
    node4327_name -> node4327 [arrowhead=none, color="black", style=dashed]
    node4327 [shape=box, label=<<font color="black">[0] let len = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4327 -> node4328 [color="black"]
    node4328_name [shape=none, label=<<font color="black">Call[4328]</font>>]
    node4328_name -> node4328 [arrowhead=none, color="black", style=dashed]
    node4328 [shape=cds, label=<<font color="black">%3 = clo&lt;SetFunctionLength&gt;(F, len)</font>> color="black" fillcolor="white", style=filled]
    node4328 -> node4329 [color="black"]
    node4329_name [shape=none, label=<<font color="black">Block[4329]</font>>]
    node4329_name -> node4329 [arrowhead=none, color="black", style=dashed]
    node4329 [shape=box, label=<<font color="black">[0] return F<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4329 -> cluster1089_exit [color="black"]
  }
}