digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1474 {
    label = "def <SYNTAX>:CaseBlock[0,1].CaseBlockEvaluation(this: Ast:CaseBlock[0,1], input: Unknown): Normal[ESValue] | Abrupt"
    style = rounded
    cluster1474_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1474_entry_name -> cluster1474_entry [arrowhead=none, color="black", style=dashed]
    cluster1474_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1474_entry -> node7874 [color="black"]
    cluster1474_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1474_exit_name -> cluster1474_exit [arrowhead=none, color="black", style=dashed]
    cluster1474_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7874_name [shape=none, label=<<font color="black">Block[7874]</font>>]
    node7874_name -> node7874 [arrowhead=none, color="black", style=dashed]
    node7874 [shape=box, label=<<font color="black">[0] let V = undefined<BR ALIGN="LEFT"/>[1] let A = (get-children (nt |CaseClause|[]) this[0])[#631]<BR ALIGN="LEFT"/>[2] let found = false<BR ALIGN="LEFT"/>[3] %1 = A<BR ALIGN="LEFT"/>[4] %0 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7874 -> node7875 [color="black"]
    node7875_name [shape=none, label=<<font color="black">Branch[7875]</font>>]
    node7875_name -> node7875 [arrowhead=none, color="black", style=dashed]
    node7875 [shape=diamond, label=<<font color="black">(&lt; %0 %1.length)</font>> color="black" fillcolor="white", style=filled]
    node7875 -> node7876 [label=<<font color="black">true</font>> color="black"]
    node7875 -> node7889 [label=<<font color="black">false</font>> color="black"]
    node7876_name [shape=none, label=<<font color="black">Block[7876]</font>>]
    node7876_name -> node7876 [arrowhead=none, color="black", style=dashed]
    node7876 [shape=box, label=<<font color="black">[0] let C = %1[%0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7876 -> node7877 [color="black"]
    node7889_name [shape=none, label=<<font color="black">Block[7889]</font>>]
    node7889_name -> node7889 [arrowhead=none, color="black", style=dashed]
    node7889 [shape=box, label=<<font color="black">[0] return V<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7889 -> cluster1474_exit [color="black"]
    node7877_name [shape=none, label=<<font color="black">Branch[7877]</font>>]
    node7877_name -> node7877 [arrowhead=none, color="black", style=dashed]
    node7877 [shape=diamond, label=<<font color="black">(= found false)</font>> color="black" fillcolor="white", style=filled]
    node7877 -> node7878 [label=<<font color="black">true</font>> color="black"]
    node7877 -> node7880 [label=<<font color="black">false</font>> color="black"]
    node7878_name [shape=none, label=<<font color="black">Call[7878]</font>>]
    node7878_name -> node7878 [arrowhead=none, color="black", style=dashed]
    node7878 [shape=cds, label=<<font color="black">%2 = clo&lt;CaseClauseIsSelected&gt;(C, input)</font>> color="black" fillcolor="white", style=filled]
    node7878 -> node7879 [color="black"]
    node7880_name [shape=none, label=<<font color="black">Branch[7880]</font>>]
    node7880_name -> node7880 [arrowhead=none, color="black", style=dashed]
    node7880 [shape=diamond, label=<<font color="black">(= found true)</font>> color="black" fillcolor="white", style=filled]
    node7880 -> node7881 [label=<<font color="black">true</font>> color="black"]
    node7880 -> node7888 [label=<<font color="black">false</font>> color="black"]
    node7879_name [shape=none, label=<<font color="black">Block[7879]</font>>]
    node7879_name -> node7879 [arrowhead=none, color="black", style=dashed]
    node7879 [shape=box, label=<<font color="black">[0] found = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7879 -> node7880 [color="black"]
    node7881_name [shape=none, label=<<font color="black">Call[7881]</font>>]
    node7881_name -> node7881 [arrowhead=none, color="black", style=dashed]
    node7881 [shape=cds, label=<<font color="black">%3 = C-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7881 -> node7882 [color="black"]
    node7888_name [shape=none, label=<<font color="black">Block[7888]</font>>]
    node7888_name -> node7888 [arrowhead=none, color="black", style=dashed]
    node7888 [shape=box, label=<<font color="black">[0] %0 = (+ %0 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7888 -> node7875 [color="black"]
    node7882_name [shape=none, label=<<font color="black">Block[7882]</font>>]
    node7882_name -> node7882 [arrowhead=none, color="black", style=dashed]
    node7882 [shape=box, label=<<font color="black">[0] let R = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7882 -> node7883 [color="black"]
    node7883_name [shape=none, label=<<font color="black">Branch[7883]</font>>]
    node7883_name -> node7883 [arrowhead=none, color="black", style=dashed]
    node7883 [shape=diamond, label=<<font color="black">(! (= R.Value ~empty~))</font>> color="black" fillcolor="white", style=filled]
    node7883 -> node7884 [label=<<font color="black">true</font>> color="black"]
    node7883 -> node7885 [label=<<font color="black">false</font>> color="black"]
    node7884_name [shape=none, label=<<font color="black">Block[7884]</font>>]
    node7884_name -> node7884 [arrowhead=none, color="black", style=dashed]
    node7884 [shape=box, label=<<font color="black">[0] V = R.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7884 -> node7885 [color="black"]
    node7885_name [shape=none, label=<<font color="black">Branch[7885]</font>>]
    node7885_name -> node7885 [arrowhead=none, color="black", style=dashed]
    node7885 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? R) (! (= R.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node7885 -> node7886 [label=<<font color="black">true</font>> color="black"]
    node7885 -> node7888 [label=<<font color="black">false</font>> color="black"]
    node7886_name [shape=none, label=<<font color="black">Call[7886]</font>>]
    node7886_name -> node7886 [arrowhead=none, color="black", style=dashed]
    node7886 [shape=cds, label=<<font color="black">%4 = clo&lt;UpdateEmpty&gt;(R, V)</font>> color="black" fillcolor="white", style=filled]
    node7886 -> node7887 [color="black"]
    node7887_name [shape=none, label=<<font color="black">Block[7887]</font>>]
    node7887_name -> node7887 [arrowhead=none, color="black", style=dashed]
    node7887 [shape=box, label=<<font color="black">[0] return [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7887 -> cluster1474_exit [color="black"]
  }
}