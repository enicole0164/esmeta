digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2358 {
    label = "def <BUILTIN>:INTRINSICS.Array.prototype.includes(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2358_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2358_entry_name -> cluster2358_entry [arrowhead=none, color="black", style=dashed]
    cluster2358_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2358_entry -> node15180 [color="black"]
    cluster2358_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2358_exit_name -> cluster2358_exit [arrowhead=none, color="black", style=dashed]
    cluster2358_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node15180_name [shape=none, label=<<font color="black">Branch[15180]</font>>]
    node15180_name -> node15180 [arrowhead=none, color="black", style=dashed]
    node15180 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node15180 -> node15181 [label=<<font color="black">true</font>> color="black"]
    node15180 -> node15182 [label=<<font color="black">false</font>> color="black"]
    node15181_name [shape=none, label=<<font color="black">Block[15181]</font>>]
    node15181_name -> node15181 [arrowhead=none, color="black", style=dashed]
    node15181 [shape=box, label=<<font color="black">[0] let searchElement = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15181 -> node15183 [color="black"]
    node15182_name [shape=none, label=<<font color="black">Block[15182]</font>>]
    node15182_name -> node15182 [arrowhead=none, color="black", style=dashed]
    node15182 [shape=box, label=<<font color="black">[0] let searchElement = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15182 -> node15183 [color="black"]
    node15183_name [shape=none, label=<<font color="black">Branch[15183]</font>>]
    node15183_name -> node15183 [arrowhead=none, color="black", style=dashed]
    node15183 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node15183 -> node15184 [label=<<font color="black">true</font>> color="black"]
    node15183 -> node15185 [label=<<font color="black">false</font>> color="black"]
    node15184_name [shape=none, label=<<font color="black">Block[15184]</font>>]
    node15184_name -> node15184 [arrowhead=none, color="black", style=dashed]
    node15184 [shape=box, label=<<font color="black">[0] let fromIndex = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15184 -> node15186 [color="black"]
    node15185_name [shape=none, label=<<font color="black">Block[15185]</font>>]
    node15185_name -> node15185 [arrowhead=none, color="black", style=dashed]
    node15185 [shape=box, label=<<font color="black">[0] let fromIndex = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15185 -> node15186 [color="black"]
    node15186_name [shape=none, label=<<font color="black">Call[15186]</font>>]
    node15186_name -> node15186 [arrowhead=none, color="black", style=dashed]
    node15186 [shape=cds, label=<<font color="black">%0 = clo&lt;ToObject&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node15186 -> node15187 [color="black"]
    node15187_name [shape=none, label=<<font color="black">Block[15187]</font>>]
    node15187_name -> node15187 [arrowhead=none, color="black", style=dashed]
    node15187 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15187 -> node15188 [color="black"]
    node15188_name [shape=none, label=<<font color="black">Call[15188]</font>>]
    node15188_name -> node15188 [arrowhead=none, color="black", style=dashed]
    node15188 [shape=cds, label=<<font color="black">%1 = clo&lt;LengthOfArrayLike&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node15188 -> node15189 [color="black"]
    node15189_name [shape=none, label=<<font color="black">Block[15189]</font>>]
    node15189_name -> node15189 [arrowhead=none, color="black", style=dashed]
    node15189 [shape=box, label=<<font color="black">[0] let len = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15189 -> node15190 [color="black"]
    node15190_name [shape=none, label=<<font color="black">Branch[15190]</font>>]
    node15190_name -> node15190 [arrowhead=none, color="black", style=dashed]
    node15190 [shape=diamond, label=<<font color="black">(= len 0)</font>> color="black" fillcolor="white", style=filled]
    node15190 -> node15191 [label=<<font color="black">true</font>> color="black"]
    node15190 -> node15192 [label=<<font color="black">false</font>> color="black"]
    node15191_name [shape=none, label=<<font color="black">Block[15191]</font>>]
    node15191_name -> node15191 [arrowhead=none, color="black", style=dashed]
    node15191 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15191 -> cluster2358_exit [color="black"]
    node15192_name [shape=none, label=<<font color="black">Call[15192]</font>>]
    node15192_name -> node15192 [arrowhead=none, color="black", style=dashed]
    node15192 [shape=cds, label=<<font color="black">%2 = clo&lt;ToIntegerOrInfinity&gt;(fromIndex)</font>> color="black" fillcolor="white", style=filled]
    node15192 -> node15193 [color="black"]
    node15193_name [shape=none, label=<<font color="black">Block[15193]</font>>]
    node15193_name -> node15193 [arrowhead=none, color="black", style=dashed]
    node15193 [shape=box, label=<<font color="black">[0] let n = [? %2]<BR ALIGN="LEFT"/>[1] assert (|| (! (= fromIndex undefined)) (= n 0))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15193 -> node15194 [color="black"]
    node15194_name [shape=none, label=<<font color="black">Branch[15194]</font>>]
    node15194_name -> node15194 [arrowhead=none, color="black", style=dashed]
    node15194 [shape=diamond, label=<<font color="black">(= n +INF)</font>> color="black" fillcolor="white", style=filled]
    node15194 -> node15195 [label=<<font color="black">true</font>> color="black"]
    node15194 -> node15196 [label=<<font color="black">false</font>> color="black"]
    node15195_name [shape=none, label=<<font color="black">Block[15195]</font>>]
    node15195_name -> node15195 [arrowhead=none, color="black", style=dashed]
    node15195 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15195 -> cluster2358_exit [color="black"]
    node15196_name [shape=none, label=<<font color="black">Branch[15196]</font>>]
    node15196_name -> node15196 [arrowhead=none, color="black", style=dashed]
    node15196 [shape=diamond, label=<<font color="black">(= n -INF)</font>> color="black" fillcolor="white", style=filled]
    node15196 -> node15197 [label=<<font color="black">true</font>> color="black"]
    node15196 -> node15198 [label=<<font color="black">false</font>> color="black"]
    node15197_name [shape=none, label=<<font color="black">Block[15197]</font>>]
    node15197_name -> node15197 [arrowhead=none, color="black", style=dashed]
    node15197 [shape=box, label=<<font color="black">[0] n = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15197 -> node15198 [color="black"]
    node15198_name [shape=none, label=<<font color="black">Branch[15198]</font>>]
    node15198_name -> node15198 [arrowhead=none, color="black", style=dashed]
    node15198 [shape=diamond, label=<<font color="black">(! (&lt; n 0))</font>> color="black" fillcolor="white", style=filled]
    node15198 -> node15199 [label=<<font color="black">true</font>> color="black"]
    node15198 -> node15200 [label=<<font color="black">false</font>> color="black"]
    node15199_name [shape=none, label=<<font color="black">Block[15199]</font>>]
    node15199_name -> node15199 [arrowhead=none, color="black", style=dashed]
    node15199 [shape=box, label=<<font color="black">[0] let k = n<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15199 -> node15203 [color="black"]
    node15200_name [shape=none, label=<<font color="black">Block[15200]</font>>]
    node15200_name -> node15200 [arrowhead=none, color="black", style=dashed]
    node15200 [shape=box, label=<<font color="black">[0] let k = (+ len n)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15200 -> node15201 [color="black"]
    node15203_name [shape=none, label=<<font color="black">Branch[15203]</font>>]
    node15203_name -> node15203 [arrowhead=none, color="black", style=dashed]
    node15203 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white", style=filled]
    node15203 -> node15204 [label=<<font color="black">true</font>> color="black"]
    node15203 -> node15211 [label=<<font color="black">false</font>> color="black"]
    node15201_name [shape=none, label=<<font color="black">Branch[15201]</font>>]
    node15201_name -> node15201 [arrowhead=none, color="black", style=dashed]
    node15201 [shape=diamond, label=<<font color="black">(&lt; k 0)</font>> color="black" fillcolor="white", style=filled]
    node15201 -> node15202 [label=<<font color="black">true</font>> color="black"]
    node15201 -> node15203 [label=<<font color="black">false</font>> color="black"]
    node15204_name [shape=none, label=<<font color="black">Call[15204]</font>>]
    node15204_name -> node15204 [arrowhead=none, color="black", style=dashed]
    node15204 [shape=cds, label=<<font color="black">%3 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node15204 -> node15205 [color="black"]
    node15211_name [shape=none, label=<<font color="black">Block[15211]</font>>]
    node15211_name -> node15211 [arrowhead=none, color="black", style=dashed]
    node15211 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15211 -> cluster2358_exit [color="black"]
    node15202_name [shape=none, label=<<font color="black">Block[15202]</font>>]
    node15202_name -> node15202 [arrowhead=none, color="black", style=dashed]
    node15202 [shape=box, label=<<font color="black">[0] k = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15202 -> node15203 [color="black"]
    node15205_name [shape=none, label=<<font color="black">Call[15205]</font>>]
    node15205_name -> node15205 [arrowhead=none, color="black", style=dashed]
    node15205 [shape=cds, label=<<font color="black">%4 = clo&lt;Get&gt;(O, [! %3])</font>> color="black" fillcolor="white", style=filled]
    node15205 -> node15206 [color="black"]
    node15206_name [shape=none, label=<<font color="black">Block[15206]</font>>]
    node15206_name -> node15206 [arrowhead=none, color="black", style=dashed]
    node15206 [shape=box, label=<<font color="black">[0] let elementK = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15206 -> node15207 [color="black"]
    node15207_name [shape=none, label=<<font color="black">Call[15207]</font>>]
    node15207_name -> node15207 [arrowhead=none, color="black", style=dashed]
    node15207 [shape=cds, label=<<font color="black">%5 = clo&lt;SameValueZero&gt;(searchElement, elementK)</font>> color="black" fillcolor="white", style=filled]
    node15207 -> node15208 [color="black"]
    node15208_name [shape=none, label=<<font color="black">Branch[15208]</font>>]
    node15208_name -> node15208 [arrowhead=none, color="black", style=dashed]
    node15208 [shape=diamond, label=<<font color="black">(= %5 true)</font>> color="black" fillcolor="white", style=filled]
    node15208 -> node15209 [label=<<font color="black">true</font>> color="black"]
    node15208 -> node15210 [label=<<font color="black">false</font>> color="black"]
    node15209_name [shape=none, label=<<font color="black">Block[15209]</font>>]
    node15209_name -> node15209 [arrowhead=none, color="black", style=dashed]
    node15209 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15209 -> cluster2358_exit [color="black"]
    node15210_name [shape=none, label=<<font color="black">Block[15210]</font>>]
    node15210_name -> node15210 [arrowhead=none, color="black", style=dashed]
    node15210 [shape=box, label=<<font color="black">[0] k = (+ k 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15210 -> node15203 [color="black"]
  }
}