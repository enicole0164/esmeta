digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster434 {
    label = "def <SYNTAX>:CaseBlock[1,2].VarScopedDeclarations(this: Ast:CaseBlock[1,2]): List[Ast]"
    style = rounded
    cluster434_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster434_entry_name -> cluster434_entry [arrowhead=none, color="black", style=dashed]
    cluster434_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster434_entry -> node2182 [color="black"]
    cluster434_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster434_exit_name -> cluster434_exit [arrowhead=none, color="black", style=dashed]
    cluster434_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2182_name [shape=none, label=<<font color="black">Branch[2182]</font>>]
    node2182_name -> node2182 [arrowhead=none, color="black", style=dashed]
    node2182 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node2182 -> node2183 [label=<<font color="black">true</font>> color="black"]
    node2182 -> node2185 [label=<<font color="black">false</font>> color="black"]
    node2183_name [shape=none, label=<<font color="black">Call[2183]</font>>]
    node2183_name -> node2183 [arrowhead=none, color="black", style=dashed]
    node2183 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2183 -> node2184 [color="black"]
    node2185_name [shape=none, label=<<font color="black">Block[2185]</font>>]
    node2185_name -> node2185 [arrowhead=none, color="black", style=dashed]
    node2185 [shape=box, label=<<font color="black">[0] let declarations1 = (new [])[#256]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2185 -> node2186 [color="black"]
    node2184_name [shape=none, label=<<font color="black">Block[2184]</font>>]
    node2184_name -> node2184 [arrowhead=none, color="black", style=dashed]
    node2184 [shape=box, label=<<font color="black">[0] let declarations1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2184 -> node2186 [color="black"]
    node2186_name [shape=none, label=<<font color="black">Call[2186]</font>>]
    node2186_name -> node2186 [arrowhead=none, color="black", style=dashed]
    node2186 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2186 -> node2187 [color="black"]
    node2187_name [shape=none, label=<<font color="black">Block[2187]</font>>]
    node2187_name -> node2187 [arrowhead=none, color="black", style=dashed]
    node2187 [shape=box, label=<<font color="black">[0] let declarations2 = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2187 -> node2188 [color="black"]
    node2188_name [shape=none, label=<<font color="black">Branch[2188]</font>>]
    node2188_name -> node2188 [arrowhead=none, color="black", style=dashed]
    node2188 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node2188 -> node2189 [label=<<font color="black">true</font>> color="black"]
    node2188 -> node2191 [label=<<font color="black">false</font>> color="black"]
    node2189_name [shape=none, label=<<font color="black">Call[2189]</font>>]
    node2189_name -> node2189 [arrowhead=none, color="black", style=dashed]
    node2189 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2189 -> node2190 [color="black"]
    node2191_name [shape=none, label=<<font color="black">Block[2191]</font>>]
    node2191_name -> node2191 [arrowhead=none, color="black", style=dashed]
    node2191 [shape=box, label=<<font color="black">[0] let declarations3 = (new [])[#257]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2191 -> node2192 [color="black"]
    node2190_name [shape=none, label=<<font color="black">Block[2190]</font>>]
    node2190_name -> node2190 [arrowhead=none, color="black", style=dashed]
    node2190 [shape=box, label=<<font color="black">[0] let declarations3 = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2190 -> node2192 [color="black"]
    node2192_name [shape=none, label=<<font color="black">Block[2192]</font>>]
    node2192_name -> node2192 [arrowhead=none, color="black", style=dashed]
    node2192 [shape=box, label=<<font color="black">[0] return (list-concat declarations1 declarations2 declarations3)[#258]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2192 -> cluster434_exit [color="black"]
  }
}