digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1394 {
    label = "def <SYNTAX>:VariableDeclaration[0,1].Evaluation(this: Ast:VariableDeclaration[0,1]): Unknown"
    style = rounded
    cluster1394_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1394_entry_name -> cluster1394_entry [arrowhead=none, color="black", style=dashed]
    cluster1394_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1394_entry -> node7219 [color="black"]
    cluster1394_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1394_exit_name -> cluster1394_exit [arrowhead=none, color="black", style=dashed]
    cluster1394_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7219_name [shape=none, label=<<font color="black">Call[7219]</font>>]
    node7219_name -> node7219 [arrowhead=none, color="black", style=dashed]
    node7219 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;StringValue()</font>> color="black" fillcolor="white", style=filled]
    node7219 -> node7220 [color="black"]
    node7220_name [shape=none, label=<<font color="black">Block[7220]</font>>]
    node7220_name -> node7220 [arrowhead=none, color="black", style=dashed]
    node7220 [shape=box, label=<<font color="black">[0] let bindingId = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7220 -> node7221 [color="black"]
    node7221_name [shape=none, label=<<font color="black">Call[7221]</font>>]
    node7221_name -> node7221 [arrowhead=none, color="black", style=dashed]
    node7221 [shape=cds, label=<<font color="black">%1 = clo&lt;ResolveBinding&gt;(bindingId)</font>> color="black" fillcolor="white", style=filled]
    node7221 -> node7222 [color="black"]
    node7222_name [shape=none, label=<<font color="black">Block[7222]</font>>]
    node7222_name -> node7222 [arrowhead=none, color="black", style=dashed]
    node7222 [shape=box, label=<<font color="black">[0] let lhs = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7222 -> node7223 [color="black"]
    node7223_name [shape=none, label=<<font color="black">Call[7223]</font>>]
    node7223_name -> node7223 [arrowhead=none, color="black", style=dashed]
    node7223 [shape=cds, label=<<font color="black">%2 = clo&lt;IsAnonymousFunctionDefinition&gt;(this[1])</font>> color="black" fillcolor="white", style=filled]
    node7223 -> node7224 [color="black"]
    node7224_name [shape=none, label=<<font color="black">Branch[7224]</font>>]
    node7224_name -> node7224 [arrowhead=none, color="black", style=dashed]
    node7224 [shape=diamond, label=<<font color="black">(= %2 true)</font>> color="black" fillcolor="white", style=filled]
    node7224 -> node7225 [label=<<font color="black">true</font>> color="black"]
    node7224 -> node7227 [label=<<font color="black">false</font>> color="black"]
    node7225_name [shape=none, label=<<font color="black">Call[7225]</font>>]
    node7225_name -> node7225 [arrowhead=none, color="black", style=dashed]
    node7225 [shape=cds, label=<<font color="black">%3 = this[1]-&gt;NamedEvaluation(bindingId)</font>> color="black" fillcolor="white", style=filled]
    node7225 -> node7226 [color="black"]
    node7227_name [shape=none, label=<<font color="black">Call[7227]</font>>]
    node7227_name -> node7227 [arrowhead=none, color="black", style=dashed]
    node7227 [shape=cds, label=<<font color="black">%4 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7227 -> node7228 [color="black"]
    node7226_name [shape=none, label=<<font color="black">Block[7226]</font>>]
    node7226_name -> node7226 [arrowhead=none, color="black", style=dashed]
    node7226 [shape=box, label=<<font color="black">[0] let value = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7226 -> node7231 [color="black"]
    node7228_name [shape=none, label=<<font color="black">Block[7228]</font>>]
    node7228_name -> node7228 [arrowhead=none, color="black", style=dashed]
    node7228 [shape=box, label=<<font color="black">[0] let rhs = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7228 -> node7229 [color="black"]
    node7231_name [shape=none, label=<<font color="black">Call[7231]</font>>]
    node7231_name -> node7231 [arrowhead=none, color="black", style=dashed]
    node7231 [shape=cds, label=<<font color="black">%6 = clo&lt;PutValue&gt;(lhs, value)</font>> color="black" fillcolor="white", style=filled]
    node7231 -> node7232 [color="black"]
    node7229_name [shape=none, label=<<font color="black">Call[7229]</font>>]
    node7229_name -> node7229 [arrowhead=none, color="black", style=dashed]
    node7229 [shape=cds, label=<<font color="black">%5 = clo&lt;GetValue&gt;(rhs)</font>> color="black" fillcolor="white", style=filled]
    node7229 -> node7230 [color="black"]
    node7232_name [shape=none, label=<<font color="black">Block[7232]</font>>]
    node7232_name -> node7232 [arrowhead=none, color="black", style=dashed]
    node7232 [shape=box, label=<<font color="black">[0] [? %6]<BR ALIGN="LEFT"/>[1] return ~empty~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7232 -> cluster1394_exit [color="black"]
    node7230_name [shape=none, label=<<font color="black">Block[7230]</font>>]
    node7230_name -> node7230 [arrowhead=none, color="black", style=dashed]
    node7230 [shape=box, label=<<font color="black">[0] let value = [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7230 -> node7231 [color="black"]
  }
}