digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2520 {
    label = "def ValidateIntegerTypedArray(typedArray: Unknown, waitable?: Boolean): Unknown["EitherANormalCompletionContainingEitherAnArrayBufferOrASharedArrayBuffer,OrAnAbruptCompletion"]"
    style = rounded
    cluster2520_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2520_entry_name -> cluster2520_entry [arrowhead=none, color="black", style=dashed]
    cluster2520_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2520_entry -> node17930 [color="black"]
    cluster2520_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2520_exit_name -> cluster2520_exit [arrowhead=none, color="black", style=dashed]
    cluster2520_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17930_name [shape=none, label=<<font color="black">Branch[17930]</font>>]
    node17930_name -> node17930 [arrowhead=none, color="black", style=dashed]
    node17930 [shape=diamond, label=<<font color="black">(= waitable absent)</font>> color="black" fillcolor="white", style=filled]
    node17930 -> node17931 [label=<<font color="black">true</font>> color="black"]
    node17930 -> node17932 [label=<<font color="black">false</font>> color="black"]
    node17931_name [shape=none, label=<<font color="black">Block[17931]</font>>]
    node17931_name -> node17931 [arrowhead=none, color="black", style=dashed]
    node17931 [shape=box, label=<<font color="black">[0] waitable = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17931 -> node17932 [color="black"]
    node17932_name [shape=none, label=<<font color="black">Call[17932]</font>>]
    node17932_name -> node17932 [arrowhead=none, color="black", style=dashed]
    node17932 [shape=cds, label=<<font color="black">%0 = clo&lt;ValidateTypedArray&gt;(typedArray)</font>> color="black" fillcolor="white", style=filled]
    node17932 -> node17933 [color="black"]
    node17933_name [shape=none, label=<<font color="black">Block[17933]</font>>]
    node17933_name -> node17933 [arrowhead=none, color="black", style=dashed]
    node17933 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/>[1] let buffer = typedArray.ViewedArrayBuffer<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17933 -> node17934 [color="black"]
    node17934_name [shape=none, label=<<font color="black">Branch[17934]</font>>]
    node17934_name -> node17934 [arrowhead=none, color="black", style=dashed]
    node17934 [shape=diamond, label=<<font color="black">(= waitable true)</font>> color="black" fillcolor="white", style=filled]
    node17934 -> node17935 [label=<<font color="black">true</font>> color="black"]
    node17934 -> node17937 [label=<<font color="black">false</font>> color="black"]
    node17935_name [shape=none, label=<<font color="black">Branch[17935]</font>>]
    node17935_name -> node17935 [arrowhead=none, color="black", style=dashed]
    node17935 [shape=diamond, label=<<font color="black">(! (|| (= typedArray.TypedArrayName &quot;Int32Array&quot;) (= typedArray.TypedArrayName &quot;BigInt64Array&quot;)))</font>> color="black" fillcolor="white", style=filled]
    node17935 -> node17936 [label=<<font color="black">true</font>> color="black"]
    node17935 -> node17946 [label=<<font color="black">false</font>> color="black"]
    node17937_name [shape=none, label=<<font color="black">Call[17937]</font>>]
    node17937_name -> node17937 [arrowhead=none, color="black", style=dashed]
    node17937 [shape=cds, label=<<font color="black">%1 = clo&lt;TypedArrayElementType&gt;(typedArray)</font>> color="black" fillcolor="white", style=filled]
    node17937 -> node17938 [color="black"]
    node17936_name [shape=none, label=<<font color="black">Block[17936]</font>>]
    node17936_name -> node17936 [arrowhead=none, color="black", style=dashed]
    node17936 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1179])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17936 -> cluster2520_exit [color="black"]
    node17946_name [shape=none, label=<<font color="black">Block[17946]</font>>]
    node17946_name -> node17946 [arrowhead=none, color="black", style=dashed]
    node17946 [shape=box, label=<<font color="black">[0] return buffer<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17946 -> cluster2520_exit [color="black"]
    node17938_name [shape=none, label=<<font color="black">Block[17938]</font>>]
    node17938_name -> node17938 [arrowhead=none, color="black", style=dashed]
    node17938 [shape=box, label=<<font color="black">[0] let type = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17938 -> node17939 [color="black"]
    node17939_name [shape=none, label=<<font color="black">Call[17939]</font>>]
    node17939_name -> node17939 [arrowhead=none, color="black", style=dashed]
    node17939 [shape=cds, label=<<font color="black">%3 = clo&lt;IsUnclampedIntegerElementType&gt;(type)</font>> color="black" fillcolor="white", style=filled]
    node17939 -> node17940 [color="black"]
    node17940_name [shape=none, label=<<font color="black">Block[17940]</font>>]
    node17940_name -> node17940 [arrowhead=none, color="black", style=dashed]
    node17940 [shape=box, label=<<font color="black">[0] %2 = (= %3 false)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17940 -> node17941 [color="black"]
    node17941_name [shape=none, label=<<font color="black">Branch[17941]</font>>]
    node17941_name -> node17941 [arrowhead=none, color="black", style=dashed]
    node17941 [shape=diamond, label=<<font color="black">%2</font>> color="black" fillcolor="white", style=filled]
    node17941 -> node17942 [label=<<font color="black">true</font>> color="black"]
    node17941 -> node17944 [label=<<font color="black">false</font>> color="black"]
    node17942_name [shape=none, label=<<font color="black">Call[17942]</font>>]
    node17942_name -> node17942 [arrowhead=none, color="black", style=dashed]
    node17942 [shape=cds, label=<<font color="black">%4 = clo&lt;IsBigIntElementType&gt;(type)</font>> color="black" fillcolor="white", style=filled]
    node17942 -> node17943 [color="black"]
    node17944_name [shape=none, label=<<font color="black">Branch[17944]</font>>]
    node17944_name -> node17944 [arrowhead=none, color="black", style=dashed]
    node17944 [shape=diamond, label=<<font color="black">%2</font>> color="black" fillcolor="white", style=filled]
    node17944 -> node17945 [label=<<font color="black">true</font>> color="black"]
    node17944 -> node17946 [label=<<font color="black">false</font>> color="black"]
    node17943_name [shape=none, label=<<font color="black">Block[17943]</font>>]
    node17943_name -> node17943 [arrowhead=none, color="black", style=dashed]
    node17943 [shape=box, label=<<font color="black">[0] %2 = (= %4 false)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17943 -> node17944 [color="black"]
    node17945_name [shape=none, label=<<font color="black">Block[17945]</font>>]
    node17945_name -> node17945 [arrowhead=none, color="black", style=dashed]
    node17945 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1180])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17945 -> cluster2520_exit [color="black"]
  }
}