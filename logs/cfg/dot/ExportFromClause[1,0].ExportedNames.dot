digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1942 {
    label = "def <SYNTAX>:ExportFromClause[1,0].ExportedNames(this: Ast:ExportFromClause[1,0]): List[String]"
    style = rounded
    cluster1942_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1942_entry_name -> cluster1942_entry [arrowhead=none, color="black", style=dashed]
    cluster1942_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1942_entry -> node10602 [color="black"]
    cluster1942_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1942_exit_name -> cluster1942_exit [arrowhead=none, color="black", style=dashed]
    cluster1942_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node10602_name [shape=none, label=<<font color="black">Call[10602]</font>>]
    node10602_name -> node10602 [arrowhead=none, color="black", style=dashed]
    node10602 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;StringValue()</font>> color="black" fillcolor="white", style=filled]
    node10602 -> node10603 [color="black"]
    node10603_name [shape=none, label=<<font color="black">Block[10603]</font>>]
    node10603_name -> node10603 [arrowhead=none, color="black", style=dashed]
    node10603 [shape=box, label=<<font color="black">[0] return (new [%0])[#832]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10603 -> cluster1942_exit [color="black"]
  }
}