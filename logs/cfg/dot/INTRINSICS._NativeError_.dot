digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2055 {
    label = "def <BUILTIN>:INTRINSICS._NativeError_(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2055_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2055_entry_name -> cluster2055_entry [arrowhead=none, color="black", style=dashed]
    cluster2055_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2055_entry -> node11728 [color="black"]
    cluster2055_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2055_exit_name -> cluster2055_exit [arrowhead=none, color="black", style=dashed]
    cluster2055_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11728_name [shape=none, label=<<font color="black">Branch[11728]</font>>]
    node11728_name -> node11728 [arrowhead=none, color="black", style=dashed]
    node11728 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11728 -> node11729 [label=<<font color="black">true</font>> color="black"]
    node11728 -> node11730 [label=<<font color="black">false</font>> color="black"]
    node11729_name [shape=none, label=<<font color="black">Block[11729]</font>>]
    node11729_name -> node11729 [arrowhead=none, color="black", style=dashed]
    node11729 [shape=box, label=<<font color="black">[0] let message = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11729 -> node11731 [color="black"]
    node11730_name [shape=none, label=<<font color="black">Block[11730]</font>>]
    node11730_name -> node11730 [arrowhead=none, color="black", style=dashed]
    node11730 [shape=box, label=<<font color="black">[0] let message = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11730 -> node11731 [color="black"]
    node11731_name [shape=none, label=<<font color="black">Branch[11731]</font>>]
    node11731_name -> node11731 [arrowhead=none, color="black", style=dashed]
    node11731 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11731 -> node11732 [label=<<font color="black">true</font>> color="black"]
    node11731 -> node11733 [label=<<font color="black">false</font>> color="black"]
    node11732_name [shape=none, label=<<font color="black">Block[11732]</font>>]
    node11732_name -> node11732 [arrowhead=none, color="black", style=dashed]
    node11732 [shape=box, label=<<font color="black">[0] let options = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11732 -> node11734 [color="black"]
    node11733_name [shape=none, label=<<font color="black">Block[11733]</font>>]
    node11733_name -> node11733 [arrowhead=none, color="black", style=dashed]
    node11733 [shape=box, label=<<font color="black">[0] let options = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11733 -> node11734 [color="black"]
    node11734_name [shape=none, label=<<font color="black">Branch[11734]</font>>]
    node11734_name -> node11734 [arrowhead=none, color="black", style=dashed]
    node11734 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white", style=filled]
    node11734 -> node11735 [label=<<font color="black">true</font>> color="black"]
    node11734 -> node11736 [label=<<font color="black">false</font>> color="black"]
    node11735_name [shape=none, label=<<font color="black">Block[11735]</font>>]
    node11735_name -> node11735 [arrowhead=none, color="black", style=dashed]
    node11735 [shape=box, label=<<font color="black">[0] let newTarget = @EXECUTION_STACK[0].Function<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11735 -> node11737 [color="black"]
    node11736_name [shape=none, label=<<font color="black">Block[11736]</font>>]
    node11736_name -> node11736 [arrowhead=none, color="black", style=dashed]
    node11736 [shape=box, label=<<font color="black">[0] let newTarget = NewTarget<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11736 -> node11737 [color="black"]
    node11737_name [shape=none, label=<<font color="black">Block[11737]</font>>]
    node11737_name -> node11737 [arrowhead=none, color="black", style=dashed]
    node11737 [shape=box, label=<<font color="black">[0] (yet &quot;Let _O_ be ? OrdinaryCreateFromConstructor(_newTarget_, &lt;code&gt;\&quot;%&lt;var&gt;NativeError&lt;/var&gt;.prototype%\&quot;&lt;/code&gt;, &laquo; [[ErrorData]] &raquo;).&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11737 -> node11738 [color="black"]
    node11738_name [shape=none, label=<<font color="black">Branch[11738]</font>>]
    node11738_name -> node11738 [arrowhead=none, color="black", style=dashed]
    node11738 [shape=diamond, label=<<font color="black">(! (= message undefined))</font>> color="black" fillcolor="white", style=filled]
    node11738 -> node11739 [label=<<font color="black">true</font>> color="black"]
    node11738 -> node11742 [label=<<font color="black">false</font>> color="black"]
    node11739_name [shape=none, label=<<font color="black">Call[11739]</font>>]
    node11739_name -> node11739 [arrowhead=none, color="black", style=dashed]
    node11739 [shape=cds, label=<<font color="black">%0 = clo&lt;ToString&gt;(message)</font>> color="black" fillcolor="white", style=filled]
    node11739 -> node11740 [color="black"]
    node11742_name [shape=none, label=<<font color="black">Call[11742]</font>>]
    node11742_name -> node11742 [arrowhead=none, color="black", style=dashed]
    node11742 [shape=cds, label=<<font color="black">%2 = clo&lt;InstallErrorCause&gt;(O, options)</font>> color="black" fillcolor="white", style=filled]
    node11742 -> node11743 [color="black"]
    node11740_name [shape=none, label=<<font color="black">Block[11740]</font>>]
    node11740_name -> node11740 [arrowhead=none, color="black", style=dashed]
    node11740 [shape=box, label=<<font color="black">[0] let msg = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11740 -> node11741 [color="black"]
    node11743_name [shape=none, label=<<font color="black">Block[11743]</font>>]
    node11743_name -> node11743 [arrowhead=none, color="black", style=dashed]
    node11743 [shape=box, label=<<font color="black">[0] [? %2]<BR ALIGN="LEFT"/>[1] return O<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11743 -> cluster2055_exit [color="black"]
    node11741_name [shape=none, label=<<font color="black">Call[11741]</font>>]
    node11741_name -> node11741 [arrowhead=none, color="black", style=dashed]
    node11741 [shape=cds, label=<<font color="black">%1 = clo&lt;CreateNonEnumerableDataPropertyOrThrow&gt;(O, &quot;message&quot;, msg)</font>> color="black" fillcolor="white", style=filled]
    node11741 -> node11742 [color="black"]
  }
}