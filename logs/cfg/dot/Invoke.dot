digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster149 {
    label = "def Invoke(V: ESValue, P: Symbol | String, argumentsList?: List[ESValue]): Normal[ESValue] | Abrupt"
    style = rounded
    cluster149_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster149_entry_name -> cluster149_entry [arrowhead=none, color="black", style=dashed]
    cluster149_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster149_entry -> node1232 [color="black"]
    cluster149_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster149_exit_name -> cluster149_exit [arrowhead=none, color="black", style=dashed]
    cluster149_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1232_name [shape=none, label=<<font color="black">Branch[1232]</font>>]
    node1232_name -> node1232 [arrowhead=none, color="black", style=dashed]
    node1232 [shape=diamond, label=<<font color="black">(= argumentsList absent)</font>> color="black" fillcolor="white", style=filled]
    node1232 -> node1233 [label=<<font color="black">true</font>> color="black"]
    node1232 -> node1234 [label=<<font color="black">false</font>> color="black"]
    node1233_name [shape=none, label=<<font color="black">Block[1233]</font>>]
    node1233_name -> node1233 [arrowhead=none, color="black", style=dashed]
    node1233 [shape=box, label=<<font color="black">[0] argumentsList = (new [])[#58]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1233 -> node1234 [color="black"]
    node1234_name [shape=none, label=<<font color="black">Call[1234]</font>>]
    node1234_name -> node1234 [arrowhead=none, color="black", style=dashed]
    node1234 [shape=cds, label=<<font color="black">%0 = clo&lt;GetV&gt;(V, P)</font>> color="black" fillcolor="white", style=filled]
    node1234 -> node1235 [color="black"]
    node1235_name [shape=none, label=<<font color="black">Block[1235]</font>>]
    node1235_name -> node1235 [arrowhead=none, color="black", style=dashed]
    node1235 [shape=box, label=<<font color="black">[0] let func = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1235 -> node1236 [color="black"]
    node1236_name [shape=none, label=<<font color="black">Call[1236]</font>>]
    node1236_name -> node1236 [arrowhead=none, color="black", style=dashed]
    node1236 [shape=cds, label=<<font color="black">%1 = clo&lt;Call&gt;(func, V, argumentsList)</font>> color="black" fillcolor="white", style=filled]
    node1236 -> node1237 [color="black"]
    node1237_name [shape=none, label=<<font color="black">Block[1237]</font>>]
    node1237_name -> node1237 [arrowhead=none, color="black", style=dashed]
    node1237 [shape=box, label=<<font color="black">[0] return [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1237 -> cluster149_exit [color="black"]
  }
}