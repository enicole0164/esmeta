digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster98 {
    label = "def ToIntegerOrInfinity(argument: ESValue): Unknown["EitherANormalCompletionContainingEitherAnInteger,+∞,Or∞,OrAnAbruptCompletion"]"
    style = rounded
    cluster98_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster98_entry_name -> cluster98_entry [arrowhead=none, color="black", style=dashed]
    cluster98_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster98_entry -> node730 [color="black"]
    cluster98_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster98_exit_name -> cluster98_exit [arrowhead=none, color="black", style=dashed]
    cluster98_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node730_name [shape=none, label=<<font color="black">Call[730]</font>>]
    node730_name -> node730 [arrowhead=none, color="black", style=dashed]
    node730 [shape=cds, label=<<font color="black">%0 = clo&lt;ToNumber&gt;(argument)</font>> color="black" fillcolor="white", style=filled]
    node730 -> node731 [color="black"]
    node731_name [shape=none, label=<<font color="black">Block[731]</font>>]
    node731_name -> node731 [arrowhead=none, color="black", style=dashed]
    node731 [shape=box, label=<<font color="black">[0] let number = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node731 -> node732 [color="black"]
    node732_name [shape=none, label=<<font color="black">Branch[732]</font>>]
    node732_name -> node732 [arrowhead=none, color="black", style=dashed]
    node732 [shape=diamond, label=<<font color="black">(|| (|| (= number NaN) (= number 0.0f)) (= number -0.0f))</font>> color="black" fillcolor="white", style=filled]
    node732 -> node733 [label=<<font color="black">true</font>> color="black"]
    node732 -> node734 [label=<<font color="black">false</font>> color="black"]
    node733_name [shape=none, label=<<font color="black">Block[733]</font>>]
    node733_name -> node733 [arrowhead=none, color="black", style=dashed]
    node733 [shape=box, label=<<font color="black">[0] return 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node733 -> cluster98_exit [color="black"]
    node734_name [shape=none, label=<<font color="black">Branch[734]</font>>]
    node734_name -> node734 [arrowhead=none, color="black", style=dashed]
    node734 [shape=diamond, label=<<font color="black">(= number +INF)</font>> color="black" fillcolor="white", style=filled]
    node734 -> node735 [label=<<font color="black">true</font>> color="black"]
    node734 -> node736 [label=<<font color="black">false</font>> color="black"]
    node735_name [shape=none, label=<<font color="black">Block[735]</font>>]
    node735_name -> node735 [arrowhead=none, color="black", style=dashed]
    node735 [shape=box, label=<<font color="black">[0] return +INF<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node735 -> cluster98_exit [color="black"]
    node736_name [shape=none, label=<<font color="black">Branch[736]</font>>]
    node736_name -> node736 [arrowhead=none, color="black", style=dashed]
    node736 [shape=diamond, label=<<font color="black">(= number -INF)</font>> color="black" fillcolor="white", style=filled]
    node736 -> node737 [label=<<font color="black">true</font>> color="black"]
    node736 -> node738 [label=<<font color="black">false</font>> color="black"]
    node737_name [shape=none, label=<<font color="black">Block[737]</font>>]
    node737_name -> node737 [arrowhead=none, color="black", style=dashed]
    node737 [shape=box, label=<<font color="black">[0] return -INF<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node737 -> cluster98_exit [color="black"]
    node738_name [shape=none, label=<<font color="black">Block[738]</font>>]
    node738_name -> node738 [arrowhead=none, color="black", style=dashed]
    node738 [shape=box, label=<<font color="black">[0] let integer = (floor (abs ([math] number)))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node738 -> node739 [color="black"]
    node739_name [shape=none, label=<<font color="black">Branch[739]</font>>]
    node739_name -> node739 [arrowhead=none, color="black", style=dashed]
    node739 [shape=diamond, label=<<font color="black">(&lt; number -0.0f)</font>> color="black" fillcolor="white", style=filled]
    node739 -> node740 [label=<<font color="black">true</font>> color="black"]
    node739 -> node741 [label=<<font color="black">false</font>> color="black"]
    node740_name [shape=none, label=<<font color="black">Block[740]</font>>]
    node740_name -> node740 [arrowhead=none, color="black", style=dashed]
    node740 [shape=box, label=<<font color="black">[0] integer = (- integer)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node740 -> node741 [color="black"]
    node741_name [shape=none, label=<<font color="black">Block[741]</font>>]
    node741_name -> node741 [arrowhead=none, color="black", style=dashed]
    node741 [shape=box, label=<<font color="black">[0] return integer<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node741 -> cluster98_exit [color="black"]
  }
}