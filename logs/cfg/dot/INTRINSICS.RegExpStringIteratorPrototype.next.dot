digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2338 {
    label = "def <BUILTIN>:INTRINSICS.RegExpStringIteratorPrototype.next(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2338_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2338_entry_name -> cluster2338_entry [arrowhead=none, color="black", style=dashed]
    cluster2338_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2338_entry -> node14677 [color="black"]
    cluster2338_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2338_exit_name -> cluster2338_exit [arrowhead=none, color="black", style=dashed]
    cluster2338_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node14677_name [shape=none, label=<<font color="black">Call[14677]</font>>]
    node14677_name -> node14677 [arrowhead=none, color="black", style=dashed]
    node14677 [shape=cds, label=<<font color="black">%0 = clo&lt;GeneratorResume&gt;(this, ~empty~, &quot;%RegExpStringIteratorPrototype%&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14677 -> node14678 [color="black"]
    node14678_name [shape=none, label=<<font color="black">Block[14678]</font>>]
    node14678_name -> node14678 [arrowhead=none, color="black", style=dashed]
    node14678 [shape=box, label=<<font color="black">[0] return [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14678 -> cluster2338_exit [color="black"]
  }
}