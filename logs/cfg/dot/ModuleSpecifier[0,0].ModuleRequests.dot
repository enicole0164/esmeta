digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1877 {
    label = "def <SYNTAX>:ModuleSpecifier[0,0].ModuleRequests(this: Ast:ModuleSpecifier[0,0]): List[String]"
    style = rounded
    cluster1877_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1877_entry_name -> cluster1877_entry [arrowhead=none, color="black", style=dashed]
    cluster1877_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1877_entry -> node10089 [color="black"]
    cluster1877_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1877_exit_name -> cluster1877_exit [arrowhead=none, color="black", style=dashed]
    cluster1877_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node10089_name [shape=none, label=<<font color="black">Call[10089]</font>>]
    node10089_name -> node10089 [arrowhead=none, color="black", style=dashed]
    node10089 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;SV()</font>> color="black" fillcolor="white", style=filled]
    node10089 -> node10090 [color="black"]
    node10090_name [shape=none, label=<<font color="black">Block[10090]</font>>]
    node10090_name -> node10090 [arrowhead=none, color="black", style=dashed]
    node10090 [shape=box, label=<<font color="black">[0] return (new [%0])[#762]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10090 -> cluster1877_exit [color="black"]
  }
}