digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2676 {
    label = "def <BUILTIN>:INTRINSICS.ReferenceError(this: Unknown, argumentsList: Unknown, NewTarget: Unknown): Unknown"
    style = rounded
    cluster2676_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2676_entry_name -> cluster2676_entry [arrowhead=none, color="black", style=dashed]
    cluster2676_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2676_entry -> node19898 [color="black"]
    cluster2676_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2676_exit_name -> cluster2676_exit [arrowhead=none, color="black", style=dashed]
    cluster2676_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node19898_name [shape=none, label=<<font color="black">Branch[19898]</font>>]
    node19898_name -> node19898 [arrowhead=none, color="black", style=dashed]
    node19898 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node19898 -> node19899 [label=<<font color="black">true</font>> color="black"]
    node19898 -> node19900 [label=<<font color="black">false</font>> color="black"]
    node19899_name [shape=none, label=<<font color="black">Block[19899]</font>>]
    node19899_name -> node19899 [arrowhead=none, color="black", style=dashed]
    node19899 [shape=box, label=<<font color="black">[0] let message = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19899 -> node19901 [color="black"]
    node19900_name [shape=none, label=<<font color="black">Block[19900]</font>>]
    node19900_name -> node19900 [arrowhead=none, color="black", style=dashed]
    node19900 [shape=box, label=<<font color="black">[0] let message = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19900 -> node19901 [color="black"]
    node19901_name [shape=none, label=<<font color="black">Branch[19901]</font>>]
    node19901_name -> node19901 [arrowhead=none, color="black", style=dashed]
    node19901 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node19901 -> node19902 [label=<<font color="black">true</font>> color="black"]
    node19901 -> node19903 [label=<<font color="black">false</font>> color="black"]
    node19902_name [shape=none, label=<<font color="black">Block[19902]</font>>]
    node19902_name -> node19902 [arrowhead=none, color="black", style=dashed]
    node19902 [shape=box, label=<<font color="black">[0] let options = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19902 -> node19904 [color="black"]
    node19903_name [shape=none, label=<<font color="black">Block[19903]</font>>]
    node19903_name -> node19903 [arrowhead=none, color="black", style=dashed]
    node19903 [shape=box, label=<<font color="black">[0] let options = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19903 -> node19904 [color="black"]
    node19904_name [shape=none, label=<<font color="black">Block[19904]</font>>]
    node19904_name -> node19904 [arrowhead=none, color="black", style=dashed]
    node19904 [shape=box, label=<<font color="black">[0] %0 = (= NewTarget undefined)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19904 -> node19905 [color="black"]
    node19905_name [shape=none, label=<<font color="black">Branch[19905]</font>>]
    node19905_name -> node19905 [arrowhead=none, color="black", style=dashed]
    node19905 [shape=diamond, label=<<font color="black">%0</font>> color="black" fillcolor="white", style=filled]
    node19905 -> node19906 [label=<<font color="black">true</font>> color="black"]
    node19905 -> node19907 [label=<<font color="black">false</font>> color="black"]
    node19906_name [shape=none, label=<<font color="black">Block[19906]</font>>]
    node19906_name -> node19906 [arrowhead=none, color="black", style=dashed]
    node19906 [shape=box, label=<<font color="black">[0] let newTarget = @EXECUTION_STACK[0].Function<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19906 -> node19908 [color="black"]
    node19907_name [shape=none, label=<<font color="black">Block[19907]</font>>]
    node19907_name -> node19907 [arrowhead=none, color="black", style=dashed]
    node19907 [shape=box, label=<<font color="black">[0] let newTarget = NewTarget<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19907 -> node19908 [color="black"]
    node19908_name [shape=none, label=<<font color="black">Call[19908]</font>>]
    node19908_name -> node19908 [arrowhead=none, color="black", style=dashed]
    node19908 [shape=cds, label=<<font color="black">%1 = clo&lt;OrdinaryCreateFromConstructor&gt;(newTarget, &quot;%ReferenceError.prototype%&quot;, (new [&quot;ErrorData&quot;])[#1365])</font>> color="black" fillcolor="white", style=filled]
    node19908 -> node19909 [color="black"]
    node19909_name [shape=none, label=<<font color="black">Block[19909]</font>>]
    node19909_name -> node19909 [arrowhead=none, color="black", style=dashed]
    node19909 [shape=box, label=<<font color="black">[0] let O = [? %1]<BR ALIGN="LEFT"/>[1] %2 = (! (= message undefined))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19909 -> node19910 [color="black"]
    node19910_name [shape=none, label=<<font color="black">Branch[19910]</font>>]
    node19910_name -> node19910 [arrowhead=none, color="black", style=dashed]
    node19910 [shape=diamond, label=<<font color="black">%2</font>> color="black" fillcolor="white", style=filled]
    node19910 -> node19911 [label=<<font color="black">true</font>> color="black"]
    node19910 -> node19915 [label=<<font color="black">false</font>> color="black"]
    node19911_name [shape=none, label=<<font color="black">Call[19911]</font>>]
    node19911_name -> node19911 [arrowhead=none, color="black", style=dashed]
    node19911 [shape=cds, label=<<font color="black">%3 = clo&lt;ToString&gt;(message)</font>> color="black" fillcolor="white", style=filled]
    node19911 -> node19912 [color="black"]
    node19915_name [shape=none, label=<<font color="black">Call[19915]</font>>]
    node19915_name -> node19915 [arrowhead=none, color="black", style=dashed]
    node19915 [shape=cds, label=<<font color="black">%5 = clo&lt;InstallErrorCause&gt;(O, options)</font>> color="black" fillcolor="white", style=filled]
    node19915 -> node19916 [color="black"]
    node19912_name [shape=none, label=<<font color="black">Block[19912]</font>>]
    node19912_name -> node19912 [arrowhead=none, color="black", style=dashed]
    node19912 [shape=box, label=<<font color="black">[0] let msg = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19912 -> node19913 [color="black"]
    node19916_name [shape=none, label=<<font color="black">Block[19916]</font>>]
    node19916_name -> node19916 [arrowhead=none, color="black", style=dashed]
    node19916 [shape=box, label=<<font color="black">[0] [? %5]<BR ALIGN="LEFT"/>[1] return O<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19916 -> cluster2676_exit [color="black"]
    node19913_name [shape=none, label=<<font color="black">Call[19913]</font>>]
    node19913_name -> node19913 [arrowhead=none, color="black", style=dashed]
    node19913 [shape=cds, label=<<font color="black">%4 = clo&lt;CreateNonEnumerableDataPropertyOrThrow&gt;(O, &quot;message&quot;, msg)</font>> color="black" fillcolor="white", style=filled]
    node19913 -> node19914 [color="black"]
    node19914_name [shape=none, label=<<font color="black">Block[19914]</font>>]
    node19914_name -> node19914 [arrowhead=none, color="black", style=dashed]
    node19914 [shape=box, label=<<font color="black">[0] [! %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19914 -> node19915 [color="black"]
  }
}