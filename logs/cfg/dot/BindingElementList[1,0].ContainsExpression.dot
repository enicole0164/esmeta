digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1522 {
    label = "def <SYNTAX>:BindingElementList[1,0].ContainsExpression(this: Ast:BindingElementList[1,0]): Boolean"
    style = rounded
    cluster1522_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1522_entry_name -> cluster1522_entry [arrowhead=none, color="black", style=dashed]
    cluster1522_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1522_entry -> node8311 [color="black"]
    cluster1522_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1522_exit_name -> cluster1522_exit [arrowhead=none, color="black", style=dashed]
    cluster1522_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8311_name [shape=none, label=<<font color="black">Call[8311]</font>>]
    node8311_name -> node8311 [arrowhead=none, color="black", style=dashed]
    node8311 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;ContainsExpression()</font>> color="black" fillcolor="white", style=filled]
    node8311 -> node8312 [color="black"]
    node8312_name [shape=none, label=<<font color="black">Block[8312]</font>>]
    node8312_name -> node8312 [arrowhead=none, color="black", style=dashed]
    node8312 [shape=box, label=<<font color="black">[0] let has = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8312 -> node8313 [color="black"]
    node8313_name [shape=none, label=<<font color="black">Branch[8313]</font>>]
    node8313_name -> node8313 [arrowhead=none, color="black", style=dashed]
    node8313 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white", style=filled]
    node8313 -> node8314 [label=<<font color="black">true</font>> color="black"]
    node8313 -> node8315 [label=<<font color="black">false</font>> color="black"]
    node8314_name [shape=none, label=<<font color="black">Block[8314]</font>>]
    node8314_name -> node8314 [arrowhead=none, color="black", style=dashed]
    node8314 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8314 -> cluster1522_exit [color="black"]
    node8315_name [shape=none, label=<<font color="black">Call[8315]</font>>]
    node8315_name -> node8315 [arrowhead=none, color="black", style=dashed]
    node8315 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;ContainsExpression()</font>> color="black" fillcolor="white", style=filled]
    node8315 -> node8316 [color="black"]
    node8316_name [shape=none, label=<<font color="black">Block[8316]</font>>]
    node8316_name -> node8316 [arrowhead=none, color="black", style=dashed]
    node8316 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8316 -> cluster1522_exit [color="black"]
  }
}