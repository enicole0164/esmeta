digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1557 {
    label = "def <SYNTAX>:FormalParameters[4,0].ExpectedArgumentCount(this: Ast:FormalParameters[4,0]): Unknown["Integer"]"
    style = rounded
    cluster1557_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1557_entry_name -> cluster1557_entry [arrowhead=none, color="black", style=dashed]
    cluster1557_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1557_entry -> node8382 [color="black"]
    cluster1557_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1557_exit_name -> cluster1557_exit [arrowhead=none, color="black", style=dashed]
    cluster1557_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8382_name [shape=none, label=<<font color="black">Call[8382]</font>>]
    node8382_name -> node8382 [arrowhead=none, color="black", style=dashed]
    node8382 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;ExpectedArgumentCount()</font>> color="black" fillcolor="white", style=filled]
    node8382 -> node8383 [color="black"]
    node8383_name [shape=none, label=<<font color="black">Block[8383]</font>>]
    node8383_name -> node8383 [arrowhead=none, color="black", style=dashed]
    node8383 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8383 -> cluster1557_exit [color="black"]
  }
}