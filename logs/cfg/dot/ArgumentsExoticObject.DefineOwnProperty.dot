digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1115 {
    label = "def <INTERNAL>:ArgumentsExoticObject.DefineOwnProperty(args: ArgumentsExoticObject, P: Symbol | String, Desc: PropertyDescriptor): Normal[Boolean]"
    style = rounded
    cluster1115_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1115_entry_name -> cluster1115_entry [arrowhead=none, color="black", style=dashed]
    cluster1115_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1115_entry -> node4697 [color="black"]
    cluster1115_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1115_exit_name -> cluster1115_exit [arrowhead=none, color="black", style=dashed]
    cluster1115_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4697_name [shape=none, label=<<font color="black">Block[4697]</font>>]
    node4697_name -> node4697 [arrowhead=none, color="black", style=dashed]
    node4697 [shape=box, label=<<font color="black">[0] let map = args.ParameterMap<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4697 -> node4698 [color="black"]
    node4698_name [shape=none, label=<<font color="black">Call[4698]</font>>]
    node4698_name -> node4698 [arrowhead=none, color="black", style=dashed]
    node4698 [shape=cds, label=<<font color="black">%0 = clo&lt;HasOwnProperty&gt;(map, P)</font>> color="black" fillcolor="white", style=filled]
    node4698 -> node4699 [color="black"]
    node4699_name [shape=none, label=<<font color="black">Block[4699]</font>>]
    node4699_name -> node4699 [arrowhead=none, color="black", style=dashed]
    node4699 [shape=box, label=<<font color="black">[0] let isMapped = [! %0]<BR ALIGN="LEFT"/>[1] let newArgDesc = Desc<BR ALIGN="LEFT"/>[2] %1 = (= isMapped true)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4699 -> node4700 [color="black"]
    node4700_name [shape=none, label=<<font color="black">Branch[4700]</font>>]
    node4700_name -> node4700 [arrowhead=none, color="black", style=dashed]
    node4700 [shape=diamond, label=<<font color="black">%1</font>> color="black" fillcolor="white", style=filled]
    node4700 -> node4701 [label=<<font color="black">true</font>> color="black"]
    node4700 -> node4703 [label=<<font color="black">false</font>> color="black"]
    node4701_name [shape=none, label=<<font color="black">Call[4701]</font>>]
    node4701_name -> node4701 [arrowhead=none, color="black", style=dashed]
    node4701 [shape=cds, label=<<font color="black">%2 = clo&lt;IsDataDescriptor&gt;(Desc)</font>> color="black" fillcolor="white", style=filled]
    node4701 -> node4702 [color="black"]
    node4703_name [shape=none, label=<<font color="black">Branch[4703]</font>>]
    node4703_name -> node4703 [arrowhead=none, color="black", style=dashed]
    node4703 [shape=diamond, label=<<font color="black">%1</font>> color="black" fillcolor="white", style=filled]
    node4703 -> node4704 [label=<<font color="black">true</font>> color="black"]
    node4703 -> node4706 [label=<<font color="black">false</font>> color="black"]
    node4702_name [shape=none, label=<<font color="black">Block[4702]</font>>]
    node4702_name -> node4702 [arrowhead=none, color="black", style=dashed]
    node4702 [shape=box, label=<<font color="black">[0] %1 = (= %2 true)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4702 -> node4703 [color="black"]
    node4704_name [shape=none, label=<<font color="black">Branch[4704]</font>>]
    node4704_name -> node4704 [arrowhead=none, color="black", style=dashed]
    node4704 [shape=diamond, label=<<font color="black">(&amp;&amp; (= Desc.Value absent) (! (= Desc.Writable absent)))</font>> color="black" fillcolor="white", style=filled]
    node4704 -> node4705 [label=<<font color="black">true</font>> color="black"]
    node4704 -> node4706 [label=<<font color="black">false</font>> color="black"]
    node4706_name [shape=none, label=<<font color="black">Call[4706]</font>>]
    node4706_name -> node4706 [arrowhead=none, color="black", style=dashed]
    node4706 [shape=cds, label=<<font color="black">%3 = clo&lt;OrdinaryDefineOwnProperty&gt;(args, P, newArgDesc)</font>> color="black" fillcolor="white", style=filled]
    node4706 -> node4707 [color="black"]
    node4705_name [shape=none, label=<<font color="black">Block[4705]</font>>]
    node4705_name -> node4705 [arrowhead=none, color="black", style=dashed]
    node4705 [shape=box, label=<<font color="black">[0] (yet &quot;and _Desc_.[[Writable]] is *false*, then\n  1. Set _newArgDesc_ to a copy of _Desc_.\n  1. Set _newArgDesc_.[[Value]] to ! Get(_map_, _P_).&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4705 -> node4706 [color="black"]
    node4707_name [shape=none, label=<<font color="black">Block[4707]</font>>]
    node4707_name -> node4707 [arrowhead=none, color="black", style=dashed]
    node4707 [shape=box, label=<<font color="black">[0] let allowed = [! %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4707 -> node4708 [color="black"]
    node4708_name [shape=none, label=<<font color="black">Branch[4708]</font>>]
    node4708_name -> node4708 [arrowhead=none, color="black", style=dashed]
    node4708 [shape=diamond, label=<<font color="black">(= allowed false)</font>> color="black" fillcolor="white", style=filled]
    node4708 -> node4709 [label=<<font color="black">true</font>> color="black"]
    node4708 -> node4710 [label=<<font color="black">false</font>> color="black"]
    node4709_name [shape=none, label=<<font color="black">Block[4709]</font>>]
    node4709_name -> node4709 [arrowhead=none, color="black", style=dashed]
    node4709 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4709 -> cluster1115_exit [color="black"]
    node4710_name [shape=none, label=<<font color="black">Branch[4710]</font>>]
    node4710_name -> node4710 [arrowhead=none, color="black", style=dashed]
    node4710 [shape=diamond, label=<<font color="black">(= isMapped true)</font>> color="black" fillcolor="white", style=filled]
    node4710 -> node4711 [label=<<font color="black">true</font>> color="black"]
    node4710 -> node4722 [label=<<font color="black">false</font>> color="black"]
    node4711_name [shape=none, label=<<font color="black">Call[4711]</font>>]
    node4711_name -> node4711 [arrowhead=none, color="black", style=dashed]
    node4711 [shape=cds, label=<<font color="black">%4 = clo&lt;IsAccessorDescriptor&gt;(Desc)</font>> color="black" fillcolor="white", style=filled]
    node4711 -> node4712 [color="black"]
    node4722_name [shape=none, label=<<font color="black">Block[4722]</font>>]
    node4722_name -> node4722 [arrowhead=none, color="black", style=dashed]
    node4722 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4722 -> cluster1115_exit [color="black"]
    node4712_name [shape=none, label=<<font color="black">Branch[4712]</font>>]
    node4712_name -> node4712 [arrowhead=none, color="black", style=dashed]
    node4712 [shape=diamond, label=<<font color="black">(= %4 true)</font>> color="black" fillcolor="white", style=filled]
    node4712 -> node4713 [label=<<font color="black">true</font>> color="black"]
    node4712 -> node4715 [label=<<font color="black">false</font>> color="black"]
    node4713_name [shape=none, label=<<font color="black">Call[4713]</font>>]
    node4713_name -> node4713 [arrowhead=none, color="black", style=dashed]
    node4713 [shape=cds, label=<<font color="black">%5 = map-&gt;Delete(P)</font>> color="black" fillcolor="white", style=filled]
    node4713 -> node4714 [color="black"]
    node4715_name [shape=none, label=<<font color="black">Branch[4715]</font>>]
    node4715_name -> node4715 [arrowhead=none, color="black", style=dashed]
    node4715 [shape=diamond, label=<<font color="black">(! (= Desc.Value absent))</font>> color="black" fillcolor="white", style=filled]
    node4715 -> node4716 [label=<<font color="black">true</font>> color="black"]
    node4715 -> node4719 [label=<<font color="black">false</font>> color="black"]
    node4714_name [shape=none, label=<<font color="black">Block[4714]</font>>]
    node4714_name -> node4714 [arrowhead=none, color="black", style=dashed]
    node4714 [shape=box, label=<<font color="black">[0] [! %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4714 -> node4722 [color="black"]
    node4716_name [shape=none, label=<<font color="black">Block[4716]</font>>]
    node4716_name -> node4716 [arrowhead=none, color="black", style=dashed]
    node4716 [shape=box, label=<<font color="black">[0] assert (yet &quot;The following Set will succeed, since formal parameters mapped by arguments objects are always writable.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4716 -> node4717 [color="black"]
    node4719_name [shape=none, label=<<font color="black">Branch[4719]</font>>]
    node4719_name -> node4719 [arrowhead=none, color="black", style=dashed]
    node4719 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Desc.Writable absent)) (= Desc.Writable false))</font>> color="black" fillcolor="white", style=filled]
    node4719 -> node4720 [label=<<font color="black">true</font>> color="black"]
    node4719 -> node4722 [label=<<font color="black">false</font>> color="black"]
    node4717_name [shape=none, label=<<font color="black">Call[4717]</font>>]
    node4717_name -> node4717 [arrowhead=none, color="black", style=dashed]
    node4717 [shape=cds, label=<<font color="black">%6 = clo&lt;Set&gt;(map, P, Desc.Value, false)</font>> color="black" fillcolor="white", style=filled]
    node4717 -> node4718 [color="black"]
    node4720_name [shape=none, label=<<font color="black">Call[4720]</font>>]
    node4720_name -> node4720 [arrowhead=none, color="black", style=dashed]
    node4720 [shape=cds, label=<<font color="black">%7 = map-&gt;Delete(P)</font>> color="black" fillcolor="white", style=filled]
    node4720 -> node4721 [color="black"]
    node4718_name [shape=none, label=<<font color="black">Block[4718]</font>>]
    node4718_name -> node4718 [arrowhead=none, color="black", style=dashed]
    node4718 [shape=box, label=<<font color="black">[0] [! %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4718 -> node4719 [color="black"]
    node4721_name [shape=none, label=<<font color="black">Block[4721]</font>>]
    node4721_name -> node4721 [arrowhead=none, color="black", style=dashed]
    node4721 [shape=box, label=<<font color="black">[0] [! %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4721 -> node4722 [color="black"]
  }
}