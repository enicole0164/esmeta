digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster285 {
    label = "def <SYNTAX>:StatementList[1,0].LexicallyScopedDeclarations(this: Ast:StatementList[1,0]): List[Ast]"
    style = rounded
    cluster285_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster285_entry_name -> cluster285_entry [arrowhead=none, color="black", style=dashed]
    cluster285_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster285_entry -> node1769 [color="black"]
    cluster285_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster285_exit_name -> cluster285_exit [arrowhead=none, color="black", style=dashed]
    cluster285_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1769_name [shape=none, label=<<font color="black">Call[1769]</font>>]
    node1769_name -> node1769 [arrowhead=none, color="black", style=dashed]
    node1769 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;LexicallyScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node1769 -> node1770 [color="black"]
    node1770_name [shape=none, label=<<font color="black">Block[1770]</font>>]
    node1770_name -> node1770 [arrowhead=none, color="black", style=dashed]
    node1770 [shape=box, label=<<font color="black">[0] let declarations1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1770 -> node1771 [color="black"]
    node1771_name [shape=none, label=<<font color="black">Call[1771]</font>>]
    node1771_name -> node1771 [arrowhead=none, color="black", style=dashed]
    node1771 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;LexicallyScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node1771 -> node1772 [color="black"]
    node1772_name [shape=none, label=<<font color="black">Block[1772]</font>>]
    node1772_name -> node1772 [arrowhead=none, color="black", style=dashed]
    node1772 [shape=box, label=<<font color="black">[0] let declarations2 = %1<BR ALIGN="LEFT"/>[1] return (list-concat declarations1 declarations2)[#139]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1772 -> cluster285_exit [color="black"]
  }
}