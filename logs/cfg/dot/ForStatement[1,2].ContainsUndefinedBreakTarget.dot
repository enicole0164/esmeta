digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster564 {
    label = "def <SYNTAX>:ForStatement[1,2].ContainsUndefinedBreakTarget(this: Ast:ForStatement[1,2], labelSet: Unknown): Boolean"
    style = rounded
    cluster564_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster564_entry_name -> cluster564_entry [arrowhead=none, color="black", style=dashed]
    cluster564_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster564_entry -> node2557 [color="black"]
    cluster564_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster564_exit_name -> cluster564_exit [arrowhead=none, color="black", style=dashed]
    cluster564_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2557_name [shape=none, label=<<font color="black">Call[2557]</font>>]
    node2557_name -> node2557 [arrowhead=none, color="black", style=dashed]
    node2557 [shape=cds, label=<<font color="black">%0 = this[3]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2557 -> node2558 [color="black"]
    node2558_name [shape=none, label=<<font color="black">Block[2558]</font>>]
    node2558_name -> node2558 [arrowhead=none, color="black", style=dashed]
    node2558 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2558 -> cluster564_exit [color="black"]
  }
}