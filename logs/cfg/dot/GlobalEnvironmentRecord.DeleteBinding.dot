digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1004 {
    label = "def <CONC>:GlobalEnvironmentRecord.DeleteBinding(envRec: GlobalEnvironmentRecord, N: String): Normal[Boolean] | Abrupt"
    style = rounded
    cluster1004_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1004_entry_name -> cluster1004_entry [arrowhead=none, color="black", style=dashed]
    cluster1004_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1004_entry -> node3736 [color="black"]
    cluster1004_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1004_exit_name -> cluster1004_exit [arrowhead=none, color="black", style=dashed]
    cluster1004_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3736_name [shape=none, label=<<font color="black">Block[3736]</font>>]
    node3736_name -> node3736 [arrowhead=none, color="black", style=dashed]
    node3736 [shape=box, label=<<font color="black">[0] let DclRec = envRec.DeclarativeRecord<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3736 -> node3737 [color="black"]
    node3737_name [shape=none, label=<<font color="black">Call[3737]</font>>]
    node3737_name -> node3737 [arrowhead=none, color="black", style=dashed]
    node3737 [shape=cds, label=<<font color="black">%0 = DclRec-&gt;HasBinding(N)</font>> color="black" fillcolor="white", style=filled]
    node3737 -> node3738 [color="black"]
    node3738_name [shape=none, label=<<font color="black">Branch[3738]</font>>]
    node3738_name -> node3738 [arrowhead=none, color="black", style=dashed]
    node3738 [shape=diamond, label=<<font color="black">(= [! %0] true)</font>> color="black" fillcolor="white", style=filled]
    node3738 -> node3739 [label=<<font color="black">true</font>> color="black"]
    node3738 -> node3741 [label=<<font color="black">false</font>> color="black"]
    node3739_name [shape=none, label=<<font color="black">Call[3739]</font>>]
    node3739_name -> node3739 [arrowhead=none, color="black", style=dashed]
    node3739 [shape=cds, label=<<font color="black">%1 = DclRec-&gt;DeleteBinding(N)</font>> color="black" fillcolor="white", style=filled]
    node3739 -> node3740 [color="black"]
    node3741_name [shape=none, label=<<font color="black">Block[3741]</font>>]
    node3741_name -> node3741 [arrowhead=none, color="black", style=dashed]
    node3741 [shape=box, label=<<font color="black">[0] let ObjRec = envRec.ObjectRecord<BR ALIGN="LEFT"/>[1] let globalObject = ObjRec.BindingObject<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3741 -> node3742 [color="black"]
    node3740_name [shape=none, label=<<font color="black">Block[3740]</font>>]
    node3740_name -> node3740 [arrowhead=none, color="black", style=dashed]
    node3740 [shape=box, label=<<font color="black">[0] return [! %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3740 -> cluster1004_exit [color="black"]
    node3742_name [shape=none, label=<<font color="black">Call[3742]</font>>]
    node3742_name -> node3742 [arrowhead=none, color="black", style=dashed]
    node3742 [shape=cds, label=<<font color="black">%2 = clo&lt;HasOwnProperty&gt;(globalObject, N)</font>> color="black" fillcolor="white", style=filled]
    node3742 -> node3743 [color="black"]
    node3743_name [shape=none, label=<<font color="black">Block[3743]</font>>]
    node3743_name -> node3743 [arrowhead=none, color="black", style=dashed]
    node3743 [shape=box, label=<<font color="black">[0] let existingProp = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3743 -> node3744 [color="black"]
    node3744_name [shape=none, label=<<font color="black">Branch[3744]</font>>]
    node3744_name -> node3744 [arrowhead=none, color="black", style=dashed]
    node3744 [shape=diamond, label=<<font color="black">(= existingProp true)</font>> color="black" fillcolor="white", style=filled]
    node3744 -> node3745 [label=<<font color="black">true</font>> color="black"]
    node3744 -> node3752 [label=<<font color="black">false</font>> color="black"]
    node3745_name [shape=none, label=<<font color="black">Call[3745]</font>>]
    node3745_name -> node3745 [arrowhead=none, color="black", style=dashed]
    node3745 [shape=cds, label=<<font color="black">%3 = ObjRec-&gt;DeleteBinding(N)</font>> color="black" fillcolor="white", style=filled]
    node3745 -> node3746 [color="black"]
    node3752_name [shape=none, label=<<font color="black">Block[3752]</font>>]
    node3752_name -> node3752 [arrowhead=none, color="black", style=dashed]
    node3752 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3752 -> cluster1004_exit [color="black"]
    node3746_name [shape=none, label=<<font color="black">Block[3746]</font>>]
    node3746_name -> node3746 [arrowhead=none, color="black", style=dashed]
    node3746 [shape=box, label=<<font color="black">[0] let status = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3746 -> node3747 [color="black"]
    node3747_name [shape=none, label=<<font color="black">Branch[3747]</font>>]
    node3747_name -> node3747 [arrowhead=none, color="black", style=dashed]
    node3747 [shape=diamond, label=<<font color="black">(= status true)</font>> color="black" fillcolor="white", style=filled]
    node3747 -> node3748 [label=<<font color="black">true</font>> color="black"]
    node3747 -> node3751 [label=<<font color="black">false</font>> color="black"]
    node3748_name [shape=none, label=<<font color="black">Block[3748]</font>>]
    node3748_name -> node3748 [arrowhead=none, color="black", style=dashed]
    node3748 [shape=box, label=<<font color="black">[0] let varNames = envRec.VarNames<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3748 -> node3749 [color="black"]
    node3751_name [shape=none, label=<<font color="black">Block[3751]</font>>]
    node3751_name -> node3751 [arrowhead=none, color="black", style=dashed]
    node3751 [shape=box, label=<<font color="black">[0] return status<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3751 -> cluster1004_exit [color="black"]
    node3749_name [shape=none, label=<<font color="black">Branch[3749]</font>>]
    node3749_name -> node3749 [arrowhead=none, color="black", style=dashed]
    node3749 [shape=diamond, label=<<font color="black">(contains varNames N)</font>> color="black" fillcolor="white", style=filled]
    node3749 -> node3750 [label=<<font color="black">true</font>> color="black"]
    node3749 -> node3751 [label=<<font color="black">false</font>> color="black"]
    node3750_name [shape=none, label=<<font color="black">Block[3750]</font>>]
    node3750_name -> node3750 [arrowhead=none, color="black", style=dashed]
    node3750 [shape=box, label=<<font color="black">[0] remove-elem varNames N<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3750 -> node3751 [color="black"]
  }
}