digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster155 {
    label = "def PrivateElementFind(O: Object, P: PrivateName): PrivateElement | Const[~empty~]"
    style = rounded
    cluster155_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster155_entry_name -> cluster155_entry [arrowhead=none, color="black", style=dashed]
    cluster155_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster155_entry -> node1329 [color="black"]
    cluster155_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster155_exit_name -> cluster155_exit [arrowhead=none, color="black", style=dashed]
    cluster155_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1329_name [shape=none, label=<<font color="black">Branch[1329]</font>>]
    node1329_name -> node1329 [arrowhead=none, color="black", style=dashed]
    node1329 [shape=diamond, label=<<font color="black">(contains O.PrivateElements P: Unknown[&quot;PrivateElement&quot;] Key)</font>> color="black" fillcolor="white", style=filled]
    node1329 -> node1330 [label=<<font color="black">true</font>> color="black"]
    node1329 -> node1337 [label=<<font color="black">false</font>> color="black"]
    node1330_name [shape=none, label=<<font color="black">Block[1330]</font>>]
    node1330_name -> node1330 [arrowhead=none, color="black", style=dashed]
    node1330 [shape=box, label=<<font color="black">[0] let elems = O.PrivateElements<BR ALIGN="LEFT"/>[1] let idx = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1330 -> node1331 [color="black"]
    node1337_name [shape=none, label=<<font color="black">Block[1337]</font>>]
    node1337_name -> node1337 [arrowhead=none, color="black", style=dashed]
    node1337 [shape=box, label=<<font color="black">[0] return ~empty~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1337 -> cluster155_exit [color="black"]
    node1331_name [shape=none, label=<<font color="black">Branch[1331]</font>>]
    node1331_name -> node1331 [arrowhead=none, color="black", style=dashed]
    node1331 [shape=diamond, label=<<font color="black">(&lt; idx elems.length)</font>> color="black" fillcolor="white", style=filled]
    node1331 -> node1332 [label=<<font color="black">true</font>> color="black"]
    node1331 -> node1336 [label=<<font color="black">false</font>> color="black"]
    node1332_name [shape=none, label=<<font color="black">Block[1332]</font>>]
    node1332_name -> node1332 [arrowhead=none, color="black", style=dashed]
    node1332 [shape=box, label=<<font color="black">[0] let elem = elems[idx]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1332 -> node1333 [color="black"]
    node1336_name [shape=none, label=<<font color="black">Block[1336]</font>>]
    node1336_name -> node1336 [arrowhead=none, color="black", style=dashed]
    node1336 [shape=box, label=<<font color="black">[0] return entry<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1336 -> cluster155_exit [color="black"]
    node1333_name [shape=none, label=<<font color="black">Branch[1333]</font>>]
    node1333_name -> node1333 [arrowhead=none, color="black", style=dashed]
    node1333 [shape=diamond, label=<<font color="black">(= elem.Key P)</font>> color="black" fillcolor="white", style=filled]
    node1333 -> node1334 [label=<<font color="black">true</font>> color="black"]
    node1333 -> node1335 [label=<<font color="black">false</font>> color="black"]
    node1334_name [shape=none, label=<<font color="black">Block[1334]</font>>]
    node1334_name -> node1334 [arrowhead=none, color="black", style=dashed]
    node1334 [shape=box, label=<<font color="black">[0] let entry = elem<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1334 -> node1335 [color="black"]
    node1335_name [shape=none, label=<<font color="black">Block[1335]</font>>]
    node1335_name -> node1335 [arrowhead=none, color="black", style=dashed]
    node1335 [shape=box, label=<<font color="black">[0] idx = (+ idx 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1335 -> node1331 [color="black"]
  }
}