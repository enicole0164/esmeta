digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2369 {
    label = "def <BUILTIN>:INTRINSICS.Array.prototype.shift(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2369_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2369_entry_name -> cluster2369_entry [arrowhead=none, color="black", style=dashed]
    cluster2369_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2369_entry -> node15494 [color="black"]
    cluster2369_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2369_exit_name -> cluster2369_exit [arrowhead=none, color="black", style=dashed]
    cluster2369_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node15494_name [shape=none, label=<<font color="black">Call[15494]</font>>]
    node15494_name -> node15494 [arrowhead=none, color="black", style=dashed]
    node15494 [shape=cds, label=<<font color="black">%0 = clo&lt;ToObject&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node15494 -> node15495 [color="black"]
    node15495_name [shape=none, label=<<font color="black">Block[15495]</font>>]
    node15495_name -> node15495 [arrowhead=none, color="black", style=dashed]
    node15495 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15495 -> node15496 [color="black"]
    node15496_name [shape=none, label=<<font color="black">Call[15496]</font>>]
    node15496_name -> node15496 [arrowhead=none, color="black", style=dashed]
    node15496 [shape=cds, label=<<font color="black">%1 = clo&lt;LengthOfArrayLike&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node15496 -> node15497 [color="black"]
    node15497_name [shape=none, label=<<font color="black">Block[15497]</font>>]
    node15497_name -> node15497 [arrowhead=none, color="black", style=dashed]
    node15497 [shape=box, label=<<font color="black">[0] let len = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15497 -> node15498 [color="black"]
    node15498_name [shape=none, label=<<font color="black">Branch[15498]</font>>]
    node15498_name -> node15498 [arrowhead=none, color="black", style=dashed]
    node15498 [shape=diamond, label=<<font color="black">(== len 0)</font>> color="black" fillcolor="white", style=filled]
    node15498 -> node15499 [label=<<font color="black">true</font>> color="black"]
    node15498 -> node15501 [label=<<font color="black">false</font>> color="black"]
    node15499_name [shape=none, label=<<font color="black">Call[15499]</font>>]
    node15499_name -> node15499 [arrowhead=none, color="black", style=dashed]
    node15499 [shape=cds, label=<<font color="black">%2 = clo&lt;Set&gt;(O, &quot;length&quot;, 0.0f, true)</font>> color="black" fillcolor="white", style=filled]
    node15499 -> node15500 [color="black"]
    node15501_name [shape=none, label=<<font color="black">Call[15501]</font>>]
    node15501_name -> node15501 [arrowhead=none, color="black", style=dashed]
    node15501 [shape=cds, label=<<font color="black">%3 = clo&lt;Get&gt;(O, &quot;0&quot;)</font>> color="black" fillcolor="white", style=filled]
    node15501 -> node15502 [color="black"]
    node15500_name [shape=none, label=<<font color="black">Block[15500]</font>>]
    node15500_name -> node15500 [arrowhead=none, color="black", style=dashed]
    node15500 [shape=box, label=<<font color="black">[0] [? %2]<BR ALIGN="LEFT"/>[1] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15500 -> cluster2369_exit [color="black"]
    node15502_name [shape=none, label=<<font color="black">Block[15502]</font>>]
    node15502_name -> node15502 [arrowhead=none, color="black", style=dashed]
    node15502 [shape=box, label=<<font color="black">[0] let first = [? %3]<BR ALIGN="LEFT"/>[1] let k = 1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15502 -> node15503 [color="black"]
    node15503_name [shape=none, label=<<font color="black">Branch[15503]</font>>]
    node15503_name -> node15503 [arrowhead=none, color="black", style=dashed]
    node15503 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white", style=filled]
    node15503 -> node15504 [label=<<font color="black">true</font>> color="black"]
    node15503 -> node15519 [label=<<font color="black">false</font>> color="black"]
    node15504_name [shape=none, label=<<font color="black">Call[15504]</font>>]
    node15504_name -> node15504 [arrowhead=none, color="black", style=dashed]
    node15504 [shape=cds, label=<<font color="black">%4 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node15504 -> node15505 [color="black"]
    node15519_name [shape=none, label=<<font color="black">Call[15519]</font>>]
    node15519_name -> node15519 [arrowhead=none, color="black", style=dashed]
    node15519 [shape=cds, label=<<font color="black">%10 = clo&lt;ToString&gt;(([number] (- len 1)))</font>> color="black" fillcolor="white", style=filled]
    node15519 -> node15520 [color="black"]
    node15505_name [shape=none, label=<<font color="black">Block[15505]</font>>]
    node15505_name -> node15505 [arrowhead=none, color="black", style=dashed]
    node15505 [shape=box, label=<<font color="black">[0] let from = [! %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15505 -> node15506 [color="black"]
    node15520_name [shape=none, label=<<font color="black">Call[15520]</font>>]
    node15520_name -> node15520 [arrowhead=none, color="black", style=dashed]
    node15520 [shape=cds, label=<<font color="black">%11 = clo&lt;DeletePropertyOrThrow&gt;(O, [! %10])</font>> color="black" fillcolor="white", style=filled]
    node15520 -> node15521 [color="black"]
    node15506_name [shape=none, label=<<font color="black">Call[15506]</font>>]
    node15506_name -> node15506 [arrowhead=none, color="black", style=dashed]
    node15506 [shape=cds, label=<<font color="black">%5 = clo&lt;ToString&gt;(([number] (- k 1)))</font>> color="black" fillcolor="white", style=filled]
    node15506 -> node15507 [color="black"]
    node15521_name [shape=none, label=<<font color="black">Block[15521]</font>>]
    node15521_name -> node15521 [arrowhead=none, color="black", style=dashed]
    node15521 [shape=box, label=<<font color="black">[0] [? %11]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15521 -> node15522 [color="black"]
    node15507_name [shape=none, label=<<font color="black">Block[15507]</font>>]
    node15507_name -> node15507 [arrowhead=none, color="black", style=dashed]
    node15507 [shape=box, label=<<font color="black">[0] let to = [! %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15507 -> node15508 [color="black"]
    node15522_name [shape=none, label=<<font color="black">Call[15522]</font>>]
    node15522_name -> node15522 [arrowhead=none, color="black", style=dashed]
    node15522 [shape=cds, label=<<font color="black">%12 = clo&lt;Set&gt;(O, &quot;length&quot;, ([number] (- len 1)), true)</font>> color="black" fillcolor="white", style=filled]
    node15522 -> node15523 [color="black"]
    node15508_name [shape=none, label=<<font color="black">Call[15508]</font>>]
    node15508_name -> node15508 [arrowhead=none, color="black", style=dashed]
    node15508 [shape=cds, label=<<font color="black">%6 = clo&lt;HasProperty&gt;(O, from)</font>> color="black" fillcolor="white", style=filled]
    node15508 -> node15509 [color="black"]
    node15523_name [shape=none, label=<<font color="black">Block[15523]</font>>]
    node15523_name -> node15523 [arrowhead=none, color="black", style=dashed]
    node15523 [shape=box, label=<<font color="black">[0] [? %12]<BR ALIGN="LEFT"/>[1] return first<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15523 -> cluster2369_exit [color="black"]
    node15509_name [shape=none, label=<<font color="black">Block[15509]</font>>]
    node15509_name -> node15509 [arrowhead=none, color="black", style=dashed]
    node15509 [shape=box, label=<<font color="black">[0] let fromPresent = [? %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15509 -> node15510 [color="black"]
    node15510_name [shape=none, label=<<font color="black">Branch[15510]</font>>]
    node15510_name -> node15510 [arrowhead=none, color="black", style=dashed]
    node15510 [shape=diamond, label=<<font color="black">(= fromPresent true)</font>> color="black" fillcolor="white", style=filled]
    node15510 -> node15511 [label=<<font color="black">true</font>> color="black"]
    node15510 -> node15515 [label=<<font color="black">false</font>> color="black"]
    node15511_name [shape=none, label=<<font color="black">Call[15511]</font>>]
    node15511_name -> node15511 [arrowhead=none, color="black", style=dashed]
    node15511 [shape=cds, label=<<font color="black">%7 = clo&lt;Get&gt;(O, from)</font>> color="black" fillcolor="white", style=filled]
    node15511 -> node15512 [color="black"]
    node15515_name [shape=none, label=<<font color="black">Block[15515]</font>>]
    node15515_name -> node15515 [arrowhead=none, color="black", style=dashed]
    node15515 [shape=box, label=<<font color="black">[0] assert (= fromPresent false)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15515 -> node15516 [color="black"]
    node15512_name [shape=none, label=<<font color="black">Block[15512]</font>>]
    node15512_name -> node15512 [arrowhead=none, color="black", style=dashed]
    node15512 [shape=box, label=<<font color="black">[0] let fromVal = [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15512 -> node15513 [color="black"]
    node15516_name [shape=none, label=<<font color="black">Call[15516]</font>>]
    node15516_name -> node15516 [arrowhead=none, color="black", style=dashed]
    node15516 [shape=cds, label=<<font color="black">%9 = clo&lt;DeletePropertyOrThrow&gt;(O, to)</font>> color="black" fillcolor="white", style=filled]
    node15516 -> node15517 [color="black"]
    node15513_name [shape=none, label=<<font color="black">Call[15513]</font>>]
    node15513_name -> node15513 [arrowhead=none, color="black", style=dashed]
    node15513 [shape=cds, label=<<font color="black">%8 = clo&lt;Set&gt;(O, to, fromVal, true)</font>> color="black" fillcolor="white", style=filled]
    node15513 -> node15514 [color="black"]
    node15517_name [shape=none, label=<<font color="black">Block[15517]</font>>]
    node15517_name -> node15517 [arrowhead=none, color="black", style=dashed]
    node15517 [shape=box, label=<<font color="black">[0] [? %9]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15517 -> node15518 [color="black"]
    node15514_name [shape=none, label=<<font color="black">Block[15514]</font>>]
    node15514_name -> node15514 [arrowhead=none, color="black", style=dashed]
    node15514 [shape=box, label=<<font color="black">[0] [? %8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15514 -> node15518 [color="black"]
    node15518_name [shape=none, label=<<font color="black">Block[15518]</font>>]
    node15518_name -> node15518 [arrowhead=none, color="black", style=dashed]
    node15518 [shape=box, label=<<font color="black">[0] k = (+ k 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15518 -> node15503 [color="black"]
  }
}