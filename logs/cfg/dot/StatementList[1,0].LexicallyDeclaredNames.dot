digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster257 {
    label = "def <SYNTAX>:StatementList[1,0].LexicallyDeclaredNames(this: Ast:StatementList[1,0]): List[String]"
    style = rounded
    cluster257_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster257_entry_name -> cluster257_entry [arrowhead=none, color="black", style=dashed]
    cluster257_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster257_entry -> node1667 [color="black"]
    cluster257_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster257_exit_name -> cluster257_exit [arrowhead=none, color="black", style=dashed]
    cluster257_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1667_name [shape=none, label=<<font color="black">Call[1667]</font>>]
    node1667_name -> node1667 [arrowhead=none, color="black", style=dashed]
    node1667 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1667 -> node1668 [color="black"]
    node1668_name [shape=none, label=<<font color="black">Block[1668]</font>>]
    node1668_name -> node1668 [arrowhead=none, color="black", style=dashed]
    node1668 [shape=box, label=<<font color="black">[0] let names1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1668 -> node1669 [color="black"]
    node1669_name [shape=none, label=<<font color="black">Call[1669]</font>>]
    node1669_name -> node1669 [arrowhead=none, color="black", style=dashed]
    node1669 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1669 -> node1670 [color="black"]
    node1670_name [shape=none, label=<<font color="black">Block[1670]</font>>]
    node1670_name -> node1670 [arrowhead=none, color="black", style=dashed]
    node1670 [shape=box, label=<<font color="black">[0] let names2 = %1<BR ALIGN="LEFT"/>[1] return (list-concat names1 names2)[#112]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1670 -> cluster257_exit [color="black"]
  }
}