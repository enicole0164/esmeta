digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1300 {
    label = "def <SYNTAX>:ImportMeta[0,0].Evaluation(this: Ast:ImportMeta[0,0]): Unknown"
    style = rounded
    cluster1300_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1300_entry_name -> cluster1300_entry [arrowhead=none, color="black", style=dashed]
    cluster1300_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1300_entry -> node6137 [color="black"]
    cluster1300_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1300_exit_name -> cluster1300_exit [arrowhead=none, color="black", style=dashed]
    cluster1300_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6137_name [shape=none, label=<<font color="black">Call[6137]</font>>]
    node6137_name -> node6137 [arrowhead=none, color="black", style=dashed]
    node6137 [shape=cds, label=<<font color="black">%0 = clo&lt;GetActiveScriptOrModule&gt;()</font>> color="black" fillcolor="white", style=filled]
    node6137 -> node6138 [color="black"]
    node6138_name [shape=none, label=<<font color="black">Block[6138]</font>>]
    node6138_name -> node6138 [arrowhead=none, color="black", style=dashed]
    node6138 [shape=box, label=<<font color="black">[0] let module = %0<BR ALIGN="LEFT"/>[1] assert (? module: &quot;SourceTextModuleRecord&quot;)<BR ALIGN="LEFT"/>[2] let importMeta = module.ImportMeta<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6138 -> node6139 [color="black"]
    node6139_name [shape=none, label=<<font color="black">Branch[6139]</font>>]
    node6139_name -> node6139 [arrowhead=none, color="black", style=dashed]
    node6139 [shape=diamond, label=<<font color="black">(= importMeta ~empty~)</font>> color="black" fillcolor="white", style=filled]
    node6139 -> node6140 [label=<<font color="black">true</font>> color="black"]
    node6139 -> node6150 [label=<<font color="black">false</font>> color="black"]
    node6140_name [shape=none, label=<<font color="black">Call[6140]</font>>]
    node6140_name -> node6140 [arrowhead=none, color="black", style=dashed]
    node6140 [shape=cds, label=<<font color="black">%1 = clo&lt;OrdinaryObjectCreate&gt;(null)</font>> color="black" fillcolor="white", style=filled]
    node6140 -> node6141 [color="black"]
    node6150_name [shape=none, label=<<font color="black">Block[6150]</font>>]
    node6150_name -> node6150 [arrowhead=none, color="black", style=dashed]
    node6150 [shape=box, label=<<font color="black">[0] assert (= (typeof importMeta) @Object)<BR ALIGN="LEFT"/>[1] return importMeta<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6150 -> cluster1300_exit [color="black"]
    node6141_name [shape=none, label=<<font color="black">Block[6141]</font>>]
    node6141_name -> node6141 [arrowhead=none, color="black", style=dashed]
    node6141 [shape=box, label=<<font color="black">[0] importMeta = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6141 -> node6142 [color="black"]
    node6142_name [shape=none, label=<<font color="black">Call[6142]</font>>]
    node6142_name -> node6142 [arrowhead=none, color="black", style=dashed]
    node6142 [shape=cds, label=<<font color="black">%2 = clo&lt;HostGetImportMetaProperties&gt;(module)</font>> color="black" fillcolor="white", style=filled]
    node6142 -> node6143 [color="black"]
    node6143_name [shape=none, label=<<font color="black">Block[6143]</font>>]
    node6143_name -> node6143 [arrowhead=none, color="black", style=dashed]
    node6143 [shape=box, label=<<font color="black">[0] let importMetaValues = %2<BR ALIGN="LEFT"/>[1] %4 = importMetaValues<BR ALIGN="LEFT"/>[2] %3 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6143 -> node6144 [color="black"]
    node6144_name [shape=none, label=<<font color="black">Branch[6144]</font>>]
    node6144_name -> node6144 [arrowhead=none, color="black", style=dashed]
    node6144 [shape=diamond, label=<<font color="black">(&lt; %3 %4.length)</font>> color="black" fillcolor="white", style=filled]
    node6144 -> node6145 [label=<<font color="black">true</font>> color="black"]
    node6144 -> node6148 [label=<<font color="black">false</font>> color="black"]
    node6145_name [shape=none, label=<<font color="black">Block[6145]</font>>]
    node6145_name -> node6145 [arrowhead=none, color="black", style=dashed]
    node6145 [shape=box, label=<<font color="black">[0] let p = %4[%3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6145 -> node6146 [color="black"]
    node6148_name [shape=none, label=<<font color="black">Call[6148]</font>>]
    node6148_name -> node6148 [arrowhead=none, color="black", style=dashed]
    node6148 [shape=cds, label=<<font color="black">%6 = clo&lt;HostFinalizeImportMeta&gt;(importMeta, module)</font>> color="black" fillcolor="white", style=filled]
    node6148 -> node6149 [color="black"]
    node6146_name [shape=none, label=<<font color="black">Call[6146]</font>>]
    node6146_name -> node6146 [arrowhead=none, color="black", style=dashed]
    node6146 [shape=cds, label=<<font color="black">%5 = clo&lt;CreateDataPropertyOrThrow&gt;(importMeta, p.Key, p.Value)</font>> color="black" fillcolor="white", style=filled]
    node6146 -> node6147 [color="black"]
    node6149_name [shape=none, label=<<font color="black">Block[6149]</font>>]
    node6149_name -> node6149 [arrowhead=none, color="black", style=dashed]
    node6149 [shape=box, label=<<font color="black">[0] module.ImportMeta = importMeta<BR ALIGN="LEFT"/>[1] return importMeta<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6149 -> cluster1300_exit [color="black"]
    node6147_name [shape=none, label=<<font color="black">Block[6147]</font>>]
    node6147_name -> node6147 [arrowhead=none, color="black", style=dashed]
    node6147 [shape=box, label=<<font color="black">[0] [! %5]<BR ALIGN="LEFT"/>[1] %3 = (+ %3 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6147 -> node6144 [color="black"]
  }
}