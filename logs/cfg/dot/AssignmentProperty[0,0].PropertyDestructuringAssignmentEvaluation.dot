digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1360 {
    label = "def <SYNTAX>:AssignmentProperty[0,0].PropertyDestructuringAssignmentEvaluation(this: Ast:AssignmentProperty[0,0], value: Unknown): Normal[List[Symbol | String]] | Abrupt"
    style = rounded
    cluster1360_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1360_entry_name -> cluster1360_entry [arrowhead=none, color="black", style=dashed]
    cluster1360_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1360_entry -> node6889 [color="black"]
    cluster1360_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1360_exit_name -> cluster1360_exit [arrowhead=none, color="black", style=dashed]
    cluster1360_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6889_name [shape=none, label=<<font color="black">Call[6889]</font>>]
    node6889_name -> node6889 [arrowhead=none, color="black", style=dashed]
    node6889 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;StringValue()</font>> color="black" fillcolor="white", style=filled]
    node6889 -> node6890 [color="black"]
    node6890_name [shape=none, label=<<font color="black">Block[6890]</font>>]
    node6890_name -> node6890 [arrowhead=none, color="black", style=dashed]
    node6890 [shape=box, label=<<font color="black">[0] let P = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6890 -> node6891 [color="black"]
    node6891_name [shape=none, label=<<font color="black">Call[6891]</font>>]
    node6891_name -> node6891 [arrowhead=none, color="black", style=dashed]
    node6891 [shape=cds, label=<<font color="black">%1 = clo&lt;ResolveBinding&gt;(P)</font>> color="black" fillcolor="white", style=filled]
    node6891 -> node6892 [color="black"]
    node6892_name [shape=none, label=<<font color="black">Block[6892]</font>>]
    node6892_name -> node6892 [arrowhead=none, color="black", style=dashed]
    node6892 [shape=box, label=<<font color="black">[0] let lref = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6892 -> node6893 [color="black"]
    node6893_name [shape=none, label=<<font color="black">Call[6893]</font>>]
    node6893_name -> node6893 [arrowhead=none, color="black", style=dashed]
    node6893 [shape=cds, label=<<font color="black">%2 = clo&lt;GetV&gt;(value, P)</font>> color="black" fillcolor="white", style=filled]
    node6893 -> node6894 [color="black"]
    node6894_name [shape=none, label=<<font color="black">Block[6894]</font>>]
    node6894_name -> node6894 [arrowhead=none, color="black", style=dashed]
    node6894 [shape=box, label=<<font color="black">[0] let v = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6894 -> node6895 [color="black"]
    node6895_name [shape=none, label=<<font color="black">Branch[6895]</font>>]
    node6895_name -> node6895 [arrowhead=none, color="black", style=dashed]
    node6895 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= this[1] absent)) (= v undefined))</font>> color="black" fillcolor="white", style=filled]
    node6895 -> node6896 [label=<<font color="black">true</font>> color="black"]
    node6895 -> node6904 [label=<<font color="black">false</font>> color="black"]
    node6896_name [shape=none, label=<<font color="black">Call[6896]</font>>]
    node6896_name -> node6896 [arrowhead=none, color="black", style=dashed]
    node6896 [shape=cds, label=<<font color="black">%3 = clo&lt;IsAnonymousFunctionDefinition&gt;(this[1])</font>> color="black" fillcolor="white", style=filled]
    node6896 -> node6897 [color="black"]
    node6904_name [shape=none, label=<<font color="black">Call[6904]</font>>]
    node6904_name -> node6904 [arrowhead=none, color="black", style=dashed]
    node6904 [shape=cds, label=<<font color="black">%7 = clo&lt;PutValue&gt;(lref, v)</font>> color="black" fillcolor="white", style=filled]
    node6904 -> node6905 [color="black"]
    node6897_name [shape=none, label=<<font color="black">Branch[6897]</font>>]
    node6897_name -> node6897 [arrowhead=none, color="black", style=dashed]
    node6897 [shape=diamond, label=<<font color="black">(= %3 true)</font>> color="black" fillcolor="white", style=filled]
    node6897 -> node6898 [label=<<font color="black">true</font>> color="black"]
    node6897 -> node6900 [label=<<font color="black">false</font>> color="black"]
    node6905_name [shape=none, label=<<font color="black">Block[6905]</font>>]
    node6905_name -> node6905 [arrowhead=none, color="black", style=dashed]
    node6905 [shape=box, label=<<font color="black">[0] [? %7]<BR ALIGN="LEFT"/>[1] return (new [P])[#596]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6905 -> cluster1360_exit [color="black"]
    node6898_name [shape=none, label=<<font color="black">Call[6898]</font>>]
    node6898_name -> node6898 [arrowhead=none, color="black", style=dashed]
    node6898 [shape=cds, label=<<font color="black">%4 = this[1]-&gt;NamedEvaluation(P)</font>> color="black" fillcolor="white", style=filled]
    node6898 -> node6899 [color="black"]
    node6900_name [shape=none, label=<<font color="black">Call[6900]</font>>]
    node6900_name -> node6900 [arrowhead=none, color="black", style=dashed]
    node6900 [shape=cds, label=<<font color="black">%5 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6900 -> node6901 [color="black"]
    node6899_name [shape=none, label=<<font color="black">Block[6899]</font>>]
    node6899_name -> node6899 [arrowhead=none, color="black", style=dashed]
    node6899 [shape=box, label=<<font color="black">[0] v = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6899 -> node6904 [color="black"]
    node6901_name [shape=none, label=<<font color="black">Block[6901]</font>>]
    node6901_name -> node6901 [arrowhead=none, color="black", style=dashed]
    node6901 [shape=box, label=<<font color="black">[0] let defaultValue = %5<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6901 -> node6902 [color="black"]
    node6902_name [shape=none, label=<<font color="black">Call[6902]</font>>]
    node6902_name -> node6902 [arrowhead=none, color="black", style=dashed]
    node6902 [shape=cds, label=<<font color="black">%6 = clo&lt;GetValue&gt;(defaultValue)</font>> color="black" fillcolor="white", style=filled]
    node6902 -> node6903 [color="black"]
    node6903_name [shape=none, label=<<font color="black">Block[6903]</font>>]
    node6903_name -> node6903 [arrowhead=none, color="black", style=dashed]
    node6903 [shape=box, label=<<font color="black">[0] v = [? %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6903 -> node6904 [color="black"]
  }
}