digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2593 {
    label = "def PerformPromiseRace(iteratorRecord: Unknown, constructor: Unknown["Constructor"], resultCapability: PromiseCapabilityRecord, promiseResolve: FunctionObject): Normal[ESValue] | Abrupt"
    style = rounded
    cluster2593_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2593_entry_name -> cluster2593_entry [arrowhead=none, color="black", style=dashed]
    cluster2593_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2593_entry -> node19152 [color="black"]
    cluster2593_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2593_exit_name -> cluster2593_exit [arrowhead=none, color="black", style=dashed]
    cluster2593_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node19152_name [shape=none, label=<<font color="black">Branch[19152]</font>>]
    node19152_name -> node19152 [arrowhead=none, color="black", style=dashed]
    node19152 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white", style=filled]
    node19152 -> node19153 [label=<<font color="black">true</font>> color="black"]
    node19153_name [shape=none, label=<<font color="black">Call[19153]</font>>]
    node19153_name -> node19153 [arrowhead=none, color="black", style=dashed]
    node19153 [shape=cds, label=<<font color="black">%0 = clo&lt;IteratorStep&gt;(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node19153 -> node19154 [color="black"]
    node19154_name [shape=none, label=<<font color="black">Call[19154]</font>>]
    node19154_name -> node19154 [arrowhead=none, color="black", style=dashed]
    node19154 [shape=cds, label=<<font color="black">%1 = clo&lt;Completion&gt;(%0)</font>> color="black" fillcolor="white", style=filled]
    node19154 -> node19155 [color="black"]
    node19155_name [shape=none, label=<<font color="black">Block[19155]</font>>]
    node19155_name -> node19155 [arrowhead=none, color="black", style=dashed]
    node19155 [shape=box, label=<<font color="black">[0] let next = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19155 -> node19156 [color="black"]
    node19156_name [shape=none, label=<<font color="black">Branch[19156]</font>>]
    node19156_name -> node19156 [arrowhead=none, color="black", style=dashed]
    node19156 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? next) (! (= next.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node19156 -> node19157 [label=<<font color="black">true</font>> color="black"]
    node19156 -> node19158 [label=<<font color="black">false</font>> color="black"]
    node19157_name [shape=none, label=<<font color="black">Block[19157]</font>>]
    node19157_name -> node19157 [arrowhead=none, color="black", style=dashed]
    node19157 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19157 -> node19158 [color="black"]
    node19158_name [shape=none, label=<<font color="black">Block[19158]</font>>]
    node19158_name -> node19158 [arrowhead=none, color="black", style=dashed]
    node19158 [shape=box, label=<<font color="black">[0] [? next]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19158 -> node19159 [color="black"]
    node19159_name [shape=none, label=<<font color="black">Branch[19159]</font>>]
    node19159_name -> node19159 [arrowhead=none, color="black", style=dashed]
    node19159 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white", style=filled]
    node19159 -> node19160 [label=<<font color="black">true</font>> color="black"]
    node19159 -> node19161 [label=<<font color="black">false</font>> color="black"]
    node19160_name [shape=none, label=<<font color="black">Block[19160]</font>>]
    node19160_name -> node19160 [arrowhead=none, color="black", style=dashed]
    node19160 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/>[1] return resultCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19160 -> cluster2593_exit [color="black"]
    node19161_name [shape=none, label=<<font color="black">Call[19161]</font>>]
    node19161_name -> node19161 [arrowhead=none, color="black", style=dashed]
    node19161 [shape=cds, label=<<font color="black">%2 = clo&lt;IteratorValue&gt;(next)</font>> color="black" fillcolor="white", style=filled]
    node19161 -> node19162 [color="black"]
    node19162_name [shape=none, label=<<font color="black">Call[19162]</font>>]
    node19162_name -> node19162 [arrowhead=none, color="black", style=dashed]
    node19162 [shape=cds, label=<<font color="black">%3 = clo&lt;Completion&gt;(%2)</font>> color="black" fillcolor="white", style=filled]
    node19162 -> node19163 [color="black"]
    node19163_name [shape=none, label=<<font color="black">Block[19163]</font>>]
    node19163_name -> node19163 [arrowhead=none, color="black", style=dashed]
    node19163 [shape=box, label=<<font color="black">[0] let nextValue = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19163 -> node19164 [color="black"]
    node19164_name [shape=none, label=<<font color="black">Branch[19164]</font>>]
    node19164_name -> node19164 [arrowhead=none, color="black", style=dashed]
    node19164 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? nextValue) (! (= nextValue.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node19164 -> node19165 [label=<<font color="black">true</font>> color="black"]
    node19164 -> node19166 [label=<<font color="black">false</font>> color="black"]
    node19165_name [shape=none, label=<<font color="black">Block[19165]</font>>]
    node19165_name -> node19165 [arrowhead=none, color="black", style=dashed]
    node19165 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19165 -> node19166 [color="black"]
    node19166_name [shape=none, label=<<font color="black">Block[19166]</font>>]
    node19166_name -> node19166 [arrowhead=none, color="black", style=dashed]
    node19166 [shape=box, label=<<font color="black">[0] [? nextValue]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19166 -> node19167 [color="black"]
    node19167_name [shape=none, label=<<font color="black">Call[19167]</font>>]
    node19167_name -> node19167 [arrowhead=none, color="black", style=dashed]
    node19167 [shape=cds, label=<<font color="black">%4 = clo&lt;Call&gt;(promiseResolve, constructor, (new [nextValue])[#1300])</font>> color="black" fillcolor="white", style=filled]
    node19167 -> node19168 [color="black"]
    node19168_name [shape=none, label=<<font color="black">Block[19168]</font>>]
    node19168_name -> node19168 [arrowhead=none, color="black", style=dashed]
    node19168 [shape=box, label=<<font color="black">[0] let nextPromise = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19168 -> node19169 [color="black"]
    node19169_name [shape=none, label=<<font color="black">Call[19169]</font>>]
    node19169_name -> node19169 [arrowhead=none, color="black", style=dashed]
    node19169 [shape=cds, label=<<font color="black">%5 = clo&lt;Invoke&gt;(nextPromise, &quot;then&quot;, (new [resultCapability.Resolve, resultCapability.Reject])[#1301])</font>> color="black" fillcolor="white", style=filled]
    node19169 -> node19170 [color="black"]
    node19170_name [shape=none, label=<<font color="black">Block[19170]</font>>]
    node19170_name -> node19170 [arrowhead=none, color="black", style=dashed]
    node19170 [shape=box, label=<<font color="black">[0] [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19170 -> node19152 [color="black"]
  }
}