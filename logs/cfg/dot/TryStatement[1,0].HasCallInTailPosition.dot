digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1774 {
    label = "def <SYNTAX>:TryStatement[1,0].HasCallInTailPosition(this: Ast:TryStatement[1,0], call: Unknown): Boolean"
    style = rounded
    cluster1774_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1774_entry_name -> cluster1774_entry [arrowhead=none, color="black", style=dashed]
    cluster1774_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1774_entry -> node9844 [color="black"]
    cluster1774_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1774_exit_name -> cluster1774_exit [arrowhead=none, color="black", style=dashed]
    cluster1774_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9844_name [shape=none, label=<<font color="black">Call[9844]</font>>]
    node9844_name -> node9844 [arrowhead=none, color="black", style=dashed]
    node9844 [shape=cds, label=<<font color="black">%0 = this[1]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9844 -> node9845 [color="black"]
    node9845_name [shape=none, label=<<font color="black">Block[9845]</font>>]
    node9845_name -> node9845 [arrowhead=none, color="black", style=dashed]
    node9845 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9845 -> cluster1774_exit [color="black"]
  }
}