digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1615 {
    label = "def <SYNTAX>:AsyncGeneratorExpression[0,0].Evaluation(this: Ast:AsyncGeneratorExpression[0,0]): Unknown"
    style = rounded
    cluster1615_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1615_entry_name -> cluster1615_entry [arrowhead=none, color="black", style=dashed]
    cluster1615_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1615_entry -> node8776 [color="black"]
    cluster1615_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1615_exit_name -> cluster1615_exit [arrowhead=none, color="black", style=dashed]
    cluster1615_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8776_name [shape=none, label=<<font color="black">Call[8776]</font>>]
    node8776_name -> node8776 [arrowhead=none, color="black", style=dashed]
    node8776 [shape=cds, label=<<font color="black">%0 = this-&gt;InstantiateAsyncGeneratorFunctionExpression()</font>> color="black" fillcolor="white", style=filled]
    node8776 -> node8777 [color="black"]
    node8777_name [shape=none, label=<<font color="black">Block[8777]</font>>]
    node8777_name -> node8777 [arrowhead=none, color="black", style=dashed]
    node8777 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8777 -> cluster1615_exit [color="black"]
  }
}