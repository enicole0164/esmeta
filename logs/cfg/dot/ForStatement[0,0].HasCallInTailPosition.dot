digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1741 {
    label = "def <SYNTAX>:ForStatement[0,0].HasCallInTailPosition(this: Ast:ForStatement[0,0], call: Unknown): Boolean"
    style = rounded
    cluster1741_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1741_entry_name -> cluster1741_entry [arrowhead=none, color="black", style=dashed]
    cluster1741_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1741_entry -> node9718 [color="black"]
    cluster1741_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1741_exit_name -> cluster1741_exit [arrowhead=none, color="black", style=dashed]
    cluster1741_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9718_name [shape=none, label=<<font color="black">Call[9718]</font>>]
    node9718_name -> node9718 [arrowhead=none, color="black", style=dashed]
    node9718 [shape=cds, label=<<font color="black">%0 = this[3]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9718 -> node9719 [color="black"]
    node9719_name [shape=none, label=<<font color="black">Block[9719]</font>>]
    node9719_name -> node9719 [arrowhead=none, color="black", style=dashed]
    node9719 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9719 -> cluster1741_exit [color="black"]
  }
}