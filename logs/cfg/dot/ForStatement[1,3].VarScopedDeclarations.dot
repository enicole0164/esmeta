digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster415 {
    label = "def <SYNTAX>:ForStatement[1,3].VarScopedDeclarations(this: Ast:ForStatement[1,3]): List[Ast]"
    style = rounded
    cluster415_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster415_entry_name -> cluster415_entry [arrowhead=none, color="black", style=dashed]
    cluster415_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster415_entry -> node2122 [color="black"]
    cluster415_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster415_exit_name -> cluster415_exit [arrowhead=none, color="black", style=dashed]
    cluster415_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2122_name [shape=none, label=<<font color="black">Call[2122]</font>>]
    node2122_name -> node2122 [arrowhead=none, color="black", style=dashed]
    node2122 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2122 -> node2123 [color="black"]
    node2123_name [shape=none, label=<<font color="black">Block[2123]</font>>]
    node2123_name -> node2123 [arrowhead=none, color="black", style=dashed]
    node2123 [shape=box, label=<<font color="black">[0] let declarations1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2123 -> node2124 [color="black"]
    node2124_name [shape=none, label=<<font color="black">Call[2124]</font>>]
    node2124_name -> node2124 [arrowhead=none, color="black", style=dashed]
    node2124 [shape=cds, label=<<font color="black">%1 = this[3]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2124 -> node2125 [color="black"]
    node2125_name [shape=none, label=<<font color="black">Block[2125]</font>>]
    node2125_name -> node2125 [arrowhead=none, color="black", style=dashed]
    node2125 [shape=box, label=<<font color="black">[0] let declarations2 = %1<BR ALIGN="LEFT"/>[1] return (list-concat declarations1 declarations2)[#242]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2125 -> cluster415_exit [color="black"]
  }
}