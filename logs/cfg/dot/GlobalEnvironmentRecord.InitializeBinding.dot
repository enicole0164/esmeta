digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1001 {
    label = "def <CONC>:GlobalEnvironmentRecord.InitializeBinding(envRec: GlobalEnvironmentRecord, N: String, V: ESValue): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster1001_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1001_entry_name -> cluster1001_entry [arrowhead=none, color="black", style=dashed]
    cluster1001_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1001_entry -> node3712 [color="black"]
    cluster1001_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1001_exit_name -> cluster1001_exit [arrowhead=none, color="black", style=dashed]
    cluster1001_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3712_name [shape=none, label=<<font color="black">Block[3712]</font>>]
    node3712_name -> node3712 [arrowhead=none, color="black", style=dashed]
    node3712 [shape=box, label=<<font color="black">[0] let DclRec = envRec.DeclarativeRecord<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3712 -> node3713 [color="black"]
    node3713_name [shape=none, label=<<font color="black">Call[3713]</font>>]
    node3713_name -> node3713 [arrowhead=none, color="black", style=dashed]
    node3713 [shape=cds, label=<<font color="black">%0 = DclRec-&gt;HasBinding(N)</font>> color="black" fillcolor="white", style=filled]
    node3713 -> node3714 [color="black"]
    node3714_name [shape=none, label=<<font color="black">Branch[3714]</font>>]
    node3714_name -> node3714 [arrowhead=none, color="black", style=dashed]
    node3714 [shape=diamond, label=<<font color="black">(= [! %0] true)</font>> color="black" fillcolor="white", style=filled]
    node3714 -> node3715 [label=<<font color="black">true</font>> color="black"]
    node3714 -> node3717 [label=<<font color="black">false</font>> color="black"]
    node3715_name [shape=none, label=<<font color="black">Call[3715]</font>>]
    node3715_name -> node3715 [arrowhead=none, color="black", style=dashed]
    node3715 [shape=cds, label=<<font color="black">%1 = DclRec-&gt;InitializeBinding(N, V)</font>> color="black" fillcolor="white", style=filled]
    node3715 -> node3716 [color="black"]
    node3717_name [shape=none, label=<<font color="black">Block[3717]</font>>]
    node3717_name -> node3717 [arrowhead=none, color="black", style=dashed]
    node3717 [shape=box, label=<<font color="black">[0] assert (yet &quot;If the binding exists, it must be in the object Environment Record.&quot;)<BR ALIGN="LEFT"/>[1] let ObjRec = envRec.ObjectRecord<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3717 -> node3718 [color="black"]
    node3716_name [shape=none, label=<<font color="black">Block[3716]</font>>]
    node3716_name -> node3716 [arrowhead=none, color="black", style=dashed]
    node3716 [shape=box, label=<<font color="black">[0] return [! %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3716 -> cluster1001_exit [color="black"]
    node3718_name [shape=none, label=<<font color="black">Call[3718]</font>>]
    node3718_name -> node3718 [arrowhead=none, color="black", style=dashed]
    node3718 [shape=cds, label=<<font color="black">%2 = ObjRec-&gt;InitializeBinding(N, V)</font>> color="black" fillcolor="white", style=filled]
    node3718 -> node3719 [color="black"]
    node3719_name [shape=none, label=<<font color="black">Block[3719]</font>>]
    node3719_name -> node3719 [arrowhead=none, color="black", style=dashed]
    node3719 [shape=box, label=<<font color="black">[0] return [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3719 -> cluster1001_exit [color="black"]
  }
}