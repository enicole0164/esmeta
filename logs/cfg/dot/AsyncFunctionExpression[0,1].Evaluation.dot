digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1710 {
    label = "def <SYNTAX>:AsyncFunctionExpression[0,1].Evaluation(this: Ast:AsyncFunctionExpression[0,1]): Unknown"
    style = rounded
    cluster1710_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1710_entry_name -> cluster1710_entry [arrowhead=none, color="black", style=dashed]
    cluster1710_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1710_entry -> node9625 [color="black"]
    cluster1710_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1710_exit_name -> cluster1710_exit [arrowhead=none, color="black", style=dashed]
    cluster1710_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9625_name [shape=none, label=<<font color="black">Call[9625]</font>>]
    node9625_name -> node9625 [arrowhead=none, color="black", style=dashed]
    node9625 [shape=cds, label=<<font color="black">%0 = this-&gt;InstantiateAsyncFunctionExpression()</font>> color="black" fillcolor="white", style=filled]
    node9625 -> node9626 [color="black"]
    node9626_name [shape=none, label=<<font color="black">Block[9626]</font>>]
    node9626_name -> node9626 [arrowhead=none, color="black", style=dashed]
    node9626 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9626 -> cluster1710_exit [color="black"]
  }
}