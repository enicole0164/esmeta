digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1680 {
    label = "def <SYNTAX>:FieldDefinition[0,1].ClassFieldDefinitionEvaluation(this: Ast:FieldDefinition[0,1], homeObject: Unknown): Normal[ClassFieldDefinitionRecord] | Abrupt"
    style = rounded
    cluster1680_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1680_entry_name -> cluster1680_entry [arrowhead=none, color="black", style=dashed]
    cluster1680_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1680_entry -> node8948 [color="black"]
    cluster1680_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1680_exit_name -> cluster1680_exit [arrowhead=none, color="black", style=dashed]
    cluster1680_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8948_name [shape=none, label=<<font color="black">Call[8948]</font>>]
    node8948_name -> node8948 [arrowhead=none, color="black", style=dashed]
    node8948 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node8948 -> node8949 [color="black"]
    node8949_name [shape=none, label=<<font color="black">Block[8949]</font>>]
    node8949_name -> node8949 [arrowhead=none, color="black", style=dashed]
    node8949 [shape=box, label=<<font color="black">[0] let name = %0<BR ALIGN="LEFT"/>[1] [? name]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8949 -> node8950 [color="black"]
    node8950_name [shape=none, label=<<font color="black">Branch[8950]</font>>]
    node8950_name -> node8950 [arrowhead=none, color="black", style=dashed]
    node8950 [shape=diamond, label=<<font color="black">(! (= this[1] absent))</font>> color="black" fillcolor="white", style=filled]
    node8950 -> node8951 [label=<<font color="black">true</font>> color="black"]
    node8950 -> node8956 [label=<<font color="black">false</font>> color="black"]
    node8951_name [shape=none, label=<<font color="black">Block[8951]</font>>]
    node8951_name -> node8951 [arrowhead=none, color="black", style=dashed]
    node8951 [shape=box, label=<<font color="black">[0] let formalParameterList = |FormalParameters|[TT]&lt;0&gt;<BR ALIGN="LEFT"/>[1] let env = @EXECUTION_STACK[0].LexicalEnvironment<BR ALIGN="LEFT"/>[2] let privateEnv = @EXECUTION_STACK[0].PrivateEnvironment<BR ALIGN="LEFT"/>[3] let sourceText = &quot;&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8951 -> node8952 [color="black"]
    node8956_name [shape=none, label=<<font color="black">Block[8956]</font>>]
    node8956_name -> node8956 [arrowhead=none, color="black", style=dashed]
    node8956 [shape=box, label=<<font color="black">[0] let initializer = ~empty~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8956 -> node8957 [color="black"]
    node8952_name [shape=none, label=<<font color="black">Call[8952]</font>>]
    node8952_name -> node8952 [arrowhead=none, color="black", style=dashed]
    node8952 [shape=cds, label=<<font color="black">%1 = clo&lt;OrdinaryFunctionCreate&gt;(@EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Function.prototype%&quot;], sourceText, formalParameterList, this[1], ~non-lexical-this~, env, privateEnv)</font>> color="black" fillcolor="white", style=filled]
    node8952 -> node8953 [color="black"]
    node8957_name [shape=none, label=<<font color="black">Block[8957]</font>>]
    node8957_name -> node8957 [arrowhead=none, color="black", style=dashed]
    node8957 [shape=box, label=<<font color="black">[0] return (new ClassFieldDefinitionRecord(&quot;Name&quot; -&gt; name, &quot;Initializer&quot; -&gt; initializer))[#691]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8957 -> cluster1680_exit [color="black"]
    node8953_name [shape=none, label=<<font color="black">Block[8953]</font>>]
    node8953_name -> node8953 [arrowhead=none, color="black", style=dashed]
    node8953 [shape=box, label=<<font color="black">[0] let initializer = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8953 -> node8954 [color="black"]
    node8954_name [shape=none, label=<<font color="black">Call[8954]</font>>]
    node8954_name -> node8954 [arrowhead=none, color="black", style=dashed]
    node8954 [shape=cds, label=<<font color="black">%2 = clo&lt;MakeMethod&gt;(initializer, homeObject)</font>> color="black" fillcolor="white", style=filled]
    node8954 -> node8955 [color="black"]
    node8955_name [shape=none, label=<<font color="black">Block[8955]</font>>]
    node8955_name -> node8955 [arrowhead=none, color="black", style=dashed]
    node8955 [shape=box, label=<<font color="black">[0] initializer.ClassFieldInitializerName = name<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8955 -> node8957 [color="black"]
  }
}