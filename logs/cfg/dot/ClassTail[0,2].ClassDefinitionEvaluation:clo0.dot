digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1693 {
    label = "def <BUILTIN-CLO>:ClassTail[0,2].ClassDefinitionEvaluation:clo0(this: Unknown, argumentsList: Unknown, NewTarget: Unknown): Unknown"
    style = rounded
    cluster1693_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1693_entry_name -> cluster1693_entry [arrowhead=none, color="black", style=dashed]
    cluster1693_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1693_entry -> node9268 [color="black"]
    cluster1693_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1693_exit_name -> cluster1693_exit [arrowhead=none, color="black", style=dashed]
    cluster1693_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9268_name [shape=none, label=<<font color="black">Block[9268]</font>>]
    node9268_name -> node9268 [arrowhead=none, color="black", style=dashed]
    node9268 [shape=box, label=<<font color="black">[0] let args = argumentsList<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9268 -> node9269 [color="black"]
    node9269_name [shape=none, label=<<font color="black">Branch[9269]</font>>]
    node9269_name -> node9269 [arrowhead=none, color="black", style=dashed]
    node9269 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white", style=filled]
    node9269 -> node9270 [label=<<font color="black">true</font>> color="black"]
    node9269 -> node9271 [label=<<font color="black">false</font>> color="black"]
    node9270_name [shape=none, label=<<font color="black">Block[9270]</font>>]
    node9270_name -> node9270 [arrowhead=none, color="black", style=dashed]
    node9270 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#720])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9270 -> cluster1693_exit [color="black"]
    node9271_name [shape=none, label=<<font color="black">Block[9271]</font>>]
    node9271_name -> node9271 [arrowhead=none, color="black", style=dashed]
    node9271 [shape=box, label=<<font color="black">[0] let F = @EXECUTION_STACK[0].Function<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9271 -> node9272 [color="black"]
    node9272_name [shape=none, label=<<font color="black">Branch[9272]</font>>]
    node9272_name -> node9272 [arrowhead=none, color="black", style=dashed]
    node9272 [shape=diamond, label=<<font color="black">(= F.ConstructorKind ~derived~)</font>> color="black" fillcolor="white", style=filled]
    node9272 -> node9273 [label=<<font color="black">true</font>> color="black"]
    node9272 -> node9281 [label=<<font color="black">false</font>> color="black"]
    node9273_name [shape=none, label=<<font color="black">Block[9273]</font>>]
    node9273_name -> node9273 [arrowhead=none, color="black", style=dashed]
    node9273 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9273 -> node9274 [color="black"]
    node9281_name [shape=none, label=<<font color="black">Block[9281]</font>>]
    node9281_name -> node9281 [arrowhead=none, color="black", style=dashed]
    node9281 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9281 -> node9282 [color="black"]
    node9274_name [shape=none, label=<<font color="black">Call[9274]</font>>]
    node9274_name -> node9274 [arrowhead=none, color="black", style=dashed]
    node9274 [shape=cds, label=<<font color="black">%0 = F-&gt;GetPrototypeOf()</font>> color="black" fillcolor="white", style=filled]
    node9274 -> node9275 [color="black"]
    node9282_name [shape=none, label=<<font color="black">Call[9282]</font>>]
    node9282_name -> node9282 [arrowhead=none, color="black", style=dashed]
    node9282 [shape=cds, label=<<font color="black">%3 = clo&lt;OrdinaryCreateFromConstructor&gt;(NewTarget, &quot;%Object.prototype%&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9282 -> node9283 [color="black"]
    node9275_name [shape=none, label=<<font color="black">Block[9275]</font>>]
    node9275_name -> node9275 [arrowhead=none, color="black", style=dashed]
    node9275 [shape=box, label=<<font color="black">[0] let func = [! %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9275 -> node9276 [color="black"]
    node9283_name [shape=none, label=<<font color="black">Block[9283]</font>>]
    node9283_name -> node9283 [arrowhead=none, color="black", style=dashed]
    node9283 [shape=box, label=<<font color="black">[0] let result = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9283 -> node9284 [color="black"]
    node9276_name [shape=none, label=<<font color="black">Call[9276]</font>>]
    node9276_name -> node9276 [arrowhead=none, color="black", style=dashed]
    node9276 [shape=cds, label=<<font color="black">%1 = clo&lt;IsConstructor&gt;(func)</font>> color="black" fillcolor="white", style=filled]
    node9276 -> node9277 [color="black"]
    node9284_name [shape=none, label=<<font color="black">Call[9284]</font>>]
    node9284_name -> node9284 [arrowhead=none, color="black", style=dashed]
    node9284 [shape=cds, label=<<font color="black">%4 = clo&lt;InitializeInstanceElements&gt;(result, F)</font>> color="black" fillcolor="white", style=filled]
    node9284 -> node9285 [color="black"]
    node9277_name [shape=none, label=<<font color="black">Branch[9277]</font>>]
    node9277_name -> node9277 [arrowhead=none, color="black", style=dashed]
    node9277 [shape=diamond, label=<<font color="black">(= %1 false)</font>> color="black" fillcolor="white", style=filled]
    node9277 -> node9278 [label=<<font color="black">true</font>> color="black"]
    node9277 -> node9279 [label=<<font color="black">false</font>> color="black"]
    node9285_name [shape=none, label=<<font color="black">Block[9285]</font>>]
    node9285_name -> node9285 [arrowhead=none, color="black", style=dashed]
    node9285 [shape=box, label=<<font color="black">[0] [? %4]<BR ALIGN="LEFT"/>[1] return result<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9285 -> cluster1693_exit [color="black"]
    node9278_name [shape=none, label=<<font color="black">Block[9278]</font>>]
    node9278_name -> node9278 [arrowhead=none, color="black", style=dashed]
    node9278 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#721])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9278 -> cluster1693_exit [color="black"]
    node9279_name [shape=none, label=<<font color="black">Call[9279]</font>>]
    node9279_name -> node9279 [arrowhead=none, color="black", style=dashed]
    node9279 [shape=cds, label=<<font color="black">%2 = clo&lt;Construct&gt;(func, args, NewTarget)</font>> color="black" fillcolor="white", style=filled]
    node9279 -> node9280 [color="black"]
    node9280_name [shape=none, label=<<font color="black">Block[9280]</font>>]
    node9280_name -> node9280 [arrowhead=none, color="black", style=dashed]
    node9280 [shape=box, label=<<font color="black">[0] let result = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9280 -> node9284 [color="black"]
  }
}