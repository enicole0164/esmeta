digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster28 {
    label = "def <NUM>:Number::bitwiseAND(x: Number, y: Number): Unknown["IntegralNumber"]"
    style = rounded
    cluster28_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster28_entry_name -> cluster28_entry [arrowhead=none, color="black", style=dashed]
    cluster28_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster28_entry -> node305 [color="black"]
    cluster28_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster28_exit_name -> cluster28_exit [arrowhead=none, color="black", style=dashed]
    cluster28_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node305_name [shape=none, label=<<font color="black">Call[305]</font>>]
    node305_name -> node305 [arrowhead=none, color="black", style=dashed]
    node305 [shape=cds, label=<<font color="black">%0 = clo&lt;NumberBitwiseOp&gt;(&quot;&amp;&quot;, x, y)</font>> color="black" fillcolor="white", style=filled]
    node305 -> node306 [color="black"]
    node306_name [shape=none, label=<<font color="black">Block[306]</font>>]
    node306_name -> node306 [arrowhead=none, color="black", style=dashed]
    node306 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node306 -> cluster28_exit [color="black"]
  }
}