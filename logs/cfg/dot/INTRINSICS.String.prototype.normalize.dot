digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2180 {
    label = "def <BUILTIN>:INTRINSICS.String.prototype.normalize(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2180_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2180_entry_name -> cluster2180_entry [arrowhead=none, color="black", style=dashed]
    cluster2180_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2180_entry -> node13493 [color="black"]
    cluster2180_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2180_exit_name -> cluster2180_exit [arrowhead=none, color="black", style=dashed]
    cluster2180_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node13493_name [shape=none, label=<<font color="black">Branch[13493]</font>>]
    node13493_name -> node13493 [arrowhead=none, color="black", style=dashed]
    node13493 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node13493 -> node13494 [label=<<font color="black">true</font>> color="black"]
    node13493 -> node13495 [label=<<font color="black">false</font>> color="black"]
    node13494_name [shape=none, label=<<font color="black">Block[13494]</font>>]
    node13494_name -> node13494 [arrowhead=none, color="black", style=dashed]
    node13494 [shape=box, label=<<font color="black">[0] let form = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13494 -> node13496 [color="black"]
    node13495_name [shape=none, label=<<font color="black">Block[13495]</font>>]
    node13495_name -> node13495 [arrowhead=none, color="black", style=dashed]
    node13495 [shape=box, label=<<font color="black">[0] let form = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13495 -> node13496 [color="black"]
    node13496_name [shape=none, label=<<font color="black">Call[13496]</font>>]
    node13496_name -> node13496 [arrowhead=none, color="black", style=dashed]
    node13496 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireObjectCoercible&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node13496 -> node13497 [color="black"]
    node13497_name [shape=none, label=<<font color="black">Block[13497]</font>>]
    node13497_name -> node13497 [arrowhead=none, color="black", style=dashed]
    node13497 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13497 -> node13498 [color="black"]
    node13498_name [shape=none, label=<<font color="black">Call[13498]</font>>]
    node13498_name -> node13498 [arrowhead=none, color="black", style=dashed]
    node13498 [shape=cds, label=<<font color="black">%1 = clo&lt;ToString&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node13498 -> node13499 [color="black"]
    node13499_name [shape=none, label=<<font color="black">Block[13499]</font>>]
    node13499_name -> node13499 [arrowhead=none, color="black", style=dashed]
    node13499 [shape=box, label=<<font color="black">[0] let S = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13499 -> node13500 [color="black"]
    node13500_name [shape=none, label=<<font color="black">Branch[13500]</font>>]
    node13500_name -> node13500 [arrowhead=none, color="black", style=dashed]
    node13500 [shape=diamond, label=<<font color="black">(= form undefined)</font>> color="black" fillcolor="white", style=filled]
    node13500 -> node13501 [label=<<font color="black">true</font>> color="black"]
    node13500 -> node13502 [label=<<font color="black">false</font>> color="black"]
    node13501_name [shape=none, label=<<font color="black">Block[13501]</font>>]
    node13501_name -> node13501 [arrowhead=none, color="black", style=dashed]
    node13501 [shape=box, label=<<font color="black">[0] let f = &quot;NFC&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13501 -> node13504 [color="black"]
    node13502_name [shape=none, label=<<font color="black">Call[13502]</font>>]
    node13502_name -> node13502 [arrowhead=none, color="black", style=dashed]
    node13502 [shape=cds, label=<<font color="black">%2 = clo&lt;ToString&gt;(form)</font>> color="black" fillcolor="white", style=filled]
    node13502 -> node13503 [color="black"]
    node13504_name [shape=none, label=<<font color="black">Branch[13504]</font>>]
    node13504_name -> node13504 [arrowhead=none, color="black", style=dashed]
    node13504 [shape=diamond, label=<<font color="black">(! (|| (|| (|| (= f &quot;NFC&quot;) (= f &quot;NFD&quot;)) (= f &quot;NFKC&quot;)) (= f &quot;NFKD&quot;)))</font>> color="black" fillcolor="white", style=filled]
    node13504 -> node13505 [label=<<font color="black">true</font>> color="black"]
    node13504 -> node13506 [label=<<font color="black">false</font>> color="black"]
    node13503_name [shape=none, label=<<font color="black">Block[13503]</font>>]
    node13503_name -> node13503 [arrowhead=none, color="black", style=dashed]
    node13503 [shape=box, label=<<font color="black">[0] let f = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13503 -> node13504 [color="black"]
    node13505_name [shape=none, label=<<font color="black">Block[13505]</font>>]
    node13505_name -> node13505 [arrowhead=none, color="black", style=dashed]
    node13505 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%RangeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#954])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13505 -> cluster2180_exit [color="black"]
    node13506_name [shape=none, label=<<font color="black">Block[13506]</font>>]
    node13506_name -> node13506 [arrowhead=none, color="black", style=dashed]
    node13506 [shape=box, label=<<font color="black">[0] (yet &quot;Let _ns_ be the String value that is the result of normalizing _S_ into the normalization form named by _f_ as specified in &lt;a href=\&quot;https://unicode.org/reports/tr15/\&quot;&gt;https://unicode.org/reports/tr15/&lt;/a&gt;.&quot;)<BR ALIGN="LEFT"/>[1] return ns<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13506 -> cluster2180_exit [color="black"]
  }
}