digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2486 {
    label = "def <BUILTIN>:INTRINSICS.get ArrayBuffer.prototype.byteLength(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2486_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2486_entry_name -> cluster2486_entry [arrowhead=none, color="black", style=dashed]
    cluster2486_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2486_entry -> node17483 [color="black"]
    cluster2486_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2486_exit_name -> cluster2486_exit [arrowhead=none, color="black", style=dashed]
    cluster2486_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17483_name [shape=none, label=<<font color="black">Block[17483]</font>>]
    node17483_name -> node17483 [arrowhead=none, color="black", style=dashed]
    node17483 [shape=box, label=<<font color="black">[0] let O = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17483 -> node17484 [color="black"]
    node17484_name [shape=none, label=<<font color="black">Call[17484]</font>>]
    node17484_name -> node17484 [arrowhead=none, color="black", style=dashed]
    node17484 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireInternalSlot&gt;(O, &quot;ArrayBufferData&quot;)</font>> color="black" fillcolor="white", style=filled]
    node17484 -> node17485 [color="black"]
    node17485_name [shape=none, label=<<font color="black">Block[17485]</font>>]
    node17485_name -> node17485 [arrowhead=none, color="black", style=dashed]
    node17485 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17485 -> node17486 [color="black"]
    node17486_name [shape=none, label=<<font color="black">Call[17486]</font>>]
    node17486_name -> node17486 [arrowhead=none, color="black", style=dashed]
    node17486 [shape=cds, label=<<font color="black">%1 = clo&lt;IsSharedArrayBuffer&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node17486 -> node17487 [color="black"]
    node17487_name [shape=none, label=<<font color="black">Branch[17487]</font>>]
    node17487_name -> node17487 [arrowhead=none, color="black", style=dashed]
    node17487 [shape=diamond, label=<<font color="black">(= %1 true)</font>> color="black" fillcolor="white", style=filled]
    node17487 -> node17488 [label=<<font color="black">true</font>> color="black"]
    node17487 -> node17489 [label=<<font color="black">false</font>> color="black"]
    node17488_name [shape=none, label=<<font color="black">Block[17488]</font>>]
    node17488_name -> node17488 [arrowhead=none, color="black", style=dashed]
    node17488 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1151])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17488 -> cluster2486_exit [color="black"]
    node17489_name [shape=none, label=<<font color="black">Call[17489]</font>>]
    node17489_name -> node17489 [arrowhead=none, color="black", style=dashed]
    node17489 [shape=cds, label=<<font color="black">%2 = clo&lt;IsDetachedBuffer&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node17489 -> node17490 [color="black"]
    node17490_name [shape=none, label=<<font color="black">Branch[17490]</font>>]
    node17490_name -> node17490 [arrowhead=none, color="black", style=dashed]
    node17490 [shape=diamond, label=<<font color="black">(= %2 true)</font>> color="black" fillcolor="white", style=filled]
    node17490 -> node17491 [label=<<font color="black">true</font>> color="black"]
    node17490 -> node17492 [label=<<font color="black">false</font>> color="black"]
    node17491_name [shape=none, label=<<font color="black">Block[17491]</font>>]
    node17491_name -> node17491 [arrowhead=none, color="black", style=dashed]
    node17491 [shape=box, label=<<font color="black">[0] return 0.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17491 -> cluster2486_exit [color="black"]
    node17492_name [shape=none, label=<<font color="black">Block[17492]</font>>]
    node17492_name -> node17492 [arrowhead=none, color="black", style=dashed]
    node17492 [shape=box, label=<<font color="black">[0] let length = O.ArrayBufferByteLength<BR ALIGN="LEFT"/>[1] return ([number] length)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17492 -> cluster2486_exit [color="black"]
  }
}