digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster570 {
    label = "def <SYNTAX>:ForInOfStatement[0,0].ContainsUndefinedBreakTarget(this: Ast:ForInOfStatement[0,0], labelSet: Unknown): Boolean"
    style = rounded
    cluster570_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster570_entry_name -> cluster570_entry [arrowhead=none, color="black", style=dashed]
    cluster570_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster570_entry -> node2569 [color="black"]
    cluster570_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster570_exit_name -> cluster570_exit [arrowhead=none, color="black", style=dashed]
    cluster570_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2569_name [shape=none, label=<<font color="black">Call[2569]</font>>]
    node2569_name -> node2569 [arrowhead=none, color="black", style=dashed]
    node2569 [shape=cds, label=<<font color="black">%0 = this[2]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2569 -> node2570 [color="black"]
    node2570_name [shape=none, label=<<font color="black">Block[2570]</font>>]
    node2570_name -> node2570 [arrowhead=none, color="black", style=dashed]
    node2570 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2570 -> cluster570_exit [color="black"]
  }
}