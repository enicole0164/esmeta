digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster585 {
    label = "def <SYNTAX>:CaseBlock[1,1].ContainsUndefinedBreakTarget(this: Ast:CaseBlock[1,1], labelSet: Unknown): Boolean"
    style = rounded
    cluster585_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster585_entry_name -> cluster585_entry [arrowhead=none, color="black", style=dashed]
    cluster585_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster585_entry -> node2608 [color="black"]
    cluster585_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster585_exit_name -> cluster585_exit [arrowhead=none, color="black", style=dashed]
    cluster585_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2608_name [shape=none, label=<<font color="black">Branch[2608]</font>>]
    node2608_name -> node2608 [arrowhead=none, color="black", style=dashed]
    node2608 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node2608 -> node2609 [label=<<font color="black">true</font>> color="black"]
    node2608 -> node2612 [label=<<font color="black">false</font>> color="black"]
    node2609_name [shape=none, label=<<font color="black">Call[2609]</font>>]
    node2609_name -> node2609 [arrowhead=none, color="black", style=dashed]
    node2609 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2609 -> node2610 [color="black"]
    node2612_name [shape=none, label=<<font color="black">Call[2612]</font>>]
    node2612_name -> node2612 [arrowhead=none, color="black", style=dashed]
    node2612 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2612 -> node2613 [color="black"]
    node2610_name [shape=none, label=<<font color="black">Branch[2610]</font>>]
    node2610_name -> node2610 [arrowhead=none, color="black", style=dashed]
    node2610 [shape=diamond, label=<<font color="black">(= %0 true)</font>> color="black" fillcolor="white", style=filled]
    node2610 -> node2611 [label=<<font color="black">true</font>> color="black"]
    node2610 -> node2612 [label=<<font color="black">false</font>> color="black"]
    node2613_name [shape=none, label=<<font color="black">Branch[2613]</font>>]
    node2613_name -> node2613 [arrowhead=none, color="black", style=dashed]
    node2613 [shape=diamond, label=<<font color="black">(= %1 true)</font>> color="black" fillcolor="white", style=filled]
    node2613 -> node2614 [label=<<font color="black">true</font>> color="black"]
    node2613 -> node2615 [label=<<font color="black">false</font>> color="black"]
    node2611_name [shape=none, label=<<font color="black">Block[2611]</font>>]
    node2611_name -> node2611 [arrowhead=none, color="black", style=dashed]
    node2611 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2611 -> cluster585_exit [color="black"]
    node2614_name [shape=none, label=<<font color="black">Block[2614]</font>>]
    node2614_name -> node2614 [arrowhead=none, color="black", style=dashed]
    node2614 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2614 -> cluster585_exit [color="black"]
    node2615_name [shape=none, label=<<font color="black">Branch[2615]</font>>]
    node2615_name -> node2615 [arrowhead=none, color="black", style=dashed]
    node2615 [shape=diamond, label=<<font color="black">(= this[2] absent)</font>> color="black" fillcolor="white", style=filled]
    node2615 -> node2616 [label=<<font color="black">true</font>> color="black"]
    node2615 -> node2617 [label=<<font color="black">false</font>> color="black"]
    node2616_name [shape=none, label=<<font color="black">Block[2616]</font>>]
    node2616_name -> node2616 [arrowhead=none, color="black", style=dashed]
    node2616 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2616 -> cluster585_exit [color="black"]
    node2617_name [shape=none, label=<<font color="black">Call[2617]</font>>]
    node2617_name -> node2617 [arrowhead=none, color="black", style=dashed]
    node2617 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2617 -> node2618 [color="black"]
    node2618_name [shape=none, label=<<font color="black">Block[2618]</font>>]
    node2618_name -> node2618 [arrowhead=none, color="black", style=dashed]
    node2618 [shape=box, label=<<font color="black">[0] return %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2618 -> cluster585_exit [color="black"]
  }
}