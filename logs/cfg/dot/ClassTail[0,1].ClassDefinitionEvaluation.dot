digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1692 {
    label = "def <SYNTAX>:ClassTail[0,1].ClassDefinitionEvaluation(this: Ast:ClassTail[0,1], classBinding: Unknown, className: Unknown): Normal[FunctionObject] | Abrupt"
    style = rounded
    cluster1692_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1692_entry_name -> cluster1692_entry [arrowhead=none, color="black", style=dashed]
    cluster1692_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1692_entry -> node9141 [color="black"]
    cluster1692_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1692_exit_name -> cluster1692_exit [arrowhead=none, color="black", style=dashed]
    cluster1692_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9141_name [shape=none, label=<<font color="black">Block[9141]</font>>]
    node9141_name -> node9141 [arrowhead=none, color="black", style=dashed]
    node9141 [shape=box, label=<<font color="black">[0] let env = @EXECUTION_STACK[0].LexicalEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9141 -> node9142 [color="black"]
    node9142_name [shape=none, label=<<font color="black">Call[9142]</font>>]
    node9142_name -> node9142 [arrowhead=none, color="black", style=dashed]
    node9142 [shape=cds, label=<<font color="black">%0 = clo&lt;NewDeclarativeEnvironment&gt;(env)</font>> color="black" fillcolor="white", style=filled]
    node9142 -> node9143 [color="black"]
    node9143_name [shape=none, label=<<font color="black">Block[9143]</font>>]
    node9143_name -> node9143 [arrowhead=none, color="black", style=dashed]
    node9143 [shape=box, label=<<font color="black">[0] let classEnv = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9143 -> node9144 [color="black"]
    node9144_name [shape=none, label=<<font color="black">Branch[9144]</font>>]
    node9144_name -> node9144 [arrowhead=none, color="black", style=dashed]
    node9144 [shape=diamond, label=<<font color="black">(! (= classBinding undefined))</font>> color="black" fillcolor="white", style=filled]
    node9144 -> node9145 [label=<<font color="black">true</font>> color="black"]
    node9144 -> node9146 [label=<<font color="black">false</font>> color="black"]
    node9145_name [shape=none, label=<<font color="black">Call[9145]</font>>]
    node9145_name -> node9145 [arrowhead=none, color="black", style=dashed]
    node9145 [shape=cds, label=<<font color="black">%1 = classEnv-&gt;CreateImmutableBinding(classBinding, true)</font>> color="black" fillcolor="white", style=filled]
    node9145 -> node9146 [color="black"]
    node9146_name [shape=none, label=<<font color="black">Block[9146]</font>>]
    node9146_name -> node9146 [arrowhead=none, color="black", style=dashed]
    node9146 [shape=box, label=<<font color="black">[0] let outerPrivateEnvironment = @EXECUTION_STACK[0].PrivateEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9146 -> node9147 [color="black"]
    node9147_name [shape=none, label=<<font color="black">Call[9147]</font>>]
    node9147_name -> node9147 [arrowhead=none, color="black", style=dashed]
    node9147 [shape=cds, label=<<font color="black">%2 = clo&lt;NewPrivateEnvironment&gt;(outerPrivateEnvironment)</font>> color="black" fillcolor="white", style=filled]
    node9147 -> node9148 [color="black"]
    node9148_name [shape=none, label=<<font color="black">Block[9148]</font>>]
    node9148_name -> node9148 [arrowhead=none, color="black", style=dashed]
    node9148 [shape=box, label=<<font color="black">[0] let classPrivateEnvironment = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9148 -> node9149 [color="black"]
    node9149_name [shape=none, label=<<font color="black">Branch[9149]</font>>]
    node9149_name -> node9149 [arrowhead=none, color="black", style=dashed]
    node9149 [shape=diamond, label=<<font color="black">(! (= this[1] absent))</font>> color="black" fillcolor="white", style=filled]
    node9149 -> node9150 [label=<<font color="black">true</font>> color="black"]
    node9149 -> node9158 [label=<<font color="black">false</font>> color="black"]
    node9150_name [shape=none, label=<<font color="black">Call[9150]</font>>]
    node9150_name -> node9150 [arrowhead=none, color="black", style=dashed]
    node9150 [shape=cds, label=<<font color="black">%5 = this[1]-&gt;PrivateBoundIdentifiers()</font>> color="black" fillcolor="white", style=filled]
    node9150 -> node9151 [color="black"]
    node9158_name [shape=none, label=<<font color="black">Branch[9158]</font>>]
    node9158_name -> node9158 [arrowhead=none, color="black", style=dashed]
    node9158 [shape=diamond, label=<<font color="black">(= this[0] absent)</font>> color="black" fillcolor="white", style=filled]
    node9158 -> node9159 [label=<<font color="black">true</font>> color="black"]
    node9158 -> node9160 [label=<<font color="black">false</font>> color="black"]
    node9151_name [shape=none, label=<<font color="black">Block[9151]</font>>]
    node9151_name -> node9151 [arrowhead=none, color="black", style=dashed]
    node9151 [shape=box, label=<<font color="black">[0] %4 = %5<BR ALIGN="LEFT"/>[1] %3 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9151 -> node9152 [color="black"]
    node9159_name [shape=none, label=<<font color="black">Block[9159]</font>>]
    node9159_name -> node9159 [arrowhead=none, color="black", style=dashed]
    node9159 [shape=box, label=<<font color="black">[0] let protoParent = @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Object.prototype%&quot;]<BR ALIGN="LEFT"/>[1] let constructorParent = @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Function.prototype%&quot;]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9159 -> node9175 [color="black"]
    node9160_name [shape=none, label=<<font color="black">Block[9160]</font>>]
    node9160_name -> node9160 [arrowhead=none, color="black", style=dashed]
    node9160 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = classEnv<BR ALIGN="LEFT"/>[1] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9160 -> node9161 [color="black"]
    node9152_name [shape=none, label=<<font color="black">Branch[9152]</font>>]
    node9152_name -> node9152 [arrowhead=none, color="black", style=dashed]
    node9152 [shape=diamond, label=<<font color="black">(&lt; %3 %4.length)</font>> color="black" fillcolor="white", style=filled]
    node9152 -> node9153 [label=<<font color="black">true</font>> color="black"]
    node9152 -> node9158 [label=<<font color="black">false</font>> color="black"]
    node9175_name [shape=none, label=<<font color="black">Call[9175]</font>>]
    node9175_name -> node9175 [arrowhead=none, color="black", style=dashed]
    node9175 [shape=cds, label=<<font color="black">%10 = clo&lt;OrdinaryObjectCreate&gt;(protoParent)</font>> color="black" fillcolor="white", style=filled]
    node9175 -> node9176 [color="black"]
    node9161_name [shape=none, label=<<font color="black">Call[9161]</font>>]
    node9161_name -> node9161 [arrowhead=none, color="black", style=dashed]
    node9161 [shape=cds, label=<<font color="black">%6 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node9161 -> node9162 [color="black"]
    node9153_name [shape=none, label=<<font color="black">Block[9153]</font>>]
    node9153_name -> node9153 [arrowhead=none, color="black", style=dashed]
    node9153 [shape=box, label=<<font color="black">[0] let dn = %4[%3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9153 -> node9154 [color="black"]
    node9176_name [shape=none, label=<<font color="black">Block[9176]</font>>]
    node9176_name -> node9176 [arrowhead=none, color="black", style=dashed]
    node9176 [shape=box, label=<<font color="black">[0] let proto = %10<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9176 -> node9177 [color="black"]
    node9162_name [shape=none, label=<<font color="black">Block[9162]</font>>]
    node9162_name -> node9162 [arrowhead=none, color="black", style=dashed]
    node9162 [shape=box, label=<<font color="black">[0] let superclassRef = %6<BR ALIGN="LEFT"/>[1] @EXECUTION_STACK[0].LexicalEnvironment = env<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9162 -> node9163 [color="black"]
    node9154_name [shape=none, label=<<font color="black">Branch[9154]</font>>]
    node9154_name -> node9154 [arrowhead=none, color="black", style=dashed]
    node9154 [shape=diamond, label=<<font color="black">(contains classPrivateEnvironment.Names dn: Unknown[&quot;PrivateName&quot;] Description)</font>> color="black" fillcolor="white", style=filled]
    node9154 -> node9155 [label=<<font color="black">true</font>> color="black"]
    node9154 -> node9156 [label=<<font color="black">false</font>> color="black"]
    node9177_name [shape=none, label=<<font color="black">Branch[9177]</font>>]
    node9177_name -> node9177 [arrowhead=none, color="black", style=dashed]
    node9177 [shape=diamond, label=<<font color="black">(= this[1] absent)</font>> color="black" fillcolor="white", style=filled]
    node9177 -> node9178 [label=<<font color="black">true</font>> color="black"]
    node9177 -> node9179 [label=<<font color="black">false</font>> color="black"]
    node9163_name [shape=none, label=<<font color="black">Call[9163]</font>>]
    node9163_name -> node9163 [arrowhead=none, color="black", style=dashed]
    node9163 [shape=cds, label=<<font color="black">%7 = clo&lt;GetValue&gt;(superclassRef)</font>> color="black" fillcolor="white", style=filled]
    node9163 -> node9164 [color="black"]
    node9155_name [shape=none, label=<<font color="black">Block[9155]</font>>]
    node9155_name -> node9155 [arrowhead=none, color="black", style=dashed]
    node9155 [shape=box, label=<<font color="black">[0] assert (yet &quot;This is only possible for getter/setter pairs.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9155 -> node9157 [color="black"]
    node9156_name [shape=none, label=<<font color="black">Block[9156]</font>>]
    node9156_name -> node9156 [arrowhead=none, color="black", style=dashed]
    node9156 [shape=box, label=<<font color="black">[0] let name = (new PrivateName(&quot;Description&quot; -&gt; dn))[#735]<BR ALIGN="LEFT"/>[1] push classPrivateEnvironment.Names &lt; name<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9156 -> node9157 [color="black"]
    node9178_name [shape=none, label=<<font color="black">Block[9178]</font>>]
    node9178_name -> node9178 [arrowhead=none, color="black", style=dashed]
    node9178 [shape=box, label=<<font color="black">[0] let constructor = ~empty~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9178 -> node9181 [color="black"]
    node9179_name [shape=none, label=<<font color="black">Call[9179]</font>>]
    node9179_name -> node9179 [arrowhead=none, color="black", style=dashed]
    node9179 [shape=cds, label=<<font color="black">%11 = this[1]-&gt;ConstructorMethod()</font>> color="black" fillcolor="white", style=filled]
    node9179 -> node9180 [color="black"]
    node9164_name [shape=none, label=<<font color="black">Block[9164]</font>>]
    node9164_name -> node9164 [arrowhead=none, color="black", style=dashed]
    node9164 [shape=box, label=<<font color="black">[0] let superclass = [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9164 -> node9165 [color="black"]
    node9157_name [shape=none, label=<<font color="black">Block[9157]</font>>]
    node9157_name -> node9157 [arrowhead=none, color="black", style=dashed]
    node9157 [shape=box, label=<<font color="black">[0] %3 = (+ %3 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9157 -> node9152 [color="black"]
    node9181_name [shape=none, label=<<font color="black">Block[9181]</font>>]
    node9181_name -> node9181 [arrowhead=none, color="black", style=dashed]
    node9181 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = classEnv<BR ALIGN="LEFT"/>[1] @EXECUTION_STACK[0].PrivateEnvironment = classPrivateEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9181 -> node9182 [color="black"]
    node9180_name [shape=none, label=<<font color="black">Block[9180]</font>>]
    node9180_name -> node9180 [arrowhead=none, color="black", style=dashed]
    node9180 [shape=box, label=<<font color="black">[0] let constructor = %11<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9180 -> node9181 [color="black"]
    node9165_name [shape=none, label=<<font color="black">Branch[9165]</font>>]
    node9165_name -> node9165 [arrowhead=none, color="black", style=dashed]
    node9165 [shape=diamond, label=<<font color="black">(= superclass null)</font>> color="black" fillcolor="white", style=filled]
    node9165 -> node9166 [label=<<font color="black">true</font>> color="black"]
    node9165 -> node9167 [label=<<font color="black">false</font>> color="black"]
    node9182_name [shape=none, label=<<font color="black">Branch[9182]</font>>]
    node9182_name -> node9182 [arrowhead=none, color="black", style=dashed]
    node9182 [shape=diamond, label=<<font color="black">(= constructor ~empty~)</font>> color="black" fillcolor="white", style=filled]
    node9182 -> node9183 [label=<<font color="black">true</font>> color="black"]
    node9182 -> node9186 [label=<<font color="black">false</font>> color="black"]
    node9166_name [shape=none, label=<<font color="black">Block[9166]</font>>]
    node9166_name -> node9166 [arrowhead=none, color="black", style=dashed]
    node9166 [shape=box, label=<<font color="black">[0] let protoParent = null<BR ALIGN="LEFT"/>[1] let constructorParent = @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Function.prototype%&quot;]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9166 -> node9175 [color="black"]
    node9167_name [shape=none, label=<<font color="black">Call[9167]</font>>]
    node9167_name -> node9167 [arrowhead=none, color="black", style=dashed]
    node9167 [shape=cds, label=<<font color="black">%8 = clo&lt;IsConstructor&gt;(superclass)</font>> color="black" fillcolor="white", style=filled]
    node9167 -> node9168 [color="black"]
    node9183_name [shape=none, label=<<font color="black">Block[9183]</font>>]
    node9183_name -> node9183 [arrowhead=none, color="black", style=dashed]
    node9183 [shape=box, label=<<font color="black">[0] let defaultConstructor = clo&lt;ClassTail[0,1].ClassDefinitionEvaluation:clo0&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9183 -> node9184 [color="black"]
    node9186_name [shape=none, label=<<font color="black">Call[9186]</font>>]
    node9186_name -> node9186 [arrowhead=none, color="black", style=dashed]
    node9186 [shape=cds, label=<<font color="black">%13 = constructor-&gt;DefineMethod(proto, constructorParent)</font>> color="black" fillcolor="white", style=filled]
    node9186 -> node9187 [color="black"]
    node9168_name [shape=none, label=<<font color="black">Branch[9168]</font>>]
    node9168_name -> node9168 [arrowhead=none, color="black", style=dashed]
    node9168 [shape=diamond, label=<<font color="black">(= %8 false)</font>> color="black" fillcolor="white", style=filled]
    node9168 -> node9169 [label=<<font color="black">true</font>> color="black"]
    node9168 -> node9170 [label=<<font color="black">false</font>> color="black"]
    node9184_name [shape=none, label=<<font color="black">Call[9184]</font>>]
    node9184_name -> node9184 [arrowhead=none, color="black", style=dashed]
    node9184 [shape=cds, label=<<font color="black">%12 = clo&lt;CreateBuiltinFunction&gt;(defaultConstructor, 0, className, (new [&quot;ConstructorKind&quot;, &quot;SourceText&quot;])[#712], @EXECUTION_STACK[0].Realm, constructorParent)</font>> color="black" fillcolor="white", style=filled]
    node9184 -> node9185 [color="black"]
    node9187_name [shape=none, label=<<font color="black">Block[9187]</font>>]
    node9187_name -> node9187 [arrowhead=none, color="black", style=dashed]
    node9187 [shape=box, label=<<font color="black">[0] let constructorInfo = [! %13]<BR ALIGN="LEFT"/>[1] let F = constructorInfo.Closure<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9187 -> node9188 [color="black"]
    node9169_name [shape=none, label=<<font color="black">Block[9169]</font>>]
    node9169_name -> node9169 [arrowhead=none, color="black", style=dashed]
    node9169 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#710])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9169 -> cluster1692_exit [color="black"]
    node9170_name [shape=none, label=<<font color="black">Call[9170]</font>>]
    node9170_name -> node9170 [arrowhead=none, color="black", style=dashed]
    node9170 [shape=cds, label=<<font color="black">%9 = clo&lt;Get&gt;(superclass, &quot;prototype&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9170 -> node9171 [color="black"]
    node9185_name [shape=none, label=<<font color="black">Block[9185]</font>>]
    node9185_name -> node9185 [arrowhead=none, color="black", style=dashed]
    node9185 [shape=box, label=<<font color="black">[0] let F = %12<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9185 -> node9190 [color="black"]
    node9188_name [shape=none, label=<<font color="black">Call[9188]</font>>]
    node9188_name -> node9188 [arrowhead=none, color="black", style=dashed]
    node9188 [shape=cds, label=<<font color="black">%14 = clo&lt;MakeClassConstructor&gt;(F)</font>> color="black" fillcolor="white", style=filled]
    node9188 -> node9189 [color="black"]
    node9171_name [shape=none, label=<<font color="black">Block[9171]</font>>]
    node9171_name -> node9171 [arrowhead=none, color="black", style=dashed]
    node9171 [shape=box, label=<<font color="black">[0] let protoParent = [? %9]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9171 -> node9172 [color="black"]
    node9190_name [shape=none, label=<<font color="black">Call[9190]</font>>]
    node9190_name -> node9190 [arrowhead=none, color="black", style=dashed]
    node9190 [shape=cds, label=<<font color="black">%16 = clo&lt;MakeConstructor&gt;(F, false, proto)</font>> color="black" fillcolor="white", style=filled]
    node9190 -> node9191 [color="black"]
    node9189_name [shape=none, label=<<font color="black">Call[9189]</font>>]
    node9189_name -> node9189 [arrowhead=none, color="black", style=dashed]
    node9189 [shape=cds, label=<<font color="black">%15 = clo&lt;SetFunctionName&gt;(F, className)</font>> color="black" fillcolor="white", style=filled]
    node9189 -> node9190 [color="black"]
    node9172_name [shape=none, label=<<font color="black">Branch[9172]</font>>]
    node9172_name -> node9172 [arrowhead=none, color="black", style=dashed]
    node9172 [shape=diamond, label=<<font color="black">(! (|| (= (typeof protoParent) @Object) (= (typeof protoParent) @Null)))</font>> color="black" fillcolor="white", style=filled]
    node9172 -> node9173 [label=<<font color="black">true</font>> color="black"]
    node9172 -> node9174 [label=<<font color="black">false</font>> color="black"]
    node9191_name [shape=none, label=<<font color="black">Branch[9191]</font>>]
    node9191_name -> node9191 [arrowhead=none, color="black", style=dashed]
    node9191 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node9191 -> node9192 [label=<<font color="black">true</font>> color="black"]
    node9191 -> node9193 [label=<<font color="black">false</font>> color="black"]
    node9173_name [shape=none, label=<<font color="black">Block[9173]</font>>]
    node9173_name -> node9173 [arrowhead=none, color="black", style=dashed]
    node9173 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#711])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9173 -> cluster1692_exit [color="black"]
    node9174_name [shape=none, label=<<font color="black">Block[9174]</font>>]
    node9174_name -> node9174 [arrowhead=none, color="black", style=dashed]
    node9174 [shape=box, label=<<font color="black">[0] let constructorParent = superclass<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9174 -> node9175 [color="black"]
    node9192_name [shape=none, label=<<font color="black">Block[9192]</font>>]
    node9192_name -> node9192 [arrowhead=none, color="black", style=dashed]
    node9192 [shape=box, label=<<font color="black">[0] F.ConstructorKind = ~derived~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9192 -> node9193 [color="black"]
    node9193_name [shape=none, label=<<font color="black">Call[9193]</font>>]
    node9193_name -> node9193 [arrowhead=none, color="black", style=dashed]
    node9193 [shape=cds, label=<<font color="black">%17 = clo&lt;CreateMethodProperty&gt;(proto, &quot;constructor&quot;, F)</font>> color="black" fillcolor="white", style=filled]
    node9193 -> node9194 [color="black"]
    node9194_name [shape=none, label=<<font color="black">Branch[9194]</font>>]
    node9194_name -> node9194 [arrowhead=none, color="black", style=dashed]
    node9194 [shape=diamond, label=<<font color="black">(= this[1] absent)</font>> color="black" fillcolor="white", style=filled]
    node9194 -> node9195 [label=<<font color="black">true</font>> color="black"]
    node9194 -> node9196 [label=<<font color="black">false</font>> color="black"]
    node9195_name [shape=none, label=<<font color="black">Block[9195]</font>>]
    node9195_name -> node9195 [arrowhead=none, color="black", style=dashed]
    node9195 [shape=box, label=<<font color="black">[0] let elements = (new [])[#713]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9195 -> node9198 [color="black"]
    node9196_name [shape=none, label=<<font color="black">Call[9196]</font>>]
    node9196_name -> node9196 [arrowhead=none, color="black", style=dashed]
    node9196 [shape=cds, label=<<font color="black">%18 = this[1]-&gt;NonConstructorElements()</font>> color="black" fillcolor="white", style=filled]
    node9196 -> node9197 [color="black"]
    node9198_name [shape=none, label=<<font color="black">Block[9198]</font>>]
    node9198_name -> node9198 [arrowhead=none, color="black", style=dashed]
    node9198 [shape=box, label=<<font color="black">[0] let instancePrivateMethods = (new [])[#714]<BR ALIGN="LEFT"/>[1] let staticPrivateMethods = (new [])[#715]<BR ALIGN="LEFT"/>[2] let instanceFields = (new [])[#716]<BR ALIGN="LEFT"/>[3] let staticElements = (new [])[#717]<BR ALIGN="LEFT"/>[4] %20 = elements<BR ALIGN="LEFT"/>[5] %19 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9198 -> node9199 [color="black"]
    node9197_name [shape=none, label=<<font color="black">Block[9197]</font>>]
    node9197_name -> node9197 [arrowhead=none, color="black", style=dashed]
    node9197 [shape=box, label=<<font color="black">[0] let elements = %18<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9197 -> node9198 [color="black"]
    node9199_name [shape=none, label=<<font color="black">Branch[9199]</font>>]
    node9199_name -> node9199 [arrowhead=none, color="black", style=dashed]
    node9199 [shape=diamond, label=<<font color="black">(&lt; %19 %20.length)</font>> color="black" fillcolor="white", style=filled]
    node9199 -> node9200 [label=<<font color="black">true</font>> color="black"]
    node9199 -> node9244 [label=<<font color="black">false</font>> color="black"]
    node9200_name [shape=none, label=<<font color="black">Block[9200]</font>>]
    node9200_name -> node9200 [arrowhead=none, color="black", style=dashed]
    node9200 [shape=box, label=<<font color="black">[0] let e = %20[%19]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9200 -> node9201 [color="black"]
    node9244_name [shape=none, label=<<font color="black">Block[9244]</font>>]
    node9244_name -> node9244 [arrowhead=none, color="black", style=dashed]
    node9244 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = env<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9244 -> node9245 [color="black"]
    node9201_name [shape=none, label=<<font color="black">Call[9201]</font>>]
    node9201_name -> node9201 [arrowhead=none, color="black", style=dashed]
    node9201 [shape=cds, label=<<font color="black">%21 = e-&gt;IsStatic()</font>> color="black" fillcolor="white", style=filled]
    node9201 -> node9202 [color="black"]
    node9245_name [shape=none, label=<<font color="black">Branch[9245]</font>>]
    node9245_name -> node9245 [arrowhead=none, color="black", style=dashed]
    node9245 [shape=diamond, label=<<font color="black">(! (= classBinding undefined))</font>> color="black" fillcolor="white", style=filled]
    node9245 -> node9246 [label=<<font color="black">true</font>> color="black"]
    node9245 -> node9248 [label=<<font color="black">false</font>> color="black"]
    node9202_name [shape=none, label=<<font color="black">Branch[9202]</font>>]
    node9202_name -> node9202 [arrowhead=none, color="black", style=dashed]
    node9202 [shape=diamond, label=<<font color="black">(= %21 false)</font>> color="black" fillcolor="white", style=filled]
    node9202 -> node9203 [label=<<font color="black">true</font>> color="black"]
    node9202 -> node9206 [label=<<font color="black">false</font>> color="black"]
    node9246_name [shape=none, label=<<font color="black">Call[9246]</font>>]
    node9246_name -> node9246 [arrowhead=none, color="black", style=dashed]
    node9246 [shape=cds, label=<<font color="black">%28 = classEnv-&gt;InitializeBinding(classBinding, F)</font>> color="black" fillcolor="white", style=filled]
    node9246 -> node9247 [color="black"]
    node9248_name [shape=none, label=<<font color="black">Block[9248]</font>>]
    node9248_name -> node9248 [arrowhead=none, color="black", style=dashed]
    node9248 [shape=box, label=<<font color="black">[0] F.PrivateMethods = instancePrivateMethods<BR ALIGN="LEFT"/>[1] F.Fields = instanceFields<BR ALIGN="LEFT"/>[2] %30 = staticPrivateMethods<BR ALIGN="LEFT"/>[3] %29 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9248 -> node9249 [color="black"]
    node9203_name [shape=none, label=<<font color="black">Call[9203]</font>>]
    node9203_name -> node9203 [arrowhead=none, color="black", style=dashed]
    node9203 [shape=cds, label=<<font color="black">%22 = e-&gt;ClassElementEvaluation(proto)</font>> color="black" fillcolor="white", style=filled]
    node9203 -> node9204 [color="black"]
    node9206_name [shape=none, label=<<font color="black">Call[9206]</font>>]
    node9206_name -> node9206 [arrowhead=none, color="black", style=dashed]
    node9206 [shape=cds, label=<<font color="black">%24 = e-&gt;ClassElementEvaluation(F)</font>> color="black" fillcolor="white", style=filled]
    node9206 -> node9207 [color="black"]
    node9247_name [shape=none, label=<<font color="black">Block[9247]</font>>]
    node9247_name -> node9247 [arrowhead=none, color="black", style=dashed]
    node9247 [shape=box, label=<<font color="black">[0] [! %28]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9247 -> node9248 [color="black"]
    node9249_name [shape=none, label=<<font color="black">Branch[9249]</font>>]
    node9249_name -> node9249 [arrowhead=none, color="black", style=dashed]
    node9249 [shape=diamond, label=<<font color="black">(&lt; %29 %30.length)</font>> color="black" fillcolor="white", style=filled]
    node9249 -> node9250 [label=<<font color="black">true</font>> color="black"]
    node9249 -> node9253 [label=<<font color="black">false</font>> color="black"]
    node9204_name [shape=none, label=<<font color="black">Call[9204]</font>>]
    node9204_name -> node9204 [arrowhead=none, color="black", style=dashed]
    node9204 [shape=cds, label=<<font color="black">%23 = clo&lt;Completion&gt;(%22)</font>> color="black" fillcolor="white", style=filled]
    node9204 -> node9205 [color="black"]
    node9207_name [shape=none, label=<<font color="black">Call[9207]</font>>]
    node9207_name -> node9207 [arrowhead=none, color="black", style=dashed]
    node9207 [shape=cds, label=<<font color="black">%25 = clo&lt;Completion&gt;(%24)</font>> color="black" fillcolor="white", style=filled]
    node9207 -> node9208 [color="black"]
    node9250_name [shape=none, label=<<font color="black">Block[9250]</font>>]
    node9250_name -> node9250 [arrowhead=none, color="black", style=dashed]
    node9250 [shape=box, label=<<font color="black">[0] let method = %30[%29]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9250 -> node9251 [color="black"]
    node9253_name [shape=none, label=<<font color="black">Block[9253]</font>>]
    node9253_name -> node9253 [arrowhead=none, color="black", style=dashed]
    node9253 [shape=box, label=<<font color="black">[0] %33 = staticElements<BR ALIGN="LEFT"/>[1] %32 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9253 -> node9254 [color="black"]
    node9205_name [shape=none, label=<<font color="black">Block[9205]</font>>]
    node9205_name -> node9205 [arrowhead=none, color="black", style=dashed]
    node9205 [shape=box, label=<<font color="black">[0] let element = %23<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9205 -> node9209 [color="black"]
    node9208_name [shape=none, label=<<font color="black">Block[9208]</font>>]
    node9208_name -> node9208 [arrowhead=none, color="black", style=dashed]
    node9208 [shape=box, label=<<font color="black">[0] let element = %25<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9208 -> node9209 [color="black"]
    node9251_name [shape=none, label=<<font color="black">Call[9251]</font>>]
    node9251_name -> node9251 [arrowhead=none, color="black", style=dashed]
    node9251 [shape=cds, label=<<font color="black">%31 = clo&lt;PrivateMethodOrAccessorAdd&gt;(F, method)</font>> color="black" fillcolor="white", style=filled]
    node9251 -> node9252 [color="black"]
    node9254_name [shape=none, label=<<font color="black">Branch[9254]</font>>]
    node9254_name -> node9254 [arrowhead=none, color="black", style=dashed]
    node9254 [shape=diamond, label=<<font color="black">(&lt; %32 %33.length)</font>> color="black" fillcolor="white", style=filled]
    node9254 -> node9255 [label=<<font color="black">true</font>> color="black"]
    node9254 -> node9267 [label=<<font color="black">false</font>> color="black"]
    node9209_name [shape=none, label=<<font color="black">Branch[9209]</font>>]
    node9209_name -> node9209 [arrowhead=none, color="black", style=dashed]
    node9209 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? element) (! (= element.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node9209 -> node9210 [label=<<font color="black">true</font>> color="black"]
    node9209 -> node9211 [label=<<font color="black">false</font>> color="black"]
    node9252_name [shape=none, label=<<font color="black">Block[9252]</font>>]
    node9252_name -> node9252 [arrowhead=none, color="black", style=dashed]
    node9252 [shape=box, label=<<font color="black">[0] [! %31]<BR ALIGN="LEFT"/>[1] %29 = (+ %29 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9252 -> node9249 [color="black"]
    node9255_name [shape=none, label=<<font color="black">Block[9255]</font>>]
    node9255_name -> node9255 [arrowhead=none, color="black", style=dashed]
    node9255 [shape=box, label=<<font color="black">[0] let elementRecord = %33[%32]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9255 -> node9256 [color="black"]
    node9267_name [shape=none, label=<<font color="black">Block[9267]</font>>]
    node9267_name -> node9267 [arrowhead=none, color="black", style=dashed]
    node9267 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].PrivateEnvironment = outerPrivateEnvironment<BR ALIGN="LEFT"/>[1] return F<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9267 -> cluster1692_exit [color="black"]
    node9210_name [shape=none, label=<<font color="black">Block[9210]</font>>]
    node9210_name -> node9210 [arrowhead=none, color="black", style=dashed]
    node9210 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = env<BR ALIGN="LEFT"/>[1] @EXECUTION_STACK[0].PrivateEnvironment = outerPrivateEnvironment<BR ALIGN="LEFT"/>[2] return [? element]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9210 -> cluster1692_exit [color="black"]
    node9211_name [shape=none, label=<<font color="black">Block[9211]</font>>]
    node9211_name -> node9211 [arrowhead=none, color="black", style=dashed]
    node9211 [shape=box, label=<<font color="black">[0] element = element.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9211 -> node9212 [color="black"]
    node9256_name [shape=none, label=<<font color="black">Branch[9256]</font>>]
    node9256_name -> node9256 [arrowhead=none, color="black", style=dashed]
    node9256 [shape=diamond, label=<<font color="black">(? elementRecord: &quot;ClassFieldDefinitionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9256 -> node9257 [label=<<font color="black">true</font>> color="black"]
    node9256 -> node9260 [label=<<font color="black">false</font>> color="black"]
    node9212_name [shape=none, label=<<font color="black">Branch[9212]</font>>]
    node9212_name -> node9212 [arrowhead=none, color="black", style=dashed]
    node9212 [shape=diamond, label=<<font color="black">(? element: &quot;PrivateElement&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9212 -> node9213 [label=<<font color="black">true</font>> color="black"]
    node9212 -> node9236 [label=<<font color="black">false</font>> color="black"]
    node9257_name [shape=none, label=<<font color="black">Call[9257]</font>>]
    node9257_name -> node9257 [arrowhead=none, color="black", style=dashed]
    node9257 [shape=cds, label=<<font color="black">%34 = clo&lt;DefineField&gt;(F, elementRecord)</font>> color="black" fillcolor="white", style=filled]
    node9257 -> node9258 [color="black"]
    node9260_name [shape=none, label=<<font color="black">Block[9260]</font>>]
    node9260_name -> node9260 [arrowhead=none, color="black", style=dashed]
    node9260 [shape=box, label=<<font color="black">[0] assert (? elementRecord: &quot;ClassStaticBlockDefinitionRecord&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9260 -> node9261 [color="black"]
    node9213_name [shape=none, label=<<font color="black">Block[9213]</font>>]
    node9213_name -> node9213 [arrowhead=none, color="black", style=dashed]
    node9213 [shape=box, label=<<font color="black">[0] assert (|| (= element.Kind ~method~) (= element.Kind ~accessor~))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9213 -> node9214 [color="black"]
    node9236_name [shape=none, label=<<font color="black">Branch[9236]</font>>]
    node9236_name -> node9236 [arrowhead=none, color="black", style=dashed]
    node9236 [shape=diamond, label=<<font color="black">(? element: &quot;ClassFieldDefinitionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9236 -> node9237 [label=<<font color="black">true</font>> color="black"]
    node9236 -> node9241 [label=<<font color="black">false</font>> color="black"]
    node9258_name [shape=none, label=<<font color="black">Call[9258]</font>>]
    node9258_name -> node9258 [arrowhead=none, color="black", style=dashed]
    node9258 [shape=cds, label=<<font color="black">%35 = clo&lt;Completion&gt;(%34)</font>> color="black" fillcolor="white", style=filled]
    node9258 -> node9259 [color="black"]
    node9261_name [shape=none, label=<<font color="black">Call[9261]</font>>]
    node9261_name -> node9261 [arrowhead=none, color="black", style=dashed]
    node9261 [shape=cds, label=<<font color="black">%36 = clo&lt;Call&gt;(elementRecord.BodyFunction, F)</font>> color="black" fillcolor="white", style=filled]
    node9261 -> node9262 [color="black"]
    node9214_name [shape=none, label=<<font color="black">Call[9214]</font>>]
    node9214_name -> node9214 [arrowhead=none, color="black", style=dashed]
    node9214 [shape=cds, label=<<font color="black">%26 = e-&gt;IsStatic()</font>> color="black" fillcolor="white", style=filled]
    node9214 -> node9215 [color="black"]
    node9237_name [shape=none, label=<<font color="black">Call[9237]</font>>]
    node9237_name -> node9237 [arrowhead=none, color="black", style=dashed]
    node9237 [shape=cds, label=<<font color="black">%27 = e-&gt;IsStatic()</font>> color="black" fillcolor="white", style=filled]
    node9237 -> node9238 [color="black"]
    node9241_name [shape=none, label=<<font color="black">Branch[9241]</font>>]
    node9241_name -> node9241 [arrowhead=none, color="black", style=dashed]
    node9241 [shape=diamond, label=<<font color="black">(? element: &quot;ClassStaticBlockDefinitionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9241 -> node9242 [label=<<font color="black">true</font>> color="black"]
    node9241 -> node9243 [label=<<font color="black">false</font>> color="black"]
    node9259_name [shape=none, label=<<font color="black">Block[9259]</font>>]
    node9259_name -> node9259 [arrowhead=none, color="black", style=dashed]
    node9259 [shape=box, label=<<font color="black">[0] let result = %35<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9259 -> node9264 [color="black"]
    node9262_name [shape=none, label=<<font color="black">Call[9262]</font>>]
    node9262_name -> node9262 [arrowhead=none, color="black", style=dashed]
    node9262 [shape=cds, label=<<font color="black">%37 = clo&lt;Completion&gt;(%36)</font>> color="black" fillcolor="white", style=filled]
    node9262 -> node9263 [color="black"]
    node9215_name [shape=none, label=<<font color="black">Branch[9215]</font>>]
    node9215_name -> node9215 [arrowhead=none, color="black", style=dashed]
    node9215 [shape=diamond, label=<<font color="black">(= %26 false)</font>> color="black" fillcolor="white", style=filled]
    node9215 -> node9216 [label=<<font color="black">true</font>> color="black"]
    node9215 -> node9217 [label=<<font color="black">false</font>> color="black"]
    node9238_name [shape=none, label=<<font color="black">Branch[9238]</font>>]
    node9238_name -> node9238 [arrowhead=none, color="black", style=dashed]
    node9238 [shape=diamond, label=<<font color="black">(= %27 false)</font>> color="black" fillcolor="white", style=filled]
    node9238 -> node9239 [label=<<font color="black">true</font>> color="black"]
    node9238 -> node9240 [label=<<font color="black">false</font>> color="black"]
    node9242_name [shape=none, label=<<font color="black">Block[9242]</font>>]
    node9242_name -> node9242 [arrowhead=none, color="black", style=dashed]
    node9242 [shape=box, label=<<font color="black">[0] push staticElements &lt; element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9242 -> node9243 [color="black"]
    node9243_name [shape=none, label=<<font color="black">Block[9243]</font>>]
    node9243_name -> node9243 [arrowhead=none, color="black", style=dashed]
    node9243 [shape=box, label=<<font color="black">[0] %19 = (+ %19 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9243 -> node9199 [color="black"]
    node9264_name [shape=none, label=<<font color="black">Branch[9264]</font>>]
    node9264_name -> node9264 [arrowhead=none, color="black", style=dashed]
    node9264 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? result) (! (= result.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node9264 -> node9265 [label=<<font color="black">true</font>> color="black"]
    node9264 -> node9266 [label=<<font color="black">false</font>> color="black"]
    node9263_name [shape=none, label=<<font color="black">Block[9263]</font>>]
    node9263_name -> node9263 [arrowhead=none, color="black", style=dashed]
    node9263 [shape=box, label=<<font color="black">[0] let result = %37<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9263 -> node9264 [color="black"]
    node9216_name [shape=none, label=<<font color="black">Block[9216]</font>>]
    node9216_name -> node9216 [arrowhead=none, color="black", style=dashed]
    node9216 [shape=box, label=<<font color="black">[0] let container = instancePrivateMethods<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9216 -> node9218 [color="black"]
    node9217_name [shape=none, label=<<font color="black">Block[9217]</font>>]
    node9217_name -> node9217 [arrowhead=none, color="black", style=dashed]
    node9217 [shape=box, label=<<font color="black">[0] let container = staticPrivateMethods<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9217 -> node9218 [color="black"]
    node9239_name [shape=none, label=<<font color="black">Block[9239]</font>>]
    node9239_name -> node9239 [arrowhead=none, color="black", style=dashed]
    node9239 [shape=box, label=<<font color="black">[0] push instanceFields &lt; element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9239 -> node9243 [color="black"]
    node9240_name [shape=none, label=<<font color="black">Block[9240]</font>>]
    node9240_name -> node9240 [arrowhead=none, color="black", style=dashed]
    node9240 [shape=box, label=<<font color="black">[0] push staticElements &lt; element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9240 -> node9243 [color="black"]
    node9265_name [shape=none, label=<<font color="black">Block[9265]</font>>]
    node9265_name -> node9265 [arrowhead=none, color="black", style=dashed]
    node9265 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].PrivateEnvironment = outerPrivateEnvironment<BR ALIGN="LEFT"/>[1] return [? result]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9265 -> cluster1692_exit [color="black"]
    node9266_name [shape=none, label=<<font color="black">Block[9266]</font>>]
    node9266_name -> node9266 [arrowhead=none, color="black", style=dashed]
    node9266 [shape=box, label=<<font color="black">[0] %32 = (+ %32 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9266 -> node9254 [color="black"]
    node9218_name [shape=none, label=<<font color="black">Branch[9218]</font>>]
    node9218_name -> node9218 [arrowhead=none, color="black", style=dashed]
    node9218 [shape=diamond, label=<<font color="black">(contains container element.Key: Unknown[&quot;PrivateElement&quot;] Key)</font>> color="black" fillcolor="white", style=filled]
    node9218 -> node9219 [label=<<font color="black">true</font>> color="black"]
    node9218 -> node9235 [label=<<font color="black">false</font>> color="black"]
    node9219_name [shape=none, label=<<font color="black">Block[9219]</font>>]
    node9219_name -> node9219 [arrowhead=none, color="black", style=dashed]
    node9219 [shape=box, label=<<font color="black">[0] let elems = container<BR ALIGN="LEFT"/>[1] let idx = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9219 -> node9220 [color="black"]
    node9235_name [shape=none, label=<<font color="black">Block[9235]</font>>]
    node9235_name -> node9235 [arrowhead=none, color="black", style=dashed]
    node9235 [shape=box, label=<<font color="black">[0] push container &lt; element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9235 -> node9243 [color="black"]
    node9220_name [shape=none, label=<<font color="black">Branch[9220]</font>>]
    node9220_name -> node9220 [arrowhead=none, color="black", style=dashed]
    node9220 [shape=diamond, label=<<font color="black">(&lt; idx elems.length)</font>> color="black" fillcolor="white", style=filled]
    node9220 -> node9221 [label=<<font color="black">true</font>> color="black"]
    node9220 -> node9225 [label=<<font color="black">false</font>> color="black"]
    node9221_name [shape=none, label=<<font color="black">Block[9221]</font>>]
    node9221_name -> node9221 [arrowhead=none, color="black", style=dashed]
    node9221 [shape=box, label=<<font color="black">[0] let elem = elems[idx]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9221 -> node9222 [color="black"]
    node9225_name [shape=none, label=<<font color="black">Block[9225]</font>>]
    node9225_name -> node9225 [arrowhead=none, color="black", style=dashed]
    node9225 [shape=box, label=<<font color="black">[0] assert (&amp;&amp; (= element.Kind ~accessor~) (= existing.Kind ~accessor~))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9225 -> node9226 [color="black"]
    node9222_name [shape=none, label=<<font color="black">Branch[9222]</font>>]
    node9222_name -> node9222 [arrowhead=none, color="black", style=dashed]
    node9222 [shape=diamond, label=<<font color="black">(= elem.Key element.Key)</font>> color="black" fillcolor="white", style=filled]
    node9222 -> node9223 [label=<<font color="black">true</font>> color="black"]
    node9222 -> node9224 [label=<<font color="black">false</font>> color="black"]
    node9226_name [shape=none, label=<<font color="black">Branch[9226]</font>>]
    node9226_name -> node9226 [arrowhead=none, color="black", style=dashed]
    node9226 [shape=diamond, label=<<font color="black">(= element.Get undefined)</font>> color="black" fillcolor="white", style=filled]
    node9226 -> node9227 [label=<<font color="black">true</font>> color="black"]
    node9226 -> node9228 [label=<<font color="black">false</font>> color="black"]
    node9223_name [shape=none, label=<<font color="black">Block[9223]</font>>]
    node9223_name -> node9223 [arrowhead=none, color="black", style=dashed]
    node9223 [shape=box, label=<<font color="black">[0] let existing = elem<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9223 -> node9224 [color="black"]
    node9224_name [shape=none, label=<<font color="black">Block[9224]</font>>]
    node9224_name -> node9224 [arrowhead=none, color="black", style=dashed]
    node9224 [shape=box, label=<<font color="black">[0] idx = (+ idx 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9224 -> node9220 [color="black"]
    node9227_name [shape=none, label=<<font color="black">Block[9227]</font>>]
    node9227_name -> node9227 [arrowhead=none, color="black", style=dashed]
    node9227 [shape=box, label=<<font color="black">[0] let combined = (new PrivateElement(&quot;Key&quot; -&gt; element.Key, &quot;Kind&quot; -&gt; ~accessor~, &quot;Get&quot; -&gt; existing.Get, &quot;Set&quot; -&gt; element.Set))[#718]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9227 -> node9229 [color="black"]
    node9228_name [shape=none, label=<<font color="black">Block[9228]</font>>]
    node9228_name -> node9228 [arrowhead=none, color="black", style=dashed]
    node9228 [shape=box, label=<<font color="black">[0] let combined = (new PrivateElement(&quot;Key&quot; -&gt; element.Key, &quot;Kind&quot; -&gt; ~accessor~, &quot;Get&quot; -&gt; element.Get, &quot;Set&quot; -&gt; existing.Set))[#719]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9228 -> node9229 [color="black"]
    node9229_name [shape=none, label=<<font color="black">Block[9229]</font>>]
    node9229_name -> node9229 [arrowhead=none, color="black", style=dashed]
    node9229 [shape=box, label=<<font color="black">[0] let elems = container<BR ALIGN="LEFT"/>[1] let idx = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9229 -> node9230 [color="black"]
    node9230_name [shape=none, label=<<font color="black">Branch[9230]</font>>]
    node9230_name -> node9230 [arrowhead=none, color="black", style=dashed]
    node9230 [shape=diamond, label=<<font color="black">(&lt; idx elems.length)</font>> color="black" fillcolor="white", style=filled]
    node9230 -> node9231 [label=<<font color="black">true</font>> color="black"]
    node9230 -> node9243 [label=<<font color="black">false</font>> color="black"]
    node9231_name [shape=none, label=<<font color="black">Block[9231]</font>>]
    node9231_name -> node9231 [arrowhead=none, color="black", style=dashed]
    node9231 [shape=box, label=<<font color="black">[0] let elem = elems[idx]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9231 -> node9232 [color="black"]
    node9232_name [shape=none, label=<<font color="black">Branch[9232]</font>>]
    node9232_name -> node9232 [arrowhead=none, color="black", style=dashed]
    node9232 [shape=diamond, label=<<font color="black">(= elem existing)</font>> color="black" fillcolor="white", style=filled]
    node9232 -> node9233 [label=<<font color="black">true</font>> color="black"]
    node9232 -> node9234 [label=<<font color="black">false</font>> color="black"]
    node9233_name [shape=none, label=<<font color="black">Block[9233]</font>>]
    node9233_name -> node9233 [arrowhead=none, color="black", style=dashed]
    node9233 [shape=box, label=<<font color="black">[0] elems[idx] = combined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9233 -> node9234 [color="black"]
    node9234_name [shape=none, label=<<font color="black">Block[9234]</font>>]
    node9234_name -> node9234 [arrowhead=none, color="black", style=dashed]
    node9234 [shape=box, label=<<font color="black">[0] idx = (+ idx 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9234 -> node9230 [color="black"]
  }
}