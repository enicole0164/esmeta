digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster445 {
    label = "def <SYNTAX>:TryStatement[2,0].VarScopedDeclarations(this: Ast:TryStatement[2,0]): List[Ast]"
    style = rounded
    cluster445_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster445_entry_name -> cluster445_entry [arrowhead=none, color="black", style=dashed]
    cluster445_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster445_entry -> node2235 [color="black"]
    cluster445_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster445_exit_name -> cluster445_exit [arrowhead=none, color="black", style=dashed]
    cluster445_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2235_name [shape=none, label=<<font color="black">Call[2235]</font>>]
    node2235_name -> node2235 [arrowhead=none, color="black", style=dashed]
    node2235 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2235 -> node2236 [color="black"]
    node2236_name [shape=none, label=<<font color="black">Block[2236]</font>>]
    node2236_name -> node2236 [arrowhead=none, color="black", style=dashed]
    node2236 [shape=box, label=<<font color="black">[0] let declarations1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2236 -> node2237 [color="black"]
    node2237_name [shape=none, label=<<font color="black">Call[2237]</font>>]
    node2237_name -> node2237 [arrowhead=none, color="black", style=dashed]
    node2237 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2237 -> node2238 [color="black"]
    node2238_name [shape=none, label=<<font color="black">Block[2238]</font>>]
    node2238_name -> node2238 [arrowhead=none, color="black", style=dashed]
    node2238 [shape=box, label=<<font color="black">[0] let declarations2 = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2238 -> node2239 [color="black"]
    node2239_name [shape=none, label=<<font color="black">Call[2239]</font>>]
    node2239_name -> node2239 [arrowhead=none, color="black", style=dashed]
    node2239 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2239 -> node2240 [color="black"]
    node2240_name [shape=none, label=<<font color="black">Block[2240]</font>>]
    node2240_name -> node2240 [arrowhead=none, color="black", style=dashed]
    node2240 [shape=box, label=<<font color="black">[0] let declarations3 = %2<BR ALIGN="LEFT"/>[1] return (list-concat declarations1 declarations2 declarations3)[#270]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2240 -> cluster445_exit [color="black"]
  }
}