digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1195 {
    label = "def <SYNTAX>:PrivateIdentifier[0,0].StringValue(this: Ast:PrivateIdentifier[0,0]): String"
    style = rounded
    cluster1195_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1195_entry_name -> cluster1195_entry [arrowhead=none, color="black", style=dashed]
    cluster1195_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1195_entry -> node5407 [color="black"]
    cluster1195_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1195_exit_name -> cluster1195_exit [arrowhead=none, color="black", style=dashed]
    cluster1195_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node5407_name [shape=none, label=<<font color="black">Call[5407]</font>>]
    node5407_name -> node5407 [arrowhead=none, color="black", style=dashed]
    node5407 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;StringValue()</font>> color="black" fillcolor="white", style=filled]
    node5407 -> node5408 [color="black"]
    node5408_name [shape=none, label=<<font color="black">Block[5408]</font>>]
    node5408_name -> node5408 [arrowhead=none, color="black", style=dashed]
    node5408 [shape=box, label=<<font color="black">[0] return (concat 35cu %0)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5408 -> cluster1195_exit [color="black"]
  }
}