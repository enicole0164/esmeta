digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster270 {
    label = "def <SYNTAX>:LabelledStatement[0,0].LexicallyDeclaredNames(this: Ast:LabelledStatement[0,0]): List[String]"
    style = rounded
    cluster270_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster270_entry_name -> cluster270_entry [arrowhead=none, color="black", style=dashed]
    cluster270_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster270_entry -> node1742 [color="black"]
    cluster270_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster270_exit_name -> cluster270_exit [arrowhead=none, color="black", style=dashed]
    cluster270_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1742_name [shape=none, label=<<font color="black">Call[1742]</font>>]
    node1742_name -> node1742 [arrowhead=none, color="black", style=dashed]
    node1742 [shape=cds, label=<<font color="black">%0 = this[1]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1742 -> node1743 [color="black"]
    node1743_name [shape=none, label=<<font color="black">Block[1743]</font>>]
    node1743_name -> node1743 [arrowhead=none, color="black", style=dashed]
    node1743 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1743 -> cluster270_exit [color="black"]
  }
}