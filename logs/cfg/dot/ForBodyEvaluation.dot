digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1431 {
    label = "def ForBodyEvaluation(test: Unknown, increment: Unknown, stmt: Unknown, perIterationBindings: Unknown, labelSet: Unknown): Normal[ESValue] | Abrupt"
    style = rounded
    cluster1431_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1431_entry_name -> cluster1431_entry [arrowhead=none, color="black", style=dashed]
    cluster1431_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1431_entry -> node7576 [color="black"]
    cluster1431_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1431_exit_name -> cluster1431_exit [arrowhead=none, color="black", style=dashed]
    cluster1431_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7576_name [shape=none, label=<<font color="black">Block[7576]</font>>]
    node7576_name -> node7576 [arrowhead=none, color="black", style=dashed]
    node7576 [shape=box, label=<<font color="black">[0] let V = undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7576 -> node7577 [color="black"]
    node7577_name [shape=none, label=<<font color="black">Call[7577]</font>>]
    node7577_name -> node7577 [arrowhead=none, color="black", style=dashed]
    node7577 [shape=cds, label=<<font color="black">%0 = clo&lt;CreatePerIterationEnvironment&gt;(perIterationBindings)</font>> color="black" fillcolor="white", style=filled]
    node7577 -> node7578 [color="black"]
    node7578_name [shape=none, label=<<font color="black">Block[7578]</font>>]
    node7578_name -> node7578 [arrowhead=none, color="black", style=dashed]
    node7578 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7578 -> node7579 [color="black"]
    node7579_name [shape=none, label=<<font color="black">Branch[7579]</font>>]
    node7579_name -> node7579 [arrowhead=none, color="black", style=dashed]
    node7579 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white", style=filled]
    node7579 -> node7580 [label=<<font color="black">true</font>> color="black"]
    node7580_name [shape=none, label=<<font color="black">Branch[7580]</font>>]
    node7580_name -> node7580 [arrowhead=none, color="black", style=dashed]
    node7580 [shape=diamond, label=<<font color="black">(! (= test absent))</font>> color="black" fillcolor="white", style=filled]
    node7580 -> node7581 [label=<<font color="black">true</font>> color="black"]
    node7580 -> node7588 [label=<<font color="black">false</font>> color="black"]
    node7581_name [shape=none, label=<<font color="black">Call[7581]</font>>]
    node7581_name -> node7581 [arrowhead=none, color="black", style=dashed]
    node7581 [shape=cds, label=<<font color="black">%1 = test-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7581 -> node7582 [color="black"]
    node7588_name [shape=none, label=<<font color="black">Call[7588]</font>>]
    node7588_name -> node7588 [arrowhead=none, color="black", style=dashed]
    node7588 [shape=cds, label=<<font color="black">%4 = stmt-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7588 -> node7589 [color="black"]
    node7582_name [shape=none, label=<<font color="black">Block[7582]</font>>]
    node7582_name -> node7582 [arrowhead=none, color="black", style=dashed]
    node7582 [shape=box, label=<<font color="black">[0] let testRef = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7582 -> node7583 [color="black"]
    node7589_name [shape=none, label=<<font color="black">Block[7589]</font>>]
    node7589_name -> node7589 [arrowhead=none, color="black", style=dashed]
    node7589 [shape=box, label=<<font color="black">[0] let result = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7589 -> node7590 [color="black"]
    node7583_name [shape=none, label=<<font color="black">Call[7583]</font>>]
    node7583_name -> node7583 [arrowhead=none, color="black", style=dashed]
    node7583 [shape=cds, label=<<font color="black">%2 = clo&lt;GetValue&gt;(testRef)</font>> color="black" fillcolor="white", style=filled]
    node7583 -> node7584 [color="black"]
    node7590_name [shape=none, label=<<font color="black">Call[7590]</font>>]
    node7590_name -> node7590 [arrowhead=none, color="black", style=dashed]
    node7590 [shape=cds, label=<<font color="black">%5 = clo&lt;LoopContinues&gt;(result, labelSet)</font>> color="black" fillcolor="white", style=filled]
    node7590 -> node7591 [color="black"]
    node7584_name [shape=none, label=<<font color="black">Block[7584]</font>>]
    node7584_name -> node7584 [arrowhead=none, color="black", style=dashed]
    node7584 [shape=box, label=<<font color="black">[0] let testValue = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7584 -> node7585 [color="black"]
    node7591_name [shape=none, label=<<font color="black">Branch[7591]</font>>]
    node7591_name -> node7591 [arrowhead=none, color="black", style=dashed]
    node7591 [shape=diamond, label=<<font color="black">(= %5 false)</font>> color="black" fillcolor="white", style=filled]
    node7591 -> node7592 [label=<<font color="black">true</font>> color="black"]
    node7591 -> node7594 [label=<<font color="black">false</font>> color="black"]
    node7585_name [shape=none, label=<<font color="black">Call[7585]</font>>]
    node7585_name -> node7585 [arrowhead=none, color="black", style=dashed]
    node7585 [shape=cds, label=<<font color="black">%3 = clo&lt;ToBoolean&gt;(testValue)</font>> color="black" fillcolor="white", style=filled]
    node7585 -> node7586 [color="black"]
    node7592_name [shape=none, label=<<font color="black">Call[7592]</font>>]
    node7592_name -> node7592 [arrowhead=none, color="black", style=dashed]
    node7592 [shape=cds, label=<<font color="black">%6 = clo&lt;UpdateEmpty&gt;(result, V)</font>> color="black" fillcolor="white", style=filled]
    node7592 -> node7593 [color="black"]
    node7594_name [shape=none, label=<<font color="black">Branch[7594]</font>>]
    node7594_name -> node7594 [arrowhead=none, color="black", style=dashed]
    node7594 [shape=diamond, label=<<font color="black">(! (= result.Value ~empty~))</font>> color="black" fillcolor="white", style=filled]
    node7594 -> node7595 [label=<<font color="black">true</font>> color="black"]
    node7594 -> node7596 [label=<<font color="black">false</font>> color="black"]
    node7586_name [shape=none, label=<<font color="black">Branch[7586]</font>>]
    node7586_name -> node7586 [arrowhead=none, color="black", style=dashed]
    node7586 [shape=diamond, label=<<font color="black">(= %3 false)</font>> color="black" fillcolor="white", style=filled]
    node7586 -> node7587 [label=<<font color="black">true</font>> color="black"]
    node7586 -> node7588 [label=<<font color="black">false</font>> color="black"]
    node7593_name [shape=none, label=<<font color="black">Block[7593]</font>>]
    node7593_name -> node7593 [arrowhead=none, color="black", style=dashed]
    node7593 [shape=box, label=<<font color="black">[0] return [? %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7593 -> cluster1431_exit [color="black"]
    node7595_name [shape=none, label=<<font color="black">Block[7595]</font>>]
    node7595_name -> node7595 [arrowhead=none, color="black", style=dashed]
    node7595 [shape=box, label=<<font color="black">[0] V = result.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7595 -> node7596 [color="black"]
    node7596_name [shape=none, label=<<font color="black">Call[7596]</font>>]
    node7596_name -> node7596 [arrowhead=none, color="black", style=dashed]
    node7596 [shape=cds, label=<<font color="black">%7 = clo&lt;CreatePerIterationEnvironment&gt;(perIterationBindings)</font>> color="black" fillcolor="white", style=filled]
    node7596 -> node7597 [color="black"]
    node7587_name [shape=none, label=<<font color="black">Block[7587]</font>>]
    node7587_name -> node7587 [arrowhead=none, color="black", style=dashed]
    node7587 [shape=box, label=<<font color="black">[0] return V<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7587 -> cluster1431_exit [color="black"]
    node7597_name [shape=none, label=<<font color="black">Block[7597]</font>>]
    node7597_name -> node7597 [arrowhead=none, color="black", style=dashed]
    node7597 [shape=box, label=<<font color="black">[0] [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7597 -> node7598 [color="black"]
    node7598_name [shape=none, label=<<font color="black">Branch[7598]</font>>]
    node7598_name -> node7598 [arrowhead=none, color="black", style=dashed]
    node7598 [shape=diamond, label=<<font color="black">(! (= increment absent))</font>> color="black" fillcolor="white", style=filled]
    node7598 -> node7599 [label=<<font color="black">true</font>> color="black"]
    node7598 -> node7579 [label=<<font color="black">false</font>> color="black"]
    node7599_name [shape=none, label=<<font color="black">Call[7599]</font>>]
    node7599_name -> node7599 [arrowhead=none, color="black", style=dashed]
    node7599 [shape=cds, label=<<font color="black">%8 = increment-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7599 -> node7600 [color="black"]
    node7600_name [shape=none, label=<<font color="black">Block[7600]</font>>]
    node7600_name -> node7600 [arrowhead=none, color="black", style=dashed]
    node7600 [shape=box, label=<<font color="black">[0] let incRef = %8<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7600 -> node7601 [color="black"]
    node7601_name [shape=none, label=<<font color="black">Call[7601]</font>>]
    node7601_name -> node7601 [arrowhead=none, color="black", style=dashed]
    node7601 [shape=cds, label=<<font color="black">%9 = clo&lt;GetValue&gt;(incRef)</font>> color="black" fillcolor="white", style=filled]
    node7601 -> node7602 [color="black"]
    node7602_name [shape=none, label=<<font color="black">Block[7602]</font>>]
    node7602_name -> node7602 [arrowhead=none, color="black", style=dashed]
    node7602 [shape=box, label=<<font color="black">[0] [? %9]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7602 -> node7579 [color="black"]
  }
}