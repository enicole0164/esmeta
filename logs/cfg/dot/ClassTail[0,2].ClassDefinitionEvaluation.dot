digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1694 {
    label = "def <SYNTAX>:ClassTail[0,2].ClassDefinitionEvaluation(this: Ast:ClassTail[0,2], classBinding: Unknown, className: Unknown): Normal[FunctionObject] | Abrupt"
    style = rounded
    cluster1694_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1694_entry_name -> cluster1694_entry [arrowhead=none, color="black", style=dashed]
    cluster1694_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1694_entry -> node9286 [color="black"]
    cluster1694_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1694_exit_name -> cluster1694_exit [arrowhead=none, color="black", style=dashed]
    cluster1694_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9286_name [shape=none, label=<<font color="black">Block[9286]</font>>]
    node9286_name -> node9286 [arrowhead=none, color="black", style=dashed]
    node9286 [shape=box, label=<<font color="black">[0] let env = @EXECUTION_STACK[0].LexicalEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9286 -> node9287 [color="black"]
    node9287_name [shape=none, label=<<font color="black">Call[9287]</font>>]
    node9287_name -> node9287 [arrowhead=none, color="black", style=dashed]
    node9287 [shape=cds, label=<<font color="black">%0 = clo&lt;NewDeclarativeEnvironment&gt;(env)</font>> color="black" fillcolor="white", style=filled]
    node9287 -> node9288 [color="black"]
    node9288_name [shape=none, label=<<font color="black">Block[9288]</font>>]
    node9288_name -> node9288 [arrowhead=none, color="black", style=dashed]
    node9288 [shape=box, label=<<font color="black">[0] let classEnv = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9288 -> node9289 [color="black"]
    node9289_name [shape=none, label=<<font color="black">Branch[9289]</font>>]
    node9289_name -> node9289 [arrowhead=none, color="black", style=dashed]
    node9289 [shape=diamond, label=<<font color="black">(! (= classBinding undefined))</font>> color="black" fillcolor="white", style=filled]
    node9289 -> node9290 [label=<<font color="black">true</font>> color="black"]
    node9289 -> node9291 [label=<<font color="black">false</font>> color="black"]
    node9290_name [shape=none, label=<<font color="black">Call[9290]</font>>]
    node9290_name -> node9290 [arrowhead=none, color="black", style=dashed]
    node9290 [shape=cds, label=<<font color="black">%1 = classEnv-&gt;CreateImmutableBinding(classBinding, true)</font>> color="black" fillcolor="white", style=filled]
    node9290 -> node9291 [color="black"]
    node9291_name [shape=none, label=<<font color="black">Block[9291]</font>>]
    node9291_name -> node9291 [arrowhead=none, color="black", style=dashed]
    node9291 [shape=box, label=<<font color="black">[0] let outerPrivateEnvironment = @EXECUTION_STACK[0].PrivateEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9291 -> node9292 [color="black"]
    node9292_name [shape=none, label=<<font color="black">Call[9292]</font>>]
    node9292_name -> node9292 [arrowhead=none, color="black", style=dashed]
    node9292 [shape=cds, label=<<font color="black">%2 = clo&lt;NewPrivateEnvironment&gt;(outerPrivateEnvironment)</font>> color="black" fillcolor="white", style=filled]
    node9292 -> node9293 [color="black"]
    node9293_name [shape=none, label=<<font color="black">Block[9293]</font>>]
    node9293_name -> node9293 [arrowhead=none, color="black", style=dashed]
    node9293 [shape=box, label=<<font color="black">[0] let classPrivateEnvironment = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9293 -> node9294 [color="black"]
    node9294_name [shape=none, label=<<font color="black">Branch[9294]</font>>]
    node9294_name -> node9294 [arrowhead=none, color="black", style=dashed]
    node9294 [shape=diamond, label=<<font color="black">(! (= this[1] absent))</font>> color="black" fillcolor="white", style=filled]
    node9294 -> node9295 [label=<<font color="black">true</font>> color="black"]
    node9294 -> node9303 [label=<<font color="black">false</font>> color="black"]
    node9295_name [shape=none, label=<<font color="black">Call[9295]</font>>]
    node9295_name -> node9295 [arrowhead=none, color="black", style=dashed]
    node9295 [shape=cds, label=<<font color="black">%5 = this[1]-&gt;PrivateBoundIdentifiers()</font>> color="black" fillcolor="white", style=filled]
    node9295 -> node9296 [color="black"]
    node9303_name [shape=none, label=<<font color="black">Branch[9303]</font>>]
    node9303_name -> node9303 [arrowhead=none, color="black", style=dashed]
    node9303 [shape=diamond, label=<<font color="black">(= this[0] absent)</font>> color="black" fillcolor="white", style=filled]
    node9303 -> node9304 [label=<<font color="black">true</font>> color="black"]
    node9303 -> node9305 [label=<<font color="black">false</font>> color="black"]
    node9296_name [shape=none, label=<<font color="black">Block[9296]</font>>]
    node9296_name -> node9296 [arrowhead=none, color="black", style=dashed]
    node9296 [shape=box, label=<<font color="black">[0] %4 = %5<BR ALIGN="LEFT"/>[1] %3 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9296 -> node9297 [color="black"]
    node9304_name [shape=none, label=<<font color="black">Block[9304]</font>>]
    node9304_name -> node9304 [arrowhead=none, color="black", style=dashed]
    node9304 [shape=box, label=<<font color="black">[0] let protoParent = @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Object.prototype%&quot;]<BR ALIGN="LEFT"/>[1] let constructorParent = @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Function.prototype%&quot;]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9304 -> node9320 [color="black"]
    node9305_name [shape=none, label=<<font color="black">Block[9305]</font>>]
    node9305_name -> node9305 [arrowhead=none, color="black", style=dashed]
    node9305 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = classEnv<BR ALIGN="LEFT"/>[1] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9305 -> node9306 [color="black"]
    node9297_name [shape=none, label=<<font color="black">Branch[9297]</font>>]
    node9297_name -> node9297 [arrowhead=none, color="black", style=dashed]
    node9297 [shape=diamond, label=<<font color="black">(&lt; %3 %4.length)</font>> color="black" fillcolor="white", style=filled]
    node9297 -> node9298 [label=<<font color="black">true</font>> color="black"]
    node9297 -> node9303 [label=<<font color="black">false</font>> color="black"]
    node9320_name [shape=none, label=<<font color="black">Call[9320]</font>>]
    node9320_name -> node9320 [arrowhead=none, color="black", style=dashed]
    node9320 [shape=cds, label=<<font color="black">%10 = clo&lt;OrdinaryObjectCreate&gt;(protoParent)</font>> color="black" fillcolor="white", style=filled]
    node9320 -> node9321 [color="black"]
    node9306_name [shape=none, label=<<font color="black">Call[9306]</font>>]
    node9306_name -> node9306 [arrowhead=none, color="black", style=dashed]
    node9306 [shape=cds, label=<<font color="black">%6 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node9306 -> node9307 [color="black"]
    node9298_name [shape=none, label=<<font color="black">Block[9298]</font>>]
    node9298_name -> node9298 [arrowhead=none, color="black", style=dashed]
    node9298 [shape=box, label=<<font color="black">[0] let dn = %4[%3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9298 -> node9299 [color="black"]
    node9321_name [shape=none, label=<<font color="black">Block[9321]</font>>]
    node9321_name -> node9321 [arrowhead=none, color="black", style=dashed]
    node9321 [shape=box, label=<<font color="black">[0] let proto = %10<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9321 -> node9322 [color="black"]
    node9307_name [shape=none, label=<<font color="black">Block[9307]</font>>]
    node9307_name -> node9307 [arrowhead=none, color="black", style=dashed]
    node9307 [shape=box, label=<<font color="black">[0] let superclassRef = %6<BR ALIGN="LEFT"/>[1] @EXECUTION_STACK[0].LexicalEnvironment = env<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9307 -> node9308 [color="black"]
    node9299_name [shape=none, label=<<font color="black">Branch[9299]</font>>]
    node9299_name -> node9299 [arrowhead=none, color="black", style=dashed]
    node9299 [shape=diamond, label=<<font color="black">(contains classPrivateEnvironment.Names dn: Unknown[&quot;PrivateName&quot;] Description)</font>> color="black" fillcolor="white", style=filled]
    node9299 -> node9300 [label=<<font color="black">true</font>> color="black"]
    node9299 -> node9301 [label=<<font color="black">false</font>> color="black"]
    node9322_name [shape=none, label=<<font color="black">Branch[9322]</font>>]
    node9322_name -> node9322 [arrowhead=none, color="black", style=dashed]
    node9322 [shape=diamond, label=<<font color="black">(= this[1] absent)</font>> color="black" fillcolor="white", style=filled]
    node9322 -> node9323 [label=<<font color="black">true</font>> color="black"]
    node9322 -> node9324 [label=<<font color="black">false</font>> color="black"]
    node9308_name [shape=none, label=<<font color="black">Call[9308]</font>>]
    node9308_name -> node9308 [arrowhead=none, color="black", style=dashed]
    node9308 [shape=cds, label=<<font color="black">%7 = clo&lt;GetValue&gt;(superclassRef)</font>> color="black" fillcolor="white", style=filled]
    node9308 -> node9309 [color="black"]
    node9300_name [shape=none, label=<<font color="black">Block[9300]</font>>]
    node9300_name -> node9300 [arrowhead=none, color="black", style=dashed]
    node9300 [shape=box, label=<<font color="black">[0] assert (yet &quot;This is only possible for getter/setter pairs.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9300 -> node9302 [color="black"]
    node9301_name [shape=none, label=<<font color="black">Block[9301]</font>>]
    node9301_name -> node9301 [arrowhead=none, color="black", style=dashed]
    node9301 [shape=box, label=<<font color="black">[0] let name = (new PrivateName(&quot;Description&quot; -&gt; dn))[#735]<BR ALIGN="LEFT"/>[1] push classPrivateEnvironment.Names &lt; name<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9301 -> node9302 [color="black"]
    node9323_name [shape=none, label=<<font color="black">Block[9323]</font>>]
    node9323_name -> node9323 [arrowhead=none, color="black", style=dashed]
    node9323 [shape=box, label=<<font color="black">[0] let constructor = ~empty~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9323 -> node9326 [color="black"]
    node9324_name [shape=none, label=<<font color="black">Call[9324]</font>>]
    node9324_name -> node9324 [arrowhead=none, color="black", style=dashed]
    node9324 [shape=cds, label=<<font color="black">%11 = this[1]-&gt;ConstructorMethod()</font>> color="black" fillcolor="white", style=filled]
    node9324 -> node9325 [color="black"]
    node9309_name [shape=none, label=<<font color="black">Block[9309]</font>>]
    node9309_name -> node9309 [arrowhead=none, color="black", style=dashed]
    node9309 [shape=box, label=<<font color="black">[0] let superclass = [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9309 -> node9310 [color="black"]
    node9302_name [shape=none, label=<<font color="black">Block[9302]</font>>]
    node9302_name -> node9302 [arrowhead=none, color="black", style=dashed]
    node9302 [shape=box, label=<<font color="black">[0] %3 = (+ %3 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9302 -> node9297 [color="black"]
    node9326_name [shape=none, label=<<font color="black">Block[9326]</font>>]
    node9326_name -> node9326 [arrowhead=none, color="black", style=dashed]
    node9326 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = classEnv<BR ALIGN="LEFT"/>[1] @EXECUTION_STACK[0].PrivateEnvironment = classPrivateEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9326 -> node9327 [color="black"]
    node9325_name [shape=none, label=<<font color="black">Block[9325]</font>>]
    node9325_name -> node9325 [arrowhead=none, color="black", style=dashed]
    node9325 [shape=box, label=<<font color="black">[0] let constructor = %11<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9325 -> node9326 [color="black"]
    node9310_name [shape=none, label=<<font color="black">Branch[9310]</font>>]
    node9310_name -> node9310 [arrowhead=none, color="black", style=dashed]
    node9310 [shape=diamond, label=<<font color="black">(= superclass null)</font>> color="black" fillcolor="white", style=filled]
    node9310 -> node9311 [label=<<font color="black">true</font>> color="black"]
    node9310 -> node9312 [label=<<font color="black">false</font>> color="black"]
    node9327_name [shape=none, label=<<font color="black">Branch[9327]</font>>]
    node9327_name -> node9327 [arrowhead=none, color="black", style=dashed]
    node9327 [shape=diamond, label=<<font color="black">(= constructor ~empty~)</font>> color="black" fillcolor="white", style=filled]
    node9327 -> node9328 [label=<<font color="black">true</font>> color="black"]
    node9327 -> node9331 [label=<<font color="black">false</font>> color="black"]
    node9311_name [shape=none, label=<<font color="black">Block[9311]</font>>]
    node9311_name -> node9311 [arrowhead=none, color="black", style=dashed]
    node9311 [shape=box, label=<<font color="black">[0] let protoParent = null<BR ALIGN="LEFT"/>[1] let constructorParent = @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Function.prototype%&quot;]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9311 -> node9320 [color="black"]
    node9312_name [shape=none, label=<<font color="black">Call[9312]</font>>]
    node9312_name -> node9312 [arrowhead=none, color="black", style=dashed]
    node9312 [shape=cds, label=<<font color="black">%8 = clo&lt;IsConstructor&gt;(superclass)</font>> color="black" fillcolor="white", style=filled]
    node9312 -> node9313 [color="black"]
    node9328_name [shape=none, label=<<font color="black">Block[9328]</font>>]
    node9328_name -> node9328 [arrowhead=none, color="black", style=dashed]
    node9328 [shape=box, label=<<font color="black">[0] let defaultConstructor = clo&lt;ClassTail[0,2].ClassDefinitionEvaluation:clo0&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9328 -> node9329 [color="black"]
    node9331_name [shape=none, label=<<font color="black">Call[9331]</font>>]
    node9331_name -> node9331 [arrowhead=none, color="black", style=dashed]
    node9331 [shape=cds, label=<<font color="black">%13 = constructor-&gt;DefineMethod(proto, constructorParent)</font>> color="black" fillcolor="white", style=filled]
    node9331 -> node9332 [color="black"]
    node9313_name [shape=none, label=<<font color="black">Branch[9313]</font>>]
    node9313_name -> node9313 [arrowhead=none, color="black", style=dashed]
    node9313 [shape=diamond, label=<<font color="black">(= %8 false)</font>> color="black" fillcolor="white", style=filled]
    node9313 -> node9314 [label=<<font color="black">true</font>> color="black"]
    node9313 -> node9315 [label=<<font color="black">false</font>> color="black"]
    node9329_name [shape=none, label=<<font color="black">Call[9329]</font>>]
    node9329_name -> node9329 [arrowhead=none, color="black", style=dashed]
    node9329 [shape=cds, label=<<font color="black">%12 = clo&lt;CreateBuiltinFunction&gt;(defaultConstructor, 0, className, (new [&quot;ConstructorKind&quot;, &quot;SourceText&quot;])[#725], @EXECUTION_STACK[0].Realm, constructorParent)</font>> color="black" fillcolor="white", style=filled]
    node9329 -> node9330 [color="black"]
    node9332_name [shape=none, label=<<font color="black">Block[9332]</font>>]
    node9332_name -> node9332 [arrowhead=none, color="black", style=dashed]
    node9332 [shape=box, label=<<font color="black">[0] let constructorInfo = [! %13]<BR ALIGN="LEFT"/>[1] let F = constructorInfo.Closure<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9332 -> node9333 [color="black"]
    node9314_name [shape=none, label=<<font color="black">Block[9314]</font>>]
    node9314_name -> node9314 [arrowhead=none, color="black", style=dashed]
    node9314 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#723])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9314 -> cluster1694_exit [color="black"]
    node9315_name [shape=none, label=<<font color="black">Call[9315]</font>>]
    node9315_name -> node9315 [arrowhead=none, color="black", style=dashed]
    node9315 [shape=cds, label=<<font color="black">%9 = clo&lt;Get&gt;(superclass, &quot;prototype&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9315 -> node9316 [color="black"]
    node9330_name [shape=none, label=<<font color="black">Block[9330]</font>>]
    node9330_name -> node9330 [arrowhead=none, color="black", style=dashed]
    node9330 [shape=box, label=<<font color="black">[0] let F = %12<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9330 -> node9335 [color="black"]
    node9333_name [shape=none, label=<<font color="black">Call[9333]</font>>]
    node9333_name -> node9333 [arrowhead=none, color="black", style=dashed]
    node9333 [shape=cds, label=<<font color="black">%14 = clo&lt;MakeClassConstructor&gt;(F)</font>> color="black" fillcolor="white", style=filled]
    node9333 -> node9334 [color="black"]
    node9316_name [shape=none, label=<<font color="black">Block[9316]</font>>]
    node9316_name -> node9316 [arrowhead=none, color="black", style=dashed]
    node9316 [shape=box, label=<<font color="black">[0] let protoParent = [? %9]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9316 -> node9317 [color="black"]
    node9335_name [shape=none, label=<<font color="black">Call[9335]</font>>]
    node9335_name -> node9335 [arrowhead=none, color="black", style=dashed]
    node9335 [shape=cds, label=<<font color="black">%16 = clo&lt;MakeConstructor&gt;(F, false, proto)</font>> color="black" fillcolor="white", style=filled]
    node9335 -> node9336 [color="black"]
    node9334_name [shape=none, label=<<font color="black">Call[9334]</font>>]
    node9334_name -> node9334 [arrowhead=none, color="black", style=dashed]
    node9334 [shape=cds, label=<<font color="black">%15 = clo&lt;SetFunctionName&gt;(F, className)</font>> color="black" fillcolor="white", style=filled]
    node9334 -> node9335 [color="black"]
    node9317_name [shape=none, label=<<font color="black">Branch[9317]</font>>]
    node9317_name -> node9317 [arrowhead=none, color="black", style=dashed]
    node9317 [shape=diamond, label=<<font color="black">(! (|| (= (typeof protoParent) @Object) (= (typeof protoParent) @Null)))</font>> color="black" fillcolor="white", style=filled]
    node9317 -> node9318 [label=<<font color="black">true</font>> color="black"]
    node9317 -> node9319 [label=<<font color="black">false</font>> color="black"]
    node9336_name [shape=none, label=<<font color="black">Branch[9336]</font>>]
    node9336_name -> node9336 [arrowhead=none, color="black", style=dashed]
    node9336 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node9336 -> node9337 [label=<<font color="black">true</font>> color="black"]
    node9336 -> node9338 [label=<<font color="black">false</font>> color="black"]
    node9318_name [shape=none, label=<<font color="black">Block[9318]</font>>]
    node9318_name -> node9318 [arrowhead=none, color="black", style=dashed]
    node9318 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#724])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9318 -> cluster1694_exit [color="black"]
    node9319_name [shape=none, label=<<font color="black">Block[9319]</font>>]
    node9319_name -> node9319 [arrowhead=none, color="black", style=dashed]
    node9319 [shape=box, label=<<font color="black">[0] let constructorParent = superclass<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9319 -> node9320 [color="black"]
    node9337_name [shape=none, label=<<font color="black">Block[9337]</font>>]
    node9337_name -> node9337 [arrowhead=none, color="black", style=dashed]
    node9337 [shape=box, label=<<font color="black">[0] F.ConstructorKind = ~derived~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9337 -> node9338 [color="black"]
    node9338_name [shape=none, label=<<font color="black">Call[9338]</font>>]
    node9338_name -> node9338 [arrowhead=none, color="black", style=dashed]
    node9338 [shape=cds, label=<<font color="black">%17 = clo&lt;CreateMethodProperty&gt;(proto, &quot;constructor&quot;, F)</font>> color="black" fillcolor="white", style=filled]
    node9338 -> node9339 [color="black"]
    node9339_name [shape=none, label=<<font color="black">Branch[9339]</font>>]
    node9339_name -> node9339 [arrowhead=none, color="black", style=dashed]
    node9339 [shape=diamond, label=<<font color="black">(= this[1] absent)</font>> color="black" fillcolor="white", style=filled]
    node9339 -> node9340 [label=<<font color="black">true</font>> color="black"]
    node9339 -> node9341 [label=<<font color="black">false</font>> color="black"]
    node9340_name [shape=none, label=<<font color="black">Block[9340]</font>>]
    node9340_name -> node9340 [arrowhead=none, color="black", style=dashed]
    node9340 [shape=box, label=<<font color="black">[0] let elements = (new [])[#726]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9340 -> node9343 [color="black"]
    node9341_name [shape=none, label=<<font color="black">Call[9341]</font>>]
    node9341_name -> node9341 [arrowhead=none, color="black", style=dashed]
    node9341 [shape=cds, label=<<font color="black">%18 = this[1]-&gt;NonConstructorElements()</font>> color="black" fillcolor="white", style=filled]
    node9341 -> node9342 [color="black"]
    node9343_name [shape=none, label=<<font color="black">Block[9343]</font>>]
    node9343_name -> node9343 [arrowhead=none, color="black", style=dashed]
    node9343 [shape=box, label=<<font color="black">[0] let instancePrivateMethods = (new [])[#727]<BR ALIGN="LEFT"/>[1] let staticPrivateMethods = (new [])[#728]<BR ALIGN="LEFT"/>[2] let instanceFields = (new [])[#729]<BR ALIGN="LEFT"/>[3] let staticElements = (new [])[#730]<BR ALIGN="LEFT"/>[4] %20 = elements<BR ALIGN="LEFT"/>[5] %19 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9343 -> node9344 [color="black"]
    node9342_name [shape=none, label=<<font color="black">Block[9342]</font>>]
    node9342_name -> node9342 [arrowhead=none, color="black", style=dashed]
    node9342 [shape=box, label=<<font color="black">[0] let elements = %18<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9342 -> node9343 [color="black"]
    node9344_name [shape=none, label=<<font color="black">Branch[9344]</font>>]
    node9344_name -> node9344 [arrowhead=none, color="black", style=dashed]
    node9344 [shape=diamond, label=<<font color="black">(&lt; %19 %20.length)</font>> color="black" fillcolor="white", style=filled]
    node9344 -> node9345 [label=<<font color="black">true</font>> color="black"]
    node9344 -> node9389 [label=<<font color="black">false</font>> color="black"]
    node9345_name [shape=none, label=<<font color="black">Block[9345]</font>>]
    node9345_name -> node9345 [arrowhead=none, color="black", style=dashed]
    node9345 [shape=box, label=<<font color="black">[0] let e = %20[%19]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9345 -> node9346 [color="black"]
    node9389_name [shape=none, label=<<font color="black">Block[9389]</font>>]
    node9389_name -> node9389 [arrowhead=none, color="black", style=dashed]
    node9389 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = env<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9389 -> node9390 [color="black"]
    node9346_name [shape=none, label=<<font color="black">Call[9346]</font>>]
    node9346_name -> node9346 [arrowhead=none, color="black", style=dashed]
    node9346 [shape=cds, label=<<font color="black">%21 = e-&gt;IsStatic()</font>> color="black" fillcolor="white", style=filled]
    node9346 -> node9347 [color="black"]
    node9390_name [shape=none, label=<<font color="black">Branch[9390]</font>>]
    node9390_name -> node9390 [arrowhead=none, color="black", style=dashed]
    node9390 [shape=diamond, label=<<font color="black">(! (= classBinding undefined))</font>> color="black" fillcolor="white", style=filled]
    node9390 -> node9391 [label=<<font color="black">true</font>> color="black"]
    node9390 -> node9393 [label=<<font color="black">false</font>> color="black"]
    node9347_name [shape=none, label=<<font color="black">Branch[9347]</font>>]
    node9347_name -> node9347 [arrowhead=none, color="black", style=dashed]
    node9347 [shape=diamond, label=<<font color="black">(= %21 false)</font>> color="black" fillcolor="white", style=filled]
    node9347 -> node9348 [label=<<font color="black">true</font>> color="black"]
    node9347 -> node9351 [label=<<font color="black">false</font>> color="black"]
    node9391_name [shape=none, label=<<font color="black">Call[9391]</font>>]
    node9391_name -> node9391 [arrowhead=none, color="black", style=dashed]
    node9391 [shape=cds, label=<<font color="black">%28 = classEnv-&gt;InitializeBinding(classBinding, F)</font>> color="black" fillcolor="white", style=filled]
    node9391 -> node9392 [color="black"]
    node9393_name [shape=none, label=<<font color="black">Block[9393]</font>>]
    node9393_name -> node9393 [arrowhead=none, color="black", style=dashed]
    node9393 [shape=box, label=<<font color="black">[0] F.PrivateMethods = instancePrivateMethods<BR ALIGN="LEFT"/>[1] F.Fields = instanceFields<BR ALIGN="LEFT"/>[2] %30 = staticPrivateMethods<BR ALIGN="LEFT"/>[3] %29 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9393 -> node9394 [color="black"]
    node9348_name [shape=none, label=<<font color="black">Call[9348]</font>>]
    node9348_name -> node9348 [arrowhead=none, color="black", style=dashed]
    node9348 [shape=cds, label=<<font color="black">%22 = e-&gt;ClassElementEvaluation(proto)</font>> color="black" fillcolor="white", style=filled]
    node9348 -> node9349 [color="black"]
    node9351_name [shape=none, label=<<font color="black">Call[9351]</font>>]
    node9351_name -> node9351 [arrowhead=none, color="black", style=dashed]
    node9351 [shape=cds, label=<<font color="black">%24 = e-&gt;ClassElementEvaluation(F)</font>> color="black" fillcolor="white", style=filled]
    node9351 -> node9352 [color="black"]
    node9392_name [shape=none, label=<<font color="black">Block[9392]</font>>]
    node9392_name -> node9392 [arrowhead=none, color="black", style=dashed]
    node9392 [shape=box, label=<<font color="black">[0] [! %28]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9392 -> node9393 [color="black"]
    node9394_name [shape=none, label=<<font color="black">Branch[9394]</font>>]
    node9394_name -> node9394 [arrowhead=none, color="black", style=dashed]
    node9394 [shape=diamond, label=<<font color="black">(&lt; %29 %30.length)</font>> color="black" fillcolor="white", style=filled]
    node9394 -> node9395 [label=<<font color="black">true</font>> color="black"]
    node9394 -> node9398 [label=<<font color="black">false</font>> color="black"]
    node9349_name [shape=none, label=<<font color="black">Call[9349]</font>>]
    node9349_name -> node9349 [arrowhead=none, color="black", style=dashed]
    node9349 [shape=cds, label=<<font color="black">%23 = clo&lt;Completion&gt;(%22)</font>> color="black" fillcolor="white", style=filled]
    node9349 -> node9350 [color="black"]
    node9352_name [shape=none, label=<<font color="black">Call[9352]</font>>]
    node9352_name -> node9352 [arrowhead=none, color="black", style=dashed]
    node9352 [shape=cds, label=<<font color="black">%25 = clo&lt;Completion&gt;(%24)</font>> color="black" fillcolor="white", style=filled]
    node9352 -> node9353 [color="black"]
    node9395_name [shape=none, label=<<font color="black">Block[9395]</font>>]
    node9395_name -> node9395 [arrowhead=none, color="black", style=dashed]
    node9395 [shape=box, label=<<font color="black">[0] let method = %30[%29]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9395 -> node9396 [color="black"]
    node9398_name [shape=none, label=<<font color="black">Block[9398]</font>>]
    node9398_name -> node9398 [arrowhead=none, color="black", style=dashed]
    node9398 [shape=box, label=<<font color="black">[0] %33 = staticElements<BR ALIGN="LEFT"/>[1] %32 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9398 -> node9399 [color="black"]
    node9350_name [shape=none, label=<<font color="black">Block[9350]</font>>]
    node9350_name -> node9350 [arrowhead=none, color="black", style=dashed]
    node9350 [shape=box, label=<<font color="black">[0] let element = %23<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9350 -> node9354 [color="black"]
    node9353_name [shape=none, label=<<font color="black">Block[9353]</font>>]
    node9353_name -> node9353 [arrowhead=none, color="black", style=dashed]
    node9353 [shape=box, label=<<font color="black">[0] let element = %25<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9353 -> node9354 [color="black"]
    node9396_name [shape=none, label=<<font color="black">Call[9396]</font>>]
    node9396_name -> node9396 [arrowhead=none, color="black", style=dashed]
    node9396 [shape=cds, label=<<font color="black">%31 = clo&lt;PrivateMethodOrAccessorAdd&gt;(F, method)</font>> color="black" fillcolor="white", style=filled]
    node9396 -> node9397 [color="black"]
    node9399_name [shape=none, label=<<font color="black">Branch[9399]</font>>]
    node9399_name -> node9399 [arrowhead=none, color="black", style=dashed]
    node9399 [shape=diamond, label=<<font color="black">(&lt; %32 %33.length)</font>> color="black" fillcolor="white", style=filled]
    node9399 -> node9400 [label=<<font color="black">true</font>> color="black"]
    node9399 -> node9412 [label=<<font color="black">false</font>> color="black"]
    node9354_name [shape=none, label=<<font color="black">Branch[9354]</font>>]
    node9354_name -> node9354 [arrowhead=none, color="black", style=dashed]
    node9354 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? element) (! (= element.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node9354 -> node9355 [label=<<font color="black">true</font>> color="black"]
    node9354 -> node9356 [label=<<font color="black">false</font>> color="black"]
    node9397_name [shape=none, label=<<font color="black">Block[9397]</font>>]
    node9397_name -> node9397 [arrowhead=none, color="black", style=dashed]
    node9397 [shape=box, label=<<font color="black">[0] [! %31]<BR ALIGN="LEFT"/>[1] %29 = (+ %29 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9397 -> node9394 [color="black"]
    node9400_name [shape=none, label=<<font color="black">Block[9400]</font>>]
    node9400_name -> node9400 [arrowhead=none, color="black", style=dashed]
    node9400 [shape=box, label=<<font color="black">[0] let elementRecord = %33[%32]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9400 -> node9401 [color="black"]
    node9412_name [shape=none, label=<<font color="black">Block[9412]</font>>]
    node9412_name -> node9412 [arrowhead=none, color="black", style=dashed]
    node9412 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].PrivateEnvironment = outerPrivateEnvironment<BR ALIGN="LEFT"/>[1] return F<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9412 -> cluster1694_exit [color="black"]
    node9355_name [shape=none, label=<<font color="black">Block[9355]</font>>]
    node9355_name -> node9355 [arrowhead=none, color="black", style=dashed]
    node9355 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = env<BR ALIGN="LEFT"/>[1] @EXECUTION_STACK[0].PrivateEnvironment = outerPrivateEnvironment<BR ALIGN="LEFT"/>[2] return [? element]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9355 -> cluster1694_exit [color="black"]
    node9356_name [shape=none, label=<<font color="black">Block[9356]</font>>]
    node9356_name -> node9356 [arrowhead=none, color="black", style=dashed]
    node9356 [shape=box, label=<<font color="black">[0] element = element.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9356 -> node9357 [color="black"]
    node9401_name [shape=none, label=<<font color="black">Branch[9401]</font>>]
    node9401_name -> node9401 [arrowhead=none, color="black", style=dashed]
    node9401 [shape=diamond, label=<<font color="black">(? elementRecord: &quot;ClassFieldDefinitionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9401 -> node9402 [label=<<font color="black">true</font>> color="black"]
    node9401 -> node9405 [label=<<font color="black">false</font>> color="black"]
    node9357_name [shape=none, label=<<font color="black">Branch[9357]</font>>]
    node9357_name -> node9357 [arrowhead=none, color="black", style=dashed]
    node9357 [shape=diamond, label=<<font color="black">(? element: &quot;PrivateElement&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9357 -> node9358 [label=<<font color="black">true</font>> color="black"]
    node9357 -> node9381 [label=<<font color="black">false</font>> color="black"]
    node9402_name [shape=none, label=<<font color="black">Call[9402]</font>>]
    node9402_name -> node9402 [arrowhead=none, color="black", style=dashed]
    node9402 [shape=cds, label=<<font color="black">%34 = clo&lt;DefineField&gt;(F, elementRecord)</font>> color="black" fillcolor="white", style=filled]
    node9402 -> node9403 [color="black"]
    node9405_name [shape=none, label=<<font color="black">Block[9405]</font>>]
    node9405_name -> node9405 [arrowhead=none, color="black", style=dashed]
    node9405 [shape=box, label=<<font color="black">[0] assert (? elementRecord: &quot;ClassStaticBlockDefinitionRecord&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9405 -> node9406 [color="black"]
    node9358_name [shape=none, label=<<font color="black">Block[9358]</font>>]
    node9358_name -> node9358 [arrowhead=none, color="black", style=dashed]
    node9358 [shape=box, label=<<font color="black">[0] assert (|| (= element.Kind ~method~) (= element.Kind ~accessor~))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9358 -> node9359 [color="black"]
    node9381_name [shape=none, label=<<font color="black">Branch[9381]</font>>]
    node9381_name -> node9381 [arrowhead=none, color="black", style=dashed]
    node9381 [shape=diamond, label=<<font color="black">(? element: &quot;ClassFieldDefinitionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9381 -> node9382 [label=<<font color="black">true</font>> color="black"]
    node9381 -> node9386 [label=<<font color="black">false</font>> color="black"]
    node9403_name [shape=none, label=<<font color="black">Call[9403]</font>>]
    node9403_name -> node9403 [arrowhead=none, color="black", style=dashed]
    node9403 [shape=cds, label=<<font color="black">%35 = clo&lt;Completion&gt;(%34)</font>> color="black" fillcolor="white", style=filled]
    node9403 -> node9404 [color="black"]
    node9406_name [shape=none, label=<<font color="black">Call[9406]</font>>]
    node9406_name -> node9406 [arrowhead=none, color="black", style=dashed]
    node9406 [shape=cds, label=<<font color="black">%36 = clo&lt;Call&gt;(elementRecord.BodyFunction, F)</font>> color="black" fillcolor="white", style=filled]
    node9406 -> node9407 [color="black"]
    node9359_name [shape=none, label=<<font color="black">Call[9359]</font>>]
    node9359_name -> node9359 [arrowhead=none, color="black", style=dashed]
    node9359 [shape=cds, label=<<font color="black">%26 = e-&gt;IsStatic()</font>> color="black" fillcolor="white", style=filled]
    node9359 -> node9360 [color="black"]
    node9382_name [shape=none, label=<<font color="black">Call[9382]</font>>]
    node9382_name -> node9382 [arrowhead=none, color="black", style=dashed]
    node9382 [shape=cds, label=<<font color="black">%27 = e-&gt;IsStatic()</font>> color="black" fillcolor="white", style=filled]
    node9382 -> node9383 [color="black"]
    node9386_name [shape=none, label=<<font color="black">Branch[9386]</font>>]
    node9386_name -> node9386 [arrowhead=none, color="black", style=dashed]
    node9386 [shape=diamond, label=<<font color="black">(? element: &quot;ClassStaticBlockDefinitionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9386 -> node9387 [label=<<font color="black">true</font>> color="black"]
    node9386 -> node9388 [label=<<font color="black">false</font>> color="black"]
    node9404_name [shape=none, label=<<font color="black">Block[9404]</font>>]
    node9404_name -> node9404 [arrowhead=none, color="black", style=dashed]
    node9404 [shape=box, label=<<font color="black">[0] let result = %35<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9404 -> node9409 [color="black"]
    node9407_name [shape=none, label=<<font color="black">Call[9407]</font>>]
    node9407_name -> node9407 [arrowhead=none, color="black", style=dashed]
    node9407 [shape=cds, label=<<font color="black">%37 = clo&lt;Completion&gt;(%36)</font>> color="black" fillcolor="white", style=filled]
    node9407 -> node9408 [color="black"]
    node9360_name [shape=none, label=<<font color="black">Branch[9360]</font>>]
    node9360_name -> node9360 [arrowhead=none, color="black", style=dashed]
    node9360 [shape=diamond, label=<<font color="black">(= %26 false)</font>> color="black" fillcolor="white", style=filled]
    node9360 -> node9361 [label=<<font color="black">true</font>> color="black"]
    node9360 -> node9362 [label=<<font color="black">false</font>> color="black"]
    node9383_name [shape=none, label=<<font color="black">Branch[9383]</font>>]
    node9383_name -> node9383 [arrowhead=none, color="black", style=dashed]
    node9383 [shape=diamond, label=<<font color="black">(= %27 false)</font>> color="black" fillcolor="white", style=filled]
    node9383 -> node9384 [label=<<font color="black">true</font>> color="black"]
    node9383 -> node9385 [label=<<font color="black">false</font>> color="black"]
    node9387_name [shape=none, label=<<font color="black">Block[9387]</font>>]
    node9387_name -> node9387 [arrowhead=none, color="black", style=dashed]
    node9387 [shape=box, label=<<font color="black">[0] push staticElements &lt; element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9387 -> node9388 [color="black"]
    node9388_name [shape=none, label=<<font color="black">Block[9388]</font>>]
    node9388_name -> node9388 [arrowhead=none, color="black", style=dashed]
    node9388 [shape=box, label=<<font color="black">[0] %19 = (+ %19 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9388 -> node9344 [color="black"]
    node9409_name [shape=none, label=<<font color="black">Branch[9409]</font>>]
    node9409_name -> node9409 [arrowhead=none, color="black", style=dashed]
    node9409 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? result) (! (= result.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node9409 -> node9410 [label=<<font color="black">true</font>> color="black"]
    node9409 -> node9411 [label=<<font color="black">false</font>> color="black"]
    node9408_name [shape=none, label=<<font color="black">Block[9408]</font>>]
    node9408_name -> node9408 [arrowhead=none, color="black", style=dashed]
    node9408 [shape=box, label=<<font color="black">[0] let result = %37<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9408 -> node9409 [color="black"]
    node9361_name [shape=none, label=<<font color="black">Block[9361]</font>>]
    node9361_name -> node9361 [arrowhead=none, color="black", style=dashed]
    node9361 [shape=box, label=<<font color="black">[0] let container = instancePrivateMethods<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9361 -> node9363 [color="black"]
    node9362_name [shape=none, label=<<font color="black">Block[9362]</font>>]
    node9362_name -> node9362 [arrowhead=none, color="black", style=dashed]
    node9362 [shape=box, label=<<font color="black">[0] let container = staticPrivateMethods<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9362 -> node9363 [color="black"]
    node9384_name [shape=none, label=<<font color="black">Block[9384]</font>>]
    node9384_name -> node9384 [arrowhead=none, color="black", style=dashed]
    node9384 [shape=box, label=<<font color="black">[0] push instanceFields &lt; element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9384 -> node9388 [color="black"]
    node9385_name [shape=none, label=<<font color="black">Block[9385]</font>>]
    node9385_name -> node9385 [arrowhead=none, color="black", style=dashed]
    node9385 [shape=box, label=<<font color="black">[0] push staticElements &lt; element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9385 -> node9388 [color="black"]
    node9410_name [shape=none, label=<<font color="black">Block[9410]</font>>]
    node9410_name -> node9410 [arrowhead=none, color="black", style=dashed]
    node9410 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].PrivateEnvironment = outerPrivateEnvironment<BR ALIGN="LEFT"/>[1] return [? result]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9410 -> cluster1694_exit [color="black"]
    node9411_name [shape=none, label=<<font color="black">Block[9411]</font>>]
    node9411_name -> node9411 [arrowhead=none, color="black", style=dashed]
    node9411 [shape=box, label=<<font color="black">[0] %32 = (+ %32 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9411 -> node9399 [color="black"]
    node9363_name [shape=none, label=<<font color="black">Branch[9363]</font>>]
    node9363_name -> node9363 [arrowhead=none, color="black", style=dashed]
    node9363 [shape=diamond, label=<<font color="black">(contains container element.Key: Unknown[&quot;PrivateElement&quot;] Key)</font>> color="black" fillcolor="white", style=filled]
    node9363 -> node9364 [label=<<font color="black">true</font>> color="black"]
    node9363 -> node9380 [label=<<font color="black">false</font>> color="black"]
    node9364_name [shape=none, label=<<font color="black">Block[9364]</font>>]
    node9364_name -> node9364 [arrowhead=none, color="black", style=dashed]
    node9364 [shape=box, label=<<font color="black">[0] let elems = container<BR ALIGN="LEFT"/>[1] let idx = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9364 -> node9365 [color="black"]
    node9380_name [shape=none, label=<<font color="black">Block[9380]</font>>]
    node9380_name -> node9380 [arrowhead=none, color="black", style=dashed]
    node9380 [shape=box, label=<<font color="black">[0] push container &lt; element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9380 -> node9388 [color="black"]
    node9365_name [shape=none, label=<<font color="black">Branch[9365]</font>>]
    node9365_name -> node9365 [arrowhead=none, color="black", style=dashed]
    node9365 [shape=diamond, label=<<font color="black">(&lt; idx elems.length)</font>> color="black" fillcolor="white", style=filled]
    node9365 -> node9366 [label=<<font color="black">true</font>> color="black"]
    node9365 -> node9370 [label=<<font color="black">false</font>> color="black"]
    node9366_name [shape=none, label=<<font color="black">Block[9366]</font>>]
    node9366_name -> node9366 [arrowhead=none, color="black", style=dashed]
    node9366 [shape=box, label=<<font color="black">[0] let elem = elems[idx]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9366 -> node9367 [color="black"]
    node9370_name [shape=none, label=<<font color="black">Block[9370]</font>>]
    node9370_name -> node9370 [arrowhead=none, color="black", style=dashed]
    node9370 [shape=box, label=<<font color="black">[0] assert (&amp;&amp; (= element.Kind ~accessor~) (= existing.Kind ~accessor~))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9370 -> node9371 [color="black"]
    node9367_name [shape=none, label=<<font color="black">Branch[9367]</font>>]
    node9367_name -> node9367 [arrowhead=none, color="black", style=dashed]
    node9367 [shape=diamond, label=<<font color="black">(= elem.Key element.Key)</font>> color="black" fillcolor="white", style=filled]
    node9367 -> node9368 [label=<<font color="black">true</font>> color="black"]
    node9367 -> node9369 [label=<<font color="black">false</font>> color="black"]
    node9371_name [shape=none, label=<<font color="black">Branch[9371]</font>>]
    node9371_name -> node9371 [arrowhead=none, color="black", style=dashed]
    node9371 [shape=diamond, label=<<font color="black">(= element.Get undefined)</font>> color="black" fillcolor="white", style=filled]
    node9371 -> node9372 [label=<<font color="black">true</font>> color="black"]
    node9371 -> node9373 [label=<<font color="black">false</font>> color="black"]
    node9368_name [shape=none, label=<<font color="black">Block[9368]</font>>]
    node9368_name -> node9368 [arrowhead=none, color="black", style=dashed]
    node9368 [shape=box, label=<<font color="black">[0] let existing = elem<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9368 -> node9369 [color="black"]
    node9369_name [shape=none, label=<<font color="black">Block[9369]</font>>]
    node9369_name -> node9369 [arrowhead=none, color="black", style=dashed]
    node9369 [shape=box, label=<<font color="black">[0] idx = (+ idx 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9369 -> node9365 [color="black"]
    node9372_name [shape=none, label=<<font color="black">Block[9372]</font>>]
    node9372_name -> node9372 [arrowhead=none, color="black", style=dashed]
    node9372 [shape=box, label=<<font color="black">[0] let combined = (new PrivateElement(&quot;Key&quot; -&gt; element.Key, &quot;Kind&quot; -&gt; ~accessor~, &quot;Get&quot; -&gt; existing.Get, &quot;Set&quot; -&gt; element.Set))[#731]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9372 -> node9374 [color="black"]
    node9373_name [shape=none, label=<<font color="black">Block[9373]</font>>]
    node9373_name -> node9373 [arrowhead=none, color="black", style=dashed]
    node9373 [shape=box, label=<<font color="black">[0] let combined = (new PrivateElement(&quot;Key&quot; -&gt; element.Key, &quot;Kind&quot; -&gt; ~accessor~, &quot;Get&quot; -&gt; element.Get, &quot;Set&quot; -&gt; existing.Set))[#732]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9373 -> node9374 [color="black"]
    node9374_name [shape=none, label=<<font color="black">Block[9374]</font>>]
    node9374_name -> node9374 [arrowhead=none, color="black", style=dashed]
    node9374 [shape=box, label=<<font color="black">[0] let elems = container<BR ALIGN="LEFT"/>[1] let idx = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9374 -> node9375 [color="black"]
    node9375_name [shape=none, label=<<font color="black">Branch[9375]</font>>]
    node9375_name -> node9375 [arrowhead=none, color="black", style=dashed]
    node9375 [shape=diamond, label=<<font color="black">(&lt; idx elems.length)</font>> color="black" fillcolor="white", style=filled]
    node9375 -> node9376 [label=<<font color="black">true</font>> color="black"]
    node9375 -> node9388 [label=<<font color="black">false</font>> color="black"]
    node9376_name [shape=none, label=<<font color="black">Block[9376]</font>>]
    node9376_name -> node9376 [arrowhead=none, color="black", style=dashed]
    node9376 [shape=box, label=<<font color="black">[0] let elem = elems[idx]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9376 -> node9377 [color="black"]
    node9377_name [shape=none, label=<<font color="black">Branch[9377]</font>>]
    node9377_name -> node9377 [arrowhead=none, color="black", style=dashed]
    node9377 [shape=diamond, label=<<font color="black">(= elem existing)</font>> color="black" fillcolor="white", style=filled]
    node9377 -> node9378 [label=<<font color="black">true</font>> color="black"]
    node9377 -> node9379 [label=<<font color="black">false</font>> color="black"]
    node9378_name [shape=none, label=<<font color="black">Block[9378]</font>>]
    node9378_name -> node9378 [arrowhead=none, color="black", style=dashed]
    node9378 [shape=box, label=<<font color="black">[0] elems[idx] = combined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9378 -> node9379 [color="black"]
    node9379_name [shape=none, label=<<font color="black">Block[9379]</font>>]
    node9379_name -> node9379 [arrowhead=none, color="black", style=dashed]
    node9379 [shape=box, label=<<font color="black">[0] idx = (+ idx 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9379 -> node9375 [color="black"]
  }
}