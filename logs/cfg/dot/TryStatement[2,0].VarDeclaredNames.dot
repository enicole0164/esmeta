digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster375 {
    label = "def <SYNTAX>:TryStatement[2,0].VarDeclaredNames(this: Ast:TryStatement[2,0]): List[String]"
    style = rounded
    cluster375_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster375_entry_name -> cluster375_entry [arrowhead=none, color="black", style=dashed]
    cluster375_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster375_entry -> node2043 [color="black"]
    cluster375_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster375_exit_name -> cluster375_exit [arrowhead=none, color="black", style=dashed]
    cluster375_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2043_name [shape=none, label=<<font color="black">Call[2043]</font>>]
    node2043_name -> node2043 [arrowhead=none, color="black", style=dashed]
    node2043 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;VarDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node2043 -> node2044 [color="black"]
    node2044_name [shape=none, label=<<font color="black">Block[2044]</font>>]
    node2044_name -> node2044 [arrowhead=none, color="black", style=dashed]
    node2044 [shape=box, label=<<font color="black">[0] let names1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2044 -> node2045 [color="black"]
    node2045_name [shape=none, label=<<font color="black">Call[2045]</font>>]
    node2045_name -> node2045 [arrowhead=none, color="black", style=dashed]
    node2045 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;VarDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node2045 -> node2046 [color="black"]
    node2046_name [shape=none, label=<<font color="black">Block[2046]</font>>]
    node2046_name -> node2046 [arrowhead=none, color="black", style=dashed]
    node2046 [shape=box, label=<<font color="black">[0] let names2 = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2046 -> node2047 [color="black"]
    node2047_name [shape=none, label=<<font color="black">Call[2047]</font>>]
    node2047_name -> node2047 [arrowhead=none, color="black", style=dashed]
    node2047 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;VarDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node2047 -> node2048 [color="black"]
    node2048_name [shape=none, label=<<font color="black">Block[2048]</font>>]
    node2048_name -> node2048 [arrowhead=none, color="black", style=dashed]
    node2048 [shape=box, label=<<font color="black">[0] let names3 = %2<BR ALIGN="LEFT"/>[1] return (list-concat names1 names2 names3)[#216]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2048 -> cluster375_exit [color="black"]
  }
}