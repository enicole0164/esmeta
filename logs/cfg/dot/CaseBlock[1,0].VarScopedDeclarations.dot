digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster432 {
    label = "def <SYNTAX>:CaseBlock[1,0].VarScopedDeclarations(this: Ast:CaseBlock[1,0]): List[Ast]"
    style = rounded
    cluster432_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster432_entry_name -> cluster432_entry [arrowhead=none, color="black", style=dashed]
    cluster432_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster432_entry -> node2160 [color="black"]
    cluster432_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster432_exit_name -> cluster432_exit [arrowhead=none, color="black", style=dashed]
    cluster432_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2160_name [shape=none, label=<<font color="black">Branch[2160]</font>>]
    node2160_name -> node2160 [arrowhead=none, color="black", style=dashed]
    node2160 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node2160 -> node2161 [label=<<font color="black">true</font>> color="black"]
    node2160 -> node2163 [label=<<font color="black">false</font>> color="black"]
    node2161_name [shape=none, label=<<font color="black">Call[2161]</font>>]
    node2161_name -> node2161 [arrowhead=none, color="black", style=dashed]
    node2161 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2161 -> node2162 [color="black"]
    node2163_name [shape=none, label=<<font color="black">Block[2163]</font>>]
    node2163_name -> node2163 [arrowhead=none, color="black", style=dashed]
    node2163 [shape=box, label=<<font color="black">[0] let declarations1 = (new [])[#250]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2163 -> node2164 [color="black"]
    node2162_name [shape=none, label=<<font color="black">Block[2162]</font>>]
    node2162_name -> node2162 [arrowhead=none, color="black", style=dashed]
    node2162 [shape=box, label=<<font color="black">[0] let declarations1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2162 -> node2164 [color="black"]
    node2164_name [shape=none, label=<<font color="black">Call[2164]</font>>]
    node2164_name -> node2164 [arrowhead=none, color="black", style=dashed]
    node2164 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2164 -> node2165 [color="black"]
    node2165_name [shape=none, label=<<font color="black">Block[2165]</font>>]
    node2165_name -> node2165 [arrowhead=none, color="black", style=dashed]
    node2165 [shape=box, label=<<font color="black">[0] let declarations2 = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2165 -> node2166 [color="black"]
    node2166_name [shape=none, label=<<font color="black">Branch[2166]</font>>]
    node2166_name -> node2166 [arrowhead=none, color="black", style=dashed]
    node2166 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node2166 -> node2167 [label=<<font color="black">true</font>> color="black"]
    node2166 -> node2169 [label=<<font color="black">false</font>> color="black"]
    node2167_name [shape=none, label=<<font color="black">Call[2167]</font>>]
    node2167_name -> node2167 [arrowhead=none, color="black", style=dashed]
    node2167 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2167 -> node2168 [color="black"]
    node2169_name [shape=none, label=<<font color="black">Block[2169]</font>>]
    node2169_name -> node2169 [arrowhead=none, color="black", style=dashed]
    node2169 [shape=box, label=<<font color="black">[0] let declarations3 = (new [])[#251]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2169 -> node2170 [color="black"]
    node2168_name [shape=none, label=<<font color="black">Block[2168]</font>>]
    node2168_name -> node2168 [arrowhead=none, color="black", style=dashed]
    node2168 [shape=box, label=<<font color="black">[0] let declarations3 = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2168 -> node2170 [color="black"]
    node2170_name [shape=none, label=<<font color="black">Block[2170]</font>>]
    node2170_name -> node2170 [arrowhead=none, color="black", style=dashed]
    node2170 [shape=box, label=<<font color="black">[0] return (list-concat declarations1 declarations2 declarations3)[#252]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2170 -> cluster432_exit [color="black"]
  }
}