digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster812 {
    label = "def <SYNTAX>:ArrowFunction[0,0].Contains(this: Ast:ArrowFunction[0,0], symbol: Unknown): Boolean"
    style = rounded
    cluster812_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster812_entry_name -> cluster812_entry [arrowhead=none, color="black", style=dashed]
    cluster812_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster812_entry -> node3097 [color="black"]
    cluster812_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster812_exit_name -> cluster812_exit [arrowhead=none, color="black", style=dashed]
    cluster812_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3097_name [shape=none, label=<<font color="black">Branch[3097]</font>>]
    node3097_name -> node3097 [arrowhead=none, color="black", style=dashed]
    node3097 [shape=diamond, label=<<font color="black">(! (|| (|| (|| (|| (= symbol (nt |NewTarget|[])) (= symbol (nt |SuperProperty|[]))) (= symbol (nt |SuperCall|[]))) (= symbol &quot;super&quot;)) (= symbol &quot;this&quot;)))</font>> color="black" fillcolor="white", style=filled]
    node3097 -> node3098 [label=<<font color="black">true</font>> color="black"]
    node3097 -> node3099 [label=<<font color="black">false</font>> color="black"]
    node3098_name [shape=none, label=<<font color="black">Block[3098]</font>>]
    node3098_name -> node3098 [arrowhead=none, color="black", style=dashed]
    node3098 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3098 -> cluster812_exit [color="black"]
    node3099_name [shape=none, label=<<font color="black">Call[3099]</font>>]
    node3099_name -> node3099 [arrowhead=none, color="black", style=dashed]
    node3099 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Contains(symbol)</font>> color="black" fillcolor="white", style=filled]
    node3099 -> node3100 [color="black"]
    node3100_name [shape=none, label=<<font color="black">Branch[3100]</font>>]
    node3100_name -> node3100 [arrowhead=none, color="black", style=dashed]
    node3100 [shape=diamond, label=<<font color="black">(= %0 true)</font>> color="black" fillcolor="white", style=filled]
    node3100 -> node3101 [label=<<font color="black">true</font>> color="black"]
    node3100 -> node3102 [label=<<font color="black">false</font>> color="black"]
    node3101_name [shape=none, label=<<font color="black">Block[3101]</font>>]
    node3101_name -> node3101 [arrowhead=none, color="black", style=dashed]
    node3101 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3101 -> cluster812_exit [color="black"]
    node3102_name [shape=none, label=<<font color="black">Call[3102]</font>>]
    node3102_name -> node3102 [arrowhead=none, color="black", style=dashed]
    node3102 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;Contains(symbol)</font>> color="black" fillcolor="white", style=filled]
    node3102 -> node3103 [color="black"]
    node3103_name [shape=none, label=<<font color="black">Block[3103]</font>>]
    node3103_name -> node3103 [arrowhead=none, color="black", style=dashed]
    node3103 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3103 -> cluster812_exit [color="black"]
  }
}