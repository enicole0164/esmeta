digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2522 {
    label = "def GetWaiterList(block: Unknown["SharedDataBlock"], i: Unknown["NonnegativeIntegerThatIsEvenlyDivisibleBy4"]): Unknown["WaiterList"]"
    style = rounded
    cluster2522_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2522_entry_name -> cluster2522_entry [arrowhead=none, color="black", style=dashed]
    cluster2522_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2522_entry -> node17954 [color="black"]
    cluster2522_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2522_exit_name -> cluster2522_exit [arrowhead=none, color="black", style=dashed]
    cluster2522_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17954_name [shape=none, label=<<font color="black">Block[17954]</font>>]
    node17954_name -> node17954 [arrowhead=none, color="black", style=dashed]
    node17954 [shape=box, label=<<font color="black">[0] assert (yet &quot;_i_ and _i_ + 3 are valid byte offsets within the memory of _block_.&quot;)<BR ALIGN="LEFT"/>[1] (yet &quot;Return the WaiterList that is referenced by the pair (_block_, _i_).&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17954 -> cluster2522_exit [color="black"]
  }
}