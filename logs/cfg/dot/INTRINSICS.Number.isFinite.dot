digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2059 {
    label = "def <BUILTIN>:INTRINSICS.Number.isFinite(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2059_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2059_entry_name -> cluster2059_entry [arrowhead=none, color="black", style=dashed]
    cluster2059_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2059_entry -> node11792 [color="black"]
    cluster2059_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2059_exit_name -> cluster2059_exit [arrowhead=none, color="black", style=dashed]
    cluster2059_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11792_name [shape=none, label=<<font color="black">Branch[11792]</font>>]
    node11792_name -> node11792 [arrowhead=none, color="black", style=dashed]
    node11792 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11792 -> node11793 [label=<<font color="black">true</font>> color="black"]
    node11792 -> node11794 [label=<<font color="black">false</font>> color="black"]
    node11793_name [shape=none, label=<<font color="black">Block[11793]</font>>]
    node11793_name -> node11793 [arrowhead=none, color="black", style=dashed]
    node11793 [shape=box, label=<<font color="black">[0] let number = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11793 -> node11795 [color="black"]
    node11794_name [shape=none, label=<<font color="black">Block[11794]</font>>]
    node11794_name -> node11794 [arrowhead=none, color="black", style=dashed]
    node11794 [shape=box, label=<<font color="black">[0] let number = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11794 -> node11795 [color="black"]
    node11795_name [shape=none, label=<<font color="black">Branch[11795]</font>>]
    node11795_name -> node11795 [arrowhead=none, color="black", style=dashed]
    node11795 [shape=diamond, label=<<font color="black">(! (= (typeof number) @Number))</font>> color="black" fillcolor="white", style=filled]
    node11795 -> node11796 [label=<<font color="black">true</font>> color="black"]
    node11795 -> node11797 [label=<<font color="black">false</font>> color="black"]
    node11796_name [shape=none, label=<<font color="black">Block[11796]</font>>]
    node11796_name -> node11796 [arrowhead=none, color="black", style=dashed]
    node11796 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11796 -> cluster2059_exit [color="black"]
    node11797_name [shape=none, label=<<font color="black">Branch[11797]</font>>]
    node11797_name -> node11797 [arrowhead=none, color="black", style=dashed]
    node11797 [shape=diamond, label=<<font color="black">(|| (|| (= number NaN) (= number +INF)) (= number -INF))</font>> color="black" fillcolor="white", style=filled]
    node11797 -> node11798 [label=<<font color="black">true</font>> color="black"]
    node11797 -> node11799 [label=<<font color="black">false</font>> color="black"]
    node11798_name [shape=none, label=<<font color="black">Block[11798]</font>>]
    node11798_name -> node11798 [arrowhead=none, color="black", style=dashed]
    node11798 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11798 -> cluster2059_exit [color="black"]
    node11799_name [shape=none, label=<<font color="black">Block[11799]</font>>]
    node11799_name -> node11799 [arrowhead=none, color="black", style=dashed]
    node11799 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11799 -> cluster2059_exit [color="black"]
  }
}