digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2368 {
    label = "def <BUILTIN>:INTRINSICS.Array.prototype.reverse(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2368_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2368_entry_name -> cluster2368_entry [arrowhead=none, color="black", style=dashed]
    cluster2368_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2368_entry -> node15456 [color="black"]
    cluster2368_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2368_exit_name -> cluster2368_exit [arrowhead=none, color="black", style=dashed]
    cluster2368_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node15456_name [shape=none, label=<<font color="black">Call[15456]</font>>]
    node15456_name -> node15456 [arrowhead=none, color="black", style=dashed]
    node15456 [shape=cds, label=<<font color="black">%0 = clo&lt;ToObject&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node15456 -> node15457 [color="black"]
    node15457_name [shape=none, label=<<font color="black">Block[15457]</font>>]
    node15457_name -> node15457 [arrowhead=none, color="black", style=dashed]
    node15457 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15457 -> node15458 [color="black"]
    node15458_name [shape=none, label=<<font color="black">Call[15458]</font>>]
    node15458_name -> node15458 [arrowhead=none, color="black", style=dashed]
    node15458 [shape=cds, label=<<font color="black">%1 = clo&lt;LengthOfArrayLike&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node15458 -> node15459 [color="black"]
    node15459_name [shape=none, label=<<font color="black">Block[15459]</font>>]
    node15459_name -> node15459 [arrowhead=none, color="black", style=dashed]
    node15459 [shape=box, label=<<font color="black">[0] let len = [? %1]<BR ALIGN="LEFT"/>[1] let middle = (floor (/ len 2))<BR ALIGN="LEFT"/>[2] let lower = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15459 -> node15460 [color="black"]
    node15460_name [shape=none, label=<<font color="black">Branch[15460]</font>>]
    node15460_name -> node15460 [arrowhead=none, color="black", style=dashed]
    node15460 [shape=diamond, label=<<font color="black">(! (== lower middle))</font>> color="black" fillcolor="white", style=filled]
    node15460 -> node15461 [label=<<font color="black">true</font>> color="black"]
    node15460 -> node15493 [label=<<font color="black">false</font>> color="black"]
    node15461_name [shape=none, label=<<font color="black">Block[15461]</font>>]
    node15461_name -> node15461 [arrowhead=none, color="black", style=dashed]
    node15461 [shape=box, label=<<font color="black">[0] let upper = (- (- len lower) 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15461 -> node15462 [color="black"]
    node15493_name [shape=none, label=<<font color="black">Block[15493]</font>>]
    node15493_name -> node15493 [arrowhead=none, color="black", style=dashed]
    node15493 [shape=box, label=<<font color="black">[0] return O<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15493 -> cluster2368_exit [color="black"]
    node15462_name [shape=none, label=<<font color="black">Call[15462]</font>>]
    node15462_name -> node15462 [arrowhead=none, color="black", style=dashed]
    node15462 [shape=cds, label=<<font color="black">%2 = clo&lt;ToString&gt;(([number] upper))</font>> color="black" fillcolor="white", style=filled]
    node15462 -> node15463 [color="black"]
    node15463_name [shape=none, label=<<font color="black">Block[15463]</font>>]
    node15463_name -> node15463 [arrowhead=none, color="black", style=dashed]
    node15463 [shape=box, label=<<font color="black">[0] let upperP = [! %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15463 -> node15464 [color="black"]
    node15464_name [shape=none, label=<<font color="black">Call[15464]</font>>]
    node15464_name -> node15464 [arrowhead=none, color="black", style=dashed]
    node15464 [shape=cds, label=<<font color="black">%3 = clo&lt;ToString&gt;(([number] lower))</font>> color="black" fillcolor="white", style=filled]
    node15464 -> node15465 [color="black"]
    node15465_name [shape=none, label=<<font color="black">Block[15465]</font>>]
    node15465_name -> node15465 [arrowhead=none, color="black", style=dashed]
    node15465 [shape=box, label=<<font color="black">[0] let lowerP = [! %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15465 -> node15466 [color="black"]
    node15466_name [shape=none, label=<<font color="black">Call[15466]</font>>]
    node15466_name -> node15466 [arrowhead=none, color="black", style=dashed]
    node15466 [shape=cds, label=<<font color="black">%4 = clo&lt;HasProperty&gt;(O, lowerP)</font>> color="black" fillcolor="white", style=filled]
    node15466 -> node15467 [color="black"]
    node15467_name [shape=none, label=<<font color="black">Block[15467]</font>>]
    node15467_name -> node15467 [arrowhead=none, color="black", style=dashed]
    node15467 [shape=box, label=<<font color="black">[0] let lowerExists = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15467 -> node15468 [color="black"]
    node15468_name [shape=none, label=<<font color="black">Branch[15468]</font>>]
    node15468_name -> node15468 [arrowhead=none, color="black", style=dashed]
    node15468 [shape=diamond, label=<<font color="black">(= lowerExists true)</font>> color="black" fillcolor="white", style=filled]
    node15468 -> node15469 [label=<<font color="black">true</font>> color="black"]
    node15468 -> node15471 [label=<<font color="black">false</font>> color="black"]
    node15469_name [shape=none, label=<<font color="black">Call[15469]</font>>]
    node15469_name -> node15469 [arrowhead=none, color="black", style=dashed]
    node15469 [shape=cds, label=<<font color="black">%5 = clo&lt;Get&gt;(O, lowerP)</font>> color="black" fillcolor="white", style=filled]
    node15469 -> node15470 [color="black"]
    node15471_name [shape=none, label=<<font color="black">Call[15471]</font>>]
    node15471_name -> node15471 [arrowhead=none, color="black", style=dashed]
    node15471 [shape=cds, label=<<font color="black">%6 = clo&lt;HasProperty&gt;(O, upperP)</font>> color="black" fillcolor="white", style=filled]
    node15471 -> node15472 [color="black"]
    node15470_name [shape=none, label=<<font color="black">Block[15470]</font>>]
    node15470_name -> node15470 [arrowhead=none, color="black", style=dashed]
    node15470 [shape=box, label=<<font color="black">[0] let lowerValue = [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15470 -> node15471 [color="black"]
    node15472_name [shape=none, label=<<font color="black">Block[15472]</font>>]
    node15472_name -> node15472 [arrowhead=none, color="black", style=dashed]
    node15472 [shape=box, label=<<font color="black">[0] let upperExists = [? %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15472 -> node15473 [color="black"]
    node15473_name [shape=none, label=<<font color="black">Branch[15473]</font>>]
    node15473_name -> node15473 [arrowhead=none, color="black", style=dashed]
    node15473 [shape=diamond, label=<<font color="black">(= upperExists true)</font>> color="black" fillcolor="white", style=filled]
    node15473 -> node15474 [label=<<font color="black">true</font>> color="black"]
    node15473 -> node15476 [label=<<font color="black">false</font>> color="black"]
    node15474_name [shape=none, label=<<font color="black">Call[15474]</font>>]
    node15474_name -> node15474 [arrowhead=none, color="black", style=dashed]
    node15474 [shape=cds, label=<<font color="black">%7 = clo&lt;Get&gt;(O, upperP)</font>> color="black" fillcolor="white", style=filled]
    node15474 -> node15475 [color="black"]
    node15476_name [shape=none, label=<<font color="black">Branch[15476]</font>>]
    node15476_name -> node15476 [arrowhead=none, color="black", style=dashed]
    node15476 [shape=diamond, label=<<font color="black">(&amp;&amp; (= lowerExists true) (= upperExists true))</font>> color="black" fillcolor="white", style=filled]
    node15476 -> node15477 [label=<<font color="black">true</font>> color="black"]
    node15476 -> node15481 [label=<<font color="black">false</font>> color="black"]
    node15475_name [shape=none, label=<<font color="black">Block[15475]</font>>]
    node15475_name -> node15475 [arrowhead=none, color="black", style=dashed]
    node15475 [shape=box, label=<<font color="black">[0] let upperValue = [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15475 -> node15476 [color="black"]
    node15477_name [shape=none, label=<<font color="black">Call[15477]</font>>]
    node15477_name -> node15477 [arrowhead=none, color="black", style=dashed]
    node15477 [shape=cds, label=<<font color="black">%8 = clo&lt;Set&gt;(O, lowerP, upperValue, true)</font>> color="black" fillcolor="white", style=filled]
    node15477 -> node15478 [color="black"]
    node15481_name [shape=none, label=<<font color="black">Branch[15481]</font>>]
    node15481_name -> node15481 [arrowhead=none, color="black", style=dashed]
    node15481 [shape=diamond, label=<<font color="black">(&amp;&amp; (= lowerExists false) (= upperExists true))</font>> color="black" fillcolor="white", style=filled]
    node15481 -> node15482 [label=<<font color="black">true</font>> color="black"]
    node15481 -> node15486 [label=<<font color="black">false</font>> color="black"]
    node15478_name [shape=none, label=<<font color="black">Block[15478]</font>>]
    node15478_name -> node15478 [arrowhead=none, color="black", style=dashed]
    node15478 [shape=box, label=<<font color="black">[0] [? %8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15478 -> node15479 [color="black"]
    node15482_name [shape=none, label=<<font color="black">Call[15482]</font>>]
    node15482_name -> node15482 [arrowhead=none, color="black", style=dashed]
    node15482 [shape=cds, label=<<font color="black">%10 = clo&lt;Set&gt;(O, lowerP, upperValue, true)</font>> color="black" fillcolor="white", style=filled]
    node15482 -> node15483 [color="black"]
    node15486_name [shape=none, label=<<font color="black">Branch[15486]</font>>]
    node15486_name -> node15486 [arrowhead=none, color="black", style=dashed]
    node15486 [shape=diamond, label=<<font color="black">(&amp;&amp; (= lowerExists true) (= upperExists false))</font>> color="black" fillcolor="white", style=filled]
    node15486 -> node15487 [label=<<font color="black">true</font>> color="black"]
    node15486 -> node15491 [label=<<font color="black">false</font>> color="black"]
    node15479_name [shape=none, label=<<font color="black">Call[15479]</font>>]
    node15479_name -> node15479 [arrowhead=none, color="black", style=dashed]
    node15479 [shape=cds, label=<<font color="black">%9 = clo&lt;Set&gt;(O, upperP, lowerValue, true)</font>> color="black" fillcolor="white", style=filled]
    node15479 -> node15480 [color="black"]
    node15483_name [shape=none, label=<<font color="black">Block[15483]</font>>]
    node15483_name -> node15483 [arrowhead=none, color="black", style=dashed]
    node15483 [shape=box, label=<<font color="black">[0] [? %10]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15483 -> node15484 [color="black"]
    node15487_name [shape=none, label=<<font color="black">Call[15487]</font>>]
    node15487_name -> node15487 [arrowhead=none, color="black", style=dashed]
    node15487 [shape=cds, label=<<font color="black">%12 = clo&lt;DeletePropertyOrThrow&gt;(O, lowerP)</font>> color="black" fillcolor="white", style=filled]
    node15487 -> node15488 [color="black"]
    node15491_name [shape=none, label=<<font color="black">Block[15491]</font>>]
    node15491_name -> node15491 [arrowhead=none, color="black", style=dashed]
    node15491 [shape=box, label=<<font color="black">[0] assert (&amp;&amp; (= lowerExists false) (= upperExists false))<BR ALIGN="LEFT"/>[1] (yet &quot;No action is required.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15491 -> node15492 [color="black"]
    node15480_name [shape=none, label=<<font color="black">Block[15480]</font>>]
    node15480_name -> node15480 [arrowhead=none, color="black", style=dashed]
    node15480 [shape=box, label=<<font color="black">[0] [? %9]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15480 -> node15492 [color="black"]
    node15484_name [shape=none, label=<<font color="black">Call[15484]</font>>]
    node15484_name -> node15484 [arrowhead=none, color="black", style=dashed]
    node15484 [shape=cds, label=<<font color="black">%11 = clo&lt;DeletePropertyOrThrow&gt;(O, upperP)</font>> color="black" fillcolor="white", style=filled]
    node15484 -> node15485 [color="black"]
    node15488_name [shape=none, label=<<font color="black">Block[15488]</font>>]
    node15488_name -> node15488 [arrowhead=none, color="black", style=dashed]
    node15488 [shape=box, label=<<font color="black">[0] [? %12]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15488 -> node15489 [color="black"]
    node15492_name [shape=none, label=<<font color="black">Block[15492]</font>>]
    node15492_name -> node15492 [arrowhead=none, color="black", style=dashed]
    node15492 [shape=box, label=<<font color="black">[0] lower = (+ lower 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15492 -> node15460 [color="black"]
    node15485_name [shape=none, label=<<font color="black">Block[15485]</font>>]
    node15485_name -> node15485 [arrowhead=none, color="black", style=dashed]
    node15485 [shape=box, label=<<font color="black">[0] [? %11]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15485 -> node15492 [color="black"]
    node15489_name [shape=none, label=<<font color="black">Call[15489]</font>>]
    node15489_name -> node15489 [arrowhead=none, color="black", style=dashed]
    node15489 [shape=cds, label=<<font color="black">%13 = clo&lt;Set&gt;(O, upperP, lowerValue, true)</font>> color="black" fillcolor="white", style=filled]
    node15489 -> node15490 [color="black"]
    node15490_name [shape=none, label=<<font color="black">Block[15490]</font>>]
    node15490_name -> node15490 [arrowhead=none, color="black", style=dashed]
    node15490 [shape=box, label=<<font color="black">[0] [? %13]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15490 -> node15492 [color="black"]
  }
}