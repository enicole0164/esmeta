digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2592 {
    label = "def <BUILTIN>:INTRINSICS.Promise.race(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2592_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2592_entry_name -> cluster2592_entry [arrowhead=none, color="black", style=dashed]
    cluster2592_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2592_entry -> node19116 [color="black"]
    cluster2592_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2592_exit_name -> cluster2592_exit [arrowhead=none, color="black", style=dashed]
    cluster2592_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node19116_name [shape=none, label=<<font color="black">Branch[19116]</font>>]
    node19116_name -> node19116 [arrowhead=none, color="black", style=dashed]
    node19116 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node19116 -> node19117 [label=<<font color="black">true</font>> color="black"]
    node19116 -> node19118 [label=<<font color="black">false</font>> color="black"]
    node19117_name [shape=none, label=<<font color="black">Block[19117]</font>>]
    node19117_name -> node19117 [arrowhead=none, color="black", style=dashed]
    node19117 [shape=box, label=<<font color="black">[0] let iterable = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19117 -> node19119 [color="black"]
    node19118_name [shape=none, label=<<font color="black">Block[19118]</font>>]
    node19118_name -> node19118 [arrowhead=none, color="black", style=dashed]
    node19118 [shape=box, label=<<font color="black">[0] let iterable = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19118 -> node19119 [color="black"]
    node19119_name [shape=none, label=<<font color="black">Block[19119]</font>>]
    node19119_name -> node19119 [arrowhead=none, color="black", style=dashed]
    node19119 [shape=box, label=<<font color="black">[0] let C = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19119 -> node19120 [color="black"]
    node19120_name [shape=none, label=<<font color="black">Call[19120]</font>>]
    node19120_name -> node19120 [arrowhead=none, color="black", style=dashed]
    node19120 [shape=cds, label=<<font color="black">%0 = clo&lt;NewPromiseCapability&gt;(C)</font>> color="black" fillcolor="white", style=filled]
    node19120 -> node19121 [color="black"]
    node19121_name [shape=none, label=<<font color="black">Block[19121]</font>>]
    node19121_name -> node19121 [arrowhead=none, color="black", style=dashed]
    node19121 [shape=box, label=<<font color="black">[0] let promiseCapability = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19121 -> node19122 [color="black"]
    node19122_name [shape=none, label=<<font color="black">Call[19122]</font>>]
    node19122_name -> node19122 [arrowhead=none, color="black", style=dashed]
    node19122 [shape=cds, label=<<font color="black">%1 = clo&lt;GetPromiseResolve&gt;(C)</font>> color="black" fillcolor="white", style=filled]
    node19122 -> node19123 [color="black"]
    node19123_name [shape=none, label=<<font color="black">Call[19123]</font>>]
    node19123_name -> node19123 [arrowhead=none, color="black", style=dashed]
    node19123 [shape=cds, label=<<font color="black">%2 = clo&lt;Completion&gt;(%1)</font>> color="black" fillcolor="white", style=filled]
    node19123 -> node19124 [color="black"]
    node19124_name [shape=none, label=<<font color="black">Block[19124]</font>>]
    node19124_name -> node19124 [arrowhead=none, color="black", style=dashed]
    node19124 [shape=box, label=<<font color="black">[0] let promiseResolve = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19124 -> node19125 [color="black"]
    node19125_name [shape=none, label=<<font color="black">Branch[19125]</font>>]
    node19125_name -> node19125 [arrowhead=none, color="black", style=dashed]
    node19125 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? promiseResolve) (! (= promiseResolve.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node19125 -> node19126 [label=<<font color="black">true</font>> color="black"]
    node19125 -> node19128 [label=<<font color="black">false</font>> color="black"]
    node19126_name [shape=none, label=<<font color="black">Call[19126]</font>>]
    node19126_name -> node19126 [arrowhead=none, color="black", style=dashed]
    node19126 [shape=cds, label=<<font color="black">%3 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [promiseResolve.Value])[#1297])</font>> color="black" fillcolor="white", style=filled]
    node19126 -> node19127 [color="black"]
    node19128_name [shape=none, label=<<font color="black">Branch[19128]</font>>]
    node19128_name -> node19128 [arrowhead=none, color="black", style=dashed]
    node19128 [shape=diamond, label=<<font color="black">(? promiseResolve: &quot;CompletionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node19128 -> node19129 [label=<<font color="black">true</font>> color="black"]
    node19128 -> node19130 [label=<<font color="black">false</font>> color="black"]
    node19127_name [shape=none, label=<<font color="black">Block[19127]</font>>]
    node19127_name -> node19127 [arrowhead=none, color="black", style=dashed]
    node19127 [shape=box, label=<<font color="black">[0] [? %3]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19127 -> cluster2592_exit [color="black"]
    node19129_name [shape=none, label=<<font color="black">Block[19129]</font>>]
    node19129_name -> node19129 [arrowhead=none, color="black", style=dashed]
    node19129 [shape=box, label=<<font color="black">[0] promiseResolve = promiseResolve.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19129 -> node19130 [color="black"]
    node19130_name [shape=none, label=<<font color="black">Call[19130]</font>>]
    node19130_name -> node19130 [arrowhead=none, color="black", style=dashed]
    node19130 [shape=cds, label=<<font color="black">%4 = clo&lt;GetIterator&gt;(iterable)</font>> color="black" fillcolor="white", style=filled]
    node19130 -> node19131 [color="black"]
    node19131_name [shape=none, label=<<font color="black">Call[19131]</font>>]
    node19131_name -> node19131 [arrowhead=none, color="black", style=dashed]
    node19131 [shape=cds, label=<<font color="black">%5 = clo&lt;Completion&gt;(%4)</font>> color="black" fillcolor="white", style=filled]
    node19131 -> node19132 [color="black"]
    node19132_name [shape=none, label=<<font color="black">Block[19132]</font>>]
    node19132_name -> node19132 [arrowhead=none, color="black", style=dashed]
    node19132 [shape=box, label=<<font color="black">[0] let iteratorRecord = %5<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19132 -> node19133 [color="black"]
    node19133_name [shape=none, label=<<font color="black">Branch[19133]</font>>]
    node19133_name -> node19133 [arrowhead=none, color="black", style=dashed]
    node19133 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? iteratorRecord) (! (= iteratorRecord.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node19133 -> node19134 [label=<<font color="black">true</font>> color="black"]
    node19133 -> node19136 [label=<<font color="black">false</font>> color="black"]
    node19134_name [shape=none, label=<<font color="black">Call[19134]</font>>]
    node19134_name -> node19134 [arrowhead=none, color="black", style=dashed]
    node19134 [shape=cds, label=<<font color="black">%6 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [iteratorRecord.Value])[#1298])</font>> color="black" fillcolor="white", style=filled]
    node19134 -> node19135 [color="black"]
    node19136_name [shape=none, label=<<font color="black">Branch[19136]</font>>]
    node19136_name -> node19136 [arrowhead=none, color="black", style=dashed]
    node19136 [shape=diamond, label=<<font color="black">(? iteratorRecord: &quot;CompletionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node19136 -> node19137 [label=<<font color="black">true</font>> color="black"]
    node19136 -> node19138 [label=<<font color="black">false</font>> color="black"]
    node19135_name [shape=none, label=<<font color="black">Block[19135]</font>>]
    node19135_name -> node19135 [arrowhead=none, color="black", style=dashed]
    node19135 [shape=box, label=<<font color="black">[0] [? %6]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19135 -> cluster2592_exit [color="black"]
    node19137_name [shape=none, label=<<font color="black">Block[19137]</font>>]
    node19137_name -> node19137 [arrowhead=none, color="black", style=dashed]
    node19137 [shape=box, label=<<font color="black">[0] iteratorRecord = iteratorRecord.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19137 -> node19138 [color="black"]
    node19138_name [shape=none, label=<<font color="black">Call[19138]</font>>]
    node19138_name -> node19138 [arrowhead=none, color="black", style=dashed]
    node19138 [shape=cds, label=<<font color="black">%7 = clo&lt;PerformPromiseRace&gt;(iteratorRecord, C, promiseCapability, promiseResolve)</font>> color="black" fillcolor="white", style=filled]
    node19138 -> node19139 [color="black"]
    node19139_name [shape=none, label=<<font color="black">Call[19139]</font>>]
    node19139_name -> node19139 [arrowhead=none, color="black", style=dashed]
    node19139 [shape=cds, label=<<font color="black">%8 = clo&lt;Completion&gt;(%7)</font>> color="black" fillcolor="white", style=filled]
    node19139 -> node19140 [color="black"]
    node19140_name [shape=none, label=<<font color="black">Block[19140]</font>>]
    node19140_name -> node19140 [arrowhead=none, color="black", style=dashed]
    node19140 [shape=box, label=<<font color="black">[0] let result = %8<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19140 -> node19141 [color="black"]
    node19141_name [shape=none, label=<<font color="black">Branch[19141]</font>>]
    node19141_name -> node19141 [arrowhead=none, color="black", style=dashed]
    node19141 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? result) (! (= result.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node19141 -> node19142 [label=<<font color="black">true</font>> color="black"]
    node19141 -> node19151 [label=<<font color="black">false</font>> color="black"]
    node19142_name [shape=none, label=<<font color="black">Branch[19142]</font>>]
    node19142_name -> node19142 [arrowhead=none, color="black", style=dashed]
    node19142 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white", style=filled]
    node19142 -> node19143 [label=<<font color="black">true</font>> color="black"]
    node19142 -> node19146 [label=<<font color="black">false</font>> color="black"]
    node19151_name [shape=none, label=<<font color="black">Block[19151]</font>>]
    node19151_name -> node19151 [arrowhead=none, color="black", style=dashed]
    node19151 [shape=box, label=<<font color="black">[0] return [? result]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19151 -> cluster2592_exit [color="black"]
    node19143_name [shape=none, label=<<font color="black">Call[19143]</font>>]
    node19143_name -> node19143 [arrowhead=none, color="black", style=dashed]
    node19143 [shape=cds, label=<<font color="black">%9 = clo&lt;IteratorClose&gt;(iteratorRecord, result)</font>> color="black" fillcolor="white", style=filled]
    node19143 -> node19144 [color="black"]
    node19146_name [shape=none, label=<<font color="black">Branch[19146]</font>>]
    node19146_name -> node19146 [arrowhead=none, color="black", style=dashed]
    node19146 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? result) (! (= result.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node19146 -> node19147 [label=<<font color="black">true</font>> color="black"]
    node19146 -> node19149 [label=<<font color="black">false</font>> color="black"]
    node19144_name [shape=none, label=<<font color="black">Call[19144]</font>>]
    node19144_name -> node19144 [arrowhead=none, color="black", style=dashed]
    node19144 [shape=cds, label=<<font color="black">%10 = clo&lt;Completion&gt;(%9)</font>> color="black" fillcolor="white", style=filled]
    node19144 -> node19145 [color="black"]
    node19147_name [shape=none, label=<<font color="black">Call[19147]</font>>]
    node19147_name -> node19147 [arrowhead=none, color="black", style=dashed]
    node19147 [shape=cds, label=<<font color="black">%11 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [result.Value])[#1299])</font>> color="black" fillcolor="white", style=filled]
    node19147 -> node19148 [color="black"]
    node19149_name [shape=none, label=<<font color="black">Branch[19149]</font>>]
    node19149_name -> node19149 [arrowhead=none, color="black", style=dashed]
    node19149 [shape=diamond, label=<<font color="black">(? result: &quot;CompletionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node19149 -> node19150 [label=<<font color="black">true</font>> color="black"]
    node19149 -> node19151 [label=<<font color="black">false</font>> color="black"]
    node19145_name [shape=none, label=<<font color="black">Block[19145]</font>>]
    node19145_name -> node19145 [arrowhead=none, color="black", style=dashed]
    node19145 [shape=box, label=<<font color="black">[0] result = %10<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19145 -> node19146 [color="black"]
    node19148_name [shape=none, label=<<font color="black">Block[19148]</font>>]
    node19148_name -> node19148 [arrowhead=none, color="black", style=dashed]
    node19148 [shape=box, label=<<font color="black">[0] [? %11]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19148 -> cluster2592_exit [color="black"]
    node19150_name [shape=none, label=<<font color="black">Block[19150]</font>>]
    node19150_name -> node19150 [arrowhead=none, color="black", style=dashed]
    node19150 [shape=box, label=<<font color="black">[0] result = result.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19150 -> node19151 [color="black"]
  }
}