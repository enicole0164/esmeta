digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1092 {
    label = "def MakeConstructor(F: BuiltinFunctionObject | ECMAScriptFunctionObject, writablePrototype?: Boolean, prototype?: Object): Const[~unused~]"
    style = rounded
    cluster1092_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1092_entry_name -> cluster1092_entry [arrowhead=none, color="black", style=dashed]
    cluster1092_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1092_entry -> node4336 [color="black"]
    cluster1092_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1092_exit_name -> cluster1092_exit [arrowhead=none, color="black", style=dashed]
    cluster1092_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4336_name [shape=none, label=<<font color="black">Branch[4336]</font>>]
    node4336_name -> node4336 [arrowhead=none, color="black", style=dashed]
    node4336 [shape=diamond, label=<<font color="black">(? F: &quot;ECMAScriptFunctionObject&quot;)</font>> color="black" fillcolor="white", style=filled]
    node4336 -> node4337 [label=<<font color="black">true</font>> color="black"]
    node4336 -> node4339 [label=<<font color="black">false</font>> color="black"]
    node4337_name [shape=none, label=<<font color="black">Call[4337]</font>>]
    node4337_name -> node4337 [arrowhead=none, color="black", style=dashed]
    node4337 [shape=cds, label=<<font color="black">%0 = clo&lt;IsConstructor&gt;(F)</font>> color="black" fillcolor="white", style=filled]
    node4337 -> node4338 [color="black"]
    node4339_name [shape=none, label=<<font color="black">Block[4339]</font>>]
    node4339_name -> node4339 [arrowhead=none, color="black", style=dashed]
    node4339 [shape=box, label=<<font color="black">[0] F.Construct = clo&lt;BuiltinFunctionObject.Construct&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4339 -> node4340 [color="black"]
    node4338_name [shape=none, label=<<font color="black">Block[4338]</font>>]
    node4338_name -> node4338 [arrowhead=none, color="black", style=dashed]
    node4338 [shape=box, label=<<font color="black">[0] assert (= %0 false)<BR ALIGN="LEFT"/>[1] assert (&amp;&amp; F.Extensible (= F.SubMap.prototype absent))<BR ALIGN="LEFT"/>[2] F.Construct = clo&lt;ECMAScriptFunctionObject.Construct&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4338 -> node4340 [color="black"]
    node4340_name [shape=none, label=<<font color="black">Block[4340]</font>>]
    node4340_name -> node4340 [arrowhead=none, color="black", style=dashed]
    node4340 [shape=box, label=<<font color="black">[0] F.ConstructorKind = ~base~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4340 -> node4341 [color="black"]
    node4341_name [shape=none, label=<<font color="black">Branch[4341]</font>>]
    node4341_name -> node4341 [arrowhead=none, color="black", style=dashed]
    node4341 [shape=diamond, label=<<font color="black">(= writablePrototype absent)</font>> color="black" fillcolor="white", style=filled]
    node4341 -> node4342 [label=<<font color="black">true</font>> color="black"]
    node4341 -> node4343 [label=<<font color="black">false</font>> color="black"]
    node4342_name [shape=none, label=<<font color="black">Block[4342]</font>>]
    node4342_name -> node4342 [arrowhead=none, color="black", style=dashed]
    node4342 [shape=box, label=<<font color="black">[0] writablePrototype = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4342 -> node4343 [color="black"]
    node4343_name [shape=none, label=<<font color="black">Branch[4343]</font>>]
    node4343_name -> node4343 [arrowhead=none, color="black", style=dashed]
    node4343 [shape=diamond, label=<<font color="black">(= prototype absent)</font>> color="black" fillcolor="white", style=filled]
    node4343 -> node4344 [label=<<font color="black">true</font>> color="black"]
    node4343 -> node4348 [label=<<font color="black">false</font>> color="black"]
    node4344_name [shape=none, label=<<font color="black">Call[4344]</font>>]
    node4344_name -> node4344 [arrowhead=none, color="black", style=dashed]
    node4344 [shape=cds, label=<<font color="black">%1 = clo&lt;OrdinaryObjectCreate&gt;(@EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Object.prototype%&quot;])</font>> color="black" fillcolor="white", style=filled]
    node4344 -> node4345 [color="black"]
    node4348_name [shape=none, label=<<font color="black">Call[4348]</font>>]
    node4348_name -> node4348 [arrowhead=none, color="black", style=dashed]
    node4348 [shape=cds, label=<<font color="black">%3 = clo&lt;DefinePropertyOrThrow&gt;(F, &quot;prototype&quot;, (new PropertyDescriptor(&quot;Value&quot; -&gt; prototype, &quot;Writable&quot; -&gt; writablePrototype, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; false))[#427])</font>> color="black" fillcolor="white", style=filled]
    node4348 -> node4349 [color="black"]
    node4345_name [shape=none, label=<<font color="black">Block[4345]</font>>]
    node4345_name -> node4345 [arrowhead=none, color="black", style=dashed]
    node4345 [shape=box, label=<<font color="black">[0] prototype = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4345 -> node4346 [color="black"]
    node4349_name [shape=none, label=<<font color="black">Block[4349]</font>>]
    node4349_name -> node4349 [arrowhead=none, color="black", style=dashed]
    node4349 [shape=box, label=<<font color="black">[0] [! %3]<BR ALIGN="LEFT"/>[1] return ~unused~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4349 -> cluster1092_exit [color="black"]
    node4346_name [shape=none, label=<<font color="black">Call[4346]</font>>]
    node4346_name -> node4346 [arrowhead=none, color="black", style=dashed]
    node4346 [shape=cds, label=<<font color="black">%2 = clo&lt;DefinePropertyOrThrow&gt;(prototype, &quot;constructor&quot;, (new PropertyDescriptor(&quot;Value&quot; -&gt; F, &quot;Writable&quot; -&gt; writablePrototype, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; true))[#426])</font>> color="black" fillcolor="white", style=filled]
    node4346 -> node4347 [color="black"]
    node4347_name [shape=none, label=<<font color="black">Block[4347]</font>>]
    node4347_name -> node4347 [arrowhead=none, color="black", style=dashed]
    node4347 [shape=box, label=<<font color="black">[0] [! %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4347 -> node4348 [color="black"]
  }
}