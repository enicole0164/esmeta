digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster651 {
    label = "def <SYNTAX>:CaseBlock[1,1].ContainsUndefinedContinueTarget(this: Ast:CaseBlock[1,1], iterationSet: Unknown, labelSet: Unknown): Boolean"
    style = rounded
    cluster651_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster651_entry_name -> cluster651_entry [arrowhead=none, color="black", style=dashed]
    cluster651_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster651_entry -> node2803 [color="black"]
    cluster651_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster651_exit_name -> cluster651_exit [arrowhead=none, color="black", style=dashed]
    cluster651_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2803_name [shape=none, label=<<font color="black">Branch[2803]</font>>]
    node2803_name -> node2803 [arrowhead=none, color="black", style=dashed]
    node2803 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node2803 -> node2804 [label=<<font color="black">true</font>> color="black"]
    node2803 -> node2807 [label=<<font color="black">false</font>> color="black"]
    node2804_name [shape=none, label=<<font color="black">Call[2804]</font>>]
    node2804_name -> node2804 [arrowhead=none, color="black", style=dashed]
    node2804 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;ContainsUndefinedContinueTarget(iterationSet, (new [])[#337])</font>> color="black" fillcolor="white", style=filled]
    node2804 -> node2805 [color="black"]
    node2807_name [shape=none, label=<<font color="black">Call[2807]</font>>]
    node2807_name -> node2807 [arrowhead=none, color="black", style=dashed]
    node2807 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;ContainsUndefinedContinueTarget(iterationSet, (new [])[#338])</font>> color="black" fillcolor="white", style=filled]
    node2807 -> node2808 [color="black"]
    node2805_name [shape=none, label=<<font color="black">Branch[2805]</font>>]
    node2805_name -> node2805 [arrowhead=none, color="black", style=dashed]
    node2805 [shape=diamond, label=<<font color="black">(= %0 true)</font>> color="black" fillcolor="white", style=filled]
    node2805 -> node2806 [label=<<font color="black">true</font>> color="black"]
    node2805 -> node2807 [label=<<font color="black">false</font>> color="black"]
    node2808_name [shape=none, label=<<font color="black">Branch[2808]</font>>]
    node2808_name -> node2808 [arrowhead=none, color="black", style=dashed]
    node2808 [shape=diamond, label=<<font color="black">(= %1 true)</font>> color="black" fillcolor="white", style=filled]
    node2808 -> node2809 [label=<<font color="black">true</font>> color="black"]
    node2808 -> node2810 [label=<<font color="black">false</font>> color="black"]
    node2806_name [shape=none, label=<<font color="black">Block[2806]</font>>]
    node2806_name -> node2806 [arrowhead=none, color="black", style=dashed]
    node2806 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2806 -> cluster651_exit [color="black"]
    node2809_name [shape=none, label=<<font color="black">Block[2809]</font>>]
    node2809_name -> node2809 [arrowhead=none, color="black", style=dashed]
    node2809 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2809 -> cluster651_exit [color="black"]
    node2810_name [shape=none, label=<<font color="black">Branch[2810]</font>>]
    node2810_name -> node2810 [arrowhead=none, color="black", style=dashed]
    node2810 [shape=diamond, label=<<font color="black">(= this[2] absent)</font>> color="black" fillcolor="white", style=filled]
    node2810 -> node2811 [label=<<font color="black">true</font>> color="black"]
    node2810 -> node2812 [label=<<font color="black">false</font>> color="black"]
    node2811_name [shape=none, label=<<font color="black">Block[2811]</font>>]
    node2811_name -> node2811 [arrowhead=none, color="black", style=dashed]
    node2811 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2811 -> cluster651_exit [color="black"]
    node2812_name [shape=none, label=<<font color="black">Call[2812]</font>>]
    node2812_name -> node2812 [arrowhead=none, color="black", style=dashed]
    node2812 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;ContainsUndefinedContinueTarget(iterationSet, (new [])[#339])</font>> color="black" fillcolor="white", style=filled]
    node2812 -> node2813 [color="black"]
    node2813_name [shape=none, label=<<font color="black">Block[2813]</font>>]
    node2813_name -> node2813 [arrowhead=none, color="black", style=dashed]
    node2813 [shape=box, label=<<font color="black">[0] return %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2813 -> cluster651_exit [color="black"]
  }
}