digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1991 {
    label = "def <BUILTIN>:INTRINSICS.decodeURI(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster1991_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1991_entry_name -> cluster1991_entry [arrowhead=none, color="black", style=dashed]
    cluster1991_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1991_entry -> node10999 [color="black"]
    cluster1991_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1991_exit_name -> cluster1991_exit [arrowhead=none, color="black", style=dashed]
    cluster1991_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node10999_name [shape=none, label=<<font color="black">Branch[10999]</font>>]
    node10999_name -> node10999 [arrowhead=none, color="black", style=dashed]
    node10999 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node10999 -> node11000 [label=<<font color="black">true</font>> color="black"]
    node10999 -> node11001 [label=<<font color="black">false</font>> color="black"]
    node11000_name [shape=none, label=<<font color="black">Block[11000]</font>>]
    node11000_name -> node11000 [arrowhead=none, color="black", style=dashed]
    node11000 [shape=box, label=<<font color="black">[0] let encodedURI = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11000 -> node11002 [color="black"]
    node11001_name [shape=none, label=<<font color="black">Block[11001]</font>>]
    node11001_name -> node11001 [arrowhead=none, color="black", style=dashed]
    node11001 [shape=box, label=<<font color="black">[0] let encodedURI = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11001 -> node11002 [color="black"]
    node11002_name [shape=none, label=<<font color="black">Call[11002]</font>>]
    node11002_name -> node11002 [arrowhead=none, color="black", style=dashed]
    node11002 [shape=cds, label=<<font color="black">%0 = clo&lt;ToString&gt;(encodedURI)</font>> color="black" fillcolor="white", style=filled]
    node11002 -> node11003 [color="black"]
    node11003_name [shape=none, label=<<font color="black">Block[11003]</font>>]
    node11003_name -> node11003 [arrowhead=none, color="black", style=dashed]
    node11003 [shape=box, label=<<font color="black">[0] let uriString = [? %0]<BR ALIGN="LEFT"/>[1] (yet &quot;Let _reservedURISet_ be a String containing one instance of each code unit valid in |uriReserved| plus *\&quot;#\&quot;*.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11003 -> node11004 [color="black"]
    node11004_name [shape=none, label=<<font color="black">Call[11004]</font>>]
    node11004_name -> node11004 [arrowhead=none, color="black", style=dashed]
    node11004 [shape=cds, label=<<font color="black">%1 = clo&lt;Decode&gt;(uriString, reservedURISet)</font>> color="black" fillcolor="white", style=filled]
    node11004 -> node11005 [color="black"]
    node11005_name [shape=none, label=<<font color="black">Block[11005]</font>>]
    node11005_name -> node11005 [arrowhead=none, color="black", style=dashed]
    node11005 [shape=box, label=<<font color="black">[0] return [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11005 -> cluster1991_exit [color="black"]
  }
}