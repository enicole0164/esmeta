digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2168 {
    label = "def <BUILTIN>:INTRINSICS.String.prototype.at(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2168_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2168_entry_name -> cluster2168_entry [arrowhead=none, color="black", style=dashed]
    cluster2168_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2168_entry -> node13276 [color="black"]
    cluster2168_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2168_exit_name -> cluster2168_exit [arrowhead=none, color="black", style=dashed]
    cluster2168_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node13276_name [shape=none, label=<<font color="black">Branch[13276]</font>>]
    node13276_name -> node13276 [arrowhead=none, color="black", style=dashed]
    node13276 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node13276 -> node13277 [label=<<font color="black">true</font>> color="black"]
    node13276 -> node13278 [label=<<font color="black">false</font>> color="black"]
    node13277_name [shape=none, label=<<font color="black">Block[13277]</font>>]
    node13277_name -> node13277 [arrowhead=none, color="black", style=dashed]
    node13277 [shape=box, label=<<font color="black">[0] let index = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13277 -> node13279 [color="black"]
    node13278_name [shape=none, label=<<font color="black">Block[13278]</font>>]
    node13278_name -> node13278 [arrowhead=none, color="black", style=dashed]
    node13278 [shape=box, label=<<font color="black">[0] let index = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13278 -> node13279 [color="black"]
    node13279_name [shape=none, label=<<font color="black">Call[13279]</font>>]
    node13279_name -> node13279 [arrowhead=none, color="black", style=dashed]
    node13279 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireObjectCoercible&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node13279 -> node13280 [color="black"]
    node13280_name [shape=none, label=<<font color="black">Block[13280]</font>>]
    node13280_name -> node13280 [arrowhead=none, color="black", style=dashed]
    node13280 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13280 -> node13281 [color="black"]
    node13281_name [shape=none, label=<<font color="black">Call[13281]</font>>]
    node13281_name -> node13281 [arrowhead=none, color="black", style=dashed]
    node13281 [shape=cds, label=<<font color="black">%1 = clo&lt;ToString&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node13281 -> node13282 [color="black"]
    node13282_name [shape=none, label=<<font color="black">Block[13282]</font>>]
    node13282_name -> node13282 [arrowhead=none, color="black", style=dashed]
    node13282 [shape=box, label=<<font color="black">[0] let S = [? %1]<BR ALIGN="LEFT"/>[1] let len = S.length<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13282 -> node13283 [color="black"]
    node13283_name [shape=none, label=<<font color="black">Call[13283]</font>>]
    node13283_name -> node13283 [arrowhead=none, color="black", style=dashed]
    node13283 [shape=cds, label=<<font color="black">%2 = clo&lt;ToIntegerOrInfinity&gt;(index)</font>> color="black" fillcolor="white", style=filled]
    node13283 -> node13284 [color="black"]
    node13284_name [shape=none, label=<<font color="black">Block[13284]</font>>]
    node13284_name -> node13284 [arrowhead=none, color="black", style=dashed]
    node13284 [shape=box, label=<<font color="black">[0] let relativeIndex = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13284 -> node13285 [color="black"]
    node13285_name [shape=none, label=<<font color="black">Branch[13285]</font>>]
    node13285_name -> node13285 [arrowhead=none, color="black", style=dashed]
    node13285 [shape=diamond, label=<<font color="black">(! (&lt; relativeIndex 0))</font>> color="black" fillcolor="white", style=filled]
    node13285 -> node13286 [label=<<font color="black">true</font>> color="black"]
    node13285 -> node13287 [label=<<font color="black">false</font>> color="black"]
    node13286_name [shape=none, label=<<font color="black">Block[13286]</font>>]
    node13286_name -> node13286 [arrowhead=none, color="black", style=dashed]
    node13286 [shape=box, label=<<font color="black">[0] let k = relativeIndex<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13286 -> node13288 [color="black"]
    node13287_name [shape=none, label=<<font color="black">Block[13287]</font>>]
    node13287_name -> node13287 [arrowhead=none, color="black", style=dashed]
    node13287 [shape=box, label=<<font color="black">[0] let k = (+ len relativeIndex)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13287 -> node13288 [color="black"]
    node13288_name [shape=none, label=<<font color="black">Branch[13288]</font>>]
    node13288_name -> node13288 [arrowhead=none, color="black", style=dashed]
    node13288 [shape=diamond, label=<<font color="black">(|| (&lt; k 0) (! (&lt; k len)))</font>> color="black" fillcolor="white", style=filled]
    node13288 -> node13289 [label=<<font color="black">true</font>> color="black"]
    node13288 -> node13290 [label=<<font color="black">false</font>> color="black"]
    node13289_name [shape=none, label=<<font color="black">Block[13289]</font>>]
    node13289_name -> node13289 [arrowhead=none, color="black", style=dashed]
    node13289 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13289 -> cluster2168_exit [color="black"]
    node13290_name [shape=none, label=<<font color="black">Block[13290]</font>>]
    node13290_name -> node13290 [arrowhead=none, color="black", style=dashed]
    node13290 [shape=box, label=<<font color="black">[0] return (substring S k (+ k 1))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13290 -> cluster2168_exit [color="black"]
  }
}