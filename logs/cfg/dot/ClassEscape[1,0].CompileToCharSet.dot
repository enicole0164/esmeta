digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2289 {
    label = "def <SYNTAX>:ClassEscape[1,0].CompileToCharSet(this: Ast:ClassEscape[1,0]): Unknown["CharSet"]"
    style = rounded
    cluster2289_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2289_entry_name -> cluster2289_entry [arrowhead=none, color="black", style=dashed]
    cluster2289_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2289_entry -> node14058 [color="black"]
    cluster2289_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2289_exit_name -> cluster2289_exit [arrowhead=none, color="black", style=dashed]
    cluster2289_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node14058_name [shape=none, label=<<font color="black">Call[14058]</font>>]
    node14058_name -> node14058 [arrowhead=none, color="black", style=dashed]
    node14058 [shape=cds, label=<<font color="black">%0 = this-&gt;CharacterValue()</font>> color="black" fillcolor="white", style=filled]
    node14058 -> node14059 [color="black"]
    node14059_name [shape=none, label=<<font color="black">Block[14059]</font>>]
    node14059_name -> node14059 [arrowhead=none, color="black", style=dashed]
    node14059 [shape=box, label=<<font color="black">[0] let cv = %0<BR ALIGN="LEFT"/>[1] (yet &quot;Let _c_ be the character whose character value is _cv_.&quot;)<BR ALIGN="LEFT"/>[2] (yet &quot;Return the CharSet containing the single character _c_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14059 -> cluster2289_exit [color="black"]
  }
}