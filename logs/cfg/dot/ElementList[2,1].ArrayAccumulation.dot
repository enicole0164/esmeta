digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1212 {
    label = "def <SYNTAX>:ElementList[2,1].ArrayAccumulation(this: Ast:ElementList[2,1], array: Unknown["Array"], nextIndex: Unknown["Integer"]): Unknown["EitherANormalCompletionContainingAnIntegerOrAnAbruptCompletion"]"
    style = rounded
    cluster1212_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1212_entry_name -> cluster1212_entry [arrowhead=none, color="black", style=dashed]
    cluster1212_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1212_entry -> node5476 [color="black"]
    cluster1212_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1212_exit_name -> cluster1212_exit [arrowhead=none, color="black", style=dashed]
    cluster1212_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node5476_name [shape=none, label=<<font color="black">Call[5476]</font>>]
    node5476_name -> node5476 [arrowhead=none, color="black", style=dashed]
    node5476 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;ArrayAccumulation(array, nextIndex)</font>> color="black" fillcolor="white", style=filled]
    node5476 -> node5477 [color="black"]
    node5477_name [shape=none, label=<<font color="black">Block[5477]</font>>]
    node5477_name -> node5477 [arrowhead=none, color="black", style=dashed]
    node5477 [shape=box, label=<<font color="black">[0] nextIndex = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5477 -> node5478 [color="black"]
    node5478_name [shape=none, label=<<font color="black">Branch[5478]</font>>]
    node5478_name -> node5478 [arrowhead=none, color="black", style=dashed]
    node5478 [shape=diamond, label=<<font color="black">(! (= this[1] absent))</font>> color="black" fillcolor="white", style=filled]
    node5478 -> node5479 [label=<<font color="black">true</font>> color="black"]
    node5478 -> node5481 [label=<<font color="black">false</font>> color="black"]
    node5479_name [shape=none, label=<<font color="black">Call[5479]</font>>]
    node5479_name -> node5479 [arrowhead=none, color="black", style=dashed]
    node5479 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;ArrayAccumulation(array, nextIndex)</font>> color="black" fillcolor="white", style=filled]
    node5479 -> node5480 [color="black"]
    node5481_name [shape=none, label=<<font color="black">Call[5481]</font>>]
    node5481_name -> node5481 [arrowhead=none, color="black", style=dashed]
    node5481 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node5481 -> node5482 [color="black"]
    node5480_name [shape=none, label=<<font color="black">Block[5480]</font>>]
    node5480_name -> node5480 [arrowhead=none, color="black", style=dashed]
    node5480 [shape=box, label=<<font color="black">[0] nextIndex = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5480 -> node5481 [color="black"]
    node5482_name [shape=none, label=<<font color="black">Block[5482]</font>>]
    node5482_name -> node5482 [arrowhead=none, color="black", style=dashed]
    node5482 [shape=box, label=<<font color="black">[0] let initResult = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5482 -> node5483 [color="black"]
    node5483_name [shape=none, label=<<font color="black">Call[5483]</font>>]
    node5483_name -> node5483 [arrowhead=none, color="black", style=dashed]
    node5483 [shape=cds, label=<<font color="black">%3 = clo&lt;GetValue&gt;(initResult)</font>> color="black" fillcolor="white", style=filled]
    node5483 -> node5484 [color="black"]
    node5484_name [shape=none, label=<<font color="black">Block[5484]</font>>]
    node5484_name -> node5484 [arrowhead=none, color="black", style=dashed]
    node5484 [shape=box, label=<<font color="black">[0] let initValue = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5484 -> node5485 [color="black"]
    node5485_name [shape=none, label=<<font color="black">Call[5485]</font>>]
    node5485_name -> node5485 [arrowhead=none, color="black", style=dashed]
    node5485 [shape=cds, label=<<font color="black">%4 = clo&lt;ToString&gt;(([number] nextIndex))</font>> color="black" fillcolor="white", style=filled]
    node5485 -> node5486 [color="black"]
    node5486_name [shape=none, label=<<font color="black">Call[5486]</font>>]
    node5486_name -> node5486 [arrowhead=none, color="black", style=dashed]
    node5486 [shape=cds, label=<<font color="black">%5 = clo&lt;CreateDataPropertyOrThrow&gt;(array, [! %4], initValue)</font>> color="black" fillcolor="white", style=filled]
    node5486 -> node5487 [color="black"]
    node5487_name [shape=none, label=<<font color="black">Block[5487]</font>>]
    node5487_name -> node5487 [arrowhead=none, color="black", style=dashed]
    node5487 [shape=box, label=<<font color="black">[0] let created = [! %5]<BR ALIGN="LEFT"/>[1] return (+ nextIndex 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5487 -> cluster1212_exit [color="black"]
  }
}