digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1361 {
    label = "def <SYNTAX>:AssignmentProperty[0,1].PropertyDestructuringAssignmentEvaluation(this: Ast:AssignmentProperty[0,1], value: Unknown): Normal[List[Symbol | String]] | Abrupt"
    style = rounded
    cluster1361_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1361_entry_name -> cluster1361_entry [arrowhead=none, color="black", style=dashed]
    cluster1361_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1361_entry -> node6906 [color="black"]
    cluster1361_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1361_exit_name -> cluster1361_exit [arrowhead=none, color="black", style=dashed]
    cluster1361_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6906_name [shape=none, label=<<font color="black">Call[6906]</font>>]
    node6906_name -> node6906 [arrowhead=none, color="black", style=dashed]
    node6906 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;StringValue()</font>> color="black" fillcolor="white", style=filled]
    node6906 -> node6907 [color="black"]
    node6907_name [shape=none, label=<<font color="black">Block[6907]</font>>]
    node6907_name -> node6907 [arrowhead=none, color="black", style=dashed]
    node6907 [shape=box, label=<<font color="black">[0] let P = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6907 -> node6908 [color="black"]
    node6908_name [shape=none, label=<<font color="black">Call[6908]</font>>]
    node6908_name -> node6908 [arrowhead=none, color="black", style=dashed]
    node6908 [shape=cds, label=<<font color="black">%1 = clo&lt;ResolveBinding&gt;(P)</font>> color="black" fillcolor="white", style=filled]
    node6908 -> node6909 [color="black"]
    node6909_name [shape=none, label=<<font color="black">Block[6909]</font>>]
    node6909_name -> node6909 [arrowhead=none, color="black", style=dashed]
    node6909 [shape=box, label=<<font color="black">[0] let lref = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6909 -> node6910 [color="black"]
    node6910_name [shape=none, label=<<font color="black">Call[6910]</font>>]
    node6910_name -> node6910 [arrowhead=none, color="black", style=dashed]
    node6910 [shape=cds, label=<<font color="black">%2 = clo&lt;GetV&gt;(value, P)</font>> color="black" fillcolor="white", style=filled]
    node6910 -> node6911 [color="black"]
    node6911_name [shape=none, label=<<font color="black">Block[6911]</font>>]
    node6911_name -> node6911 [arrowhead=none, color="black", style=dashed]
    node6911 [shape=box, label=<<font color="black">[0] let v = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6911 -> node6912 [color="black"]
    node6912_name [shape=none, label=<<font color="black">Branch[6912]</font>>]
    node6912_name -> node6912 [arrowhead=none, color="black", style=dashed]
    node6912 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= this[1] absent)) (= v undefined))</font>> color="black" fillcolor="white", style=filled]
    node6912 -> node6913 [label=<<font color="black">true</font>> color="black"]
    node6912 -> node6921 [label=<<font color="black">false</font>> color="black"]
    node6913_name [shape=none, label=<<font color="black">Call[6913]</font>>]
    node6913_name -> node6913 [arrowhead=none, color="black", style=dashed]
    node6913 [shape=cds, label=<<font color="black">%3 = clo&lt;IsAnonymousFunctionDefinition&gt;(this[1])</font>> color="black" fillcolor="white", style=filled]
    node6913 -> node6914 [color="black"]
    node6921_name [shape=none, label=<<font color="black">Call[6921]</font>>]
    node6921_name -> node6921 [arrowhead=none, color="black", style=dashed]
    node6921 [shape=cds, label=<<font color="black">%7 = clo&lt;PutValue&gt;(lref, v)</font>> color="black" fillcolor="white", style=filled]
    node6921 -> node6922 [color="black"]
    node6914_name [shape=none, label=<<font color="black">Branch[6914]</font>>]
    node6914_name -> node6914 [arrowhead=none, color="black", style=dashed]
    node6914 [shape=diamond, label=<<font color="black">(= %3 true)</font>> color="black" fillcolor="white", style=filled]
    node6914 -> node6915 [label=<<font color="black">true</font>> color="black"]
    node6914 -> node6917 [label=<<font color="black">false</font>> color="black"]
    node6922_name [shape=none, label=<<font color="black">Block[6922]</font>>]
    node6922_name -> node6922 [arrowhead=none, color="black", style=dashed]
    node6922 [shape=box, label=<<font color="black">[0] [? %7]<BR ALIGN="LEFT"/>[1] return (new [P])[#597]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6922 -> cluster1361_exit [color="black"]
    node6915_name [shape=none, label=<<font color="black">Call[6915]</font>>]
    node6915_name -> node6915 [arrowhead=none, color="black", style=dashed]
    node6915 [shape=cds, label=<<font color="black">%4 = this[1]-&gt;NamedEvaluation(P)</font>> color="black" fillcolor="white", style=filled]
    node6915 -> node6916 [color="black"]
    node6917_name [shape=none, label=<<font color="black">Call[6917]</font>>]
    node6917_name -> node6917 [arrowhead=none, color="black", style=dashed]
    node6917 [shape=cds, label=<<font color="black">%5 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6917 -> node6918 [color="black"]
    node6916_name [shape=none, label=<<font color="black">Block[6916]</font>>]
    node6916_name -> node6916 [arrowhead=none, color="black", style=dashed]
    node6916 [shape=box, label=<<font color="black">[0] v = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6916 -> node6921 [color="black"]
    node6918_name [shape=none, label=<<font color="black">Block[6918]</font>>]
    node6918_name -> node6918 [arrowhead=none, color="black", style=dashed]
    node6918 [shape=box, label=<<font color="black">[0] let defaultValue = %5<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6918 -> node6919 [color="black"]
    node6919_name [shape=none, label=<<font color="black">Call[6919]</font>>]
    node6919_name -> node6919 [arrowhead=none, color="black", style=dashed]
    node6919 [shape=cds, label=<<font color="black">%6 = clo&lt;GetValue&gt;(defaultValue)</font>> color="black" fillcolor="white", style=filled]
    node6919 -> node6920 [color="black"]
    node6920_name [shape=none, label=<<font color="black">Block[6920]</font>>]
    node6920_name -> node6920 [arrowhead=none, color="black", style=dashed]
    node6920 [shape=box, label=<<font color="black">[0] v = [? %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6920 -> node6921 [color="black"]
  }
}