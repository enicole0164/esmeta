digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1746 {
    label = "def <SYNTAX>:ForStatement[0,5].HasCallInTailPosition(this: Ast:ForStatement[0,5], call: Unknown): Boolean"
    style = rounded
    cluster1746_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1746_entry_name -> cluster1746_entry [arrowhead=none, color="black", style=dashed]
    cluster1746_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1746_entry -> node9728 [color="black"]
    cluster1746_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1746_exit_name -> cluster1746_exit [arrowhead=none, color="black", style=dashed]
    cluster1746_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9728_name [shape=none, label=<<font color="black">Call[9728]</font>>]
    node9728_name -> node9728 [arrowhead=none, color="black", style=dashed]
    node9728 [shape=cds, label=<<font color="black">%0 = this[3]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9728 -> node9729 [color="black"]
    node9729_name [shape=none, label=<<font color="black">Block[9729]</font>>]
    node9729_name -> node9729 [arrowhead=none, color="black", style=dashed]
    node9729 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9729 -> cluster1746_exit [color="black"]
  }
}