digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1986 {
    label = "def <BUILTIN>:INTRINSICS.isNaN(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster1986_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1986_entry_name -> cluster1986_entry [arrowhead=none, color="black", style=dashed]
    cluster1986_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1986_entry -> node10919 [color="black"]
    cluster1986_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1986_exit_name -> cluster1986_exit [arrowhead=none, color="black", style=dashed]
    cluster1986_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node10919_name [shape=none, label=<<font color="black">Branch[10919]</font>>]
    node10919_name -> node10919 [arrowhead=none, color="black", style=dashed]
    node10919 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node10919 -> node10920 [label=<<font color="black">true</font>> color="black"]
    node10919 -> node10921 [label=<<font color="black">false</font>> color="black"]
    node10920_name [shape=none, label=<<font color="black">Block[10920]</font>>]
    node10920_name -> node10920 [arrowhead=none, color="black", style=dashed]
    node10920 [shape=box, label=<<font color="black">[0] let number = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10920 -> node10922 [color="black"]
    node10921_name [shape=none, label=<<font color="black">Block[10921]</font>>]
    node10921_name -> node10921 [arrowhead=none, color="black", style=dashed]
    node10921 [shape=box, label=<<font color="black">[0] let number = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10921 -> node10922 [color="black"]
    node10922_name [shape=none, label=<<font color="black">Call[10922]</font>>]
    node10922_name -> node10922 [arrowhead=none, color="black", style=dashed]
    node10922 [shape=cds, label=<<font color="black">%0 = clo&lt;ToNumber&gt;(number)</font>> color="black" fillcolor="white", style=filled]
    node10922 -> node10923 [color="black"]
    node10923_name [shape=none, label=<<font color="black">Block[10923]</font>>]
    node10923_name -> node10923 [arrowhead=none, color="black", style=dashed]
    node10923 [shape=box, label=<<font color="black">[0] let num = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10923 -> node10924 [color="black"]
    node10924_name [shape=none, label=<<font color="black">Branch[10924]</font>>]
    node10924_name -> node10924 [arrowhead=none, color="black", style=dashed]
    node10924 [shape=diamond, label=<<font color="black">(= num NaN)</font>> color="black" fillcolor="white", style=filled]
    node10924 -> node10925 [label=<<font color="black">true</font>> color="black"]
    node10924 -> node10926 [label=<<font color="black">false</font>> color="black"]
    node10925_name [shape=none, label=<<font color="black">Block[10925]</font>>]
    node10925_name -> node10925 [arrowhead=none, color="black", style=dashed]
    node10925 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10925 -> cluster1986_exit [color="black"]
    node10926_name [shape=none, label=<<font color="black">Block[10926]</font>>]
    node10926_name -> node10926 [arrowhead=none, color="black", style=dashed]
    node10926 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10926 -> cluster1986_exit [color="black"]
  }
}