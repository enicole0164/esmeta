digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1465 {
    label = "def <BUILTIN>:INTRINSICS.ForInIteratorPrototype.next(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster1465_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1465_entry_name -> cluster1465_entry [arrowhead=none, color="black", style=dashed]
    cluster1465_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1465_entry -> node7820 [color="black"]
    cluster1465_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1465_exit_name -> cluster1465_exit [arrowhead=none, color="black", style=dashed]
    cluster1465_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7820_name [shape=none, label=<<font color="black">Block[7820]</font>>]
    node7820_name -> node7820 [arrowhead=none, color="black", style=dashed]
    node7820 [shape=box, label=<<font color="black">[0] let O = this<BR ALIGN="LEFT"/>[1] assert (= (typeof O) @Object)<BR ALIGN="LEFT"/>[2] assert (yet &quot;_O_ has all of the internal slots of a For-In Iterator Instance (&lt;emu-xref href=\&quot;#sec-properties-of-for-in-iterator-instances\&quot;&gt;&lt;/emu-xref&gt;).&quot;)<BR ALIGN="LEFT"/>[3] let object = O.Object<BR ALIGN="LEFT"/>[4] let visited = O.VisitedKeys<BR ALIGN="LEFT"/>[5] let remaining = O.RemainingKeys<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7820 -> node7821 [color="black"]
    node7821_name [shape=none, label=<<font color="black">Branch[7821]</font>>]
    node7821_name -> node7821 [arrowhead=none, color="black", style=dashed]
    node7821 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white", style=filled]
    node7821 -> node7822 [label=<<font color="black">true</font>> color="black"]
    node7822_name [shape=none, label=<<font color="black">Branch[7822]</font>>]
    node7822_name -> node7822 [arrowhead=none, color="black", style=dashed]
    node7822 [shape=diamond, label=<<font color="black">(= O.ObjectWasVisited false)</font>> color="black" fillcolor="white", style=filled]
    node7822 -> node7823 [label=<<font color="black">true</font>> color="black"]
    node7822 -> node7831 [label=<<font color="black">false</font>> color="black"]
    node7823_name [shape=none, label=<<font color="black">Call[7823]</font>>]
    node7823_name -> node7823 [arrowhead=none, color="black", style=dashed]
    node7823 [shape=cds, label=<<font color="black">%0 = object-&gt;OwnPropertyKeys()</font>> color="black" fillcolor="white", style=filled]
    node7823 -> node7824 [color="black"]
    node7831_name [shape=none, label=<<font color="black">Branch[7831]</font>>]
    node7831_name -> node7831 [arrowhead=none, color="black", style=dashed]
    node7831 [shape=diamond, label=<<font color="black">(! (= remaining.length 0))</font>> color="black" fillcolor="white", style=filled]
    node7831 -> node7832 [label=<<font color="black">true</font>> color="black"]
    node7831 -> node7841 [label=<<font color="black">false</font>> color="black"]
    node7824_name [shape=none, label=<<font color="black">Block[7824]</font>>]
    node7824_name -> node7824 [arrowhead=none, color="black", style=dashed]
    node7824 [shape=box, label=<<font color="black">[0] let keys = [? %0]<BR ALIGN="LEFT"/>[1] %2 = keys<BR ALIGN="LEFT"/>[2] %1 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7824 -> node7825 [color="black"]
    node7832_name [shape=none, label=<<font color="black">Block[7832]</font>>]
    node7832_name -> node7832 [arrowhead=none, color="black", style=dashed]
    node7832 [shape=box, label=<<font color="black">[0] let r = remaining[0]<BR ALIGN="LEFT"/>[1] (pop &lt; remaining)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7832 -> node7833 [color="black"]
    node7841_name [shape=none, label=<<font color="black">Call[7841]</font>>]
    node7841_name -> node7841 [arrowhead=none, color="black", style=dashed]
    node7841 [shape=cds, label=<<font color="black">%5 = object-&gt;GetPrototypeOf()</font>> color="black" fillcolor="white", style=filled]
    node7841 -> node7842 [color="black"]
    node7825_name [shape=none, label=<<font color="black">Branch[7825]</font>>]
    node7825_name -> node7825 [arrowhead=none, color="black", style=dashed]
    node7825 [shape=diamond, label=<<font color="black">(&lt; %1 %2.length)</font>> color="black" fillcolor="white", style=filled]
    node7825 -> node7826 [label=<<font color="black">true</font>> color="black"]
    node7825 -> node7830 [label=<<font color="black">false</font>> color="black"]
    node7833_name [shape=none, label=<<font color="black">Branch[7833]</font>>]
    node7833_name -> node7833 [arrowhead=none, color="black", style=dashed]
    node7833 [shape=diamond, label=<<font color="black">(! (contains visited r))</font>> color="black" fillcolor="white", style=filled]
    node7833 -> node7834 [label=<<font color="black">true</font>> color="black"]
    node7833 -> node7831 [label=<<font color="black">false</font>> color="black"]
    node7842_name [shape=none, label=<<font color="black">Block[7842]</font>>]
    node7842_name -> node7842 [arrowhead=none, color="black", style=dashed]
    node7842 [shape=box, label=<<font color="black">[0] object = [? %5]<BR ALIGN="LEFT"/>[1] O.Object = object<BR ALIGN="LEFT"/>[2] O.ObjectWasVisited = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7842 -> node7843 [color="black"]
    node7826_name [shape=none, label=<<font color="black">Block[7826]</font>>]
    node7826_name -> node7826 [arrowhead=none, color="black", style=dashed]
    node7826 [shape=box, label=<<font color="black">[0] let key = %2[%1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7826 -> node7827 [color="black"]
    node7830_name [shape=none, label=<<font color="black">Block[7830]</font>>]
    node7830_name -> node7830 [arrowhead=none, color="black", style=dashed]
    node7830 [shape=box, label=<<font color="black">[0] O.ObjectWasVisited = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7830 -> node7831 [color="black"]
    node7834_name [shape=none, label=<<font color="black">Call[7834]</font>>]
    node7834_name -> node7834 [arrowhead=none, color="black", style=dashed]
    node7834 [shape=cds, label=<<font color="black">%3 = object-&gt;GetOwnProperty(r)</font>> color="black" fillcolor="white", style=filled]
    node7834 -> node7835 [color="black"]
    node7843_name [shape=none, label=<<font color="black">Branch[7843]</font>>]
    node7843_name -> node7843 [arrowhead=none, color="black", style=dashed]
    node7843 [shape=diamond, label=<<font color="black">(= object null)</font>> color="black" fillcolor="white", style=filled]
    node7843 -> node7844 [label=<<font color="black">true</font>> color="black"]
    node7843 -> node7821 [label=<<font color="black">false</font>> color="black"]
    node7827_name [shape=none, label=<<font color="black">Branch[7827]</font>>]
    node7827_name -> node7827 [arrowhead=none, color="black", style=dashed]
    node7827 [shape=diamond, label=<<font color="black">(= (typeof key) @String)</font>> color="black" fillcolor="white", style=filled]
    node7827 -> node7828 [label=<<font color="black">true</font>> color="black"]
    node7827 -> node7829 [label=<<font color="black">false</font>> color="black"]
    node7835_name [shape=none, label=<<font color="black">Block[7835]</font>>]
    node7835_name -> node7835 [arrowhead=none, color="black", style=dashed]
    node7835 [shape=box, label=<<font color="black">[0] let desc = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7835 -> node7836 [color="black"]
    node7844_name [shape=none, label=<<font color="black">Call[7844]</font>>]
    node7844_name -> node7844 [arrowhead=none, color="black", style=dashed]
    node7844 [shape=cds, label=<<font color="black">%6 = clo&lt;CreateIterResultObject&gt;(undefined, true)</font>> color="black" fillcolor="white", style=filled]
    node7844 -> node7845 [color="black"]
    node7828_name [shape=none, label=<<font color="black">Block[7828]</font>>]
    node7828_name -> node7828 [arrowhead=none, color="black", style=dashed]
    node7828 [shape=box, label=<<font color="black">[0] push remaining &lt; key<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7828 -> node7829 [color="black"]
    node7829_name [shape=none, label=<<font color="black">Block[7829]</font>>]
    node7829_name -> node7829 [arrowhead=none, color="black", style=dashed]
    node7829 [shape=box, label=<<font color="black">[0] %1 = (+ %1 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7829 -> node7825 [color="black"]
    node7836_name [shape=none, label=<<font color="black">Branch[7836]</font>>]
    node7836_name -> node7836 [arrowhead=none, color="black", style=dashed]
    node7836 [shape=diamond, label=<<font color="black">(! (= desc undefined))</font>> color="black" fillcolor="white", style=filled]
    node7836 -> node7837 [label=<<font color="black">true</font>> color="black"]
    node7836 -> node7831 [label=<<font color="black">false</font>> color="black"]
    node7845_name [shape=none, label=<<font color="black">Block[7845]</font>>]
    node7845_name -> node7845 [arrowhead=none, color="black", style=dashed]
    node7845 [shape=box, label=<<font color="black">[0] return %6<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7845 -> cluster1465_exit [color="black"]
    node7837_name [shape=none, label=<<font color="black">Block[7837]</font>>]
    node7837_name -> node7837 [arrowhead=none, color="black", style=dashed]
    node7837 [shape=box, label=<<font color="black">[0] push visited &lt; r<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7837 -> node7838 [color="black"]
    node7838_name [shape=none, label=<<font color="black">Branch[7838]</font>>]
    node7838_name -> node7838 [arrowhead=none, color="black", style=dashed]
    node7838 [shape=diamond, label=<<font color="black">(= desc.Enumerable true)</font>> color="black" fillcolor="white", style=filled]
    node7838 -> node7839 [label=<<font color="black">true</font>> color="black"]
    node7838 -> node7831 [label=<<font color="black">false</font>> color="black"]
    node7839_name [shape=none, label=<<font color="black">Call[7839]</font>>]
    node7839_name -> node7839 [arrowhead=none, color="black", style=dashed]
    node7839 [shape=cds, label=<<font color="black">%4 = clo&lt;CreateIterResultObject&gt;(r, false)</font>> color="black" fillcolor="white", style=filled]
    node7839 -> node7840 [color="black"]
    node7840_name [shape=none, label=<<font color="black">Block[7840]</font>>]
    node7840_name -> node7840 [arrowhead=none, color="black", style=dashed]
    node7840 [shape=box, label=<<font color="black">[0] return %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7840 -> cluster1465_exit [color="black"]
  }
}