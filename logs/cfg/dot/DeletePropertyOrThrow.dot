digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster138 {
    label = "def DeletePropertyOrThrow(O: Object, P: Symbol | String): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster138_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster138_entry_name -> cluster138_entry [arrowhead=none, color="black", style=dashed]
    cluster138_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster138_entry -> node1124 [color="black"]
    cluster138_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster138_exit_name -> cluster138_exit [arrowhead=none, color="black", style=dashed]
    cluster138_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1124_name [shape=none, label=<<font color="black">Call[1124]</font>>]
    node1124_name -> node1124 [arrowhead=none, color="black", style=dashed]
    node1124 [shape=cds, label=<<font color="black">%0 = O-&gt;Delete(P)</font>> color="black" fillcolor="white", style=filled]
    node1124 -> node1125 [color="black"]
    node1125_name [shape=none, label=<<font color="black">Block[1125]</font>>]
    node1125_name -> node1125 [arrowhead=none, color="black", style=dashed]
    node1125 [shape=box, label=<<font color="black">[0] let success = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1125 -> node1126 [color="black"]
    node1126_name [shape=none, label=<<font color="black">Branch[1126]</font>>]
    node1126_name -> node1126 [arrowhead=none, color="black", style=dashed]
    node1126 [shape=diamond, label=<<font color="black">(= success false)</font>> color="black" fillcolor="white", style=filled]
    node1126 -> node1127 [label=<<font color="black">true</font>> color="black"]
    node1126 -> node1128 [label=<<font color="black">false</font>> color="black"]
    node1127_name [shape=none, label=<<font color="black">Block[1127]</font>>]
    node1127_name -> node1127 [arrowhead=none, color="black", style=dashed]
    node1127 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#46])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1127 -> cluster138_exit [color="black"]
    node1128_name [shape=none, label=<<font color="black">Block[1128]</font>>]
    node1128_name -> node1128 [arrowhead=none, color="black", style=dashed]
    node1128 [shape=box, label=<<font color="black">[0] return ~unused~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1128 -> cluster138_exit [color="black"]
  }
}