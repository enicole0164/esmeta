digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2409 {
    label = "def <BUILTIN>:INTRINSICS.TypedArray.prototype.reverse(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2409_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2409_entry_name -> cluster2409_entry [arrowhead=none, color="black", style=dashed]
    cluster2409_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2409_entry -> node16420 [color="black"]
    cluster2409_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2409_exit_name -> cluster2409_exit [arrowhead=none, color="black", style=dashed]
    cluster2409_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node16420_name [shape=none, label=<<font color="black">Block[16420]</font>>]
    node16420_name -> node16420 [arrowhead=none, color="black", style=dashed]
    node16420 [shape=box, label=<<font color="black">[0] let O = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16420 -> node16421 [color="black"]
    node16421_name [shape=none, label=<<font color="black">Call[16421]</font>>]
    node16421_name -> node16421 [arrowhead=none, color="black", style=dashed]
    node16421 [shape=cds, label=<<font color="black">%0 = clo&lt;ValidateTypedArray&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node16421 -> node16422 [color="black"]
    node16422_name [shape=none, label=<<font color="black">Block[16422]</font>>]
    node16422_name -> node16422 [arrowhead=none, color="black", style=dashed]
    node16422 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/>[1] let len = O.ArrayLength<BR ALIGN="LEFT"/>[2] let middle = (floor (/ len 2))<BR ALIGN="LEFT"/>[3] let lower = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16422 -> node16423 [color="black"]
    node16423_name [shape=none, label=<<font color="black">Branch[16423]</font>>]
    node16423_name -> node16423 [arrowhead=none, color="black", style=dashed]
    node16423 [shape=diamond, label=<<font color="black">(! (== lower middle))</font>> color="black" fillcolor="white", style=filled]
    node16423 -> node16424 [label=<<font color="black">true</font>> color="black"]
    node16423 -> node16437 [label=<<font color="black">false</font>> color="black"]
    node16424_name [shape=none, label=<<font color="black">Block[16424]</font>>]
    node16424_name -> node16424 [arrowhead=none, color="black", style=dashed]
    node16424 [shape=box, label=<<font color="black">[0] let upper = (- (- len lower) 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16424 -> node16425 [color="black"]
    node16437_name [shape=none, label=<<font color="black">Block[16437]</font>>]
    node16437_name -> node16437 [arrowhead=none, color="black", style=dashed]
    node16437 [shape=box, label=<<font color="black">[0] return O<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16437 -> cluster2409_exit [color="black"]
    node16425_name [shape=none, label=<<font color="black">Call[16425]</font>>]
    node16425_name -> node16425 [arrowhead=none, color="black", style=dashed]
    node16425 [shape=cds, label=<<font color="black">%1 = clo&lt;ToString&gt;(([number] upper))</font>> color="black" fillcolor="white", style=filled]
    node16425 -> node16426 [color="black"]
    node16426_name [shape=none, label=<<font color="black">Block[16426]</font>>]
    node16426_name -> node16426 [arrowhead=none, color="black", style=dashed]
    node16426 [shape=box, label=<<font color="black">[0] let upperP = [! %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16426 -> node16427 [color="black"]
    node16427_name [shape=none, label=<<font color="black">Call[16427]</font>>]
    node16427_name -> node16427 [arrowhead=none, color="black", style=dashed]
    node16427 [shape=cds, label=<<font color="black">%2 = clo&lt;ToString&gt;(([number] lower))</font>> color="black" fillcolor="white", style=filled]
    node16427 -> node16428 [color="black"]
    node16428_name [shape=none, label=<<font color="black">Block[16428]</font>>]
    node16428_name -> node16428 [arrowhead=none, color="black", style=dashed]
    node16428 [shape=box, label=<<font color="black">[0] let lowerP = [! %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16428 -> node16429 [color="black"]
    node16429_name [shape=none, label=<<font color="black">Call[16429]</font>>]
    node16429_name -> node16429 [arrowhead=none, color="black", style=dashed]
    node16429 [shape=cds, label=<<font color="black">%3 = clo&lt;Get&gt;(O, lowerP)</font>> color="black" fillcolor="white", style=filled]
    node16429 -> node16430 [color="black"]
    node16430_name [shape=none, label=<<font color="black">Block[16430]</font>>]
    node16430_name -> node16430 [arrowhead=none, color="black", style=dashed]
    node16430 [shape=box, label=<<font color="black">[0] let lowerValue = [! %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16430 -> node16431 [color="black"]
    node16431_name [shape=none, label=<<font color="black">Call[16431]</font>>]
    node16431_name -> node16431 [arrowhead=none, color="black", style=dashed]
    node16431 [shape=cds, label=<<font color="black">%4 = clo&lt;Get&gt;(O, upperP)</font>> color="black" fillcolor="white", style=filled]
    node16431 -> node16432 [color="black"]
    node16432_name [shape=none, label=<<font color="black">Block[16432]</font>>]
    node16432_name -> node16432 [arrowhead=none, color="black", style=dashed]
    node16432 [shape=box, label=<<font color="black">[0] let upperValue = [! %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16432 -> node16433 [color="black"]
    node16433_name [shape=none, label=<<font color="black">Call[16433]</font>>]
    node16433_name -> node16433 [arrowhead=none, color="black", style=dashed]
    node16433 [shape=cds, label=<<font color="black">%5 = clo&lt;Set&gt;(O, lowerP, upperValue, true)</font>> color="black" fillcolor="white", style=filled]
    node16433 -> node16434 [color="black"]
    node16434_name [shape=none, label=<<font color="black">Block[16434]</font>>]
    node16434_name -> node16434 [arrowhead=none, color="black", style=dashed]
    node16434 [shape=box, label=<<font color="black">[0] [! %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16434 -> node16435 [color="black"]
    node16435_name [shape=none, label=<<font color="black">Call[16435]</font>>]
    node16435_name -> node16435 [arrowhead=none, color="black", style=dashed]
    node16435 [shape=cds, label=<<font color="black">%6 = clo&lt;Set&gt;(O, upperP, lowerValue, true)</font>> color="black" fillcolor="white", style=filled]
    node16435 -> node16436 [color="black"]
    node16436_name [shape=none, label=<<font color="black">Block[16436]</font>>]
    node16436_name -> node16436 [arrowhead=none, color="black", style=dashed]
    node16436 [shape=box, label=<<font color="black">[0] [! %6]<BR ALIGN="LEFT"/>[1] lower = (+ lower 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16436 -> node16423 [color="black"]
  }
}