digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster11 {
    label = "def StringIndexOf(string: String, searchValue: String, fromIndex: Unknown["NonnegativeInteger"]): Unknown["Integer"]"
    style = rounded
    cluster11_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster11_entry_name -> cluster11_entry [arrowhead=none, color="black", style=dashed]
    cluster11_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster11_entry -> node93 [color="black"]
    cluster11_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster11_exit_name -> cluster11_exit [arrowhead=none, color="black", style=dashed]
    cluster11_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node93_name [shape=none, label=<<font color="black">Block[93]</font>>]
    node93_name -> node93 [arrowhead=none, color="black", style=dashed]
    node93 [shape=box, label=<<font color="black">[0] let len = string.length<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node93 -> node94 [color="black"]
    node94_name [shape=none, label=<<font color="black">Branch[94]</font>>]
    node94_name -> node94 [arrowhead=none, color="black", style=dashed]
    node94 [shape=diamond, label=<<font color="black">(&amp;&amp; (= searchValue &quot;&quot;) (! (&lt; len fromIndex)))</font>> color="black" fillcolor="white", style=filled]
    node94 -> node95 [label=<<font color="black">true</font>> color="black"]
    node94 -> node96 [label=<<font color="black">false</font>> color="black"]
    node95_name [shape=none, label=<<font color="black">Block[95]</font>>]
    node95_name -> node95 [arrowhead=none, color="black", style=dashed]
    node95 [shape=box, label=<<font color="black">[0] return fromIndex<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node95 -> cluster11_exit [color="black"]
    node96_name [shape=none, label=<<font color="black">Block[96]</font>>]
    node96_name -> node96 [arrowhead=none, color="black", style=dashed]
    node96 [shape=box, label=<<font color="black">[0] let searchLen = searchValue.length<BR ALIGN="LEFT"/>[1] let i = fromIndex<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node96 -> node97 [color="black"]
    node97_name [shape=none, label=<<font color="black">Branch[97]</font>>]
    node97_name -> node97 [arrowhead=none, color="black", style=dashed]
    node97 [shape=diamond, label=<<font color="black">(! (&lt; (- len searchLen) i))</font>> color="black" fillcolor="white", style=filled]
    node97 -> node98 [label=<<font color="black">true</font>> color="black"]
    node97 -> node102 [label=<<font color="black">false</font>> color="black"]
    node98_name [shape=none, label=<<font color="black">Block[98]</font>>]
    node98_name -> node98 [arrowhead=none, color="black", style=dashed]
    node98 [shape=box, label=<<font color="black">[0] let candidate = (substring string i (+ i searchLen))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node98 -> node99 [color="black"]
    node102_name [shape=none, label=<<font color="black">Block[102]</font>>]
    node102_name -> node102 [arrowhead=none, color="black", style=dashed]
    node102 [shape=box, label=<<font color="black">[0] return (- 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node102 -> cluster11_exit [color="black"]
    node99_name [shape=none, label=<<font color="black">Branch[99]</font>>]
    node99_name -> node99 [arrowhead=none, color="black", style=dashed]
    node99 [shape=diamond, label=<<font color="black">(= candidate searchValue)</font>> color="black" fillcolor="white", style=filled]
    node99 -> node100 [label=<<font color="black">true</font>> color="black"]
    node99 -> node101 [label=<<font color="black">false</font>> color="black"]
    node100_name [shape=none, label=<<font color="black">Block[100]</font>>]
    node100_name -> node100 [arrowhead=none, color="black", style=dashed]
    node100 [shape=box, label=<<font color="black">[0] return i<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node100 -> cluster11_exit [color="black"]
    node101_name [shape=none, label=<<font color="black">Block[101]</font>>]
    node101_name -> node101 [arrowhead=none, color="black", style=dashed]
    node101 [shape=box, label=<<font color="black">[0] i = (+ i 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node101 -> node97 [color="black"]
  }
}