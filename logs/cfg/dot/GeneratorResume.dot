digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2615 {
    label = "def GeneratorResume(generator: Unknown, value: Unknown, generatorBrand: Unknown): Normal[ESValue] | Abrupt"
    style = rounded
    cluster2615_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2615_entry_name -> cluster2615_entry [arrowhead=none, color="black", style=dashed]
    cluster2615_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2615_entry -> node19351 [color="black"]
    cluster2615_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2615_exit_name -> cluster2615_exit [arrowhead=none, color="black", style=dashed]
    cluster2615_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node19351_name [shape=none, label=<<font color="black">Call[19351]</font>>]
    node19351_name -> node19351 [arrowhead=none, color="black", style=dashed]
    node19351 [shape=cds, label=<<font color="black">%0 = clo&lt;GeneratorValidate&gt;(generator, generatorBrand)</font>> color="black" fillcolor="white", style=filled]
    node19351 -> node19352 [color="black"]
    node19352_name [shape=none, label=<<font color="black">Block[19352]</font>>]
    node19352_name -> node19352 [arrowhead=none, color="black", style=dashed]
    node19352 [shape=box, label=<<font color="black">[0] let state = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19352 -> node19353 [color="black"]
    node19353_name [shape=none, label=<<font color="black">Branch[19353]</font>>]
    node19353_name -> node19353 [arrowhead=none, color="black", style=dashed]
    node19353 [shape=diamond, label=<<font color="black">(= state ~completed~)</font>> color="black" fillcolor="white", style=filled]
    node19353 -> node19354 [label=<<font color="black">true</font>> color="black"]
    node19353 -> node19356 [label=<<font color="black">false</font>> color="black"]
    node19354_name [shape=none, label=<<font color="black">Call[19354]</font>>]
    node19354_name -> node19354 [arrowhead=none, color="black", style=dashed]
    node19354 [shape=cds, label=<<font color="black">%1 = clo&lt;CreateIterResultObject&gt;(undefined, true)</font>> color="black" fillcolor="white", style=filled]
    node19354 -> node19355 [color="black"]
    node19356_name [shape=none, label=<<font color="black">Block[19356]</font>>]
    node19356_name -> node19356 [arrowhead=none, color="black", style=dashed]
    node19356 [shape=box, label=<<font color="black">[0] assert (|| (= state ~suspendedStart~) (= state ~suspendedYield~))<BR ALIGN="LEFT"/>[1] let genContext = generator.GeneratorContext<BR ALIGN="LEFT"/>[2] let methodContext = @EXECUTION_STACK[0]<BR ALIGN="LEFT"/>[3] nop<BR ALIGN="LEFT"/>[4] generator.GeneratorState = ~executing~<BR ALIGN="LEFT"/>[5] push genContext &gt; @EXECUTION_STACK<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19356 -> node19357 [color="black"]
    node19355_name [shape=none, label=<<font color="black">Block[19355]</font>>]
    node19355_name -> node19355 [arrowhead=none, color="black", style=dashed]
    node19355 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19355 -> cluster2615_exit [color="black"]
    node19357_name [shape=none, label=<<font color="black">Call[19357]</font>>]
    node19357_name -> node19357 [arrowhead=none, color="black", style=dashed]
    node19357 [shape=cds, label=<<font color="black">%3 = clo&lt;NormalCompletion&gt;(value)</font>> color="black" fillcolor="white", style=filled]
    node19357 -> node19358 [color="black"]
    node19358_name [shape=none, label=<<font color="black">Branch[19358]</font>>]
    node19358_name -> node19358 [arrowhead=none, color="black", style=dashed]
    node19358 [shape=diamond, label=<<font color="black">(= genContext.ReturnCont absent)</font>> color="black" fillcolor="white", style=filled]
    node19358 -> node19359 [label=<<font color="black">true</font>> color="black"]
    node19358 -> node19360 [label=<<font color="black">false</font>> color="black"]
    node19359_name [shape=none, label=<<font color="black">Block[19359]</font>>]
    node19359_name -> node19359 [arrowhead=none, color="black", style=dashed]
    node19359 [shape=box, label=<<font color="black">[0] genContext.ReturnCont = (new [])[#1319]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19359 -> node19360 [color="black"]
    node19360_name [shape=none, label=<<font color="black">Block[19360]</font>>]
    node19360_name -> node19360 [arrowhead=none, color="black", style=dashed]
    node19360 [shape=box, label=<<font color="black">[0] push cont&lt;GeneratorResume:cont0&gt; &gt; genContext.ReturnCont<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19360 -> node19361 [color="black"]
    node19361_name [shape=none, label=<<font color="black">Call[19361]</font>>]
    node19361_name -> node19361 [arrowhead=none, color="black", style=dashed]
    node19361 [shape=cds, label=<<font color="black">%2 = genContext.ResumeCont(%3)</font>> color="black" fillcolor="white", style=filled]
    node19361 -> cluster2615_exit [color="black"]
  }
}