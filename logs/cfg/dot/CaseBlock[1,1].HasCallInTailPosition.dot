digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1765 {
    label = "def <SYNTAX>:CaseBlock[1,1].HasCallInTailPosition(this: Ast:CaseBlock[1,1], call: Unknown): Boolean"
    style = rounded
    cluster1765_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1765_entry_name -> cluster1765_entry [arrowhead=none, color="black", style=dashed]
    cluster1765_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1765_entry -> node9778 [color="black"]
    cluster1765_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1765_exit_name -> cluster1765_exit [arrowhead=none, color="black", style=dashed]
    cluster1765_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9778_name [shape=none, label=<<font color="black">Block[9778]</font>>]
    node9778_name -> node9778 [arrowhead=none, color="black", style=dashed]
    node9778 [shape=box, label=<<font color="black">[0] let has = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9778 -> node9779 [color="black"]
    node9779_name [shape=none, label=<<font color="black">Branch[9779]</font>>]
    node9779_name -> node9779 [arrowhead=none, color="black", style=dashed]
    node9779 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node9779 -> node9780 [label=<<font color="black">true</font>> color="black"]
    node9779 -> node9782 [label=<<font color="black">false</font>> color="black"]
    node9780_name [shape=none, label=<<font color="black">Call[9780]</font>>]
    node9780_name -> node9780 [arrowhead=none, color="black", style=dashed]
    node9780 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9780 -> node9781 [color="black"]
    node9782_name [shape=none, label=<<font color="black">Branch[9782]</font>>]
    node9782_name -> node9782 [arrowhead=none, color="black", style=dashed]
    node9782 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white", style=filled]
    node9782 -> node9783 [label=<<font color="black">true</font>> color="black"]
    node9782 -> node9784 [label=<<font color="black">false</font>> color="black"]
    node9781_name [shape=none, label=<<font color="black">Block[9781]</font>>]
    node9781_name -> node9781 [arrowhead=none, color="black", style=dashed]
    node9781 [shape=box, label=<<font color="black">[0] let has = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9781 -> node9782 [color="black"]
    node9783_name [shape=none, label=<<font color="black">Block[9783]</font>>]
    node9783_name -> node9783 [arrowhead=none, color="black", style=dashed]
    node9783 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9783 -> cluster1765_exit [color="black"]
    node9784_name [shape=none, label=<<font color="black">Call[9784]</font>>]
    node9784_name -> node9784 [arrowhead=none, color="black", style=dashed]
    node9784 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9784 -> node9785 [color="black"]
    node9785_name [shape=none, label=<<font color="black">Block[9785]</font>>]
    node9785_name -> node9785 [arrowhead=none, color="black", style=dashed]
    node9785 [shape=box, label=<<font color="black">[0] let has = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9785 -> node9786 [color="black"]
    node9786_name [shape=none, label=<<font color="black">Branch[9786]</font>>]
    node9786_name -> node9786 [arrowhead=none, color="black", style=dashed]
    node9786 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white", style=filled]
    node9786 -> node9787 [label=<<font color="black">true</font>> color="black"]
    node9786 -> node9788 [label=<<font color="black">false</font>> color="black"]
    node9787_name [shape=none, label=<<font color="black">Block[9787]</font>>]
    node9787_name -> node9787 [arrowhead=none, color="black", style=dashed]
    node9787 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9787 -> cluster1765_exit [color="black"]
    node9788_name [shape=none, label=<<font color="black">Branch[9788]</font>>]
    node9788_name -> node9788 [arrowhead=none, color="black", style=dashed]
    node9788 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node9788 -> node9789 [label=<<font color="black">true</font>> color="black"]
    node9788 -> node9791 [label=<<font color="black">false</font>> color="black"]
    node9789_name [shape=none, label=<<font color="black">Call[9789]</font>>]
    node9789_name -> node9789 [arrowhead=none, color="black", style=dashed]
    node9789 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9789 -> node9790 [color="black"]
    node9791_name [shape=none, label=<<font color="black">Block[9791]</font>>]
    node9791_name -> node9791 [arrowhead=none, color="black", style=dashed]
    node9791 [shape=box, label=<<font color="black">[0] return has<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9791 -> cluster1765_exit [color="black"]
    node9790_name [shape=none, label=<<font color="black">Block[9790]</font>>]
    node9790_name -> node9790 [arrowhead=none, color="black", style=dashed]
    node9790 [shape=box, label=<<font color="black">[0] let has = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9790 -> node9791 [color="black"]
  }
}