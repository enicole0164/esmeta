digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2017 {
    label = "def <BUILTIN>:INTRINSICS.Object.preventExtensions(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2017_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2017_entry_name -> cluster2017_entry [arrowhead=none, color="black", style=dashed]
    cluster2017_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2017_entry -> node11280 [color="black"]
    cluster2017_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2017_exit_name -> cluster2017_exit [arrowhead=none, color="black", style=dashed]
    cluster2017_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11280_name [shape=none, label=<<font color="black">Branch[11280]</font>>]
    node11280_name -> node11280 [arrowhead=none, color="black", style=dashed]
    node11280 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11280 -> node11281 [label=<<font color="black">true</font>> color="black"]
    node11280 -> node11282 [label=<<font color="black">false</font>> color="black"]
    node11281_name [shape=none, label=<<font color="black">Block[11281]</font>>]
    node11281_name -> node11281 [arrowhead=none, color="black", style=dashed]
    node11281 [shape=box, label=<<font color="black">[0] let O = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11281 -> node11283 [color="black"]
    node11282_name [shape=none, label=<<font color="black">Block[11282]</font>>]
    node11282_name -> node11282 [arrowhead=none, color="black", style=dashed]
    node11282 [shape=box, label=<<font color="black">[0] let O = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11282 -> node11283 [color="black"]
    node11283_name [shape=none, label=<<font color="black">Branch[11283]</font>>]
    node11283_name -> node11283 [arrowhead=none, color="black", style=dashed]
    node11283 [shape=diamond, label=<<font color="black">(! (= (typeof O) @Object))</font>> color="black" fillcolor="white", style=filled]
    node11283 -> node11284 [label=<<font color="black">true</font>> color="black"]
    node11283 -> node11285 [label=<<font color="black">false</font>> color="black"]
    node11284_name [shape=none, label=<<font color="black">Block[11284]</font>>]
    node11284_name -> node11284 [arrowhead=none, color="black", style=dashed]
    node11284 [shape=box, label=<<font color="black">[0] return O<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11284 -> cluster2017_exit [color="black"]
    node11285_name [shape=none, label=<<font color="black">Call[11285]</font>>]
    node11285_name -> node11285 [arrowhead=none, color="black", style=dashed]
    node11285 [shape=cds, label=<<font color="black">%0 = O-&gt;PreventExtensions()</font>> color="black" fillcolor="white", style=filled]
    node11285 -> node11286 [color="black"]
    node11286_name [shape=none, label=<<font color="black">Block[11286]</font>>]
    node11286_name -> node11286 [arrowhead=none, color="black", style=dashed]
    node11286 [shape=box, label=<<font color="black">[0] let status = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11286 -> node11287 [color="black"]
    node11287_name [shape=none, label=<<font color="black">Branch[11287]</font>>]
    node11287_name -> node11287 [arrowhead=none, color="black", style=dashed]
    node11287 [shape=diamond, label=<<font color="black">(= status false)</font>> color="black" fillcolor="white", style=filled]
    node11287 -> node11288 [label=<<font color="black">true</font>> color="black"]
    node11287 -> node11289 [label=<<font color="black">false</font>> color="black"]
    node11288_name [shape=none, label=<<font color="black">Block[11288]</font>>]
    node11288_name -> node11288 [arrowhead=none, color="black", style=dashed]
    node11288 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#896])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11288 -> cluster2017_exit [color="black"]
    node11289_name [shape=none, label=<<font color="black">Block[11289]</font>>]
    node11289_name -> node11289 [arrowhead=none, color="black", style=dashed]
    node11289 [shape=box, label=<<font color="black">[0] return O<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11289 -> cluster2017_exit [color="black"]
  }
}