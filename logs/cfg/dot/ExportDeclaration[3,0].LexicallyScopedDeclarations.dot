digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster315 {
    label = "def <SYNTAX>:ExportDeclaration[3,0].LexicallyScopedDeclarations(this: Ast:ExportDeclaration[3,0]): List[Ast]"
    style = rounded
    cluster315_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster315_entry_name -> cluster315_entry [arrowhead=none, color="black", style=dashed]
    cluster315_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster315_entry -> node1868 [color="black"]
    cluster315_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster315_exit_name -> cluster315_exit [arrowhead=none, color="black", style=dashed]
    cluster315_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1868_name [shape=none, label=<<font color="black">Call[1868]</font>>]
    node1868_name -> node1868 [arrowhead=none, color="black", style=dashed]
    node1868 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;DeclarationPart()</font>> color="black" fillcolor="white", style=filled]
    node1868 -> node1869 [color="black"]
    node1869_name [shape=none, label=<<font color="black">Block[1869]</font>>]
    node1869_name -> node1869 [arrowhead=none, color="black", style=dashed]
    node1869 [shape=box, label=<<font color="black">[0] return (new [%0])[#173]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1869 -> cluster315_exit [color="black"]
  }
}