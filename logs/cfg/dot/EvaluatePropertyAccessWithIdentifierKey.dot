digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1265 {
    label = "def EvaluatePropertyAccessWithIdentifierKey(baseValue: ESValue, identifierName: Ast[IdentifierName], strict: Boolean): ReferenceRecord"
    style = rounded
    cluster1265_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1265_entry_name -> cluster1265_entry [arrowhead=none, color="black", style=dashed]
    cluster1265_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1265_entry -> node5838 [color="black"]
    cluster1265_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1265_exit_name -> cluster1265_exit [arrowhead=none, color="black", style=dashed]
    cluster1265_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node5838_name [shape=none, label=<<font color="black">Call[5838]</font>>]
    node5838_name -> node5838 [arrowhead=none, color="black", style=dashed]
    node5838 [shape=cds, label=<<font color="black">%0 = identifierName-&gt;StringValue()</font>> color="black" fillcolor="white", style=filled]
    node5838 -> node5839 [color="black"]
    node5839_name [shape=none, label=<<font color="black">Block[5839]</font>>]
    node5839_name -> node5839 [arrowhead=none, color="black", style=dashed]
    node5839 [shape=box, label=<<font color="black">[0] let propertyNameString = %0<BR ALIGN="LEFT"/>[1] return (new ReferenceRecord(&quot;Base&quot; -&gt; baseValue, &quot;ReferencedName&quot; -&gt; propertyNameString, &quot;Strict&quot; -&gt; strict, &quot;ThisValue&quot; -&gt; ~empty~))[#568]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5839 -> cluster1265_exit [color="black"]
  }
}