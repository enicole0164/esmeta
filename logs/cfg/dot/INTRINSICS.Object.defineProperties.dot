digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1998 {
    label = "def <BUILTIN>:INTRINSICS.Object.defineProperties(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster1998_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1998_entry_name -> cluster1998_entry [arrowhead=none, color="black", style=dashed]
    cluster1998_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1998_entry -> node11080 [color="black"]
    cluster1998_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1998_exit_name -> cluster1998_exit [arrowhead=none, color="black", style=dashed]
    cluster1998_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11080_name [shape=none, label=<<font color="black">Branch[11080]</font>>]
    node11080_name -> node11080 [arrowhead=none, color="black", style=dashed]
    node11080 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11080 -> node11081 [label=<<font color="black">true</font>> color="black"]
    node11080 -> node11082 [label=<<font color="black">false</font>> color="black"]
    node11081_name [shape=none, label=<<font color="black">Block[11081]</font>>]
    node11081_name -> node11081 [arrowhead=none, color="black", style=dashed]
    node11081 [shape=box, label=<<font color="black">[0] let O = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11081 -> node11083 [color="black"]
    node11082_name [shape=none, label=<<font color="black">Block[11082]</font>>]
    node11082_name -> node11082 [arrowhead=none, color="black", style=dashed]
    node11082 [shape=box, label=<<font color="black">[0] let O = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11082 -> node11083 [color="black"]
    node11083_name [shape=none, label=<<font color="black">Branch[11083]</font>>]
    node11083_name -> node11083 [arrowhead=none, color="black", style=dashed]
    node11083 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11083 -> node11084 [label=<<font color="black">true</font>> color="black"]
    node11083 -> node11085 [label=<<font color="black">false</font>> color="black"]
    node11084_name [shape=none, label=<<font color="black">Block[11084]</font>>]
    node11084_name -> node11084 [arrowhead=none, color="black", style=dashed]
    node11084 [shape=box, label=<<font color="black">[0] let Properties = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11084 -> node11086 [color="black"]
    node11085_name [shape=none, label=<<font color="black">Block[11085]</font>>]
    node11085_name -> node11085 [arrowhead=none, color="black", style=dashed]
    node11085 [shape=box, label=<<font color="black">[0] let Properties = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11085 -> node11086 [color="black"]
    node11086_name [shape=none, label=<<font color="black">Branch[11086]</font>>]
    node11086_name -> node11086 [arrowhead=none, color="black", style=dashed]
    node11086 [shape=diamond, label=<<font color="black">(! (= (typeof O) @Object))</font>> color="black" fillcolor="white", style=filled]
    node11086 -> node11087 [label=<<font color="black">true</font>> color="black"]
    node11086 -> node11088 [label=<<font color="black">false</font>> color="black"]
    node11087_name [shape=none, label=<<font color="black">Block[11087]</font>>]
    node11087_name -> node11087 [arrowhead=none, color="black", style=dashed]
    node11087 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#889])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11087 -> cluster1998_exit [color="black"]
    node11088_name [shape=none, label=<<font color="black">Call[11088]</font>>]
    node11088_name -> node11088 [arrowhead=none, color="black", style=dashed]
    node11088 [shape=cds, label=<<font color="black">%0 = clo&lt;ObjectDefineProperties&gt;(O, Properties)</font>> color="black" fillcolor="white", style=filled]
    node11088 -> node11089 [color="black"]
    node11089_name [shape=none, label=<<font color="black">Block[11089]</font>>]
    node11089_name -> node11089 [arrowhead=none, color="black", style=dashed]
    node11089 [shape=box, label=<<font color="black">[0] return [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11089 -> cluster1998_exit [color="black"]
  }
}