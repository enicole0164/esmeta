digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2233 {
    label = "def <SYNTAX>:RegExpIdentifierName[0,0].RegExpIdentifierCodePoints(this: Ast:RegExpIdentifierName[0,0]): Unknown["ListOfCodePoints"]"
    style = rounded
    cluster2233_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2233_entry_name -> cluster2233_entry [arrowhead=none, color="black", style=dashed]
    cluster2233_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2233_entry -> node13892 [color="black"]
    cluster2233_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2233_exit_name -> cluster2233_exit [arrowhead=none, color="black", style=dashed]
    cluster2233_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node13892_name [shape=none, label=<<font color="black">Call[13892]</font>>]
    node13892_name -> node13892 [arrowhead=none, color="black", style=dashed]
    node13892 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;RegExpIdentifierCodePoint()</font>> color="black" fillcolor="white", style=filled]
    node13892 -> node13893 [color="black"]
    node13893_name [shape=none, label=<<font color="black">Block[13893]</font>>]
    node13893_name -> node13893 [arrowhead=none, color="black", style=dashed]
    node13893 [shape=box, label=<<font color="black">[0] let cp = %0<BR ALIGN="LEFT"/>[1] return (new [cp])[#972]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13893 -> cluster2233_exit [color="black"]
  }
}