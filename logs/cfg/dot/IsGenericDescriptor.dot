digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster69 {
    label = "def IsGenericDescriptor(Desc: PropertyDescriptor | Undefined): Boolean"
    style = rounded
    cluster69_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster69_entry_name -> cluster69_entry [arrowhead=none, color="black", style=dashed]
    cluster69_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster69_entry -> node475 [color="black"]
    cluster69_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster69_exit_name -> cluster69_exit [arrowhead=none, color="black", style=dashed]
    cluster69_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node475_name [shape=none, label=<<font color="black">Branch[475]</font>>]
    node475_name -> node475 [arrowhead=none, color="black", style=dashed]
    node475 [shape=diamond, label=<<font color="black">(= Desc undefined)</font>> color="black" fillcolor="white", style=filled]
    node475 -> node476 [label=<<font color="black">true</font>> color="black"]
    node475 -> node477 [label=<<font color="black">false</font>> color="black"]
    node476_name [shape=none, label=<<font color="black">Block[476]</font>>]
    node476_name -> node476 [arrowhead=none, color="black", style=dashed]
    node476 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node476 -> cluster69_exit [color="black"]
    node477_name [shape=none, label=<<font color="black">Call[477]</font>>]
    node477_name -> node477 [arrowhead=none, color="black", style=dashed]
    node477 [shape=cds, label=<<font color="black">%0 = clo&lt;IsAccessorDescriptor&gt;(Desc)</font>> color="black" fillcolor="white", style=filled]
    node477 -> node478 [color="black"]
    node478_name [shape=none, label=<<font color="black">Branch[478]</font>>]
    node478_name -> node478 [arrowhead=none, color="black", style=dashed]
    node478 [shape=diamond, label=<<font color="black">(= %0 true)</font>> color="black" fillcolor="white", style=filled]
    node478 -> node479 [label=<<font color="black">true</font>> color="black"]
    node478 -> node480 [label=<<font color="black">false</font>> color="black"]
    node479_name [shape=none, label=<<font color="black">Block[479]</font>>]
    node479_name -> node479 [arrowhead=none, color="black", style=dashed]
    node479 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node479 -> cluster69_exit [color="black"]
    node480_name [shape=none, label=<<font color="black">Call[480]</font>>]
    node480_name -> node480 [arrowhead=none, color="black", style=dashed]
    node480 [shape=cds, label=<<font color="black">%1 = clo&lt;IsDataDescriptor&gt;(Desc)</font>> color="black" fillcolor="white", style=filled]
    node480 -> node481 [color="black"]
    node481_name [shape=none, label=<<font color="black">Branch[481]</font>>]
    node481_name -> node481 [arrowhead=none, color="black", style=dashed]
    node481 [shape=diamond, label=<<font color="black">(= %1 true)</font>> color="black" fillcolor="white", style=filled]
    node481 -> node482 [label=<<font color="black">true</font>> color="black"]
    node481 -> node483 [label=<<font color="black">false</font>> color="black"]
    node482_name [shape=none, label=<<font color="black">Block[482]</font>>]
    node482_name -> node482 [arrowhead=none, color="black", style=dashed]
    node482 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node482 -> cluster69_exit [color="black"]
    node483_name [shape=none, label=<<font color="black">Block[483]</font>>]
    node483_name -> node483 [arrowhead=none, color="black", style=dashed]
    node483 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node483 -> cluster69_exit [color="black"]
  }
}