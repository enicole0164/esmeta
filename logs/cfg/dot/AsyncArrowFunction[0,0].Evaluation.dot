digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1717 {
    label = "def <SYNTAX>:AsyncArrowFunction[0,0].Evaluation(this: Ast:AsyncArrowFunction[0,0]): Unknown"
    style = rounded
    cluster1717_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1717_entry_name -> cluster1717_entry [arrowhead=none, color="black", style=dashed]
    cluster1717_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1717_entry -> node9659 [color="black"]
    cluster1717_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1717_exit_name -> cluster1717_exit [arrowhead=none, color="black", style=dashed]
    cluster1717_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9659_name [shape=none, label=<<font color="black">Call[9659]</font>>]
    node9659_name -> node9659 [arrowhead=none, color="black", style=dashed]
    node9659 [shape=cds, label=<<font color="black">%0 = this-&gt;InstantiateAsyncArrowFunctionExpression()</font>> color="black" fillcolor="white", style=filled]
    node9659 -> node9660 [color="black"]
    node9660_name [shape=none, label=<<font color="black">Block[9660]</font>>]
    node9660_name -> node9660 [arrowhead=none, color="black", style=dashed]
    node9660 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9660 -> cluster1717_exit [color="black"]
  }
}