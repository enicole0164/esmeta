digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster262 {
    label = "def <SYNTAX>:CaseBlock[1,1].LexicallyDeclaredNames(this: Ast:CaseBlock[1,1]): List[String]"
    style = rounded
    cluster262_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster262_entry_name -> cluster262_entry [arrowhead=none, color="black", style=dashed]
    cluster262_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster262_entry -> node1689 [color="black"]
    cluster262_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster262_exit_name -> cluster262_exit [arrowhead=none, color="black", style=dashed]
    cluster262_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1689_name [shape=none, label=<<font color="black">Branch[1689]</font>>]
    node1689_name -> node1689 [arrowhead=none, color="black", style=dashed]
    node1689 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node1689 -> node1690 [label=<<font color="black">true</font>> color="black"]
    node1689 -> node1692 [label=<<font color="black">false</font>> color="black"]
    node1690_name [shape=none, label=<<font color="black">Call[1690]</font>>]
    node1690_name -> node1690 [arrowhead=none, color="black", style=dashed]
    node1690 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1690 -> node1691 [color="black"]
    node1692_name [shape=none, label=<<font color="black">Block[1692]</font>>]
    node1692_name -> node1692 [arrowhead=none, color="black", style=dashed]
    node1692 [shape=box, label=<<font color="black">[0] let names1 = (new [])[#118]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1692 -> node1693 [color="black"]
    node1691_name [shape=none, label=<<font color="black">Block[1691]</font>>]
    node1691_name -> node1691 [arrowhead=none, color="black", style=dashed]
    node1691 [shape=box, label=<<font color="black">[0] let names1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1691 -> node1693 [color="black"]
    node1693_name [shape=none, label=<<font color="black">Call[1693]</font>>]
    node1693_name -> node1693 [arrowhead=none, color="black", style=dashed]
    node1693 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1693 -> node1694 [color="black"]
    node1694_name [shape=none, label=<<font color="black">Block[1694]</font>>]
    node1694_name -> node1694 [arrowhead=none, color="black", style=dashed]
    node1694 [shape=box, label=<<font color="black">[0] let names2 = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1694 -> node1695 [color="black"]
    node1695_name [shape=none, label=<<font color="black">Branch[1695]</font>>]
    node1695_name -> node1695 [arrowhead=none, color="black", style=dashed]
    node1695 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node1695 -> node1696 [label=<<font color="black">true</font>> color="black"]
    node1695 -> node1698 [label=<<font color="black">false</font>> color="black"]
    node1696_name [shape=none, label=<<font color="black">Call[1696]</font>>]
    node1696_name -> node1696 [arrowhead=none, color="black", style=dashed]
    node1696 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1696 -> node1697 [color="black"]
    node1698_name [shape=none, label=<<font color="black">Block[1698]</font>>]
    node1698_name -> node1698 [arrowhead=none, color="black", style=dashed]
    node1698 [shape=box, label=<<font color="black">[0] let names3 = (new [])[#119]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1698 -> node1699 [color="black"]
    node1697_name [shape=none, label=<<font color="black">Block[1697]</font>>]
    node1697_name -> node1697 [arrowhead=none, color="black", style=dashed]
    node1697 [shape=box, label=<<font color="black">[0] let names3 = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1697 -> node1699 [color="black"]
    node1699_name [shape=none, label=<<font color="black">Block[1699]</font>>]
    node1699_name -> node1699 [arrowhead=none, color="black", style=dashed]
    node1699 [shape=box, label=<<font color="black">[0] return (list-concat names1 names2 names3)[#120]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1699 -> cluster262_exit [color="black"]
  }
}