digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1301 {
    label = "def <SYNTAX>:UpdateExpression[1,0].Evaluation(this: Ast:UpdateExpression[1,0]): Unknown"
    style = rounded
    cluster1301_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1301_entry_name -> cluster1301_entry [arrowhead=none, color="black", style=dashed]
    cluster1301_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1301_entry -> node6151 [color="black"]
    cluster1301_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1301_exit_name -> cluster1301_exit [arrowhead=none, color="black", style=dashed]
    cluster1301_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6151_name [shape=none, label=<<font color="black">Call[6151]</font>>]
    node6151_name -> node6151 [arrowhead=none, color="black", style=dashed]
    node6151 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6151 -> node6152 [color="black"]
    node6152_name [shape=none, label=<<font color="black">Block[6152]</font>>]
    node6152_name -> node6152 [arrowhead=none, color="black", style=dashed]
    node6152 [shape=box, label=<<font color="black">[0] let lhs = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6152 -> node6153 [color="black"]
    node6153_name [shape=none, label=<<font color="black">Call[6153]</font>>]
    node6153_name -> node6153 [arrowhead=none, color="black", style=dashed]
    node6153 [shape=cds, label=<<font color="black">%1 = clo&lt;GetValue&gt;(lhs)</font>> color="black" fillcolor="white", style=filled]
    node6153 -> node6154 [color="black"]
    node6154_name [shape=none, label=<<font color="black">Call[6154]</font>>]
    node6154_name -> node6154 [arrowhead=none, color="black", style=dashed]
    node6154 [shape=cds, label=<<font color="black">%2 = clo&lt;ToNumeric&gt;([? %1])</font>> color="black" fillcolor="white", style=filled]
    node6154 -> node6155 [color="black"]
    node6155_name [shape=none, label=<<font color="black">Block[6155]</font>>]
    node6155_name -> node6155 [arrowhead=none, color="black", style=dashed]
    node6155 [shape=box, label=<<font color="black">[0] let oldValue = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6155 -> node6156 [color="black"]
    node6156_name [shape=none, label=<<font color="black">Branch[6156]</font>>]
    node6156_name -> node6156 [arrowhead=none, color="black", style=dashed]
    node6156 [shape=diamond, label=<<font color="black">(= (typeof oldValue) @Number)</font>> color="black" fillcolor="white", style=filled]
    node6156 -> node6157 [label=<<font color="black">true</font>> color="black"]
    node6156 -> node6159 [label=<<font color="black">false</font>> color="black"]
    node6157_name [shape=none, label=<<font color="black">Call[6157]</font>>]
    node6157_name -> node6157 [arrowhead=none, color="black", style=dashed]
    node6157 [shape=cds, label=<<font color="black">%3 = clo&lt;Number::add&gt;(oldValue, 1.0f)</font>> color="black" fillcolor="white", style=filled]
    node6157 -> node6158 [color="black"]
    node6159_name [shape=none, label=<<font color="black">Block[6159]</font>>]
    node6159_name -> node6159 [arrowhead=none, color="black", style=dashed]
    node6159 [shape=box, label=<<font color="black">[0] assert (= (typeof oldValue) @BigInt)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6159 -> node6160 [color="black"]
    node6158_name [shape=none, label=<<font color="black">Block[6158]</font>>]
    node6158_name -> node6158 [arrowhead=none, color="black", style=dashed]
    node6158 [shape=box, label=<<font color="black">[0] let newValue = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6158 -> node6162 [color="black"]
    node6160_name [shape=none, label=<<font color="black">Call[6160]</font>>]
    node6160_name -> node6160 [arrowhead=none, color="black", style=dashed]
    node6160 [shape=cds, label=<<font color="black">%4 = clo&lt;BigInt::add&gt;(oldValue, 1n)</font>> color="black" fillcolor="white", style=filled]
    node6160 -> node6161 [color="black"]
    node6162_name [shape=none, label=<<font color="black">Call[6162]</font>>]
    node6162_name -> node6162 [arrowhead=none, color="black", style=dashed]
    node6162 [shape=cds, label=<<font color="black">%5 = clo&lt;PutValue&gt;(lhs, newValue)</font>> color="black" fillcolor="white", style=filled]
    node6162 -> node6163 [color="black"]
    node6161_name [shape=none, label=<<font color="black">Block[6161]</font>>]
    node6161_name -> node6161 [arrowhead=none, color="black", style=dashed]
    node6161 [shape=box, label=<<font color="black">[0] let newValue = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6161 -> node6162 [color="black"]
    node6163_name [shape=none, label=<<font color="black">Block[6163]</font>>]
    node6163_name -> node6163 [arrowhead=none, color="black", style=dashed]
    node6163 [shape=box, label=<<font color="black">[0] [? %5]<BR ALIGN="LEFT"/>[1] return oldValue<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6163 -> cluster1301_exit [color="black"]
  }
}