digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2031 {
    label = "def <BUILTIN>:INTRINSICS.Object.prototype.__lookupGetter__(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2031_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2031_entry_name -> cluster2031_entry [arrowhead=none, color="black", style=dashed]
    cluster2031_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2031_entry -> node11455 [color="black"]
    cluster2031_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2031_exit_name -> cluster2031_exit [arrowhead=none, color="black", style=dashed]
    cluster2031_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11455_name [shape=none, label=<<font color="black">Branch[11455]</font>>]
    node11455_name -> node11455 [arrowhead=none, color="black", style=dashed]
    node11455 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11455 -> node11456 [label=<<font color="black">true</font>> color="black"]
    node11455 -> node11457 [label=<<font color="black">false</font>> color="black"]
    node11456_name [shape=none, label=<<font color="black">Block[11456]</font>>]
    node11456_name -> node11456 [arrowhead=none, color="black", style=dashed]
    node11456 [shape=box, label=<<font color="black">[0] let P = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11456 -> node11458 [color="black"]
    node11457_name [shape=none, label=<<font color="black">Block[11457]</font>>]
    node11457_name -> node11457 [arrowhead=none, color="black", style=dashed]
    node11457 [shape=box, label=<<font color="black">[0] let P = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11457 -> node11458 [color="black"]
    node11458_name [shape=none, label=<<font color="black">Call[11458]</font>>]
    node11458_name -> node11458 [arrowhead=none, color="black", style=dashed]
    node11458 [shape=cds, label=<<font color="black">%0 = clo&lt;ToObject&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node11458 -> node11459 [color="black"]
    node11459_name [shape=none, label=<<font color="black">Block[11459]</font>>]
    node11459_name -> node11459 [arrowhead=none, color="black", style=dashed]
    node11459 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11459 -> node11460 [color="black"]
    node11460_name [shape=none, label=<<font color="black">Call[11460]</font>>]
    node11460_name -> node11460 [arrowhead=none, color="black", style=dashed]
    node11460 [shape=cds, label=<<font color="black">%1 = clo&lt;ToPropertyKey&gt;(P)</font>> color="black" fillcolor="white", style=filled]
    node11460 -> node11461 [color="black"]
    node11461_name [shape=none, label=<<font color="black">Block[11461]</font>>]
    node11461_name -> node11461 [arrowhead=none, color="black", style=dashed]
    node11461 [shape=box, label=<<font color="black">[0] let key = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11461 -> node11462 [color="black"]
    node11462_name [shape=none, label=<<font color="black">Branch[11462]</font>>]
    node11462_name -> node11462 [arrowhead=none, color="black", style=dashed]
    node11462 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white", style=filled]
    node11462 -> node11463 [label=<<font color="black">true</font>> color="black"]
    node11463_name [shape=none, label=<<font color="black">Call[11463]</font>>]
    node11463_name -> node11463 [arrowhead=none, color="black", style=dashed]
    node11463 [shape=cds, label=<<font color="black">%2 = O-&gt;GetOwnProperty(key)</font>> color="black" fillcolor="white", style=filled]
    node11463 -> node11464 [color="black"]
    node11464_name [shape=none, label=<<font color="black">Block[11464]</font>>]
    node11464_name -> node11464 [arrowhead=none, color="black", style=dashed]
    node11464 [shape=box, label=<<font color="black">[0] let desc = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11464 -> node11465 [color="black"]
    node11465_name [shape=none, label=<<font color="black">Branch[11465]</font>>]
    node11465_name -> node11465 [arrowhead=none, color="black", style=dashed]
    node11465 [shape=diamond, label=<<font color="black">(! (= desc undefined))</font>> color="black" fillcolor="white", style=filled]
    node11465 -> node11466 [label=<<font color="black">true</font>> color="black"]
    node11465 -> node11470 [label=<<font color="black">false</font>> color="black"]
    node11466_name [shape=none, label=<<font color="black">Call[11466]</font>>]
    node11466_name -> node11466 [arrowhead=none, color="black", style=dashed]
    node11466 [shape=cds, label=<<font color="black">%3 = clo&lt;IsAccessorDescriptor&gt;(desc)</font>> color="black" fillcolor="white", style=filled]
    node11466 -> node11467 [color="black"]
    node11470_name [shape=none, label=<<font color="black">Call[11470]</font>>]
    node11470_name -> node11470 [arrowhead=none, color="black", style=dashed]
    node11470 [shape=cds, label=<<font color="black">%4 = O-&gt;GetPrototypeOf()</font>> color="black" fillcolor="white", style=filled]
    node11470 -> node11471 [color="black"]
    node11467_name [shape=none, label=<<font color="black">Branch[11467]</font>>]
    node11467_name -> node11467 [arrowhead=none, color="black", style=dashed]
    node11467 [shape=diamond, label=<<font color="black">(= %3 true)</font>> color="black" fillcolor="white", style=filled]
    node11467 -> node11468 [label=<<font color="black">true</font>> color="black"]
    node11467 -> node11469 [label=<<font color="black">false</font>> color="black"]
    node11471_name [shape=none, label=<<font color="black">Block[11471]</font>>]
    node11471_name -> node11471 [arrowhead=none, color="black", style=dashed]
    node11471 [shape=box, label=<<font color="black">[0] O = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11471 -> node11472 [color="black"]
    node11468_name [shape=none, label=<<font color="black">Block[11468]</font>>]
    node11468_name -> node11468 [arrowhead=none, color="black", style=dashed]
    node11468 [shape=box, label=<<font color="black">[0] return desc.Get<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11468 -> cluster2031_exit [color="black"]
    node11469_name [shape=none, label=<<font color="black">Block[11469]</font>>]
    node11469_name -> node11469 [arrowhead=none, color="black", style=dashed]
    node11469 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11469 -> cluster2031_exit [color="black"]
    node11472_name [shape=none, label=<<font color="black">Branch[11472]</font>>]
    node11472_name -> node11472 [arrowhead=none, color="black", style=dashed]
    node11472 [shape=diamond, label=<<font color="black">(= O null)</font>> color="black" fillcolor="white", style=filled]
    node11472 -> node11473 [label=<<font color="black">true</font>> color="black"]
    node11472 -> node11462 [label=<<font color="black">false</font>> color="black"]
    node11473_name [shape=none, label=<<font color="black">Block[11473]</font>>]
    node11473_name -> node11473 [arrowhead=none, color="black", style=dashed]
    node11473 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11473 -> cluster2031_exit [color="black"]
  }
}