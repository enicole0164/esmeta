digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2527 {
    label = "def RemoveWaiters(WL: Unknown["WaiterList"], c: Unknown["NonnegativeIntegerOr+âˆž"]): Unknown["ListOfAgentSignifiers"]"
    style = rounded
    cluster2527_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2527_entry_name -> cluster2527_entry [arrowhead=none, color="black", style=dashed]
    cluster2527_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2527_entry -> node17959 [color="black"]
    cluster2527_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2527_exit_name -> cluster2527_exit [arrowhead=none, color="black", style=dashed]
    cluster2527_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17959_name [shape=none, label=<<font color="black">Block[17959]</font>>]
    node17959_name -> node17959 [arrowhead=none, color="black", style=dashed]
    node17959 [shape=box, label=<<font color="black">[0] assert (yet &quot;The calling agent is in the critical section for _WL_.&quot;)<BR ALIGN="LEFT"/>[1] let L = (new [])[#1182]<BR ALIGN="LEFT"/>[2] (yet &quot;Let _S_ be a reference to the list of waiters in _WL_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17959 -> node17960 [color="black"]
    node17960_name [shape=none, label=<<font color="black">Branch[17960]</font>>]
    node17960_name -> node17960 [arrowhead=none, color="black", style=dashed]
    node17960 [shape=diamond, label=<<font color="black">(&amp;&amp; (&lt; 0 c) (! (= S.length 0)))</font>> color="black" fillcolor="white", style=filled]
    node17960 -> node17961 [label=<<font color="black">true</font>> color="black"]
    node17960 -> node17964 [label=<<font color="black">false</font>> color="black"]
    node17961_name [shape=none, label=<<font color="black">Block[17961]</font>>]
    node17961_name -> node17961 [arrowhead=none, color="black", style=dashed]
    node17961 [shape=box, label=<<font color="black">[0] (yet &quot;Let _W_ be the first waiter in _S_.&quot;)<BR ALIGN="LEFT"/>[1] push L &lt; W<BR ALIGN="LEFT"/>[2] (yet &quot;Remove _W_ from _S_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17961 -> node17962 [color="black"]
    node17964_name [shape=none, label=<<font color="black">Block[17964]</font>>]
    node17964_name -> node17964 [arrowhead=none, color="black", style=dashed]
    node17964 [shape=box, label=<<font color="black">[0] return L<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17964 -> cluster2527_exit [color="black"]
    node17962_name [shape=none, label=<<font color="black">Branch[17962]</font>>]
    node17962_name -> node17962 [arrowhead=none, color="black", style=dashed]
    node17962 [shape=diamond, label=<<font color="black">(! (|| (= c NaN) (|| (= c +INF) (= c -INF))))</font>> color="black" fillcolor="white", style=filled]
    node17962 -> node17963 [label=<<font color="black">true</font>> color="black"]
    node17962 -> node17960 [label=<<font color="black">false</font>> color="black"]
    node17963_name [shape=none, label=<<font color="black">Block[17963]</font>>]
    node17963_name -> node17963 [arrowhead=none, color="black", style=dashed]
    node17963 [shape=box, label=<<font color="black">[0] c = (- c 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17963 -> node17960 [color="black"]
  }
}