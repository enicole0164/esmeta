digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2067 {
    label = "def <BUILTIN>:INTRINSICS.Number.prototype.toString(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2067_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2067_entry_name -> cluster2067_entry [arrowhead=none, color="black", style=dashed]
    cluster2067_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2067_entry -> node11921 [color="black"]
    cluster2067_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2067_exit_name -> cluster2067_exit [arrowhead=none, color="black", style=dashed]
    cluster2067_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11921_name [shape=none, label=<<font color="black">Branch[11921]</font>>]
    node11921_name -> node11921 [arrowhead=none, color="black", style=dashed]
    node11921 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11921 -> node11922 [label=<<font color="black">true</font>> color="black"]
    node11921 -> node11923 [label=<<font color="black">false</font>> color="black"]
    node11922_name [shape=none, label=<<font color="black">Block[11922]</font>>]
    node11922_name -> node11922 [arrowhead=none, color="black", style=dashed]
    node11922 [shape=box, label=<<font color="black">[0] let radix = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11922 -> node11924 [color="black"]
    node11923_name [shape=none, label=<<font color="black">Block[11923]</font>>]
    node11923_name -> node11923 [arrowhead=none, color="black", style=dashed]
    node11923 [shape=box, label=<<font color="black">[0] let radix = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11923 -> node11924 [color="black"]
    node11924_name [shape=none, label=<<font color="black">Call[11924]</font>>]
    node11924_name -> node11924 [arrowhead=none, color="black", style=dashed]
    node11924 [shape=cds, label=<<font color="black">%0 = clo&lt;thisNumberValue&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node11924 -> node11925 [color="black"]
    node11925_name [shape=none, label=<<font color="black">Block[11925]</font>>]
    node11925_name -> node11925 [arrowhead=none, color="black", style=dashed]
    node11925 [shape=box, label=<<font color="black">[0] let x = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11925 -> node11926 [color="black"]
    node11926_name [shape=none, label=<<font color="black">Branch[11926]</font>>]
    node11926_name -> node11926 [arrowhead=none, color="black", style=dashed]
    node11926 [shape=diamond, label=<<font color="black">(= radix undefined)</font>> color="black" fillcolor="white", style=filled]
    node11926 -> node11927 [label=<<font color="black">true</font>> color="black"]
    node11926 -> node11928 [label=<<font color="black">false</font>> color="black"]
    node11927_name [shape=none, label=<<font color="black">Block[11927]</font>>]
    node11927_name -> node11927 [arrowhead=none, color="black", style=dashed]
    node11927 [shape=box, label=<<font color="black">[0] let radixMV = 10<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11927 -> node11930 [color="black"]
    node11928_name [shape=none, label=<<font color="black">Call[11928]</font>>]
    node11928_name -> node11928 [arrowhead=none, color="black", style=dashed]
    node11928 [shape=cds, label=<<font color="black">%1 = clo&lt;ToIntegerOrInfinity&gt;(radix)</font>> color="black" fillcolor="white", style=filled]
    node11928 -> node11929 [color="black"]
    node11930_name [shape=none, label=<<font color="black">Branch[11930]</font>>]
    node11930_name -> node11930 [arrowhead=none, color="black", style=dashed]
    node11930 [shape=diamond, label=<<font color="black">(|| (&lt; radixMV 2) (&lt; 36 radixMV))</font>> color="black" fillcolor="white", style=filled]
    node11930 -> node11931 [label=<<font color="black">true</font>> color="black"]
    node11930 -> node11932 [label=<<font color="black">false</font>> color="black"]
    node11929_name [shape=none, label=<<font color="black">Block[11929]</font>>]
    node11929_name -> node11929 [arrowhead=none, color="black", style=dashed]
    node11929 [shape=box, label=<<font color="black">[0] let radixMV = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11929 -> node11930 [color="black"]
    node11931_name [shape=none, label=<<font color="black">Block[11931]</font>>]
    node11931_name -> node11931 [arrowhead=none, color="black", style=dashed]
    node11931 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%RangeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#930])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11931 -> cluster2067_exit [color="black"]
    node11932_name [shape=none, label=<<font color="black">Branch[11932]</font>>]
    node11932_name -> node11932 [arrowhead=none, color="black", style=dashed]
    node11932 [shape=diamond, label=<<font color="black">(== radixMV 10)</font>> color="black" fillcolor="white", style=filled]
    node11932 -> node11933 [label=<<font color="black">true</font>> color="black"]
    node11932 -> node11935 [label=<<font color="black">false</font>> color="black"]
    node11933_name [shape=none, label=<<font color="black">Call[11933]</font>>]
    node11933_name -> node11933 [arrowhead=none, color="black", style=dashed]
    node11933 [shape=cds, label=<<font color="black">%2 = clo&lt;ToString&gt;(x)</font>> color="black" fillcolor="white", style=filled]
    node11933 -> node11934 [color="black"]
    node11935_name [shape=none, label=<<font color="black">Block[11935]</font>>]
    node11935_name -> node11935 [arrowhead=none, color="black", style=dashed]
    node11935 [shape=box, label=<<font color="black">[0] return ([str radixMV] x)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11935 -> cluster2067_exit [color="black"]
    node11934_name [shape=none, label=<<font color="black">Block[11934]</font>>]
    node11934_name -> node11934 [arrowhead=none, color="black", style=dashed]
    node11934 [shape=box, label=<<font color="black">[0] return [! %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11934 -> cluster2067_exit [color="black"]
  }
}