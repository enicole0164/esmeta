digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2280 {
    label = "def <SYNTAX>:CharacterClass[1,0].CompileCharacterClass(this: Ast:CharacterClass[1,0]): Unknown["RecordWithFields[[CharSet]](aCharSet)And[[Invert]](aBoolean)"]"
    style = rounded
    cluster2280_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2280_entry_name -> cluster2280_entry [arrowhead=none, color="black", style=dashed]
    cluster2280_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2280_entry -> node14027 [color="black"]
    cluster2280_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2280_exit_name -> cluster2280_exit [arrowhead=none, color="black", style=dashed]
    cluster2280_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node14027_name [shape=none, label=<<font color="black">Call[14027]</font>>]
    node14027_name -> node14027 [arrowhead=none, color="black", style=dashed]
    node14027 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;CompileToCharSet()</font>> color="black" fillcolor="white", style=filled]
    node14027 -> node14028 [color="black"]
    node14028_name [shape=none, label=<<font color="black">Block[14028]</font>>]
    node14028_name -> node14028 [arrowhead=none, color="black", style=dashed]
    node14028 [shape=box, label=<<font color="black">[0] let A = %0<BR ALIGN="LEFT"/>[1] return (new Record(&quot;CharSet&quot; -&gt; A, &quot;Invert&quot; -&gt; true))[#984]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14028 -> cluster2280_exit [color="black"]
  }
}