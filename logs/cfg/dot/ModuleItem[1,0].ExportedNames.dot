digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1937 {
    label = "def <SYNTAX>:ModuleItem[1,0].ExportedNames(this: Ast:ModuleItem[1,0]): List[String]"
    style = rounded
    cluster1937_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1937_entry_name -> cluster1937_entry [arrowhead=none, color="black", style=dashed]
    cluster1937_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1937_entry -> node10595 [color="black"]
    cluster1937_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1937_exit_name -> cluster1937_exit [arrowhead=none, color="black", style=dashed]
    cluster1937_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node10595_name [shape=none, label=<<font color="black">Call[10595]</font>>]
    node10595_name -> node10595 [arrowhead=none, color="black", style=dashed]
    node10595 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;ExportedNames()</font>> color="black" fillcolor="white", style=filled]
    node10595 -> node10596 [color="black"]
    node10596_name [shape=none, label=<<font color="black">Block[10596]</font>>]
    node10596_name -> node10596 [arrowhead=none, color="black", style=dashed]
    node10596 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10596 -> cluster1937_exit [color="black"]
  }
}