digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1293 {
    label = "def <SYNTAX>:OptionalChain[6,0].ChainEvaluation(this: Ast:OptionalChain[6,0], baseValue: Unknown, baseReference: Unknown): Normal[ESValue] | Abrupt"
    style = rounded
    cluster1293_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1293_entry_name -> cluster1293_entry [arrowhead=none, color="black", style=dashed]
    cluster1293_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1293_entry -> node6072 [color="black"]
    cluster1293_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1293_exit_name -> cluster1293_exit [arrowhead=none, color="black", style=dashed]
    cluster1293_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6072_name [shape=none, label=<<font color="black">Block[6072]</font>>]
    node6072_name -> node6072 [arrowhead=none, color="black", style=dashed]
    node6072 [shape=box, label=<<font color="black">[0] let optionalChain = this[0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6072 -> node6073 [color="black"]
    node6073_name [shape=none, label=<<font color="black">Call[6073]</font>>]
    node6073_name -> node6073 [arrowhead=none, color="black", style=dashed]
    node6073 [shape=cds, label=<<font color="black">%0 = optionalChain-&gt;ChainEvaluation(baseValue, baseReference)</font>> color="black" fillcolor="white", style=filled]
    node6073 -> node6074 [color="black"]
    node6074_name [shape=none, label=<<font color="black">Block[6074]</font>>]
    node6074_name -> node6074 [arrowhead=none, color="black", style=dashed]
    node6074 [shape=box, label=<<font color="black">[0] let newReference = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6074 -> node6075 [color="black"]
    node6075_name [shape=none, label=<<font color="black">Call[6075]</font>>]
    node6075_name -> node6075 [arrowhead=none, color="black", style=dashed]
    node6075 [shape=cds, label=<<font color="black">%1 = clo&lt;GetValue&gt;(newReference)</font>> color="black" fillcolor="white", style=filled]
    node6075 -> node6076 [color="black"]
    node6076_name [shape=none, label=<<font color="black">Block[6076]</font>>]
    node6076_name -> node6076 [arrowhead=none, color="black", style=dashed]
    node6076 [shape=box, label=<<font color="black">[0] let newValue = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6076 -> node6077 [color="black"]
    node6077_name [shape=none, label=<<font color="black">Branch[6077]</font>>]
    node6077_name -> node6077 [arrowhead=none, color="black", style=dashed]
    node6077 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white", style=filled]
    node6077 -> node6078 [label=<<font color="black">true</font>> color="black"]
    node6077 -> node6079 [label=<<font color="black">false</font>> color="black"]
    node6078_name [shape=none, label=<<font color="black">Block[6078]</font>>]
    node6078_name -> node6078 [arrowhead=none, color="black", style=dashed]
    node6078 [shape=box, label=<<font color="black">[0] let strict = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6078 -> node6080 [color="black"]
    node6079_name [shape=none, label=<<font color="black">Block[6079]</font>>]
    node6079_name -> node6079 [arrowhead=none, color="black", style=dashed]
    node6079 [shape=box, label=<<font color="black">[0] let strict = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6079 -> node6080 [color="black"]
    node6080_name [shape=none, label=<<font color="black">Call[6080]</font>>]
    node6080_name -> node6080 [arrowhead=none, color="black", style=dashed]
    node6080 [shape=cds, label=<<font color="black">%2 = clo&lt;EvaluatePropertyAccessWithExpressionKey&gt;(newValue, this[1], strict)</font>> color="black" fillcolor="white", style=filled]
    node6080 -> node6081 [color="black"]
    node6081_name [shape=none, label=<<font color="black">Block[6081]</font>>]
    node6081_name -> node6081 [arrowhead=none, color="black", style=dashed]
    node6081 [shape=box, label=<<font color="black">[0] return [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6081 -> cluster1293_exit [color="black"]
  }
}