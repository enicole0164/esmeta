digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2628 {
    label = "def AsyncGeneratorValidate(generator: Unknown, generatorBrand: Unknown): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster2628_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2628_entry_name -> cluster2628_entry [arrowhead=none, color="black", style=dashed]
    cluster2628_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2628_entry -> node19500 [color="black"]
    cluster2628_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2628_exit_name -> cluster2628_exit [arrowhead=none, color="black", style=dashed]
    cluster2628_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node19500_name [shape=none, label=<<font color="black">Call[19500]</font>>]
    node19500_name -> node19500 [arrowhead=none, color="black", style=dashed]
    node19500 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireInternalSlot&gt;(generator, &quot;AsyncGeneratorContext&quot;)</font>> color="black" fillcolor="white", style=filled]
    node19500 -> node19501 [color="black"]
    node19501_name [shape=none, label=<<font color="black">Block[19501]</font>>]
    node19501_name -> node19501 [arrowhead=none, color="black", style=dashed]
    node19501 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19501 -> node19502 [color="black"]
    node19502_name [shape=none, label=<<font color="black">Call[19502]</font>>]
    node19502_name -> node19502 [arrowhead=none, color="black", style=dashed]
    node19502 [shape=cds, label=<<font color="black">%1 = clo&lt;RequireInternalSlot&gt;(generator, &quot;AsyncGeneratorState&quot;)</font>> color="black" fillcolor="white", style=filled]
    node19502 -> node19503 [color="black"]
    node19503_name [shape=none, label=<<font color="black">Block[19503]</font>>]
    node19503_name -> node19503 [arrowhead=none, color="black", style=dashed]
    node19503 [shape=box, label=<<font color="black">[0] [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19503 -> node19504 [color="black"]
    node19504_name [shape=none, label=<<font color="black">Call[19504]</font>>]
    node19504_name -> node19504 [arrowhead=none, color="black", style=dashed]
    node19504 [shape=cds, label=<<font color="black">%2 = clo&lt;RequireInternalSlot&gt;(generator, &quot;AsyncGeneratorQueue&quot;)</font>> color="black" fillcolor="white", style=filled]
    node19504 -> node19505 [color="black"]
    node19505_name [shape=none, label=<<font color="black">Block[19505]</font>>]
    node19505_name -> node19505 [arrowhead=none, color="black", style=dashed]
    node19505 [shape=box, label=<<font color="black">[0] [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19505 -> node19506 [color="black"]
    node19506_name [shape=none, label=<<font color="black">Branch[19506]</font>>]
    node19506_name -> node19506 [arrowhead=none, color="black", style=dashed]
    node19506 [shape=diamond, label=<<font color="black">(! (= generator.GeneratorBrand generatorBrand))</font>> color="black" fillcolor="white", style=filled]
    node19506 -> node19507 [label=<<font color="black">true</font>> color="black"]
    node19506 -> node19508 [label=<<font color="black">false</font>> color="black"]
    node19507_name [shape=none, label=<<font color="black">Block[19507]</font>>]
    node19507_name -> node19507 [arrowhead=none, color="black", style=dashed]
    node19507 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1329])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19507 -> cluster2628_exit [color="black"]
    node19508_name [shape=none, label=<<font color="black">Block[19508]</font>>]
    node19508_name -> node19508 [arrowhead=none, color="black", style=dashed]
    node19508 [shape=box, label=<<font color="black">[0] return ~unused~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19508 -> cluster2628_exit [color="black"]
  }
}