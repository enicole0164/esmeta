digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster110 {
    label = "def ToPropertyKey(argument: Unknown): Normal[Symbol | String] | Abrupt"
    style = rounded
    cluster110_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster110_entry_name -> cluster110_entry [arrowhead=none, color="black", style=dashed]
    cluster110_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster110_entry -> node842 [color="black"]
    cluster110_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster110_exit_name -> cluster110_exit [arrowhead=none, color="black", style=dashed]
    cluster110_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node842_name [shape=none, label=<<font color="black">Call[842]</font>>]
    node842_name -> node842 [arrowhead=none, color="black", style=dashed]
    node842 [shape=cds, label=<<font color="black">%0 = clo&lt;ToPrimitive&gt;(argument, ~string~)</font>> color="black" fillcolor="white", style=filled]
    node842 -> node843 [color="black"]
    node843_name [shape=none, label=<<font color="black">Block[843]</font>>]
    node843_name -> node843 [arrowhead=none, color="black", style=dashed]
    node843 [shape=box, label=<<font color="black">[0] let key = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node843 -> node844 [color="black"]
    node844_name [shape=none, label=<<font color="black">Branch[844]</font>>]
    node844_name -> node844 [arrowhead=none, color="black", style=dashed]
    node844 [shape=diamond, label=<<font color="black">(= (typeof key) @Symbol)</font>> color="black" fillcolor="white", style=filled]
    node844 -> node845 [label=<<font color="black">true</font>> color="black"]
    node844 -> node846 [label=<<font color="black">false</font>> color="black"]
    node845_name [shape=none, label=<<font color="black">Block[845]</font>>]
    node845_name -> node845 [arrowhead=none, color="black", style=dashed]
    node845 [shape=box, label=<<font color="black">[0] return key<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node845 -> cluster110_exit [color="black"]
    node846_name [shape=none, label=<<font color="black">Call[846]</font>>]
    node846_name -> node846 [arrowhead=none, color="black", style=dashed]
    node846 [shape=cds, label=<<font color="black">%1 = clo&lt;ToString&gt;(key)</font>> color="black" fillcolor="white", style=filled]
    node846 -> node847 [color="black"]
    node847_name [shape=none, label=<<font color="black">Block[847]</font>>]
    node847_name -> node847 [arrowhead=none, color="black", style=dashed]
    node847 [shape=box, label=<<font color="black">[0] return [! %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node847 -> cluster110_exit [color="black"]
  }
}