digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1762 {
    label = "def <SYNTAX>:ReturnStatement[1,0].HasCallInTailPosition(this: Ast:ReturnStatement[1,0], call: Unknown): Boolean"
    style = rounded
    cluster1762_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1762_entry_name -> cluster1762_entry [arrowhead=none, color="black", style=dashed]
    cluster1762_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1762_entry -> node9760 [color="black"]
    cluster1762_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1762_exit_name -> cluster1762_exit [arrowhead=none, color="black", style=dashed]
    cluster1762_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9760_name [shape=none, label=<<font color="black">Call[9760]</font>>]
    node9760_name -> node9760 [arrowhead=none, color="black", style=dashed]
    node9760 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9760 -> node9761 [color="black"]
    node9761_name [shape=none, label=<<font color="black">Block[9761]</font>>]
    node9761_name -> node9761 [arrowhead=none, color="black", style=dashed]
    node9761 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9761 -> cluster1762_exit [color="black"]
  }
}