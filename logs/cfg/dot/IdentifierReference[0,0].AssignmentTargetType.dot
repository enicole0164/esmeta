digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster877 {
    label = "def <SYNTAX>:IdentifierReference[0,0].AssignmentTargetType(this: Ast:IdentifierReference[0,0]): Const[~invalid~, ~simple~]"
    style = rounded
    cluster877_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster877_entry_name -> cluster877_entry [arrowhead=none, color="black", style=dashed]
    cluster877_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster877_entry -> node3472 [color="black"]
    cluster877_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster877_exit_name -> cluster877_exit [arrowhead=none, color="black", style=dashed]
    cluster877_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3472_name [shape=none, label=<<font color="black">Block[3472]</font>>]
    node3472_name -> node3472 [arrowhead=none, color="black", style=dashed]
    node3472 [shape=box, label=<<font color="black">[0] (yet &quot;If this |IdentifierReference| is contained in strict mode code and StringValue of |Identifier| is *\&quot;eval\&quot;* or *\&quot;arguments\&quot;*, return ~invalid~.&quot;)<BR ALIGN="LEFT"/>[1] return ~simple~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3472 -> cluster877_exit [color="black"]
  }
}