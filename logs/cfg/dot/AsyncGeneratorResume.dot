digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2632 {
    label = "def AsyncGeneratorResume(generator: Unknown["AsyncGenerator"], completion: Normal): Const[~unused~]"
    style = rounded
    cluster2632_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2632_entry_name -> cluster2632_entry [arrowhead=none, color="black", style=dashed]
    cluster2632_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2632_entry -> node19525 [color="black"]
    cluster2632_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2632_exit_name -> cluster2632_exit [arrowhead=none, color="black", style=dashed]
    cluster2632_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node19525_name [shape=none, label=<<font color="black">Block[19525]</font>>]
    node19525_name -> node19525 [arrowhead=none, color="black", style=dashed]
    node19525 [shape=box, label=<<font color="black">[0] assert (|| (= generator.AsyncGeneratorState ~suspendedStart~) (= generator.AsyncGeneratorState ~suspendedYield~))<BR ALIGN="LEFT"/>[1] let genContext = generator.AsyncGeneratorContext<BR ALIGN="LEFT"/>[2] let callerContext = @EXECUTION_STACK[0]<BR ALIGN="LEFT"/>[3] nop<BR ALIGN="LEFT"/>[4] generator.AsyncGeneratorState = ~executing~<BR ALIGN="LEFT"/>[5] push genContext &gt; @EXECUTION_STACK<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19525 -> node19526 [color="black"]
    node19526_name [shape=none, label=<<font color="black">Branch[19526]</font>>]
    node19526_name -> node19526 [arrowhead=none, color="black", style=dashed]
    node19526 [shape=diamond, label=<<font color="black">(= genContext.ReturnCont absent)</font>> color="black" fillcolor="white", style=filled]
    node19526 -> node19527 [label=<<font color="black">true</font>> color="black"]
    node19526 -> node19528 [label=<<font color="black">false</font>> color="black"]
    node19527_name [shape=none, label=<<font color="black">Block[19527]</font>>]
    node19527_name -> node19527 [arrowhead=none, color="black", style=dashed]
    node19527 [shape=box, label=<<font color="black">[0] genContext.ReturnCont = (new [])[#1333]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19527 -> node19528 [color="black"]
    node19528_name [shape=none, label=<<font color="black">Block[19528]</font>>]
    node19528_name -> node19528 [arrowhead=none, color="black", style=dashed]
    node19528 [shape=box, label=<<font color="black">[0] push cont&lt;AsyncGeneratorResume:cont0&gt; &gt; genContext.ReturnCont<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19528 -> node19529 [color="black"]
    node19529_name [shape=none, label=<<font color="black">Call[19529]</font>>]
    node19529_name -> node19529 [arrowhead=none, color="black", style=dashed]
    node19529 [shape=cds, label=<<font color="black">%0 = genContext.ResumeCont(completion)</font>> color="black" fillcolor="white", style=filled]
    node19529 -> cluster2632_exit [color="black"]
  }
}