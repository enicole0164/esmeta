digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1633 {
    label = "def <SYNTAX>:ClassElementList[0,0].PrototypePropertyNameList(this: Ast:ClassElementList[0,0]): List[Symbol | String]"
    style = rounded
    cluster1633_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1633_entry_name -> cluster1633_entry [arrowhead=none, color="black", style=dashed]
    cluster1633_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1633_entry -> node8817 [color="black"]
    cluster1633_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1633_exit_name -> cluster1633_exit [arrowhead=none, color="black", style=dashed]
    cluster1633_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8817_name [shape=none, label=<<font color="black">Call[8817]</font>>]
    node8817_name -> node8817 [arrowhead=none, color="black", style=dashed]
    node8817 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;PropName()</font>> color="black" fillcolor="white", style=filled]
    node8817 -> node8818 [color="black"]
    node8818_name [shape=none, label=<<font color="black">Block[8818]</font>>]
    node8818_name -> node8818 [arrowhead=none, color="black", style=dashed]
    node8818 [shape=box, label=<<font color="black">[0] let propName = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8818 -> node8819 [color="black"]
    node8819_name [shape=none, label=<<font color="black">Branch[8819]</font>>]
    node8819_name -> node8819 [arrowhead=none, color="black", style=dashed]
    node8819 [shape=diamond, label=<<font color="black">(= propName ~empty~)</font>> color="black" fillcolor="white", style=filled]
    node8819 -> node8820 [label=<<font color="black">true</font>> color="black"]
    node8819 -> node8821 [label=<<font color="black">false</font>> color="black"]
    node8820_name [shape=none, label=<<font color="black">Block[8820]</font>>]
    node8820_name -> node8820 [arrowhead=none, color="black", style=dashed]
    node8820 [shape=box, label=<<font color="black">[0] return (new [])[#677]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8820 -> cluster1633_exit [color="black"]
    node8821_name [shape=none, label=<<font color="black">Call[8821]</font>>]
    node8821_name -> node8821 [arrowhead=none, color="black", style=dashed]
    node8821 [shape=cds, label=<<font color="black">%1 = this[0]-&gt;IsStatic()</font>> color="black" fillcolor="white", style=filled]
    node8821 -> node8822 [color="black"]
    node8822_name [shape=none, label=<<font color="black">Branch[8822]</font>>]
    node8822_name -> node8822 [arrowhead=none, color="black", style=dashed]
    node8822 [shape=diamond, label=<<font color="black">(= %1 true)</font>> color="black" fillcolor="white", style=filled]
    node8822 -> node8823 [label=<<font color="black">true</font>> color="black"]
    node8822 -> node8824 [label=<<font color="black">false</font>> color="black"]
    node8823_name [shape=none, label=<<font color="black">Block[8823]</font>>]
    node8823_name -> node8823 [arrowhead=none, color="black", style=dashed]
    node8823 [shape=box, label=<<font color="black">[0] return (new [])[#678]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8823 -> cluster1633_exit [color="black"]
    node8824_name [shape=none, label=<<font color="black">Block[8824]</font>>]
    node8824_name -> node8824 [arrowhead=none, color="black", style=dashed]
    node8824 [shape=box, label=<<font color="black">[0] return (new [propName])[#679]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8824 -> cluster1633_exit [color="black"]
  }
}