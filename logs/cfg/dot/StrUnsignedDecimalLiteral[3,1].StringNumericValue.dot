digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster96 {
    label = "def <SYNTAX>:StrUnsignedDecimalLiteral[3,1].StringNumericValue(this: Ast:StrUnsignedDecimalLiteral[3,1]): Number"
    style = rounded
    cluster96_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster96_entry_name -> cluster96_entry [arrowhead=none, color="black", style=dashed]
    cluster96_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster96_entry -> node721 [color="black"]
    cluster96_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster96_exit_name -> cluster96_exit [arrowhead=none, color="black", style=dashed]
    cluster96_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node721_name [shape=none, label=<<font color="black">Call[721]</font>>]
    node721_name -> node721 [arrowhead=none, color="black", style=dashed]
    node721 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;MV()</font>> color="black" fillcolor="white", style=filled]
    node721 -> node722 [color="black"]
    node722_name [shape=none, label=<<font color="black">Block[722]</font>>]
    node722_name -> node722 [arrowhead=none, color="black", style=dashed]
    node722 [shape=box, label=<<font color="black">[0] let a = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node722 -> node723 [color="black"]
    node723_name [shape=none, label=<<font color="black">Branch[723]</font>>]
    node723_name -> node723 [arrowhead=none, color="black", style=dashed]
    node723 [shape=diamond, label=<<font color="black">(! (= this[1] absent))</font>> color="black" fillcolor="white", style=filled]
    node723 -> node724 [label=<<font color="black">true</font>> color="black"]
    node723 -> node726 [label=<<font color="black">false</font>> color="black"]
    node724_name [shape=none, label=<<font color="black">Call[724]</font>>]
    node724_name -> node724 [arrowhead=none, color="black", style=dashed]
    node724 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;MV()</font>> color="black" fillcolor="white", style=filled]
    node724 -> node725 [color="black"]
    node726_name [shape=none, label=<<font color="black">Block[726]</font>>]
    node726_name -> node726 [arrowhead=none, color="black", style=dashed]
    node726 [shape=box, label=<<font color="black">[0] let e = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node726 -> node727 [color="black"]
    node725_name [shape=none, label=<<font color="black">Block[725]</font>>]
    node725_name -> node725 [arrowhead=none, color="black", style=dashed]
    node725 [shape=box, label=<<font color="black">[0] let e = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node725 -> node727 [color="black"]
    node727_name [shape=none, label=<<font color="black">Call[727]</font>>]
    node727_name -> node727 [arrowhead=none, color="black", style=dashed]
    node727 [shape=cds, label=<<font color="black">%2 = clo&lt;RoundMVResult&gt;((* a (** 10 e)))</font>> color="black" fillcolor="white", style=filled]
    node727 -> node728 [color="black"]
    node728_name [shape=none, label=<<font color="black">Block[728]</font>>]
    node728_name -> node728 [arrowhead=none, color="black", style=dashed]
    node728 [shape=box, label=<<font color="black">[0] return %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node728 -> cluster96_exit [color="black"]
  }
}