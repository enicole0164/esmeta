digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2371 {
    label = "def <BUILTIN>:INTRINSICS.Array.prototype.some(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2371_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2371_entry_name -> cluster2371_entry [arrowhead=none, color="black", style=dashed]
    cluster2371_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2371_entry -> node15567 [color="black"]
    cluster2371_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2371_exit_name -> cluster2371_exit [arrowhead=none, color="black", style=dashed]
    cluster2371_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node15567_name [shape=none, label=<<font color="black">Branch[15567]</font>>]
    node15567_name -> node15567 [arrowhead=none, color="black", style=dashed]
    node15567 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node15567 -> node15568 [label=<<font color="black">true</font>> color="black"]
    node15567 -> node15569 [label=<<font color="black">false</font>> color="black"]
    node15568_name [shape=none, label=<<font color="black">Block[15568]</font>>]
    node15568_name -> node15568 [arrowhead=none, color="black", style=dashed]
    node15568 [shape=box, label=<<font color="black">[0] let callbackfn = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15568 -> node15570 [color="black"]
    node15569_name [shape=none, label=<<font color="black">Block[15569]</font>>]
    node15569_name -> node15569 [arrowhead=none, color="black", style=dashed]
    node15569 [shape=box, label=<<font color="black">[0] let callbackfn = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15569 -> node15570 [color="black"]
    node15570_name [shape=none, label=<<font color="black">Branch[15570]</font>>]
    node15570_name -> node15570 [arrowhead=none, color="black", style=dashed]
    node15570 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node15570 -> node15571 [label=<<font color="black">true</font>> color="black"]
    node15570 -> node15572 [label=<<font color="black">false</font>> color="black"]
    node15571_name [shape=none, label=<<font color="black">Block[15571]</font>>]
    node15571_name -> node15571 [arrowhead=none, color="black", style=dashed]
    node15571 [shape=box, label=<<font color="black">[0] let thisArg = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15571 -> node15573 [color="black"]
    node15572_name [shape=none, label=<<font color="black">Block[15572]</font>>]
    node15572_name -> node15572 [arrowhead=none, color="black", style=dashed]
    node15572 [shape=box, label=<<font color="black">[0] let thisArg = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15572 -> node15573 [color="black"]
    node15573_name [shape=none, label=<<font color="black">Call[15573]</font>>]
    node15573_name -> node15573 [arrowhead=none, color="black", style=dashed]
    node15573 [shape=cds, label=<<font color="black">%0 = clo&lt;ToObject&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node15573 -> node15574 [color="black"]
    node15574_name [shape=none, label=<<font color="black">Block[15574]</font>>]
    node15574_name -> node15574 [arrowhead=none, color="black", style=dashed]
    node15574 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15574 -> node15575 [color="black"]
    node15575_name [shape=none, label=<<font color="black">Call[15575]</font>>]
    node15575_name -> node15575 [arrowhead=none, color="black", style=dashed]
    node15575 [shape=cds, label=<<font color="black">%1 = clo&lt;LengthOfArrayLike&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node15575 -> node15576 [color="black"]
    node15576_name [shape=none, label=<<font color="black">Block[15576]</font>>]
    node15576_name -> node15576 [arrowhead=none, color="black", style=dashed]
    node15576 [shape=box, label=<<font color="black">[0] let len = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15576 -> node15577 [color="black"]
    node15577_name [shape=none, label=<<font color="black">Call[15577]</font>>]
    node15577_name -> node15577 [arrowhead=none, color="black", style=dashed]
    node15577 [shape=cds, label=<<font color="black">%2 = clo&lt;IsCallable&gt;(callbackfn)</font>> color="black" fillcolor="white", style=filled]
    node15577 -> node15578 [color="black"]
    node15578_name [shape=none, label=<<font color="black">Branch[15578]</font>>]
    node15578_name -> node15578 [arrowhead=none, color="black", style=dashed]
    node15578 [shape=diamond, label=<<font color="black">(= %2 false)</font>> color="black" fillcolor="white", style=filled]
    node15578 -> node15579 [label=<<font color="black">true</font>> color="black"]
    node15578 -> node15580 [label=<<font color="black">false</font>> color="black"]
    node15579_name [shape=none, label=<<font color="black">Block[15579]</font>>]
    node15579_name -> node15579 [arrowhead=none, color="black", style=dashed]
    node15579 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1043])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15579 -> cluster2371_exit [color="black"]
    node15580_name [shape=none, label=<<font color="black">Block[15580]</font>>]
    node15580_name -> node15580 [arrowhead=none, color="black", style=dashed]
    node15580 [shape=box, label=<<font color="black">[0] let k = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15580 -> node15581 [color="black"]
    node15581_name [shape=none, label=<<font color="black">Branch[15581]</font>>]
    node15581_name -> node15581 [arrowhead=none, color="black", style=dashed]
    node15581 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white", style=filled]
    node15581 -> node15582 [label=<<font color="black">true</font>> color="black"]
    node15581 -> node15595 [label=<<font color="black">false</font>> color="black"]
    node15582_name [shape=none, label=<<font color="black">Call[15582]</font>>]
    node15582_name -> node15582 [arrowhead=none, color="black", style=dashed]
    node15582 [shape=cds, label=<<font color="black">%3 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node15582 -> node15583 [color="black"]
    node15595_name [shape=none, label=<<font color="black">Block[15595]</font>>]
    node15595_name -> node15595 [arrowhead=none, color="black", style=dashed]
    node15595 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15595 -> cluster2371_exit [color="black"]
    node15583_name [shape=none, label=<<font color="black">Block[15583]</font>>]
    node15583_name -> node15583 [arrowhead=none, color="black", style=dashed]
    node15583 [shape=box, label=<<font color="black">[0] let Pk = [! %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15583 -> node15584 [color="black"]
    node15584_name [shape=none, label=<<font color="black">Call[15584]</font>>]
    node15584_name -> node15584 [arrowhead=none, color="black", style=dashed]
    node15584 [shape=cds, label=<<font color="black">%4 = clo&lt;HasProperty&gt;(O, Pk)</font>> color="black" fillcolor="white", style=filled]
    node15584 -> node15585 [color="black"]
    node15585_name [shape=none, label=<<font color="black">Block[15585]</font>>]
    node15585_name -> node15585 [arrowhead=none, color="black", style=dashed]
    node15585 [shape=box, label=<<font color="black">[0] let kPresent = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15585 -> node15586 [color="black"]
    node15586_name [shape=none, label=<<font color="black">Branch[15586]</font>>]
    node15586_name -> node15586 [arrowhead=none, color="black", style=dashed]
    node15586 [shape=diamond, label=<<font color="black">(= kPresent true)</font>> color="black" fillcolor="white", style=filled]
    node15586 -> node15587 [label=<<font color="black">true</font>> color="black"]
    node15586 -> node15594 [label=<<font color="black">false</font>> color="black"]
    node15587_name [shape=none, label=<<font color="black">Call[15587]</font>>]
    node15587_name -> node15587 [arrowhead=none, color="black", style=dashed]
    node15587 [shape=cds, label=<<font color="black">%5 = clo&lt;Get&gt;(O, Pk)</font>> color="black" fillcolor="white", style=filled]
    node15587 -> node15588 [color="black"]
    node15594_name [shape=none, label=<<font color="black">Block[15594]</font>>]
    node15594_name -> node15594 [arrowhead=none, color="black", style=dashed]
    node15594 [shape=box, label=<<font color="black">[0] k = (+ k 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15594 -> node15581 [color="black"]
    node15588_name [shape=none, label=<<font color="black">Block[15588]</font>>]
    node15588_name -> node15588 [arrowhead=none, color="black", style=dashed]
    node15588 [shape=box, label=<<font color="black">[0] let kValue = [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15588 -> node15589 [color="black"]
    node15589_name [shape=none, label=<<font color="black">Call[15589]</font>>]
    node15589_name -> node15589 [arrowhead=none, color="black", style=dashed]
    node15589 [shape=cds, label=<<font color="black">%6 = clo&lt;Call&gt;(callbackfn, thisArg, (new [kValue, ([number] k), O])[#1044])</font>> color="black" fillcolor="white", style=filled]
    node15589 -> node15590 [color="black"]
    node15590_name [shape=none, label=<<font color="black">Call[15590]</font>>]
    node15590_name -> node15590 [arrowhead=none, color="black", style=dashed]
    node15590 [shape=cds, label=<<font color="black">%7 = clo&lt;ToBoolean&gt;([? %6])</font>> color="black" fillcolor="white", style=filled]
    node15590 -> node15591 [color="black"]
    node15591_name [shape=none, label=<<font color="black">Block[15591]</font>>]
    node15591_name -> node15591 [arrowhead=none, color="black", style=dashed]
    node15591 [shape=box, label=<<font color="black">[0] let testResult = %7<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15591 -> node15592 [color="black"]
    node15592_name [shape=none, label=<<font color="black">Branch[15592]</font>>]
    node15592_name -> node15592 [arrowhead=none, color="black", style=dashed]
    node15592 [shape=diamond, label=<<font color="black">(= testResult true)</font>> color="black" fillcolor="white", style=filled]
    node15592 -> node15593 [label=<<font color="black">true</font>> color="black"]
    node15592 -> node15594 [label=<<font color="black">false</font>> color="black"]
    node15593_name [shape=none, label=<<font color="black">Block[15593]</font>>]
    node15593_name -> node15593 [arrowhead=none, color="black", style=dashed]
    node15593 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15593 -> cluster2371_exit [color="black"]
  }
}