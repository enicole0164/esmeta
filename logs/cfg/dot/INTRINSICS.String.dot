digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2163 {
    label = "def <BUILTIN>:INTRINSICS.String(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2163_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2163_entry_name -> cluster2163_entry [arrowhead=none, color="black", style=dashed]
    cluster2163_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2163_entry -> node13210 [color="black"]
    cluster2163_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2163_exit_name -> cluster2163_exit [arrowhead=none, color="black", style=dashed]
    cluster2163_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node13210_name [shape=none, label=<<font color="black">Branch[13210]</font>>]
    node13210_name -> node13210 [arrowhead=none, color="black", style=dashed]
    node13210 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node13210 -> node13211 [label=<<font color="black">true</font>> color="black"]
    node13210 -> node13212 [label=<<font color="black">false</font>> color="black"]
    node13211_name [shape=none, label=<<font color="black">Block[13211]</font>>]
    node13211_name -> node13211 [arrowhead=none, color="black", style=dashed]
    node13211 [shape=box, label=<<font color="black">[0] let value = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13211 -> node13213 [color="black"]
    node13212_name [shape=none, label=<<font color="black">Block[13212]</font>>]
    node13212_name -> node13212 [arrowhead=none, color="black", style=dashed]
    node13212 [shape=box, label=<<font color="black">[0] let value = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13212 -> node13213 [color="black"]
    node13213_name [shape=none, label=<<font color="black">Branch[13213]</font>>]
    node13213_name -> node13213 [arrowhead=none, color="black", style=dashed]
    node13213 [shape=diamond, label=<<font color="black">(= value absent)</font>> color="black" fillcolor="white", style=filled]
    node13213 -> node13214 [label=<<font color="black">true</font>> color="black"]
    node13213 -> node13215 [label=<<font color="black">false</font>> color="black"]
    node13214_name [shape=none, label=<<font color="black">Block[13214]</font>>]
    node13214_name -> node13214 [arrowhead=none, color="black", style=dashed]
    node13214 [shape=box, label=<<font color="black">[0] let s = &quot;&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13214 -> node13220 [color="black"]
    node13215_name [shape=none, label=<<font color="black">Branch[13215]</font>>]
    node13215_name -> node13215 [arrowhead=none, color="black", style=dashed]
    node13215 [shape=diamond, label=<<font color="black">(&amp;&amp; (= NewTarget undefined) (= (typeof value) @Symbol))</font>> color="black" fillcolor="white", style=filled]
    node13215 -> node13216 [label=<<font color="black">true</font>> color="black"]
    node13215 -> node13218 [label=<<font color="black">false</font>> color="black"]
    node13220_name [shape=none, label=<<font color="black">Branch[13220]</font>>]
    node13220_name -> node13220 [arrowhead=none, color="black", style=dashed]
    node13220 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white", style=filled]
    node13220 -> node13221 [label=<<font color="black">true</font>> color="black"]
    node13220 -> node13222 [label=<<font color="black">false</font>> color="black"]
    node13216_name [shape=none, label=<<font color="black">Call[13216]</font>>]
    node13216_name -> node13216 [arrowhead=none, color="black", style=dashed]
    node13216 [shape=cds, label=<<font color="black">%0 = clo&lt;SymbolDescriptiveString&gt;(value)</font>> color="black" fillcolor="white", style=filled]
    node13216 -> node13217 [color="black"]
    node13218_name [shape=none, label=<<font color="black">Call[13218]</font>>]
    node13218_name -> node13218 [arrowhead=none, color="black", style=dashed]
    node13218 [shape=cds, label=<<font color="black">%1 = clo&lt;ToString&gt;(value)</font>> color="black" fillcolor="white", style=filled]
    node13218 -> node13219 [color="black"]
    node13221_name [shape=none, label=<<font color="black">Block[13221]</font>>]
    node13221_name -> node13221 [arrowhead=none, color="black", style=dashed]
    node13221 [shape=box, label=<<font color="black">[0] return s<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13221 -> cluster2163_exit [color="black"]
    node13222_name [shape=none, label=<<font color="black">Call[13222]</font>>]
    node13222_name -> node13222 [arrowhead=none, color="black", style=dashed]
    node13222 [shape=cds, label=<<font color="black">%2 = clo&lt;GetPrototypeFromConstructor&gt;(NewTarget, &quot;%String.prototype%&quot;)</font>> color="black" fillcolor="white", style=filled]
    node13222 -> node13223 [color="black"]
    node13217_name [shape=none, label=<<font color="black">Block[13217]</font>>]
    node13217_name -> node13217 [arrowhead=none, color="black", style=dashed]
    node13217 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13217 -> cluster2163_exit [color="black"]
    node13219_name [shape=none, label=<<font color="black">Block[13219]</font>>]
    node13219_name -> node13219 [arrowhead=none, color="black", style=dashed]
    node13219 [shape=box, label=<<font color="black">[0] let s = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13219 -> node13220 [color="black"]
    node13223_name [shape=none, label=<<font color="black">Call[13223]</font>>]
    node13223_name -> node13223 [arrowhead=none, color="black", style=dashed]
    node13223 [shape=cds, label=<<font color="black">%3 = clo&lt;StringCreate&gt;(s, [? %2])</font>> color="black" fillcolor="white", style=filled]
    node13223 -> node13224 [color="black"]
    node13224_name [shape=none, label=<<font color="black">Block[13224]</font>>]
    node13224_name -> node13224 [arrowhead=none, color="black", style=dashed]
    node13224 [shape=box, label=<<font color="black">[0] return %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13224 -> cluster2163_exit [color="black"]
  }
}