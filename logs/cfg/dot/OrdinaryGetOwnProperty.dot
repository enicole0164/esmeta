digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1056 {
    label = "def OrdinaryGetOwnProperty(O: Object, P: Symbol | String): PropertyDescriptor | Undefined"
    style = rounded
    cluster1056_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1056_entry_name -> cluster1056_entry [arrowhead=none, color="black", style=dashed]
    cluster1056_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1056_entry -> node3958 [color="black"]
    cluster1056_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1056_exit_name -> cluster1056_exit [arrowhead=none, color="black", style=dashed]
    cluster1056_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3958_name [shape=none, label=<<font color="black">Branch[3958]</font>>]
    node3958_name -> node3958 [arrowhead=none, color="black", style=dashed]
    node3958 [shape=diamond, label=<<font color="black">(= O.SubMap[P] absent)</font>> color="black" fillcolor="white", style=filled]
    node3958 -> node3959 [label=<<font color="black">true</font>> color="black"]
    node3958 -> node3960 [label=<<font color="black">false</font>> color="black"]
    node3959_name [shape=none, label=<<font color="black">Block[3959]</font>>]
    node3959_name -> node3959 [arrowhead=none, color="black", style=dashed]
    node3959 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3959 -> cluster1056_exit [color="black"]
    node3960_name [shape=none, label=<<font color="black">Block[3960]</font>>]
    node3960_name -> node3960 [arrowhead=none, color="black", style=dashed]
    node3960 [shape=box, label=<<font color="black">[0] let D = (new PropertyDescriptor())[#400]<BR ALIGN="LEFT"/>[1] let X = O.SubMap[P]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3960 -> node3961 [color="black"]
    node3961_name [shape=none, label=<<font color="black">Call[3961]</font>>]
    node3961_name -> node3961 [arrowhead=none, color="black", style=dashed]
    node3961 [shape=cds, label=<<font color="black">%0 = clo&lt;IsDataDescriptor&gt;(X)</font>> color="black" fillcolor="white", style=filled]
    node3961 -> node3962 [color="black"]
    node3962_name [shape=none, label=<<font color="black">Branch[3962]</font>>]
    node3962_name -> node3962 [arrowhead=none, color="black", style=dashed]
    node3962 [shape=diamond, label=<<font color="black">%0</font>> color="black" fillcolor="white", style=filled]
    node3962 -> node3963 [label=<<font color="black">true</font>> color="black"]
    node3962 -> node3964 [label=<<font color="black">false</font>> color="black"]
    node3963_name [shape=none, label=<<font color="black">Block[3963]</font>>]
    node3963_name -> node3963 [arrowhead=none, color="black", style=dashed]
    node3963 [shape=box, label=<<font color="black">[0] D.Value = X.Value<BR ALIGN="LEFT"/>[1] D.Writable = X.Writable<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3963 -> node3966 [color="black"]
    node3964_name [shape=none, label=<<font color="black">Call[3964]</font>>]
    node3964_name -> node3964 [arrowhead=none, color="black", style=dashed]
    node3964 [shape=cds, label=<<font color="black">%1 = clo&lt;IsAccessorDescriptor&gt;(X)</font>> color="black" fillcolor="white", style=filled]
    node3964 -> node3965 [color="black"]
    node3966_name [shape=none, label=<<font color="black">Block[3966]</font>>]
    node3966_name -> node3966 [arrowhead=none, color="black", style=dashed]
    node3966 [shape=box, label=<<font color="black">[0] D.Enumerable = X.Enumerable<BR ALIGN="LEFT"/>[1] D.Configurable = X.Configurable<BR ALIGN="LEFT"/>[2] return D<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3966 -> cluster1056_exit [color="black"]
    node3965_name [shape=none, label=<<font color="black">Block[3965]</font>>]
    node3965_name -> node3965 [arrowhead=none, color="black", style=dashed]
    node3965 [shape=box, label=<<font color="black">[0] assert %1<BR ALIGN="LEFT"/>[1] D.Get = X.Get<BR ALIGN="LEFT"/>[2] D.Set = X.Set<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3965 -> node3966 [color="black"]
  }
}