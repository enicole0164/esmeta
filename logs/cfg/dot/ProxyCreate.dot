digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1163 {
    label = "def ProxyCreate(target: Unknown, handler: Unknown): Normal[ProxyExoticObject] | Abrupt"
    style = rounded
    cluster1163_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1163_entry_name -> cluster1163_entry [arrowhead=none, color="black", style=dashed]
    cluster1163_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1163_entry -> node5342 [color="black"]
    cluster1163_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1163_exit_name -> cluster1163_exit [arrowhead=none, color="black", style=dashed]
    cluster1163_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node5342_name [shape=none, label=<<font color="black">Branch[5342]</font>>]
    node5342_name -> node5342 [arrowhead=none, color="black", style=dashed]
    node5342 [shape=diamond, label=<<font color="black">(! (= (typeof target) @Object))</font>> color="black" fillcolor="white", style=filled]
    node5342 -> node5343 [label=<<font color="black">true</font>> color="black"]
    node5342 -> node5344 [label=<<font color="black">false</font>> color="black"]
    node5343_name [shape=none, label=<<font color="black">Block[5343]</font>>]
    node5343_name -> node5343 [arrowhead=none, color="black", style=dashed]
    node5343 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#538])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5343 -> cluster1163_exit [color="black"]
    node5344_name [shape=none, label=<<font color="black">Branch[5344]</font>>]
    node5344_name -> node5344 [arrowhead=none, color="black", style=dashed]
    node5344 [shape=diamond, label=<<font color="black">(! (= (typeof handler) @Object))</font>> color="black" fillcolor="white", style=filled]
    node5344 -> node5345 [label=<<font color="black">true</font>> color="black"]
    node5344 -> node5346 [label=<<font color="black">false</font>> color="black"]
    node5345_name [shape=none, label=<<font color="black">Block[5345]</font>>]
    node5345_name -> node5345 [arrowhead=none, color="black", style=dashed]
    node5345 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#539])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5345 -> cluster1163_exit [color="black"]
    node5346_name [shape=none, label=<<font color="black">Call[5346]</font>>]
    node5346_name -> node5346 [arrowhead=none, color="black", style=dashed]
    node5346 [shape=cds, label=<<font color="black">%0 = clo&lt;MakeBasicObject&gt;((new [&quot;ProxyHandler&quot;, &quot;ProxyTarget&quot;])[#540])</font>> color="black" fillcolor="white", style=filled]
    node5346 -> node5347 [color="black"]
    node5347_name [shape=none, label=<<font color="black">Block[5347]</font>>]
    node5347_name -> node5347 [arrowhead=none, color="black", style=dashed]
    node5347 [shape=box, label=<<font color="black">[0] let P = %0<BR ALIGN="LEFT"/>[1] (yet &quot;Set _P_'s essential internal methods, except for [[Call]] and [[Construct]], to the definitions specified in &lt;emu-xref href=\&quot;#sec-proxy-object-internal-methods-and-internal-slots\&quot;&gt;&lt;/emu-xref&gt;.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5347 -> node5348 [color="black"]
    node5348_name [shape=none, label=<<font color="black">Call[5348]</font>>]
    node5348_name -> node5348 [arrowhead=none, color="black", style=dashed]
    node5348 [shape=cds, label=<<font color="black">%1 = clo&lt;IsCallable&gt;(target)</font>> color="black" fillcolor="white", style=filled]
    node5348 -> node5349 [color="black"]
    node5349_name [shape=none, label=<<font color="black">Branch[5349]</font>>]
    node5349_name -> node5349 [arrowhead=none, color="black", style=dashed]
    node5349 [shape=diamond, label=<<font color="black">(= %1 true)</font>> color="black" fillcolor="white", style=filled]
    node5349 -> node5350 [label=<<font color="black">true</font>> color="black"]
    node5349 -> node5354 [label=<<font color="black">false</font>> color="black"]
    node5350_name [shape=none, label=<<font color="black">Block[5350]</font>>]
    node5350_name -> node5350 [arrowhead=none, color="black", style=dashed]
    node5350 [shape=box, label=<<font color="black">[0] P.Call = clo&lt;ProxyExoticObject.Call&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5350 -> node5351 [color="black"]
    node5354_name [shape=none, label=<<font color="black">Block[5354]</font>>]
    node5354_name -> node5354 [arrowhead=none, color="black", style=dashed]
    node5354 [shape=box, label=<<font color="black">[0] P.ProxyTarget = target<BR ALIGN="LEFT"/>[1] P.ProxyHandler = handler<BR ALIGN="LEFT"/>[2] return P<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5354 -> cluster1163_exit [color="black"]
    node5351_name [shape=none, label=<<font color="black">Call[5351]</font>>]
    node5351_name -> node5351 [arrowhead=none, color="black", style=dashed]
    node5351 [shape=cds, label=<<font color="black">%2 = clo&lt;IsConstructor&gt;(target)</font>> color="black" fillcolor="white", style=filled]
    node5351 -> node5352 [color="black"]
    node5352_name [shape=none, label=<<font color="black">Branch[5352]</font>>]
    node5352_name -> node5352 [arrowhead=none, color="black", style=dashed]
    node5352 [shape=diamond, label=<<font color="black">(= %2 true)</font>> color="black" fillcolor="white", style=filled]
    node5352 -> node5353 [label=<<font color="black">true</font>> color="black"]
    node5352 -> node5354 [label=<<font color="black">false</font>> color="black"]
    node5353_name [shape=none, label=<<font color="black">Block[5353]</font>>]
    node5353_name -> node5353 [arrowhead=none, color="black", style=dashed]
    node5353 [shape=box, label=<<font color="black">[0] P.Construct = clo&lt;ProxyExoticObject.Construct&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5353 -> node5354 [color="black"]
  }
}