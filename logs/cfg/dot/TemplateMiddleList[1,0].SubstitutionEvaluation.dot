digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1249 {
    label = "def <SYNTAX>:TemplateMiddleList[1,0].SubstitutionEvaluation(this: Ast:TemplateMiddleList[1,0]): Normal[List[ESValue]] | Abrupt"
    style = rounded
    cluster1249_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1249_entry_name -> cluster1249_entry [arrowhead=none, color="black", style=dashed]
    cluster1249_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1249_entry -> node5733 [color="black"]
    cluster1249_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1249_exit_name -> cluster1249_exit [arrowhead=none, color="black", style=dashed]
    cluster1249_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node5733_name [shape=none, label=<<font color="black">Call[5733]</font>>]
    node5733_name -> node5733 [arrowhead=none, color="black", style=dashed]
    node5733 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;SubstitutionEvaluation()</font>> color="black" fillcolor="white", style=filled]
    node5733 -> node5734 [color="black"]
    node5734_name [shape=none, label=<<font color="black">Block[5734]</font>>]
    node5734_name -> node5734 [arrowhead=none, color="black", style=dashed]
    node5734 [shape=box, label=<<font color="black">[0] let preceding = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5734 -> node5735 [color="black"]
    node5735_name [shape=none, label=<<font color="black">Call[5735]</font>>]
    node5735_name -> node5735 [arrowhead=none, color="black", style=dashed]
    node5735 [shape=cds, label=<<font color="black">%1 = this[2]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node5735 -> node5736 [color="black"]
    node5736_name [shape=none, label=<<font color="black">Block[5736]</font>>]
    node5736_name -> node5736 [arrowhead=none, color="black", style=dashed]
    node5736 [shape=box, label=<<font color="black">[0] let nextRef = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5736 -> node5737 [color="black"]
    node5737_name [shape=none, label=<<font color="black">Call[5737]</font>>]
    node5737_name -> node5737 [arrowhead=none, color="black", style=dashed]
    node5737 [shape=cds, label=<<font color="black">%2 = clo&lt;GetValue&gt;(nextRef)</font>> color="black" fillcolor="white", style=filled]
    node5737 -> node5738 [color="black"]
    node5738_name [shape=none, label=<<font color="black">Block[5738]</font>>]
    node5738_name -> node5738 [arrowhead=none, color="black", style=dashed]
    node5738 [shape=box, label=<<font color="black">[0] let next = [? %2]<BR ALIGN="LEFT"/>[1] return (list-concat preceding (new [next])[#566])[#565]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5738 -> cluster1249_exit [color="black"]
  }
}