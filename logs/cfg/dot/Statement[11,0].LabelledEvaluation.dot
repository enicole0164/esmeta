digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1500 {
    label = "def <SYNTAX>:Statement[11,0].LabelledEvaluation(this: Ast:Statement[11,0], labelSet: Unknown): Normal[ESValue] | Abrupt"
    style = rounded
    cluster1500_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1500_entry_name -> cluster1500_entry [arrowhead=none, color="black", style=dashed]
    cluster1500_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1500_entry -> node8217 [color="black"]
    cluster1500_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1500_exit_name -> cluster1500_exit [arrowhead=none, color="black", style=dashed]
    cluster1500_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8217_name [shape=none, label=<<font color="black">Call[8217]</font>>]
    node8217_name -> node8217 [arrowhead=none, color="black", style=dashed]
    node8217 [shape=cds, label=<<font color="black">%0 = this-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node8217 -> node8218 [color="black"]
    node8218_name [shape=none, label=<<font color="black">Block[8218]</font>>]
    node8218_name -> node8218 [arrowhead=none, color="black", style=dashed]
    node8218 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8218 -> cluster1500_exit [color="black"]
  }
}