digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster441 {
    label = "def <SYNTAX>:LabelledStatement[0,0].VarScopedDeclarations(this: Ast:LabelledStatement[0,0]): List[Ast]"
    style = rounded
    cluster441_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster441_entry_name -> cluster441_entry [arrowhead=none, color="black", style=dashed]
    cluster441_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster441_entry -> node2224 [color="black"]
    cluster441_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster441_exit_name -> cluster441_exit [arrowhead=none, color="black", style=dashed]
    cluster441_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2224_name [shape=none, label=<<font color="black">Call[2224]</font>>]
    node2224_name -> node2224 [arrowhead=none, color="black", style=dashed]
    node2224 [shape=cds, label=<<font color="black">%0 = this[1]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2224 -> node2225 [color="black"]
    node2225_name [shape=none, label=<<font color="black">Block[2225]</font>>]
    node2225_name -> node2225 [arrowhead=none, color="black", style=dashed]
    node2225 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2225 -> cluster441_exit [color="black"]
  }
}