digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1107 {
    label = "def ArraySpeciesCreate(originalArray: Unknown, length: Unknown["NonnegativeInteger"]): Normal[Object] | Abrupt"
    style = rounded
    cluster1107_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1107_entry_name -> cluster1107_entry [arrowhead=none, color="black", style=dashed]
    cluster1107_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1107_entry -> node4574 [color="black"]
    cluster1107_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1107_exit_name -> cluster1107_exit [arrowhead=none, color="black", style=dashed]
    cluster1107_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4574_name [shape=none, label=<<font color="black">Call[4574]</font>>]
    node4574_name -> node4574 [arrowhead=none, color="black", style=dashed]
    node4574 [shape=cds, label=<<font color="black">%0 = clo&lt;IsArray&gt;(originalArray)</font>> color="black" fillcolor="white", style=filled]
    node4574 -> node4575 [color="black"]
    node4575_name [shape=none, label=<<font color="black">Block[4575]</font>>]
    node4575_name -> node4575 [arrowhead=none, color="black", style=dashed]
    node4575 [shape=box, label=<<font color="black">[0] let isArray = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4575 -> node4576 [color="black"]
    node4576_name [shape=none, label=<<font color="black">Branch[4576]</font>>]
    node4576_name -> node4576 [arrowhead=none, color="black", style=dashed]
    node4576 [shape=diamond, label=<<font color="black">(= isArray false)</font>> color="black" fillcolor="white", style=filled]
    node4576 -> node4577 [label=<<font color="black">true</font>> color="black"]
    node4576 -> node4579 [label=<<font color="black">false</font>> color="black"]
    node4577_name [shape=none, label=<<font color="black">Call[4577]</font>>]
    node4577_name -> node4577 [arrowhead=none, color="black", style=dashed]
    node4577 [shape=cds, label=<<font color="black">%1 = clo&lt;ArrayCreate&gt;(length)</font>> color="black" fillcolor="white", style=filled]
    node4577 -> node4578 [color="black"]
    node4579_name [shape=none, label=<<font color="black">Call[4579]</font>>]
    node4579_name -> node4579 [arrowhead=none, color="black", style=dashed]
    node4579 [shape=cds, label=<<font color="black">%2 = clo&lt;Get&gt;(originalArray, &quot;constructor&quot;)</font>> color="black" fillcolor="white", style=filled]
    node4579 -> node4580 [color="black"]
    node4578_name [shape=none, label=<<font color="black">Block[4578]</font>>]
    node4578_name -> node4578 [arrowhead=none, color="black", style=dashed]
    node4578 [shape=box, label=<<font color="black">[0] return [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4578 -> cluster1107_exit [color="black"]
    node4580_name [shape=none, label=<<font color="black">Block[4580]</font>>]
    node4580_name -> node4580 [arrowhead=none, color="black", style=dashed]
    node4580 [shape=box, label=<<font color="black">[0] let C = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4580 -> node4581 [color="black"]
    node4581_name [shape=none, label=<<font color="black">Call[4581]</font>>]
    node4581_name -> node4581 [arrowhead=none, color="black", style=dashed]
    node4581 [shape=cds, label=<<font color="black">%3 = clo&lt;IsConstructor&gt;(C)</font>> color="black" fillcolor="white", style=filled]
    node4581 -> node4582 [color="black"]
    node4582_name [shape=none, label=<<font color="black">Branch[4582]</font>>]
    node4582_name -> node4582 [arrowhead=none, color="black", style=dashed]
    node4582 [shape=diamond, label=<<font color="black">(= %3 true)</font>> color="black" fillcolor="white", style=filled]
    node4582 -> node4583 [label=<<font color="black">true</font>> color="black"]
    node4582 -> node4590 [label=<<font color="black">false</font>> color="black"]
    node4583_name [shape=none, label=<<font color="black">Block[4583]</font>>]
    node4583_name -> node4583 [arrowhead=none, color="black", style=dashed]
    node4583 [shape=box, label=<<font color="black">[0] let thisRealm = @EXECUTION_STACK[0].Realm<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4583 -> node4584 [color="black"]
    node4590_name [shape=none, label=<<font color="black">Branch[4590]</font>>]
    node4590_name -> node4590 [arrowhead=none, color="black", style=dashed]
    node4590 [shape=diamond, label=<<font color="black">(= (typeof C) @Object)</font>> color="black" fillcolor="white", style=filled]
    node4590 -> node4591 [label=<<font color="black">true</font>> color="black"]
    node4590 -> node4595 [label=<<font color="black">false</font>> color="black"]
    node4584_name [shape=none, label=<<font color="black">Call[4584]</font>>]
    node4584_name -> node4584 [arrowhead=none, color="black", style=dashed]
    node4584 [shape=cds, label=<<font color="black">%4 = clo&lt;GetFunctionRealm&gt;(C)</font>> color="black" fillcolor="white", style=filled]
    node4584 -> node4585 [color="black"]
    node4591_name [shape=none, label=<<font color="black">Call[4591]</font>>]
    node4591_name -> node4591 [arrowhead=none, color="black", style=dashed]
    node4591 [shape=cds, label=<<font color="black">%6 = clo&lt;Get&gt;(C, @SYMBOL.species)</font>> color="black" fillcolor="white", style=filled]
    node4591 -> node4592 [color="black"]
    node4595_name [shape=none, label=<<font color="black">Branch[4595]</font>>]
    node4595_name -> node4595 [arrowhead=none, color="black", style=dashed]
    node4595 [shape=diamond, label=<<font color="black">(= C undefined)</font>> color="black" fillcolor="white", style=filled]
    node4595 -> node4596 [label=<<font color="black">true</font>> color="black"]
    node4595 -> node4598 [label=<<font color="black">false</font>> color="black"]
    node4585_name [shape=none, label=<<font color="black">Block[4585]</font>>]
    node4585_name -> node4585 [arrowhead=none, color="black", style=dashed]
    node4585 [shape=box, label=<<font color="black">[0] let realmC = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4585 -> node4586 [color="black"]
    node4592_name [shape=none, label=<<font color="black">Block[4592]</font>>]
    node4592_name -> node4592 [arrowhead=none, color="black", style=dashed]
    node4592 [shape=box, label=<<font color="black">[0] C = [? %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4592 -> node4593 [color="black"]
    node4596_name [shape=none, label=<<font color="black">Call[4596]</font>>]
    node4596_name -> node4596 [arrowhead=none, color="black", style=dashed]
    node4596 [shape=cds, label=<<font color="black">%7 = clo&lt;ArrayCreate&gt;(length)</font>> color="black" fillcolor="white", style=filled]
    node4596 -> node4597 [color="black"]
    node4598_name [shape=none, label=<<font color="black">Call[4598]</font>>]
    node4598_name -> node4598 [arrowhead=none, color="black", style=dashed]
    node4598 [shape=cds, label=<<font color="black">%8 = clo&lt;IsConstructor&gt;(C)</font>> color="black" fillcolor="white", style=filled]
    node4598 -> node4599 [color="black"]
    node4586_name [shape=none, label=<<font color="black">Branch[4586]</font>>]
    node4586_name -> node4586 [arrowhead=none, color="black", style=dashed]
    node4586 [shape=diamond, label=<<font color="black">(! (= thisRealm realmC))</font>> color="black" fillcolor="white", style=filled]
    node4586 -> node4587 [label=<<font color="black">true</font>> color="black"]
    node4586 -> node4590 [label=<<font color="black">false</font>> color="black"]
    node4593_name [shape=none, label=<<font color="black">Branch[4593]</font>>]
    node4593_name -> node4593 [arrowhead=none, color="black", style=dashed]
    node4593 [shape=diamond, label=<<font color="black">(= C null)</font>> color="black" fillcolor="white", style=filled]
    node4593 -> node4594 [label=<<font color="black">true</font>> color="black"]
    node4593 -> node4595 [label=<<font color="black">false</font>> color="black"]
    node4597_name [shape=none, label=<<font color="black">Block[4597]</font>>]
    node4597_name -> node4597 [arrowhead=none, color="black", style=dashed]
    node4597 [shape=box, label=<<font color="black">[0] return [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4597 -> cluster1107_exit [color="black"]
    node4599_name [shape=none, label=<<font color="black">Branch[4599]</font>>]
    node4599_name -> node4599 [arrowhead=none, color="black", style=dashed]
    node4599 [shape=diamond, label=<<font color="black">(= %8 false)</font>> color="black" fillcolor="white", style=filled]
    node4599 -> node4600 [label=<<font color="black">true</font>> color="black"]
    node4599 -> node4601 [label=<<font color="black">false</font>> color="black"]
    node4587_name [shape=none, label=<<font color="black">Call[4587]</font>>]
    node4587_name -> node4587 [arrowhead=none, color="black", style=dashed]
    node4587 [shape=cds, label=<<font color="black">%5 = clo&lt;SameValue&gt;(C, realmC.Intrinsics[&quot;%Array%&quot;])</font>> color="black" fillcolor="white", style=filled]
    node4587 -> node4588 [color="black"]
    node4594_name [shape=none, label=<<font color="black">Block[4594]</font>>]
    node4594_name -> node4594 [arrowhead=none, color="black", style=dashed]
    node4594 [shape=box, label=<<font color="black">[0] C = undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4594 -> node4595 [color="black"]
    node4600_name [shape=none, label=<<font color="black">Block[4600]</font>>]
    node4600_name -> node4600 [arrowhead=none, color="black", style=dashed]
    node4600 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#451])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4600 -> cluster1107_exit [color="black"]
    node4601_name [shape=none, label=<<font color="black">Call[4601]</font>>]
    node4601_name -> node4601 [arrowhead=none, color="black", style=dashed]
    node4601 [shape=cds, label=<<font color="black">%9 = clo&lt;Construct&gt;(C, (new [([number] length)])[#452])</font>> color="black" fillcolor="white", style=filled]
    node4601 -> node4602 [color="black"]
    node4588_name [shape=none, label=<<font color="black">Branch[4588]</font>>]
    node4588_name -> node4588 [arrowhead=none, color="black", style=dashed]
    node4588 [shape=diamond, label=<<font color="black">(= %5 true)</font>> color="black" fillcolor="white", style=filled]
    node4588 -> node4589 [label=<<font color="black">true</font>> color="black"]
    node4588 -> node4590 [label=<<font color="black">false</font>> color="black"]
    node4602_name [shape=none, label=<<font color="black">Block[4602]</font>>]
    node4602_name -> node4602 [arrowhead=none, color="black", style=dashed]
    node4602 [shape=box, label=<<font color="black">[0] return [? %9]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4602 -> cluster1107_exit [color="black"]
    node4589_name [shape=none, label=<<font color="black">Block[4589]</font>>]
    node4589_name -> node4589 [arrowhead=none, color="black", style=dashed]
    node4589 [shape=box, label=<<font color="black">[0] C = undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4589 -> node4590 [color="black"]
  }
}