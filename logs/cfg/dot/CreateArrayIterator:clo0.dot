digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2381 {
    label = "def <CLO>:CreateArrayIterator:clo0(): Unknown"
    style = rounded
    cluster2381_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2381_entry_name -> cluster2381_entry [arrowhead=none, color="black", style=dashed]
    cluster2381_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2381_entry -> node15836 [color="black"]
    cluster2381_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2381_exit_name -> cluster2381_exit [arrowhead=none, color="black", style=dashed]
    cluster2381_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node15836_name [shape=none, label=<<font color="black">Block[15836]</font>>]
    node15836_name -> node15836 [arrowhead=none, color="black", style=dashed]
    node15836 [shape=box, label=<<font color="black">[0] let index = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15836 -> node15837 [color="black"]
    node15837_name [shape=none, label=<<font color="black">Branch[15837]</font>>]
    node15837_name -> node15837 [arrowhead=none, color="black", style=dashed]
    node15837 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white", style=filled]
    node15837 -> node15838 [label=<<font color="black">true</font>> color="black"]
    node15838_name [shape=none, label=<<font color="black">Branch[15838]</font>>]
    node15838_name -> node15838 [arrowhead=none, color="black", style=dashed]
    node15838 [shape=diamond, label=<<font color="black">(! (= array.TypedArrayName absent))</font>> color="black" fillcolor="white", style=filled]
    node15838 -> node15839 [label=<<font color="black">true</font>> color="black"]
    node15838 -> node15843 [label=<<font color="black">false</font>> color="black"]
    node15839_name [shape=none, label=<<font color="black">Call[15839]</font>>]
    node15839_name -> node15839 [arrowhead=none, color="black", style=dashed]
    node15839 [shape=cds, label=<<font color="black">%0 = clo&lt;IsDetachedBuffer&gt;(array.ViewedArrayBuffer)</font>> color="black" fillcolor="white", style=filled]
    node15839 -> node15840 [color="black"]
    node15843_name [shape=none, label=<<font color="black">Call[15843]</font>>]
    node15843_name -> node15843 [arrowhead=none, color="black", style=dashed]
    node15843 [shape=cds, label=<<font color="black">%1 = clo&lt;LengthOfArrayLike&gt;(array)</font>> color="black" fillcolor="white", style=filled]
    node15843 -> node15844 [color="black"]
    node15840_name [shape=none, label=<<font color="black">Branch[15840]</font>>]
    node15840_name -> node15840 [arrowhead=none, color="black", style=dashed]
    node15840 [shape=diamond, label=<<font color="black">(= %0 true)</font>> color="black" fillcolor="white", style=filled]
    node15840 -> node15841 [label=<<font color="black">true</font>> color="black"]
    node15840 -> node15842 [label=<<font color="black">false</font>> color="black"]
    node15844_name [shape=none, label=<<font color="black">Block[15844]</font>>]
    node15844_name -> node15844 [arrowhead=none, color="black", style=dashed]
    node15844 [shape=box, label=<<font color="black">[0] let len = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15844 -> node15845 [color="black"]
    node15841_name [shape=none, label=<<font color="black">Block[15841]</font>>]
    node15841_name -> node15841 [arrowhead=none, color="black", style=dashed]
    node15841 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1050])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15841 -> cluster2381_exit [color="black"]
    node15842_name [shape=none, label=<<font color="black">Block[15842]</font>>]
    node15842_name -> node15842 [arrowhead=none, color="black", style=dashed]
    node15842 [shape=box, label=<<font color="black">[0] let len = array.ArrayLength<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15842 -> node15845 [color="black"]
    node15845_name [shape=none, label=<<font color="black">Branch[15845]</font>>]
    node15845_name -> node15845 [arrowhead=none, color="black", style=dashed]
    node15845 [shape=diamond, label=<<font color="black">(! (&lt; index len))</font>> color="black" fillcolor="white", style=filled]
    node15845 -> node15846 [label=<<font color="black">true</font>> color="black"]
    node15845 -> node15848 [label=<<font color="black">false</font>> color="black"]
    node15846_name [shape=none, label=<<font color="black">Call[15846]</font>>]
    node15846_name -> node15846 [arrowhead=none, color="black", style=dashed]
    node15846 [shape=cds, label=<<font color="black">%2 = clo&lt;NormalCompletion&gt;(undefined)</font>> color="black" fillcolor="white", style=filled]
    node15846 -> node15847 [color="black"]
    node15848_name [shape=none, label=<<font color="black">Branch[15848]</font>>]
    node15848_name -> node15848 [arrowhead=none, color="black", style=dashed]
    node15848 [shape=diamond, label=<<font color="black">(= kind ~key~)</font>> color="black" fillcolor="white", style=filled]
    node15848 -> node15849 [label=<<font color="black">true</font>> color="black"]
    node15848 -> node15852 [label=<<font color="black">false</font>> color="black"]
    node15847_name [shape=none, label=<<font color="black">Block[15847]</font>>]
    node15847_name -> node15847 [arrowhead=none, color="black", style=dashed]
    node15847 [shape=box, label=<<font color="black">[0] return %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15847 -> cluster2381_exit [color="black"]
    node15849_name [shape=none, label=<<font color="black">Call[15849]</font>>]
    node15849_name -> node15849 [arrowhead=none, color="black", style=dashed]
    node15849 [shape=cds, label=<<font color="black">%3 = clo&lt;CreateIterResultObject&gt;(([number] index), false)</font>> color="black" fillcolor="white", style=filled]
    node15849 -> node15850 [color="black"]
    node15852_name [shape=none, label=<<font color="black">Call[15852]</font>>]
    node15852_name -> node15852 [arrowhead=none, color="black", style=dashed]
    node15852 [shape=cds, label=<<font color="black">%5 = clo&lt;ToString&gt;(([number] index))</font>> color="black" fillcolor="white", style=filled]
    node15852 -> node15853 [color="black"]
    node15850_name [shape=none, label=<<font color="black">Call[15850]</font>>]
    node15850_name -> node15850 [arrowhead=none, color="black", style=dashed]
    node15850 [shape=cds, label=<<font color="black">%4 = clo&lt;GeneratorYield&gt;(%3)</font>> color="black" fillcolor="white", style=filled]
    node15850 -> node15851 [color="black"]
    node15853_name [shape=none, label=<<font color="black">Block[15853]</font>>]
    node15853_name -> node15853 [arrowhead=none, color="black", style=dashed]
    node15853 [shape=box, label=<<font color="black">[0] let elementKey = [! %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15853 -> node15854 [color="black"]
    node15851_name [shape=none, label=<<font color="black">Block[15851]</font>>]
    node15851_name -> node15851 [arrowhead=none, color="black", style=dashed]
    node15851 [shape=box, label=<<font color="black">[0] [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15851 -> node15866 [color="black"]
    node15854_name [shape=none, label=<<font color="black">Call[15854]</font>>]
    node15854_name -> node15854 [arrowhead=none, color="black", style=dashed]
    node15854 [shape=cds, label=<<font color="black">%6 = clo&lt;Get&gt;(array, elementKey)</font>> color="black" fillcolor="white", style=filled]
    node15854 -> node15855 [color="black"]
    node15866_name [shape=none, label=<<font color="black">Block[15866]</font>>]
    node15866_name -> node15866 [arrowhead=none, color="black", style=dashed]
    node15866 [shape=box, label=<<font color="black">[0] index = (+ index 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15866 -> node15837 [color="black"]
    node15855_name [shape=none, label=<<font color="black">Block[15855]</font>>]
    node15855_name -> node15855 [arrowhead=none, color="black", style=dashed]
    node15855 [shape=box, label=<<font color="black">[0] let elementValue = [? %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15855 -> node15856 [color="black"]
    node15856_name [shape=none, label=<<font color="black">Branch[15856]</font>>]
    node15856_name -> node15856 [arrowhead=none, color="black", style=dashed]
    node15856 [shape=diamond, label=<<font color="black">(= kind ~value~)</font>> color="black" fillcolor="white", style=filled]
    node15856 -> node15857 [label=<<font color="black">true</font>> color="black"]
    node15856 -> node15860 [label=<<font color="black">false</font>> color="black"]
    node15857_name [shape=none, label=<<font color="black">Call[15857]</font>>]
    node15857_name -> node15857 [arrowhead=none, color="black", style=dashed]
    node15857 [shape=cds, label=<<font color="black">%7 = clo&lt;CreateIterResultObject&gt;(elementValue, false)</font>> color="black" fillcolor="white", style=filled]
    node15857 -> node15858 [color="black"]
    node15860_name [shape=none, label=<<font color="black">Block[15860]</font>>]
    node15860_name -> node15860 [arrowhead=none, color="black", style=dashed]
    node15860 [shape=box, label=<<font color="black">[0] assert (= kind ~key+value~)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15860 -> node15861 [color="black"]
    node15858_name [shape=none, label=<<font color="black">Call[15858]</font>>]
    node15858_name -> node15858 [arrowhead=none, color="black", style=dashed]
    node15858 [shape=cds, label=<<font color="black">%8 = clo&lt;GeneratorYield&gt;(%7)</font>> color="black" fillcolor="white", style=filled]
    node15858 -> node15859 [color="black"]
    node15861_name [shape=none, label=<<font color="black">Call[15861]</font>>]
    node15861_name -> node15861 [arrowhead=none, color="black", style=dashed]
    node15861 [shape=cds, label=<<font color="black">%9 = clo&lt;CreateArrayFromList&gt;((new [([number] index), elementValue])[#1051])</font>> color="black" fillcolor="white", style=filled]
    node15861 -> node15862 [color="black"]
    node15859_name [shape=none, label=<<font color="black">Block[15859]</font>>]
    node15859_name -> node15859 [arrowhead=none, color="black", style=dashed]
    node15859 [shape=box, label=<<font color="black">[0] [? %8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15859 -> node15866 [color="black"]
    node15862_name [shape=none, label=<<font color="black">Block[15862]</font>>]
    node15862_name -> node15862 [arrowhead=none, color="black", style=dashed]
    node15862 [shape=box, label=<<font color="black">[0] let result = %9<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15862 -> node15863 [color="black"]
    node15863_name [shape=none, label=<<font color="black">Call[15863]</font>>]
    node15863_name -> node15863 [arrowhead=none, color="black", style=dashed]
    node15863 [shape=cds, label=<<font color="black">%10 = clo&lt;CreateIterResultObject&gt;(result, false)</font>> color="black" fillcolor="white", style=filled]
    node15863 -> node15864 [color="black"]
    node15864_name [shape=none, label=<<font color="black">Call[15864]</font>>]
    node15864_name -> node15864 [arrowhead=none, color="black", style=dashed]
    node15864 [shape=cds, label=<<font color="black">%11 = clo&lt;GeneratorYield&gt;(%10)</font>> color="black" fillcolor="white", style=filled]
    node15864 -> node15865 [color="black"]
    node15865_name [shape=none, label=<<font color="black">Block[15865]</font>>]
    node15865_name -> node15865 [arrowhead=none, color="black", style=dashed]
    node15865 [shape=box, label=<<font color="black">[0] [? %11]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15865 -> node15866 [color="black"]
  }
}