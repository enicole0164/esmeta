digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2202 {
    label = "def <BUILTIN>:INTRINSICS.String.prototype[@@iterator](this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2202_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2202_entry_name -> cluster2202_entry [arrowhead=none, color="black", style=dashed]
    cluster2202_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2202_entry -> node13837 [color="black"]
    cluster2202_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2202_exit_name -> cluster2202_exit [arrowhead=none, color="black", style=dashed]
    cluster2202_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node13837_name [shape=none, label=<<font color="black">Call[13837]</font>>]
    node13837_name -> node13837 [arrowhead=none, color="black", style=dashed]
    node13837 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireObjectCoercible&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node13837 -> node13838 [color="black"]
    node13838_name [shape=none, label=<<font color="black">Block[13838]</font>>]
    node13838_name -> node13838 [arrowhead=none, color="black", style=dashed]
    node13838 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13838 -> node13839 [color="black"]
    node13839_name [shape=none, label=<<font color="black">Call[13839]</font>>]
    node13839_name -> node13839 [arrowhead=none, color="black", style=dashed]
    node13839 [shape=cds, label=<<font color="black">%1 = clo&lt;ToString&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node13839 -> node13840 [color="black"]
    node13840_name [shape=none, label=<<font color="black">Block[13840]</font>>]
    node13840_name -> node13840 [arrowhead=none, color="black", style=dashed]
    node13840 [shape=box, label=<<font color="black">[0] let s = [? %1]<BR ALIGN="LEFT"/>[1] let closure = clo&lt;INTRINSICS.String.prototype[@@iterator]:clo0, [s]&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13840 -> node13841 [color="black"]
    node13841_name [shape=none, label=<<font color="black">Call[13841]</font>>]
    node13841_name -> node13841 [arrowhead=none, color="black", style=dashed]
    node13841 [shape=cds, label=<<font color="black">%2 = clo&lt;CreateIteratorFromClosure&gt;(closure, &quot;%StringIteratorPrototype%&quot;, @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%StringIteratorPrototype%&quot;])</font>> color="black" fillcolor="white", style=filled]
    node13841 -> node13842 [color="black"]
    node13842_name [shape=none, label=<<font color="black">Block[13842]</font>>]
    node13842_name -> node13842 [arrowhead=none, color="black", style=dashed]
    node13842 [shape=box, label=<<font color="black">[0] return %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13842 -> cluster2202_exit [color="black"]
  }
}