digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2285 {
    label = "def <SYNTAX>:NonemptyClassRangesNoDash[2,0].CompileToCharSet(this: Ast:NonemptyClassRangesNoDash[2,0]): Unknown["CharSet"]"
    style = rounded
    cluster2285_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2285_entry_name -> cluster2285_entry [arrowhead=none, color="black", style=dashed]
    cluster2285_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2285_entry -> node14046 [color="black"]
    cluster2285_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2285_exit_name -> cluster2285_exit [arrowhead=none, color="black", style=dashed]
    cluster2285_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node14046_name [shape=none, label=<<font color="black">Call[14046]</font>>]
    node14046_name -> node14046 [arrowhead=none, color="black", style=dashed]
    node14046 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;CompileToCharSet()</font>> color="black" fillcolor="white", style=filled]
    node14046 -> node14047 [color="black"]
    node14047_name [shape=none, label=<<font color="black">Block[14047]</font>>]
    node14047_name -> node14047 [arrowhead=none, color="black", style=dashed]
    node14047 [shape=box, label=<<font color="black">[0] let A = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14047 -> node14048 [color="black"]
    node14048_name [shape=none, label=<<font color="black">Call[14048]</font>>]
    node14048_name -> node14048 [arrowhead=none, color="black", style=dashed]
    node14048 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;CompileToCharSet()</font>> color="black" fillcolor="white", style=filled]
    node14048 -> node14049 [color="black"]
    node14049_name [shape=none, label=<<font color="black">Block[14049]</font>>]
    node14049_name -> node14049 [arrowhead=none, color="black", style=dashed]
    node14049 [shape=box, label=<<font color="black">[0] let B = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14049 -> node14050 [color="black"]
    node14050_name [shape=none, label=<<font color="black">Call[14050]</font>>]
    node14050_name -> node14050 [arrowhead=none, color="black", style=dashed]
    node14050 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;CompileToCharSet()</font>> color="black" fillcolor="white", style=filled]
    node14050 -> node14051 [color="black"]
    node14051_name [shape=none, label=<<font color="black">Block[14051]</font>>]
    node14051_name -> node14051 [arrowhead=none, color="black", style=dashed]
    node14051 [shape=box, label=<<font color="black">[0] let C = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14051 -> node14052 [color="black"]
    node14052_name [shape=none, label=<<font color="black">Call[14052]</font>>]
    node14052_name -> node14052 [arrowhead=none, color="black", style=dashed]
    node14052 [shape=cds, label=<<font color="black">%3 = clo&lt;CharacterRange&gt;(A, B)</font>> color="black" fillcolor="white", style=filled]
    node14052 -> node14053 [color="black"]
    node14053_name [shape=none, label=<<font color="black">Block[14053]</font>>]
    node14053_name -> node14053 [arrowhead=none, color="black", style=dashed]
    node14053 [shape=box, label=<<font color="black">[0] let D = %3<BR ALIGN="LEFT"/>[1] (yet &quot;Return the union of _D_ and _C_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14053 -> cluster2285_exit [color="black"]
  }
}