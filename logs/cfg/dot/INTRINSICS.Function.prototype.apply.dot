digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2035 {
    label = "def <BUILTIN>:INTRINSICS.Function.prototype.apply(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2035_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2035_entry_name -> cluster2035_entry [arrowhead=none, color="black", style=dashed]
    cluster2035_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2035_entry -> node11554 [color="black"]
    cluster2035_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2035_exit_name -> cluster2035_exit [arrowhead=none, color="black", style=dashed]
    cluster2035_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11554_name [shape=none, label=<<font color="black">Branch[11554]</font>>]
    node11554_name -> node11554 [arrowhead=none, color="black", style=dashed]
    node11554 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11554 -> node11555 [label=<<font color="black">true</font>> color="black"]
    node11554 -> node11556 [label=<<font color="black">false</font>> color="black"]
    node11555_name [shape=none, label=<<font color="black">Block[11555]</font>>]
    node11555_name -> node11555 [arrowhead=none, color="black", style=dashed]
    node11555 [shape=box, label=<<font color="black">[0] let thisArg = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11555 -> node11557 [color="black"]
    node11556_name [shape=none, label=<<font color="black">Block[11556]</font>>]
    node11556_name -> node11556 [arrowhead=none, color="black", style=dashed]
    node11556 [shape=box, label=<<font color="black">[0] let thisArg = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11556 -> node11557 [color="black"]
    node11557_name [shape=none, label=<<font color="black">Branch[11557]</font>>]
    node11557_name -> node11557 [arrowhead=none, color="black", style=dashed]
    node11557 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11557 -> node11558 [label=<<font color="black">true</font>> color="black"]
    node11557 -> node11559 [label=<<font color="black">false</font>> color="black"]
    node11558_name [shape=none, label=<<font color="black">Block[11558]</font>>]
    node11558_name -> node11558 [arrowhead=none, color="black", style=dashed]
    node11558 [shape=box, label=<<font color="black">[0] let argArray = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11558 -> node11560 [color="black"]
    node11559_name [shape=none, label=<<font color="black">Block[11559]</font>>]
    node11559_name -> node11559 [arrowhead=none, color="black", style=dashed]
    node11559 [shape=box, label=<<font color="black">[0] let argArray = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11559 -> node11560 [color="black"]
    node11560_name [shape=none, label=<<font color="black">Block[11560]</font>>]
    node11560_name -> node11560 [arrowhead=none, color="black", style=dashed]
    node11560 [shape=box, label=<<font color="black">[0] let func = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11560 -> node11561 [color="black"]
    node11561_name [shape=none, label=<<font color="black">Call[11561]</font>>]
    node11561_name -> node11561 [arrowhead=none, color="black", style=dashed]
    node11561 [shape=cds, label=<<font color="black">%0 = clo&lt;IsCallable&gt;(func)</font>> color="black" fillcolor="white", style=filled]
    node11561 -> node11562 [color="black"]
    node11562_name [shape=none, label=<<font color="black">Branch[11562]</font>>]
    node11562_name -> node11562 [arrowhead=none, color="black", style=dashed]
    node11562 [shape=diamond, label=<<font color="black">(= %0 false)</font>> color="black" fillcolor="white", style=filled]
    node11562 -> node11563 [label=<<font color="black">true</font>> color="black"]
    node11562 -> node11564 [label=<<font color="black">false</font>> color="black"]
    node11563_name [shape=none, label=<<font color="black">Block[11563]</font>>]
    node11563_name -> node11563 [arrowhead=none, color="black", style=dashed]
    node11563 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#910])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11563 -> cluster2035_exit [color="black"]
    node11564_name [shape=none, label=<<font color="black">Branch[11564]</font>>]
    node11564_name -> node11564 [arrowhead=none, color="black", style=dashed]
    node11564 [shape=diamond, label=<<font color="black">(|| (= argArray undefined) (= argArray null))</font>> color="black" fillcolor="white", style=filled]
    node11564 -> node11565 [label=<<font color="black">true</font>> color="black"]
    node11564 -> node11568 [label=<<font color="black">false</font>> color="black"]
    node11565_name [shape=none, label=<<font color="black">Call[11565]</font>>]
    node11565_name -> node11565 [arrowhead=none, color="black", style=dashed]
    node11565 [shape=cds, label=<<font color="black">%1 = clo&lt;PrepareForTailCall&gt;()</font>> color="black" fillcolor="white", style=filled]
    node11565 -> node11566 [color="black"]
    node11568_name [shape=none, label=<<font color="black">Call[11568]</font>>]
    node11568_name -> node11568 [arrowhead=none, color="black", style=dashed]
    node11568 [shape=cds, label=<<font color="black">%3 = clo&lt;CreateListFromArrayLike&gt;(argArray)</font>> color="black" fillcolor="white", style=filled]
    node11568 -> node11569 [color="black"]
    node11566_name [shape=none, label=<<font color="black">Call[11566]</font>>]
    node11566_name -> node11566 [arrowhead=none, color="black", style=dashed]
    node11566 [shape=cds, label=<<font color="black">%2 = clo&lt;Call&gt;(func, thisArg)</font>> color="black" fillcolor="white", style=filled]
    node11566 -> node11567 [color="black"]
    node11569_name [shape=none, label=<<font color="black">Block[11569]</font>>]
    node11569_name -> node11569 [arrowhead=none, color="black", style=dashed]
    node11569 [shape=box, label=<<font color="black">[0] let argList = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11569 -> node11570 [color="black"]
    node11567_name [shape=none, label=<<font color="black">Block[11567]</font>>]
    node11567_name -> node11567 [arrowhead=none, color="black", style=dashed]
    node11567 [shape=box, label=<<font color="black">[0] return [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11567 -> cluster2035_exit [color="black"]
    node11570_name [shape=none, label=<<font color="black">Call[11570]</font>>]
    node11570_name -> node11570 [arrowhead=none, color="black", style=dashed]
    node11570 [shape=cds, label=<<font color="black">%4 = clo&lt;PrepareForTailCall&gt;()</font>> color="black" fillcolor="white", style=filled]
    node11570 -> node11571 [color="black"]
    node11571_name [shape=none, label=<<font color="black">Call[11571]</font>>]
    node11571_name -> node11571 [arrowhead=none, color="black", style=dashed]
    node11571 [shape=cds, label=<<font color="black">%5 = clo&lt;Call&gt;(func, thisArg, argList)</font>> color="black" fillcolor="white", style=filled]
    node11571 -> node11572 [color="black"]
    node11572_name [shape=none, label=<<font color="black">Block[11572]</font>>]
    node11572_name -> node11572 [arrowhead=none, color="black", style=dashed]
    node11572 [shape=box, label=<<font color="black">[0] return [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11572 -> cluster2035_exit [color="black"]
  }
}