digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2566 {
    label = "def AsyncFromSyncIteratorContinuation(result: Unknown, promiseCapability: Unknown["PromiseCapabilityRecordForAnIntrinsic%Promise%"]): Unknown["Promise"]"
    style = rounded
    cluster2566_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2566_entry_name -> cluster2566_entry [arrowhead=none, color="black", style=dashed]
    cluster2566_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2566_entry -> node18660 [color="black"]
    cluster2566_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2566_exit_name -> cluster2566_exit [arrowhead=none, color="black", style=dashed]
    cluster2566_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node18660_name [shape=none, label=<<font color="black">Block[18660]</font>>]
    node18660_name -> node18660 [arrowhead=none, color="black", style=dashed]
    node18660 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18660 -> node18661 [color="black"]
    node18661_name [shape=none, label=<<font color="black">Call[18661]</font>>]
    node18661_name -> node18661 [arrowhead=none, color="black", style=dashed]
    node18661 [shape=cds, label=<<font color="black">%0 = clo&lt;IteratorComplete&gt;(result)</font>> color="black" fillcolor="white", style=filled]
    node18661 -> node18662 [color="black"]
    node18662_name [shape=none, label=<<font color="black">Call[18662]</font>>]
    node18662_name -> node18662 [arrowhead=none, color="black", style=dashed]
    node18662 [shape=cds, label=<<font color="black">%1 = clo&lt;Completion&gt;(%0)</font>> color="black" fillcolor="white", style=filled]
    node18662 -> node18663 [color="black"]
    node18663_name [shape=none, label=<<font color="black">Block[18663]</font>>]
    node18663_name -> node18663 [arrowhead=none, color="black", style=dashed]
    node18663 [shape=box, label=<<font color="black">[0] let done = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18663 -> node18664 [color="black"]
    node18664_name [shape=none, label=<<font color="black">Branch[18664]</font>>]
    node18664_name -> node18664 [arrowhead=none, color="black", style=dashed]
    node18664 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? done) (! (= done.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node18664 -> node18665 [label=<<font color="black">true</font>> color="black"]
    node18664 -> node18667 [label=<<font color="black">false</font>> color="black"]
    node18665_name [shape=none, label=<<font color="black">Call[18665]</font>>]
    node18665_name -> node18665 [arrowhead=none, color="black", style=dashed]
    node18665 [shape=cds, label=<<font color="black">%2 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [done.Value])[#1229])</font>> color="black" fillcolor="white", style=filled]
    node18665 -> node18666 [color="black"]
    node18667_name [shape=none, label=<<font color="black">Branch[18667]</font>>]
    node18667_name -> node18667 [arrowhead=none, color="black", style=dashed]
    node18667 [shape=diamond, label=<<font color="black">(? done: &quot;CompletionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node18667 -> node18668 [label=<<font color="black">true</font>> color="black"]
    node18667 -> node18669 [label=<<font color="black">false</font>> color="black"]
    node18666_name [shape=none, label=<<font color="black">Block[18666]</font>>]
    node18666_name -> node18666 [arrowhead=none, color="black", style=dashed]
    node18666 [shape=box, label=<<font color="black">[0] [? %2]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18666 -> cluster2566_exit [color="black"]
    node18668_name [shape=none, label=<<font color="black">Block[18668]</font>>]
    node18668_name -> node18668 [arrowhead=none, color="black", style=dashed]
    node18668 [shape=box, label=<<font color="black">[0] done = done.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18668 -> node18669 [color="black"]
    node18669_name [shape=none, label=<<font color="black">Call[18669]</font>>]
    node18669_name -> node18669 [arrowhead=none, color="black", style=dashed]
    node18669 [shape=cds, label=<<font color="black">%3 = clo&lt;IteratorValue&gt;(result)</font>> color="black" fillcolor="white", style=filled]
    node18669 -> node18670 [color="black"]
    node18670_name [shape=none, label=<<font color="black">Call[18670]</font>>]
    node18670_name -> node18670 [arrowhead=none, color="black", style=dashed]
    node18670 [shape=cds, label=<<font color="black">%4 = clo&lt;Completion&gt;(%3)</font>> color="black" fillcolor="white", style=filled]
    node18670 -> node18671 [color="black"]
    node18671_name [shape=none, label=<<font color="black">Block[18671]</font>>]
    node18671_name -> node18671 [arrowhead=none, color="black", style=dashed]
    node18671 [shape=box, label=<<font color="black">[0] let value = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18671 -> node18672 [color="black"]
    node18672_name [shape=none, label=<<font color="black">Branch[18672]</font>>]
    node18672_name -> node18672 [arrowhead=none, color="black", style=dashed]
    node18672 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? value) (! (= value.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node18672 -> node18673 [label=<<font color="black">true</font>> color="black"]
    node18672 -> node18675 [label=<<font color="black">false</font>> color="black"]
    node18673_name [shape=none, label=<<font color="black">Call[18673]</font>>]
    node18673_name -> node18673 [arrowhead=none, color="black", style=dashed]
    node18673 [shape=cds, label=<<font color="black">%5 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [value.Value])[#1230])</font>> color="black" fillcolor="white", style=filled]
    node18673 -> node18674 [color="black"]
    node18675_name [shape=none, label=<<font color="black">Branch[18675]</font>>]
    node18675_name -> node18675 [arrowhead=none, color="black", style=dashed]
    node18675 [shape=diamond, label=<<font color="black">(? value: &quot;CompletionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node18675 -> node18676 [label=<<font color="black">true</font>> color="black"]
    node18675 -> node18677 [label=<<font color="black">false</font>> color="black"]
    node18674_name [shape=none, label=<<font color="black">Block[18674]</font>>]
    node18674_name -> node18674 [arrowhead=none, color="black", style=dashed]
    node18674 [shape=box, label=<<font color="black">[0] [? %5]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18674 -> cluster2566_exit [color="black"]
    node18676_name [shape=none, label=<<font color="black">Block[18676]</font>>]
    node18676_name -> node18676 [arrowhead=none, color="black", style=dashed]
    node18676 [shape=box, label=<<font color="black">[0] value = value.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18676 -> node18677 [color="black"]
    node18677_name [shape=none, label=<<font color="black">Call[18677]</font>>]
    node18677_name -> node18677 [arrowhead=none, color="black", style=dashed]
    node18677 [shape=cds, label=<<font color="black">%6 = clo&lt;PromiseResolve&gt;(@EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Promise%&quot;], value)</font>> color="black" fillcolor="white", style=filled]
    node18677 -> node18678 [color="black"]
    node18678_name [shape=none, label=<<font color="black">Call[18678]</font>>]
    node18678_name -> node18678 [arrowhead=none, color="black", style=dashed]
    node18678 [shape=cds, label=<<font color="black">%7 = clo&lt;Completion&gt;(%6)</font>> color="black" fillcolor="white", style=filled]
    node18678 -> node18679 [color="black"]
    node18679_name [shape=none, label=<<font color="black">Block[18679]</font>>]
    node18679_name -> node18679 [arrowhead=none, color="black", style=dashed]
    node18679 [shape=box, label=<<font color="black">[0] let valueWrapper = %7<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18679 -> node18680 [color="black"]
    node18680_name [shape=none, label=<<font color="black">Branch[18680]</font>>]
    node18680_name -> node18680 [arrowhead=none, color="black", style=dashed]
    node18680 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? valueWrapper) (! (= valueWrapper.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node18680 -> node18681 [label=<<font color="black">true</font>> color="black"]
    node18680 -> node18683 [label=<<font color="black">false</font>> color="black"]
    node18681_name [shape=none, label=<<font color="black">Call[18681]</font>>]
    node18681_name -> node18681 [arrowhead=none, color="black", style=dashed]
    node18681 [shape=cds, label=<<font color="black">%8 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [valueWrapper.Value])[#1231])</font>> color="black" fillcolor="white", style=filled]
    node18681 -> node18682 [color="black"]
    node18683_name [shape=none, label=<<font color="black">Branch[18683]</font>>]
    node18683_name -> node18683 [arrowhead=none, color="black", style=dashed]
    node18683 [shape=diamond, label=<<font color="black">(? valueWrapper: &quot;CompletionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node18683 -> node18684 [label=<<font color="black">true</font>> color="black"]
    node18683 -> node18685 [label=<<font color="black">false</font>> color="black"]
    node18682_name [shape=none, label=<<font color="black">Block[18682]</font>>]
    node18682_name -> node18682 [arrowhead=none, color="black", style=dashed]
    node18682 [shape=box, label=<<font color="black">[0] [? %8]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18682 -> cluster2566_exit [color="black"]
    node18684_name [shape=none, label=<<font color="black">Block[18684]</font>>]
    node18684_name -> node18684 [arrowhead=none, color="black", style=dashed]
    node18684 [shape=box, label=<<font color="black">[0] valueWrapper = valueWrapper.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18684 -> node18685 [color="black"]
    node18685_name [shape=none, label=<<font color="black">Block[18685]</font>>]
    node18685_name -> node18685 [arrowhead=none, color="black", style=dashed]
    node18685 [shape=box, label=<<font color="black">[0] let unwrap = clo&lt;AsyncFromSyncIteratorContinuation:clo0, [done]&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18685 -> node18686 [color="black"]
    node18686_name [shape=none, label=<<font color="black">Call[18686]</font>>]
    node18686_name -> node18686 [arrowhead=none, color="black", style=dashed]
    node18686 [shape=cds, label=<<font color="black">%9 = clo&lt;CreateBuiltinFunction&gt;(unwrap, 1, &quot;&quot;, (new [])[#1232])</font>> color="black" fillcolor="white", style=filled]
    node18686 -> node18687 [color="black"]
    node18687_name [shape=none, label=<<font color="black">Block[18687]</font>>]
    node18687_name -> node18687 [arrowhead=none, color="black", style=dashed]
    node18687 [shape=box, label=<<font color="black">[0] let onFulfilled = %9<BR ALIGN="LEFT"/>[1] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18687 -> node18688 [color="black"]
    node18688_name [shape=none, label=<<font color="black">Call[18688]</font>>]
    node18688_name -> node18688 [arrowhead=none, color="black", style=dashed]
    node18688 [shape=cds, label=<<font color="black">%10 = clo&lt;PerformPromiseThen&gt;(valueWrapper, onFulfilled, undefined, promiseCapability)</font>> color="black" fillcolor="white", style=filled]
    node18688 -> node18689 [color="black"]
    node18689_name [shape=none, label=<<font color="black">Block[18689]</font>>]
    node18689_name -> node18689 [arrowhead=none, color="black", style=dashed]
    node18689 [shape=box, label=<<font color="black">[0] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18689 -> cluster2566_exit [color="black"]
  }
}