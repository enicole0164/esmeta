digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster264 {
    label = "def <SYNTAX>:CaseBlock[1,3].LexicallyDeclaredNames(this: Ast:CaseBlock[1,3]): List[String]"
    style = rounded
    cluster264_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster264_entry_name -> cluster264_entry [arrowhead=none, color="black", style=dashed]
    cluster264_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster264_entry -> node1711 [color="black"]
    cluster264_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster264_exit_name -> cluster264_exit [arrowhead=none, color="black", style=dashed]
    cluster264_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1711_name [shape=none, label=<<font color="black">Branch[1711]</font>>]
    node1711_name -> node1711 [arrowhead=none, color="black", style=dashed]
    node1711 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node1711 -> node1712 [label=<<font color="black">true</font>> color="black"]
    node1711 -> node1714 [label=<<font color="black">false</font>> color="black"]
    node1712_name [shape=none, label=<<font color="black">Call[1712]</font>>]
    node1712_name -> node1712 [arrowhead=none, color="black", style=dashed]
    node1712 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1712 -> node1713 [color="black"]
    node1714_name [shape=none, label=<<font color="black">Block[1714]</font>>]
    node1714_name -> node1714 [arrowhead=none, color="black", style=dashed]
    node1714 [shape=box, label=<<font color="black">[0] let names1 = (new [])[#124]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1714 -> node1715 [color="black"]
    node1713_name [shape=none, label=<<font color="black">Block[1713]</font>>]
    node1713_name -> node1713 [arrowhead=none, color="black", style=dashed]
    node1713 [shape=box, label=<<font color="black">[0] let names1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1713 -> node1715 [color="black"]
    node1715_name [shape=none, label=<<font color="black">Call[1715]</font>>]
    node1715_name -> node1715 [arrowhead=none, color="black", style=dashed]
    node1715 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1715 -> node1716 [color="black"]
    node1716_name [shape=none, label=<<font color="black">Block[1716]</font>>]
    node1716_name -> node1716 [arrowhead=none, color="black", style=dashed]
    node1716 [shape=box, label=<<font color="black">[0] let names2 = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1716 -> node1717 [color="black"]
    node1717_name [shape=none, label=<<font color="black">Branch[1717]</font>>]
    node1717_name -> node1717 [arrowhead=none, color="black", style=dashed]
    node1717 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node1717 -> node1718 [label=<<font color="black">true</font>> color="black"]
    node1717 -> node1720 [label=<<font color="black">false</font>> color="black"]
    node1718_name [shape=none, label=<<font color="black">Call[1718]</font>>]
    node1718_name -> node1718 [arrowhead=none, color="black", style=dashed]
    node1718 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1718 -> node1719 [color="black"]
    node1720_name [shape=none, label=<<font color="black">Block[1720]</font>>]
    node1720_name -> node1720 [arrowhead=none, color="black", style=dashed]
    node1720 [shape=box, label=<<font color="black">[0] let names3 = (new [])[#125]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1720 -> node1721 [color="black"]
    node1719_name [shape=none, label=<<font color="black">Block[1719]</font>>]
    node1719_name -> node1719 [arrowhead=none, color="black", style=dashed]
    node1719 [shape=box, label=<<font color="black">[0] let names3 = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1719 -> node1721 [color="black"]
    node1721_name [shape=none, label=<<font color="black">Block[1721]</font>>]
    node1721_name -> node1721 [arrowhead=none, color="black", style=dashed]
    node1721 [shape=box, label=<<font color="black">[0] return (list-concat names1 names2 names3)[#126]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1721 -> cluster264_exit [color="black"]
  }
}