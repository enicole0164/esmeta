digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster501 {
    label = "def <SYNTAX>:ForStatement[1,1].ContainsDuplicateLabels(this: Ast:ForStatement[1,1], labelSet: Unknown): Boolean"
    style = rounded
    cluster501_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster501_entry_name -> cluster501_entry [arrowhead=none, color="black", style=dashed]
    cluster501_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster501_entry -> node2367 [color="black"]
    cluster501_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster501_exit_name -> cluster501_exit [arrowhead=none, color="black", style=dashed]
    cluster501_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2367_name [shape=none, label=<<font color="black">Call[2367]</font>>]
    node2367_name -> node2367 [arrowhead=none, color="black", style=dashed]
    node2367 [shape=cds, label=<<font color="black">%0 = this[3]-&gt;ContainsDuplicateLabels(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2367 -> node2368 [color="black"]
    node2368_name [shape=none, label=<<font color="black">Block[2368]</font>>]
    node2368_name -> node2368 [arrowhead=none, color="black", style=dashed]
    node2368 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2368 -> cluster501_exit [color="black"]
  }
}