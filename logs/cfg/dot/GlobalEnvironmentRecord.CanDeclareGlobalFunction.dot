digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1013 {
    label = "def <CONC>:GlobalEnvironmentRecord.CanDeclareGlobalFunction(envRec: GlobalEnvironmentRecord, N: String): Normal[Boolean] | Abrupt"
    style = rounded
    cluster1013_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1013_entry_name -> cluster1013_entry [arrowhead=none, color="black", style=dashed]
    cluster1013_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1013_entry -> node3779 [color="black"]
    cluster1013_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1013_exit_name -> cluster1013_exit [arrowhead=none, color="black", style=dashed]
    cluster1013_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3779_name [shape=none, label=<<font color="black">Block[3779]</font>>]
    node3779_name -> node3779 [arrowhead=none, color="black", style=dashed]
    node3779 [shape=box, label=<<font color="black">[0] let ObjRec = envRec.ObjectRecord<BR ALIGN="LEFT"/>[1] let globalObject = ObjRec.BindingObject<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3779 -> node3780 [color="black"]
    node3780_name [shape=none, label=<<font color="black">Call[3780]</font>>]
    node3780_name -> node3780 [arrowhead=none, color="black", style=dashed]
    node3780 [shape=cds, label=<<font color="black">%0 = globalObject-&gt;GetOwnProperty(N)</font>> color="black" fillcolor="white", style=filled]
    node3780 -> node3781 [color="black"]
    node3781_name [shape=none, label=<<font color="black">Block[3781]</font>>]
    node3781_name -> node3781 [arrowhead=none, color="black", style=dashed]
    node3781 [shape=box, label=<<font color="black">[0] let existingProp = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3781 -> node3782 [color="black"]
    node3782_name [shape=none, label=<<font color="black">Branch[3782]</font>>]
    node3782_name -> node3782 [arrowhead=none, color="black", style=dashed]
    node3782 [shape=diamond, label=<<font color="black">(= existingProp undefined)</font>> color="black" fillcolor="white", style=filled]
    node3782 -> node3783 [label=<<font color="black">true</font>> color="black"]
    node3782 -> node3785 [label=<<font color="black">false</font>> color="black"]
    node3783_name [shape=none, label=<<font color="black">Call[3783]</font>>]
    node3783_name -> node3783 [arrowhead=none, color="black", style=dashed]
    node3783 [shape=cds, label=<<font color="black">%1 = clo&lt;IsExtensible&gt;(globalObject)</font>> color="black" fillcolor="white", style=filled]
    node3783 -> node3784 [color="black"]
    node3785_name [shape=none, label=<<font color="black">Branch[3785]</font>>]
    node3785_name -> node3785 [arrowhead=none, color="black", style=dashed]
    node3785 [shape=diamond, label=<<font color="black">(= existingProp.Configurable true)</font>> color="black" fillcolor="white", style=filled]
    node3785 -> node3786 [label=<<font color="black">true</font>> color="black"]
    node3785 -> node3787 [label=<<font color="black">false</font>> color="black"]
    node3784_name [shape=none, label=<<font color="black">Block[3784]</font>>]
    node3784_name -> node3784 [arrowhead=none, color="black", style=dashed]
    node3784 [shape=box, label=<<font color="black">[0] return [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3784 -> cluster1013_exit [color="black"]
    node3786_name [shape=none, label=<<font color="black">Block[3786]</font>>]
    node3786_name -> node3786 [arrowhead=none, color="black", style=dashed]
    node3786 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3786 -> cluster1013_exit [color="black"]
    node3787_name [shape=none, label=<<font color="black">Block[3787]</font>>]
    node3787_name -> node3787 [arrowhead=none, color="black", style=dashed]
    node3787 [shape=box, label=<<font color="black">[0] (yet &quot;If IsDataDescriptor(_existingProp_) is *true* and _existingProp_ has attribute values { [[Writable]]: *true*, [[Enumerable]]: *true* }, return *true*.&quot;)<BR ALIGN="LEFT"/>[1] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3787 -> cluster1013_exit [color="black"]
  }
}