digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2489 {
    label = "def IsSharedArrayBuffer(obj: Unknown["ArrayBufferOrASharedArrayBuffer"]): Boolean"
    style = rounded
    cluster2489_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2489_entry_name -> cluster2489_entry [arrowhead=none, color="black", style=dashed]
    cluster2489_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2489_entry -> node17554 [color="black"]
    cluster2489_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2489_exit_name -> cluster2489_exit [arrowhead=none, color="black", style=dashed]
    cluster2489_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17554_name [shape=none, label=<<font color="black">Block[17554]</font>>]
    node17554_name -> node17554 [arrowhead=none, color="black", style=dashed]
    node17554 [shape=box, label=<<font color="black">[0] let bufferData = obj.ArrayBufferData<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17554 -> node17555 [color="black"]
    node17555_name [shape=none, label=<<font color="black">Branch[17555]</font>>]
    node17555_name -> node17555 [arrowhead=none, color="black", style=dashed]
    node17555 [shape=diamond, label=<<font color="black">(= bufferData null)</font>> color="black" fillcolor="white", style=filled]
    node17555 -> node17556 [label=<<font color="black">true</font>> color="black"]
    node17555 -> node17557 [label=<<font color="black">false</font>> color="black"]
    node17556_name [shape=none, label=<<font color="black">Block[17556]</font>>]
    node17556_name -> node17556 [arrowhead=none, color="black", style=dashed]
    node17556 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17556 -> cluster2489_exit [color="black"]
    node17557_name [shape=none, label=<<font color="black">Branch[17557]</font>>]
    node17557_name -> node17557 [arrowhead=none, color="black", style=dashed]
    node17557 [shape=diamond, label=<<font color="black">(? bufferData: &quot;DataBlock&quot;)</font>> color="black" fillcolor="white", style=filled]
    node17557 -> node17558 [label=<<font color="black">true</font>> color="black"]
    node17557 -> node17559 [label=<<font color="black">false</font>> color="black"]
    node17558_name [shape=none, label=<<font color="black">Block[17558]</font>>]
    node17558_name -> node17558 [arrowhead=none, color="black", style=dashed]
    node17558 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17558 -> cluster2489_exit [color="black"]
    node17559_name [shape=none, label=<<font color="black">Block[17559]</font>>]
    node17559_name -> node17559 [arrowhead=none, color="black", style=dashed]
    node17559 [shape=box, label=<<font color="black">[0] assert (? bufferData: &quot;SharedDataBlock&quot;)<BR ALIGN="LEFT"/>[1] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17559 -> cluster2489_exit [color="black"]
  }
}