digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1961 {
    label = "def <SYNTAX>:ExportDeclaration[4,0].ExportEntries(this: Ast:ExportDeclaration[4,0]): Unknown["ListOfExportEntryRecords"]"
    style = rounded
    cluster1961_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1961_entry_name -> cluster1961_entry [arrowhead=none, color="black", style=dashed]
    cluster1961_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1961_entry -> node10647 [color="black"]
    cluster1961_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1961_exit_name -> cluster1961_exit [arrowhead=none, color="black", style=dashed]
    cluster1961_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node10647_name [shape=none, label=<<font color="black">Call[10647]</font>>]
    node10647_name -> node10647 [arrowhead=none, color="black", style=dashed]
    node10647 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node10647 -> node10648 [color="black"]
    node10648_name [shape=none, label=<<font color="black">Block[10648]</font>>]
    node10648_name -> node10648 [arrowhead=none, color="black", style=dashed]
    node10648 [shape=box, label=<<font color="black">[0] let names = %0<BR ALIGN="LEFT"/>[1] let localName = names[0]<BR ALIGN="LEFT"/>[2] return (new [(new ExportEntryRecord(&quot;ModuleRequest&quot; -&gt; null, &quot;ImportName&quot; -&gt; null, &quot;LocalName&quot; -&gt; localName, &quot;ExportName&quot; -&gt; &quot;default&quot;))[#849]])[#848]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10648 -> cluster1961_exit [color="black"]
  }
}