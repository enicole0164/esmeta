digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster787 {
    label = "def <SYNTAX>:AsyncFunctionExpression[0,0].NamedEvaluation(this: Ast:AsyncFunctionExpression[0,0], name: Unknown): Normal[FunctionObject] | Abrupt"
    style = rounded
    cluster787_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster787_entry_name -> cluster787_entry [arrowhead=none, color="black", style=dashed]
    cluster787_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster787_entry -> node3034 [color="black"]
    cluster787_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster787_exit_name -> cluster787_exit [arrowhead=none, color="black", style=dashed]
    cluster787_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3034_name [shape=none, label=<<font color="black">Call[3034]</font>>]
    node3034_name -> node3034 [arrowhead=none, color="black", style=dashed]
    node3034 [shape=cds, label=<<font color="black">%0 = this-&gt;InstantiateAsyncFunctionExpression(name)</font>> color="black" fillcolor="white", style=filled]
    node3034 -> node3035 [color="black"]
    node3035_name [shape=none, label=<<font color="black">Block[3035]</font>>]
    node3035_name -> node3035 [arrowhead=none, color="black", style=dashed]
    node3035 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3035 -> cluster787_exit [color="black"]
  }
}