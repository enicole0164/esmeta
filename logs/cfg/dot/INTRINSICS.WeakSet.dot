digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2466 {
    label = "def <BUILTIN>:INTRINSICS.WeakSet(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2466_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2466_entry_name -> cluster2466_entry [arrowhead=none, color="black", style=dashed]
    cluster2466_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2466_entry -> node17265 [color="black"]
    cluster2466_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2466_exit_name -> cluster2466_exit [arrowhead=none, color="black", style=dashed]
    cluster2466_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17265_name [shape=none, label=<<font color="black">Branch[17265]</font>>]
    node17265_name -> node17265 [arrowhead=none, color="black", style=dashed]
    node17265 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node17265 -> node17266 [label=<<font color="black">true</font>> color="black"]
    node17265 -> node17267 [label=<<font color="black">false</font>> color="black"]
    node17266_name [shape=none, label=<<font color="black">Block[17266]</font>>]
    node17266_name -> node17266 [arrowhead=none, color="black", style=dashed]
    node17266 [shape=box, label=<<font color="black">[0] let iterable = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17266 -> node17268 [color="black"]
    node17267_name [shape=none, label=<<font color="black">Block[17267]</font>>]
    node17267_name -> node17267 [arrowhead=none, color="black", style=dashed]
    node17267 [shape=box, label=<<font color="black">[0] let iterable = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17267 -> node17268 [color="black"]
    node17268_name [shape=none, label=<<font color="black">Branch[17268]</font>>]
    node17268_name -> node17268 [arrowhead=none, color="black", style=dashed]
    node17268 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white", style=filled]
    node17268 -> node17269 [label=<<font color="black">true</font>> color="black"]
    node17268 -> node17270 [label=<<font color="black">false</font>> color="black"]
    node17269_name [shape=none, label=<<font color="black">Block[17269]</font>>]
    node17269_name -> node17269 [arrowhead=none, color="black", style=dashed]
    node17269 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1136])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17269 -> cluster2466_exit [color="black"]
    node17270_name [shape=none, label=<<font color="black">Call[17270]</font>>]
    node17270_name -> node17270 [arrowhead=none, color="black", style=dashed]
    node17270 [shape=cds, label=<<font color="black">%0 = clo&lt;OrdinaryCreateFromConstructor&gt;(NewTarget, &quot;%WeakSet.prototype%&quot;, (new [&quot;WeakSetData&quot;])[#1137])</font>> color="black" fillcolor="white", style=filled]
    node17270 -> node17271 [color="black"]
    node17271_name [shape=none, label=<<font color="black">Block[17271]</font>>]
    node17271_name -> node17271 [arrowhead=none, color="black", style=dashed]
    node17271 [shape=box, label=<<font color="black">[0] let set = [? %0]<BR ALIGN="LEFT"/>[1] set.WeakSetData = (new [])[#1138]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17271 -> node17272 [color="black"]
    node17272_name [shape=none, label=<<font color="black">Branch[17272]</font>>]
    node17272_name -> node17272 [arrowhead=none, color="black", style=dashed]
    node17272 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white", style=filled]
    node17272 -> node17273 [label=<<font color="black">true</font>> color="black"]
    node17272 -> node17274 [label=<<font color="black">false</font>> color="black"]
    node17273_name [shape=none, label=<<font color="black">Block[17273]</font>>]
    node17273_name -> node17273 [arrowhead=none, color="black", style=dashed]
    node17273 [shape=box, label=<<font color="black">[0] return set<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17273 -> cluster2466_exit [color="black"]
    node17274_name [shape=none, label=<<font color="black">Call[17274]</font>>]
    node17274_name -> node17274 [arrowhead=none, color="black", style=dashed]
    node17274 [shape=cds, label=<<font color="black">%1 = clo&lt;Get&gt;(set, &quot;add&quot;)</font>> color="black" fillcolor="white", style=filled]
    node17274 -> node17275 [color="black"]
    node17275_name [shape=none, label=<<font color="black">Block[17275]</font>>]
    node17275_name -> node17275 [arrowhead=none, color="black", style=dashed]
    node17275 [shape=box, label=<<font color="black">[0] let adder = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17275 -> node17276 [color="black"]
    node17276_name [shape=none, label=<<font color="black">Call[17276]</font>>]
    node17276_name -> node17276 [arrowhead=none, color="black", style=dashed]
    node17276 [shape=cds, label=<<font color="black">%2 = clo&lt;IsCallable&gt;(adder)</font>> color="black" fillcolor="white", style=filled]
    node17276 -> node17277 [color="black"]
    node17277_name [shape=none, label=<<font color="black">Branch[17277]</font>>]
    node17277_name -> node17277 [arrowhead=none, color="black", style=dashed]
    node17277 [shape=diamond, label=<<font color="black">(= %2 false)</font>> color="black" fillcolor="white", style=filled]
    node17277 -> node17278 [label=<<font color="black">true</font>> color="black"]
    node17277 -> node17279 [label=<<font color="black">false</font>> color="black"]
    node17278_name [shape=none, label=<<font color="black">Block[17278]</font>>]
    node17278_name -> node17278 [arrowhead=none, color="black", style=dashed]
    node17278 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1139])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17278 -> cluster2466_exit [color="black"]
    node17279_name [shape=none, label=<<font color="black">Call[17279]</font>>]
    node17279_name -> node17279 [arrowhead=none, color="black", style=dashed]
    node17279 [shape=cds, label=<<font color="black">%3 = clo&lt;GetIterator&gt;(iterable)</font>> color="black" fillcolor="white", style=filled]
    node17279 -> node17280 [color="black"]
    node17280_name [shape=none, label=<<font color="black">Block[17280]</font>>]
    node17280_name -> node17280 [arrowhead=none, color="black", style=dashed]
    node17280 [shape=box, label=<<font color="black">[0] let iteratorRecord = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17280 -> node17281 [color="black"]
    node17281_name [shape=none, label=<<font color="black">Branch[17281]</font>>]
    node17281_name -> node17281 [arrowhead=none, color="black", style=dashed]
    node17281 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white", style=filled]
    node17281 -> node17282 [label=<<font color="black">true</font>> color="black"]
    node17282_name [shape=none, label=<<font color="black">Call[17282]</font>>]
    node17282_name -> node17282 [arrowhead=none, color="black", style=dashed]
    node17282 [shape=cds, label=<<font color="black">%4 = clo&lt;IteratorStep&gt;(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node17282 -> node17283 [color="black"]
    node17283_name [shape=none, label=<<font color="black">Block[17283]</font>>]
    node17283_name -> node17283 [arrowhead=none, color="black", style=dashed]
    node17283 [shape=box, label=<<font color="black">[0] let next = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17283 -> node17284 [color="black"]
    node17284_name [shape=none, label=<<font color="black">Branch[17284]</font>>]
    node17284_name -> node17284 [arrowhead=none, color="black", style=dashed]
    node17284 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white", style=filled]
    node17284 -> node17285 [label=<<font color="black">true</font>> color="black"]
    node17284 -> node17286 [label=<<font color="black">false</font>> color="black"]
    node17285_name [shape=none, label=<<font color="black">Block[17285]</font>>]
    node17285_name -> node17285 [arrowhead=none, color="black", style=dashed]
    node17285 [shape=box, label=<<font color="black">[0] return set<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17285 -> cluster2466_exit [color="black"]
    node17286_name [shape=none, label=<<font color="black">Call[17286]</font>>]
    node17286_name -> node17286 [arrowhead=none, color="black", style=dashed]
    node17286 [shape=cds, label=<<font color="black">%5 = clo&lt;IteratorValue&gt;(next)</font>> color="black" fillcolor="white", style=filled]
    node17286 -> node17287 [color="black"]
    node17287_name [shape=none, label=<<font color="black">Block[17287]</font>>]
    node17287_name -> node17287 [arrowhead=none, color="black", style=dashed]
    node17287 [shape=box, label=<<font color="black">[0] let nextValue = [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17287 -> node17288 [color="black"]
    node17288_name [shape=none, label=<<font color="black">Call[17288]</font>>]
    node17288_name -> node17288 [arrowhead=none, color="black", style=dashed]
    node17288 [shape=cds, label=<<font color="black">%6 = clo&lt;Call&gt;(adder, set, (new [nextValue])[#1140])</font>> color="black" fillcolor="white", style=filled]
    node17288 -> node17289 [color="black"]
    node17289_name [shape=none, label=<<font color="black">Call[17289]</font>>]
    node17289_name -> node17289 [arrowhead=none, color="black", style=dashed]
    node17289 [shape=cds, label=<<font color="black">%7 = clo&lt;Completion&gt;(%6)</font>> color="black" fillcolor="white", style=filled]
    node17289 -> node17290 [color="black"]
    node17290_name [shape=none, label=<<font color="black">Block[17290]</font>>]
    node17290_name -> node17290 [arrowhead=none, color="black", style=dashed]
    node17290 [shape=box, label=<<font color="black">[0] let status = %7<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17290 -> node17291 [color="black"]
    node17291_name [shape=none, label=<<font color="black">Branch[17291]</font>>]
    node17291_name -> node17291 [arrowhead=none, color="black", style=dashed]
    node17291 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? status) (! (= status.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node17291 -> node17292 [label=<<font color="black">true</font>> color="black"]
    node17291 -> node17294 [label=<<font color="black">false</font>> color="black"]
    node17292_name [shape=none, label=<<font color="black">Call[17292]</font>>]
    node17292_name -> node17292 [arrowhead=none, color="black", style=dashed]
    node17292 [shape=cds, label=<<font color="black">%8 = clo&lt;IteratorClose&gt;(iteratorRecord, status)</font>> color="black" fillcolor="white", style=filled]
    node17292 -> node17293 [color="black"]
    node17294_name [shape=none, label=<<font color="black">Branch[17294]</font>>]
    node17294_name -> node17294 [arrowhead=none, color="black", style=dashed]
    node17294 [shape=diamond, label=<<font color="black">(? status: &quot;CompletionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node17294 -> node17295 [label=<<font color="black">true</font>> color="black"]
    node17294 -> node17281 [label=<<font color="black">false</font>> color="black"]
    node17293_name [shape=none, label=<<font color="black">Block[17293]</font>>]
    node17293_name -> node17293 [arrowhead=none, color="black", style=dashed]
    node17293 [shape=box, label=<<font color="black">[0] return [? %8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17293 -> cluster2466_exit [color="black"]
    node17295_name [shape=none, label=<<font color="black">Block[17295]</font>>]
    node17295_name -> node17295 [arrowhead=none, color="black", style=dashed]
    node17295 [shape=box, label=<<font color="black">[0] status = status.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17295 -> node17281 [color="black"]
  }
}