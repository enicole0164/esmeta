digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster569 {
    label = "def <SYNTAX>:ForStatement[2,3].ContainsUndefinedBreakTarget(this: Ast:ForStatement[2,3], labelSet: Unknown): Boolean"
    style = rounded
    cluster569_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster569_entry_name -> cluster569_entry [arrowhead=none, color="black", style=dashed]
    cluster569_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster569_entry -> node2567 [color="black"]
    cluster569_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster569_exit_name -> cluster569_exit [arrowhead=none, color="black", style=dashed]
    cluster569_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2567_name [shape=none, label=<<font color="black">Call[2567]</font>>]
    node2567_name -> node2567 [arrowhead=none, color="black", style=dashed]
    node2567 [shape=cds, label=<<font color="black">%0 = this[3]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2567 -> node2568 [color="black"]
    node2568_name [shape=none, label=<<font color="black">Block[2568]</font>>]
    node2568_name -> node2568 [arrowhead=none, color="black", style=dashed]
    node2568 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2568 -> cluster569_exit [color="black"]
  }
}