digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2443 {
    label = "def <BUILTIN>:INTRINSICS.get Map.prototype.size(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2443_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2443_entry_name -> cluster2443_entry [arrowhead=none, color="black", style=dashed]
    cluster2443_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2443_entry -> node17001 [color="black"]
    cluster2443_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2443_exit_name -> cluster2443_exit [arrowhead=none, color="black", style=dashed]
    cluster2443_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17001_name [shape=none, label=<<font color="black">Block[17001]</font>>]
    node17001_name -> node17001 [arrowhead=none, color="black", style=dashed]
    node17001 [shape=box, label=<<font color="black">[0] let M = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17001 -> node17002 [color="black"]
    node17002_name [shape=none, label=<<font color="black">Call[17002]</font>>]
    node17002_name -> node17002 [arrowhead=none, color="black", style=dashed]
    node17002 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireInternalSlot&gt;(M, &quot;MapData&quot;)</font>> color="black" fillcolor="white", style=filled]
    node17002 -> node17003 [color="black"]
    node17003_name [shape=none, label=<<font color="black">Block[17003]</font>>]
    node17003_name -> node17003 [arrowhead=none, color="black", style=dashed]
    node17003 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/>[1] let entries = M.MapData<BR ALIGN="LEFT"/>[2] let count = 0<BR ALIGN="LEFT"/>[3] %2 = entries<BR ALIGN="LEFT"/>[4] %1 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17003 -> node17004 [color="black"]
    node17004_name [shape=none, label=<<font color="black">Branch[17004]</font>>]
    node17004_name -> node17004 [arrowhead=none, color="black", style=dashed]
    node17004 [shape=diamond, label=<<font color="black">(&lt; %1 %2.length)</font>> color="black" fillcolor="white", style=filled]
    node17004 -> node17005 [label=<<font color="black">true</font>> color="black"]
    node17004 -> node17009 [label=<<font color="black">false</font>> color="black"]
    node17005_name [shape=none, label=<<font color="black">Block[17005]</font>>]
    node17005_name -> node17005 [arrowhead=none, color="black", style=dashed]
    node17005 [shape=box, label=<<font color="black">[0] let p = %2[%1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17005 -> node17006 [color="black"]
    node17009_name [shape=none, label=<<font color="black">Block[17009]</font>>]
    node17009_name -> node17009 [arrowhead=none, color="black", style=dashed]
    node17009 [shape=box, label=<<font color="black">[0] return ([number] count)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17009 -> cluster2443_exit [color="black"]
    node17006_name [shape=none, label=<<font color="black">Branch[17006]</font>>]
    node17006_name -> node17006 [arrowhead=none, color="black", style=dashed]
    node17006 [shape=diamond, label=<<font color="black">(! (= p.Key ~empty~))</font>> color="black" fillcolor="white", style=filled]
    node17006 -> node17007 [label=<<font color="black">true</font>> color="black"]
    node17006 -> node17008 [label=<<font color="black">false</font>> color="black"]
    node17007_name [shape=none, label=<<font color="black">Block[17007]</font>>]
    node17007_name -> node17007 [arrowhead=none, color="black", style=dashed]
    node17007 [shape=box, label=<<font color="black">[0] count = (+ count 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17007 -> node17008 [color="black"]
    node17008_name [shape=none, label=<<font color="black">Block[17008]</font>>]
    node17008_name -> node17008 [arrowhead=none, color="black", style=dashed]
    node17008 [shape=box, label=<<font color="black">[0] %1 = (+ %1 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17008 -> node17004 [color="black"]
  }
}