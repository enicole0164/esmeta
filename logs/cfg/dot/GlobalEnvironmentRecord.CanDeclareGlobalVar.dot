digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1012 {
    label = "def <CONC>:GlobalEnvironmentRecord.CanDeclareGlobalVar(envRec: GlobalEnvironmentRecord, N: String): Normal[Boolean] | Abrupt"
    style = rounded
    cluster1012_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1012_entry_name -> cluster1012_entry [arrowhead=none, color="black", style=dashed]
    cluster1012_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1012_entry -> node3772 [color="black"]
    cluster1012_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1012_exit_name -> cluster1012_exit [arrowhead=none, color="black", style=dashed]
    cluster1012_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3772_name [shape=none, label=<<font color="black">Block[3772]</font>>]
    node3772_name -> node3772 [arrowhead=none, color="black", style=dashed]
    node3772 [shape=box, label=<<font color="black">[0] let ObjRec = envRec.ObjectRecord<BR ALIGN="LEFT"/>[1] let globalObject = ObjRec.BindingObject<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3772 -> node3773 [color="black"]
    node3773_name [shape=none, label=<<font color="black">Call[3773]</font>>]
    node3773_name -> node3773 [arrowhead=none, color="black", style=dashed]
    node3773 [shape=cds, label=<<font color="black">%0 = clo&lt;HasOwnProperty&gt;(globalObject, N)</font>> color="black" fillcolor="white", style=filled]
    node3773 -> node3774 [color="black"]
    node3774_name [shape=none, label=<<font color="black">Block[3774]</font>>]
    node3774_name -> node3774 [arrowhead=none, color="black", style=dashed]
    node3774 [shape=box, label=<<font color="black">[0] let hasProperty = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3774 -> node3775 [color="black"]
    node3775_name [shape=none, label=<<font color="black">Branch[3775]</font>>]
    node3775_name -> node3775 [arrowhead=none, color="black", style=dashed]
    node3775 [shape=diamond, label=<<font color="black">(= hasProperty true)</font>> color="black" fillcolor="white", style=filled]
    node3775 -> node3776 [label=<<font color="black">true</font>> color="black"]
    node3775 -> node3777 [label=<<font color="black">false</font>> color="black"]
    node3776_name [shape=none, label=<<font color="black">Block[3776]</font>>]
    node3776_name -> node3776 [arrowhead=none, color="black", style=dashed]
    node3776 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3776 -> cluster1012_exit [color="black"]
    node3777_name [shape=none, label=<<font color="black">Call[3777]</font>>]
    node3777_name -> node3777 [arrowhead=none, color="black", style=dashed]
    node3777 [shape=cds, label=<<font color="black">%1 = clo&lt;IsExtensible&gt;(globalObject)</font>> color="black" fillcolor="white", style=filled]
    node3777 -> node3778 [color="black"]
    node3778_name [shape=none, label=<<font color="black">Block[3778]</font>>]
    node3778_name -> node3778 [arrowhead=none, color="black", style=dashed]
    node3778 [shape=box, label=<<font color="black">[0] return [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3778 -> cluster1012_exit [color="black"]
  }
}