digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1869 {
    label = "def ScriptEvaluation(scriptRecord: Unknown): Normal[ESValue] | Abrupt"
    style = rounded
    cluster1869_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1869_entry_name -> cluster1869_entry [arrowhead=none, color="black", style=dashed]
    cluster1869_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1869_entry -> node9977 [color="black"]
    cluster1869_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1869_exit_name -> cluster1869_exit [arrowhead=none, color="black", style=dashed]
    cluster1869_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9977_name [shape=none, label=<<font color="black">Block[9977]</font>>]
    node9977_name -> node9977 [arrowhead=none, color="black", style=dashed]
    node9977 [shape=box, label=<<font color="black">[0] let globalEnv = scriptRecord.Realm.GlobalEnv<BR ALIGN="LEFT"/>[1] let scriptContext = (new ExecutionContext())[#749]<BR ALIGN="LEFT"/>[2] scriptContext.Function = null<BR ALIGN="LEFT"/>[3] scriptContext.Realm = scriptRecord.Realm<BR ALIGN="LEFT"/>[4] scriptContext.ScriptOrModule = scriptRecord<BR ALIGN="LEFT"/>[5] scriptContext.VariableEnvironment = globalEnv<BR ALIGN="LEFT"/>[6] scriptContext.LexicalEnvironment = globalEnv<BR ALIGN="LEFT"/>[7] scriptContext.PrivateEnvironment = null<BR ALIGN="LEFT"/>[8] nop<BR ALIGN="LEFT"/>[9] push scriptContext &gt; @EXECUTION_STACK<BR ALIGN="LEFT"/>[10] let script = scriptRecord.ECMAScriptCode<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9977 -> node9978 [color="black"]
    node9978_name [shape=none, label=<<font color="black">Call[9978]</font>>]
    node9978_name -> node9978 [arrowhead=none, color="black", style=dashed]
    node9978 [shape=cds, label=<<font color="black">%0 = clo&lt;GlobalDeclarationInstantiation&gt;(script, globalEnv)</font>> color="black" fillcolor="white", style=filled]
    node9978 -> node9979 [color="black"]
    node9979_name [shape=none, label=<<font color="black">Call[9979]</font>>]
    node9979_name -> node9979 [arrowhead=none, color="black", style=dashed]
    node9979 [shape=cds, label=<<font color="black">%1 = clo&lt;Completion&gt;(%0)</font>> color="black" fillcolor="white", style=filled]
    node9979 -> node9980 [color="black"]
    node9980_name [shape=none, label=<<font color="black">Block[9980]</font>>]
    node9980_name -> node9980 [arrowhead=none, color="black", style=dashed]
    node9980 [shape=box, label=<<font color="black">[0] let result = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9980 -> node9981 [color="black"]
    node9981_name [shape=none, label=<<font color="black">Branch[9981]</font>>]
    node9981_name -> node9981 [arrowhead=none, color="black", style=dashed]
    node9981 [shape=diamond, label=<<font color="black">(= result.Type ~normal~)</font>> color="black" fillcolor="white", style=filled]
    node9981 -> node9982 [label=<<font color="black">true</font>> color="black"]
    node9981 -> node9984 [label=<<font color="black">false</font>> color="black"]
    node9982_name [shape=none, label=<<font color="black">Call[9982]</font>>]
    node9982_name -> node9982 [arrowhead=none, color="black", style=dashed]
    node9982 [shape=cds, label=<<font color="black">%2 = script-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node9982 -> node9983 [color="black"]
    node9984_name [shape=none, label=<<font color="black">Branch[9984]</font>>]
    node9984_name -> node9984 [arrowhead=none, color="black", style=dashed]
    node9984 [shape=diamond, label=<<font color="black">(&amp;&amp; (= result.Type ~normal~) (= result.Value ~empty~))</font>> color="black" fillcolor="white", style=filled]
    node9984 -> node9985 [label=<<font color="black">true</font>> color="black"]
    node9984 -> node9987 [label=<<font color="black">false</font>> color="black"]
    node9983_name [shape=none, label=<<font color="black">Block[9983]</font>>]
    node9983_name -> node9983 [arrowhead=none, color="black", style=dashed]
    node9983 [shape=box, label=<<font color="black">[0] result = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9983 -> node9984 [color="black"]
    node9985_name [shape=none, label=<<font color="black">Call[9985]</font>>]
    node9985_name -> node9985 [arrowhead=none, color="black", style=dashed]
    node9985 [shape=cds, label=<<font color="black">%3 = clo&lt;NormalCompletion&gt;(undefined)</font>> color="black" fillcolor="white", style=filled]
    node9985 -> node9986 [color="black"]
    node9987_name [shape=none, label=<<font color="black">Block[9987]</font>>]
    node9987_name -> node9987 [arrowhead=none, color="black", style=dashed]
    node9987 [shape=box, label=<<font color="black">[0] (pop &lt; @EXECUTION_STACK)<BR ALIGN="LEFT"/>[1] assert (! (= @EXECUTION_STACK.length 0))<BR ALIGN="LEFT"/>[2] nop<BR ALIGN="LEFT"/>[3] return [? result]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9987 -> cluster1869_exit [color="black"]
    node9986_name [shape=none, label=<<font color="black">Block[9986]</font>>]
    node9986_name -> node9986 [arrowhead=none, color="black", style=dashed]
    node9986 [shape=box, label=<<font color="black">[0] result = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9986 -> node9987 [color="black"]
  }
}