digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2451 {
    label = "def <BUILTIN>:INTRINSICS.Set.prototype.clear(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2451_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2451_entry_name -> cluster2451_entry [arrowhead=none, color="black", style=dashed]
    cluster2451_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2451_entry -> node17084 [color="black"]
    cluster2451_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2451_exit_name -> cluster2451_exit [arrowhead=none, color="black", style=dashed]
    cluster2451_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17084_name [shape=none, label=<<font color="black">Block[17084]</font>>]
    node17084_name -> node17084 [arrowhead=none, color="black", style=dashed]
    node17084 [shape=box, label=<<font color="black">[0] let S = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17084 -> node17085 [color="black"]
    node17085_name [shape=none, label=<<font color="black">Call[17085]</font>>]
    node17085_name -> node17085 [arrowhead=none, color="black", style=dashed]
    node17085 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireInternalSlot&gt;(S, &quot;SetData&quot;)</font>> color="black" fillcolor="white", style=filled]
    node17085 -> node17086 [color="black"]
    node17086_name [shape=none, label=<<font color="black">Block[17086]</font>>]
    node17086_name -> node17086 [arrowhead=none, color="black", style=dashed]
    node17086 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/>[1] let entries = S.SetData<BR ALIGN="LEFT"/>[2] %2 = entries<BR ALIGN="LEFT"/>[3] %1 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17086 -> node17087 [color="black"]
    node17087_name [shape=none, label=<<font color="black">Branch[17087]</font>>]
    node17087_name -> node17087 [arrowhead=none, color="black", style=dashed]
    node17087 [shape=diamond, label=<<font color="black">(&lt; %1 %2.length)</font>> color="black" fillcolor="white", style=filled]
    node17087 -> node17088 [label=<<font color="black">true</font>> color="black"]
    node17087 -> node17089 [label=<<font color="black">false</font>> color="black"]
    node17088_name [shape=none, label=<<font color="black">Block[17088]</font>>]
    node17088_name -> node17088 [arrowhead=none, color="black", style=dashed]
    node17088 [shape=box, label=<<font color="black">[0] let e = %2[%1]<BR ALIGN="LEFT"/>[1] (yet &quot;Replace the element of _entries_ whose value is _e_ with an element whose value is ~empty~.&quot;)<BR ALIGN="LEFT"/>[2] %1 = (+ %1 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17088 -> node17087 [color="black"]
    node17089_name [shape=none, label=<<font color="black">Block[17089]</font>>]
    node17089_name -> node17089 [arrowhead=none, color="black", style=dashed]
    node17089 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17089 -> cluster2451_exit [color="black"]
  }
}