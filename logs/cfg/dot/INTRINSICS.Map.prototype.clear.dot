digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2435 {
    label = "def <BUILTIN>:INTRINSICS.Map.prototype.clear(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2435_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2435_entry_name -> cluster2435_entry [arrowhead=none, color="black", style=dashed]
    cluster2435_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2435_entry -> node16904 [color="black"]
    cluster2435_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2435_exit_name -> cluster2435_exit [arrowhead=none, color="black", style=dashed]
    cluster2435_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node16904_name [shape=none, label=<<font color="black">Block[16904]</font>>]
    node16904_name -> node16904 [arrowhead=none, color="black", style=dashed]
    node16904 [shape=box, label=<<font color="black">[0] let M = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16904 -> node16905 [color="black"]
    node16905_name [shape=none, label=<<font color="black">Call[16905]</font>>]
    node16905_name -> node16905 [arrowhead=none, color="black", style=dashed]
    node16905 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireInternalSlot&gt;(M, &quot;MapData&quot;)</font>> color="black" fillcolor="white", style=filled]
    node16905 -> node16906 [color="black"]
    node16906_name [shape=none, label=<<font color="black">Block[16906]</font>>]
    node16906_name -> node16906 [arrowhead=none, color="black", style=dashed]
    node16906 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/>[1] let entries = M.MapData<BR ALIGN="LEFT"/>[2] %2 = entries<BR ALIGN="LEFT"/>[3] %1 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16906 -> node16907 [color="black"]
    node16907_name [shape=none, label=<<font color="black">Branch[16907]</font>>]
    node16907_name -> node16907 [arrowhead=none, color="black", style=dashed]
    node16907 [shape=diamond, label=<<font color="black">(&lt; %1 %2.length)</font>> color="black" fillcolor="white", style=filled]
    node16907 -> node16908 [label=<<font color="black">true</font>> color="black"]
    node16907 -> node16909 [label=<<font color="black">false</font>> color="black"]
    node16908_name [shape=none, label=<<font color="black">Block[16908]</font>>]
    node16908_name -> node16908 [arrowhead=none, color="black", style=dashed]
    node16908 [shape=box, label=<<font color="black">[0] let p = %2[%1]<BR ALIGN="LEFT"/>[1] p.Key = ~empty~<BR ALIGN="LEFT"/>[2] p.Value = ~empty~<BR ALIGN="LEFT"/>[3] %1 = (+ %1 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16908 -> node16907 [color="black"]
    node16909_name [shape=none, label=<<font color="black">Block[16909]</font>>]
    node16909_name -> node16909 [arrowhead=none, color="black", style=dashed]
    node16909 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16909 -> cluster2435_exit [color="black"]
  }
}