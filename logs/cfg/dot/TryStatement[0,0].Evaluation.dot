digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1506 {
    label = "def <SYNTAX>:TryStatement[0,0].Evaluation(this: Ast:TryStatement[0,0]): Unknown"
    style = rounded
    cluster1506_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1506_entry_name -> cluster1506_entry [arrowhead=none, color="black", style=dashed]
    cluster1506_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1506_entry -> node8248 [color="black"]
    cluster1506_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1506_exit_name -> cluster1506_exit [arrowhead=none, color="black", style=dashed]
    cluster1506_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8248_name [shape=none, label=<<font color="black">Call[8248]</font>>]
    node8248_name -> node8248 [arrowhead=none, color="black", style=dashed]
    node8248 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node8248 -> node8249 [color="black"]
    node8249_name [shape=none, label=<<font color="black">Block[8249]</font>>]
    node8249_name -> node8249 [arrowhead=none, color="black", style=dashed]
    node8249 [shape=box, label=<<font color="black">[0] let B = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8249 -> node8250 [color="black"]
    node8250_name [shape=none, label=<<font color="black">Branch[8250]</font>>]
    node8250_name -> node8250 [arrowhead=none, color="black", style=dashed]
    node8250 [shape=diamond, label=<<font color="black">(= B.Type ~throw~)</font>> color="black" fillcolor="white", style=filled]
    node8250 -> node8251 [label=<<font color="black">true</font>> color="black"]
    node8250 -> node8254 [label=<<font color="black">false</font>> color="black"]
    node8251_name [shape=none, label=<<font color="black">Call[8251]</font>>]
    node8251_name -> node8251 [arrowhead=none, color="black", style=dashed]
    node8251 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;CatchClauseEvaluation(B.Value)</font>> color="black" fillcolor="white", style=filled]
    node8251 -> node8252 [color="black"]
    node8254_name [shape=none, label=<<font color="black">Block[8254]</font>>]
    node8254_name -> node8254 [arrowhead=none, color="black", style=dashed]
    node8254 [shape=box, label=<<font color="black">[0] let C = B<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8254 -> node8255 [color="black"]
    node8252_name [shape=none, label=<<font color="black">Call[8252]</font>>]
    node8252_name -> node8252 [arrowhead=none, color="black", style=dashed]
    node8252 [shape=cds, label=<<font color="black">%2 = clo&lt;Completion&gt;(%1)</font>> color="black" fillcolor="white", style=filled]
    node8252 -> node8253 [color="black"]
    node8255_name [shape=none, label=<<font color="black">Call[8255]</font>>]
    node8255_name -> node8255 [arrowhead=none, color="black", style=dashed]
    node8255 [shape=cds, label=<<font color="black">%3 = clo&lt;UpdateEmpty&gt;(C, undefined)</font>> color="black" fillcolor="white", style=filled]
    node8255 -> node8256 [color="black"]
    node8253_name [shape=none, label=<<font color="black">Block[8253]</font>>]
    node8253_name -> node8253 [arrowhead=none, color="black", style=dashed]
    node8253 [shape=box, label=<<font color="black">[0] let C = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8253 -> node8255 [color="black"]
    node8256_name [shape=none, label=<<font color="black">Block[8256]</font>>]
    node8256_name -> node8256 [arrowhead=none, color="black", style=dashed]
    node8256 [shape=box, label=<<font color="black">[0] return [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8256 -> cluster1506_exit [color="black"]
  }
}