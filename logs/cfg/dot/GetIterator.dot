digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster162 {
    label = "def GetIterator(obj: ESValue, hint?: Const[~async~, ~sync~], method?: FunctionObject): Normal[IteratorRecord] | Abrupt"
    style = rounded
    cluster162_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster162_entry_name -> cluster162_entry [arrowhead=none, color="black", style=dashed]
    cluster162_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster162_entry -> node1400 [color="black"]
    cluster162_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster162_exit_name -> cluster162_exit [arrowhead=none, color="black", style=dashed]
    cluster162_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1400_name [shape=none, label=<<font color="black">Branch[1400]</font>>]
    node1400_name -> node1400 [arrowhead=none, color="black", style=dashed]
    node1400 [shape=diamond, label=<<font color="black">(= hint absent)</font>> color="black" fillcolor="white", style=filled]
    node1400 -> node1401 [label=<<font color="black">true</font>> color="black"]
    node1400 -> node1402 [label=<<font color="black">false</font>> color="black"]
    node1401_name [shape=none, label=<<font color="black">Block[1401]</font>>]
    node1401_name -> node1401 [arrowhead=none, color="black", style=dashed]
    node1401 [shape=box, label=<<font color="black">[0] hint = ~sync~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1401 -> node1402 [color="black"]
    node1402_name [shape=none, label=<<font color="black">Branch[1402]</font>>]
    node1402_name -> node1402 [arrowhead=none, color="black", style=dashed]
    node1402 [shape=diamond, label=<<font color="black">(= method absent)</font>> color="black" fillcolor="white", style=filled]
    node1402 -> node1403 [label=<<font color="black">true</font>> color="black"]
    node1402 -> node1415 [label=<<font color="black">false</font>> color="black"]
    node1403_name [shape=none, label=<<font color="black">Branch[1403]</font>>]
    node1403_name -> node1403 [arrowhead=none, color="black", style=dashed]
    node1403 [shape=diamond, label=<<font color="black">(= hint ~async~)</font>> color="black" fillcolor="white", style=filled]
    node1403 -> node1404 [label=<<font color="black">true</font>> color="black"]
    node1403 -> node1413 [label=<<font color="black">false</font>> color="black"]
    node1415_name [shape=none, label=<<font color="black">Call[1415]</font>>]
    node1415_name -> node1415 [arrowhead=none, color="black", style=dashed]
    node1415 [shape=cds, label=<<font color="black">%5 = clo&lt;Call&gt;(method, obj)</font>> color="black" fillcolor="white", style=filled]
    node1415 -> node1416 [color="black"]
    node1404_name [shape=none, label=<<font color="black">Call[1404]</font>>]
    node1404_name -> node1404 [arrowhead=none, color="black", style=dashed]
    node1404 [shape=cds, label=<<font color="black">%0 = clo&lt;GetMethod&gt;(obj, @SYMBOL.asyncIterator)</font>> color="black" fillcolor="white", style=filled]
    node1404 -> node1405 [color="black"]
    node1413_name [shape=none, label=<<font color="black">Call[1413]</font>>]
    node1413_name -> node1413 [arrowhead=none, color="black", style=dashed]
    node1413 [shape=cds, label=<<font color="black">%4 = clo&lt;GetMethod&gt;(obj, @SYMBOL.iterator)</font>> color="black" fillcolor="white", style=filled]
    node1413 -> node1414 [color="black"]
    node1416_name [shape=none, label=<<font color="black">Block[1416]</font>>]
    node1416_name -> node1416 [arrowhead=none, color="black", style=dashed]
    node1416 [shape=box, label=<<font color="black">[0] let iterator = [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1416 -> node1417 [color="black"]
    node1405_name [shape=none, label=<<font color="black">Block[1405]</font>>]
    node1405_name -> node1405 [arrowhead=none, color="black", style=dashed]
    node1405 [shape=box, label=<<font color="black">[0] method = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1405 -> node1406 [color="black"]
    node1414_name [shape=none, label=<<font color="black">Block[1414]</font>>]
    node1414_name -> node1414 [arrowhead=none, color="black", style=dashed]
    node1414 [shape=box, label=<<font color="black">[0] method = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1414 -> node1415 [color="black"]
    node1417_name [shape=none, label=<<font color="black">Branch[1417]</font>>]
    node1417_name -> node1417 [arrowhead=none, color="black", style=dashed]
    node1417 [shape=diamond, label=<<font color="black">(! (= (typeof iterator) @Object))</font>> color="black" fillcolor="white", style=filled]
    node1417 -> node1418 [label=<<font color="black">true</font>> color="black"]
    node1417 -> node1419 [label=<<font color="black">false</font>> color="black"]
    node1406_name [shape=none, label=<<font color="black">Branch[1406]</font>>]
    node1406_name -> node1406 [arrowhead=none, color="black", style=dashed]
    node1406 [shape=diamond, label=<<font color="black">(= method undefined)</font>> color="black" fillcolor="white", style=filled]
    node1406 -> node1407 [label=<<font color="black">true</font>> color="black"]
    node1406 -> node1415 [label=<<font color="black">false</font>> color="black"]
    node1418_name [shape=none, label=<<font color="black">Block[1418]</font>>]
    node1418_name -> node1418 [arrowhead=none, color="black", style=dashed]
    node1418 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#74])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1418 -> cluster162_exit [color="black"]
    node1419_name [shape=none, label=<<font color="black">Call[1419]</font>>]
    node1419_name -> node1419 [arrowhead=none, color="black", style=dashed]
    node1419 [shape=cds, label=<<font color="black">%6 = clo&lt;GetV&gt;(iterator, &quot;next&quot;)</font>> color="black" fillcolor="white", style=filled]
    node1419 -> node1420 [color="black"]
    node1407_name [shape=none, label=<<font color="black">Call[1407]</font>>]
    node1407_name -> node1407 [arrowhead=none, color="black", style=dashed]
    node1407 [shape=cds, label=<<font color="black">%1 = clo&lt;GetMethod&gt;(obj, @SYMBOL.iterator)</font>> color="black" fillcolor="white", style=filled]
    node1407 -> node1408 [color="black"]
    node1420_name [shape=none, label=<<font color="black">Block[1420]</font>>]
    node1420_name -> node1420 [arrowhead=none, color="black", style=dashed]
    node1420 [shape=box, label=<<font color="black">[0] let nextMethod = [? %6]<BR ALIGN="LEFT"/>[1] let iteratorRecord = (new IteratorRecord(&quot;Iterator&quot; -&gt; iterator, &quot;NextMethod&quot; -&gt; nextMethod, &quot;Done&quot; -&gt; false))[#75]<BR ALIGN="LEFT"/>[2] return iteratorRecord<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1420 -> cluster162_exit [color="black"]
    node1408_name [shape=none, label=<<font color="black">Block[1408]</font>>]
    node1408_name -> node1408 [arrowhead=none, color="black", style=dashed]
    node1408 [shape=box, label=<<font color="black">[0] let syncMethod = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1408 -> node1409 [color="black"]
    node1409_name [shape=none, label=<<font color="black">Call[1409]</font>>]
    node1409_name -> node1409 [arrowhead=none, color="black", style=dashed]
    node1409 [shape=cds, label=<<font color="black">%2 = clo&lt;GetIterator&gt;(obj, ~sync~, syncMethod)</font>> color="black" fillcolor="white", style=filled]
    node1409 -> node1410 [color="black"]
    node1410_name [shape=none, label=<<font color="black">Block[1410]</font>>]
    node1410_name -> node1410 [arrowhead=none, color="black", style=dashed]
    node1410 [shape=box, label=<<font color="black">[0] let syncIteratorRecord = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1410 -> node1411 [color="black"]
    node1411_name [shape=none, label=<<font color="black">Call[1411]</font>>]
    node1411_name -> node1411 [arrowhead=none, color="black", style=dashed]
    node1411 [shape=cds, label=<<font color="black">%3 = clo&lt;CreateAsyncFromSyncIterator&gt;(syncIteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node1411 -> node1412 [color="black"]
    node1412_name [shape=none, label=<<font color="black">Block[1412]</font>>]
    node1412_name -> node1412 [arrowhead=none, color="black", style=dashed]
    node1412 [shape=box, label=<<font color="black">[0] return %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1412 -> cluster162_exit [color="black"]
  }
}