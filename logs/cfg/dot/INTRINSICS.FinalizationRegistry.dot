digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2556 {
    label = "def <BUILTIN>:INTRINSICS.FinalizationRegistry(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2556_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2556_entry_name -> cluster2556_entry [arrowhead=none, color="black", style=dashed]
    cluster2556_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2556_entry -> node18507 [color="black"]
    cluster2556_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2556_exit_name -> cluster2556_exit [arrowhead=none, color="black", style=dashed]
    cluster2556_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node18507_name [shape=none, label=<<font color="black">Branch[18507]</font>>]
    node18507_name -> node18507 [arrowhead=none, color="black", style=dashed]
    node18507 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node18507 -> node18508 [label=<<font color="black">true</font>> color="black"]
    node18507 -> node18509 [label=<<font color="black">false</font>> color="black"]
    node18508_name [shape=none, label=<<font color="black">Block[18508]</font>>]
    node18508_name -> node18508 [arrowhead=none, color="black", style=dashed]
    node18508 [shape=box, label=<<font color="black">[0] let cleanupCallback = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18508 -> node18510 [color="black"]
    node18509_name [shape=none, label=<<font color="black">Block[18509]</font>>]
    node18509_name -> node18509 [arrowhead=none, color="black", style=dashed]
    node18509 [shape=box, label=<<font color="black">[0] let cleanupCallback = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18509 -> node18510 [color="black"]
    node18510_name [shape=none, label=<<font color="black">Branch[18510]</font>>]
    node18510_name -> node18510 [arrowhead=none, color="black", style=dashed]
    node18510 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white", style=filled]
    node18510 -> node18511 [label=<<font color="black">true</font>> color="black"]
    node18510 -> node18512 [label=<<font color="black">false</font>> color="black"]
    node18511_name [shape=none, label=<<font color="black">Block[18511]</font>>]
    node18511_name -> node18511 [arrowhead=none, color="black", style=dashed]
    node18511 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1205])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18511 -> cluster2556_exit [color="black"]
    node18512_name [shape=none, label=<<font color="black">Call[18512]</font>>]
    node18512_name -> node18512 [arrowhead=none, color="black", style=dashed]
    node18512 [shape=cds, label=<<font color="black">%0 = clo&lt;IsCallable&gt;(cleanupCallback)</font>> color="black" fillcolor="white", style=filled]
    node18512 -> node18513 [color="black"]
    node18513_name [shape=none, label=<<font color="black">Branch[18513]</font>>]
    node18513_name -> node18513 [arrowhead=none, color="black", style=dashed]
    node18513 [shape=diamond, label=<<font color="black">(= %0 false)</font>> color="black" fillcolor="white", style=filled]
    node18513 -> node18514 [label=<<font color="black">true</font>> color="black"]
    node18513 -> node18515 [label=<<font color="black">false</font>> color="black"]
    node18514_name [shape=none, label=<<font color="black">Block[18514]</font>>]
    node18514_name -> node18514 [arrowhead=none, color="black", style=dashed]
    node18514 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1206])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18514 -> cluster2556_exit [color="black"]
    node18515_name [shape=none, label=<<font color="black">Call[18515]</font>>]
    node18515_name -> node18515 [arrowhead=none, color="black", style=dashed]
    node18515 [shape=cds, label=<<font color="black">%1 = clo&lt;OrdinaryCreateFromConstructor&gt;(NewTarget, &quot;%FinalizationRegistry.prototype%&quot;, (new [&quot;Realm&quot;, &quot;CleanupCallback&quot;, &quot;Cells&quot;])[#1207])</font>> color="black" fillcolor="white", style=filled]
    node18515 -> node18516 [color="black"]
    node18516_name [shape=none, label=<<font color="black">Block[18516]</font>>]
    node18516_name -> node18516 [arrowhead=none, color="black", style=dashed]
    node18516 [shape=box, label=<<font color="black">[0] let finalizationRegistry = [? %1]<BR ALIGN="LEFT"/>[1] let fn = @EXECUTION_STACK[0].Function<BR ALIGN="LEFT"/>[2] finalizationRegistry.Realm = fn.Realm<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18516 -> node18517 [color="black"]
    node18517_name [shape=none, label=<<font color="black">Call[18517]</font>>]
    node18517_name -> node18517 [arrowhead=none, color="black", style=dashed]
    node18517 [shape=cds, label=<<font color="black">%2 = clo&lt;HostMakeJobCallback&gt;(cleanupCallback)</font>> color="black" fillcolor="white", style=filled]
    node18517 -> node18518 [color="black"]
    node18518_name [shape=none, label=<<font color="black">Block[18518]</font>>]
    node18518_name -> node18518 [arrowhead=none, color="black", style=dashed]
    node18518 [shape=box, label=<<font color="black">[0] finalizationRegistry.CleanupCallback = %2<BR ALIGN="LEFT"/>[1] finalizationRegistry.Cells = (new [])[#1208]<BR ALIGN="LEFT"/>[2] return finalizationRegistry<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18518 -> cluster2556_exit [color="black"]
  }
}