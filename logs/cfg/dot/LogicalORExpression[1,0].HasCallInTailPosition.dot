digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1845 {
    label = "def <SYNTAX>:LogicalORExpression[1,0].HasCallInTailPosition(this: Ast:LogicalORExpression[1,0], call: Unknown): Boolean"
    style = rounded
    cluster1845_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1845_entry_name -> cluster1845_entry [arrowhead=none, color="black", style=dashed]
    cluster1845_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1845_entry -> node9926 [color="black"]
    cluster1845_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1845_exit_name -> cluster1845_exit [arrowhead=none, color="black", style=dashed]
    cluster1845_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9926_name [shape=none, label=<<font color="black">Call[9926]</font>>]
    node9926_name -> node9926 [arrowhead=none, color="black", style=dashed]
    node9926 [shape=cds, label=<<font color="black">%0 = this[1]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9926 -> node9927 [color="black"]
    node9927_name [shape=none, label=<<font color="black">Block[9927]</font>>]
    node9927_name -> node9927 [arrowhead=none, color="black", style=dashed]
    node9927 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9927 -> cluster1845_exit [color="black"]
  }
}