digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1690 {
    label = "def <SYNTAX>:ClassTail[0,0].ClassDefinitionEvaluation(this: Ast:ClassTail[0,0], classBinding: Unknown, className: Unknown): Normal[FunctionObject] | Abrupt"
    style = rounded
    cluster1690_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1690_entry_name -> cluster1690_entry [arrowhead=none, color="black", style=dashed]
    cluster1690_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1690_entry -> node8996 [color="black"]
    cluster1690_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1690_exit_name -> cluster1690_exit [arrowhead=none, color="black", style=dashed]
    cluster1690_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8996_name [shape=none, label=<<font color="black">Block[8996]</font>>]
    node8996_name -> node8996 [arrowhead=none, color="black", style=dashed]
    node8996 [shape=box, label=<<font color="black">[0] let env = @EXECUTION_STACK[0].LexicalEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8996 -> node8997 [color="black"]
    node8997_name [shape=none, label=<<font color="black">Call[8997]</font>>]
    node8997_name -> node8997 [arrowhead=none, color="black", style=dashed]
    node8997 [shape=cds, label=<<font color="black">%0 = clo&lt;NewDeclarativeEnvironment&gt;(env)</font>> color="black" fillcolor="white", style=filled]
    node8997 -> node8998 [color="black"]
    node8998_name [shape=none, label=<<font color="black">Block[8998]</font>>]
    node8998_name -> node8998 [arrowhead=none, color="black", style=dashed]
    node8998 [shape=box, label=<<font color="black">[0] let classEnv = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8998 -> node8999 [color="black"]
    node8999_name [shape=none, label=<<font color="black">Branch[8999]</font>>]
    node8999_name -> node8999 [arrowhead=none, color="black", style=dashed]
    node8999 [shape=diamond, label=<<font color="black">(! (= classBinding undefined))</font>> color="black" fillcolor="white", style=filled]
    node8999 -> node9000 [label=<<font color="black">true</font>> color="black"]
    node8999 -> node9001 [label=<<font color="black">false</font>> color="black"]
    node9000_name [shape=none, label=<<font color="black">Call[9000]</font>>]
    node9000_name -> node9000 [arrowhead=none, color="black", style=dashed]
    node9000 [shape=cds, label=<<font color="black">%1 = classEnv-&gt;CreateImmutableBinding(classBinding, true)</font>> color="black" fillcolor="white", style=filled]
    node9000 -> node9001 [color="black"]
    node9001_name [shape=none, label=<<font color="black">Block[9001]</font>>]
    node9001_name -> node9001 [arrowhead=none, color="black", style=dashed]
    node9001 [shape=box, label=<<font color="black">[0] let outerPrivateEnvironment = @EXECUTION_STACK[0].PrivateEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9001 -> node9002 [color="black"]
    node9002_name [shape=none, label=<<font color="black">Call[9002]</font>>]
    node9002_name -> node9002 [arrowhead=none, color="black", style=dashed]
    node9002 [shape=cds, label=<<font color="black">%2 = clo&lt;NewPrivateEnvironment&gt;(outerPrivateEnvironment)</font>> color="black" fillcolor="white", style=filled]
    node9002 -> node9003 [color="black"]
    node9003_name [shape=none, label=<<font color="black">Block[9003]</font>>]
    node9003_name -> node9003 [arrowhead=none, color="black", style=dashed]
    node9003 [shape=box, label=<<font color="black">[0] let classPrivateEnvironment = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9003 -> node9004 [color="black"]
    node9004_name [shape=none, label=<<font color="black">Branch[9004]</font>>]
    node9004_name -> node9004 [arrowhead=none, color="black", style=dashed]
    node9004 [shape=diamond, label=<<font color="black">(! (= this[1] absent))</font>> color="black" fillcolor="white", style=filled]
    node9004 -> node9005 [label=<<font color="black">true</font>> color="black"]
    node9004 -> node9013 [label=<<font color="black">false</font>> color="black"]
    node9005_name [shape=none, label=<<font color="black">Call[9005]</font>>]
    node9005_name -> node9005 [arrowhead=none, color="black", style=dashed]
    node9005 [shape=cds, label=<<font color="black">%5 = this[1]-&gt;PrivateBoundIdentifiers()</font>> color="black" fillcolor="white", style=filled]
    node9005 -> node9006 [color="black"]
    node9013_name [shape=none, label=<<font color="black">Branch[9013]</font>>]
    node9013_name -> node9013 [arrowhead=none, color="black", style=dashed]
    node9013 [shape=diamond, label=<<font color="black">(= this[0] absent)</font>> color="black" fillcolor="white", style=filled]
    node9013 -> node9014 [label=<<font color="black">true</font>> color="black"]
    node9013 -> node9015 [label=<<font color="black">false</font>> color="black"]
    node9006_name [shape=none, label=<<font color="black">Block[9006]</font>>]
    node9006_name -> node9006 [arrowhead=none, color="black", style=dashed]
    node9006 [shape=box, label=<<font color="black">[0] %4 = %5<BR ALIGN="LEFT"/>[1] %3 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9006 -> node9007 [color="black"]
    node9014_name [shape=none, label=<<font color="black">Block[9014]</font>>]
    node9014_name -> node9014 [arrowhead=none, color="black", style=dashed]
    node9014 [shape=box, label=<<font color="black">[0] let protoParent = @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Object.prototype%&quot;]<BR ALIGN="LEFT"/>[1] let constructorParent = @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Function.prototype%&quot;]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9014 -> node9030 [color="black"]
    node9015_name [shape=none, label=<<font color="black">Block[9015]</font>>]
    node9015_name -> node9015 [arrowhead=none, color="black", style=dashed]
    node9015 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = classEnv<BR ALIGN="LEFT"/>[1] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9015 -> node9016 [color="black"]
    node9007_name [shape=none, label=<<font color="black">Branch[9007]</font>>]
    node9007_name -> node9007 [arrowhead=none, color="black", style=dashed]
    node9007 [shape=diamond, label=<<font color="black">(&lt; %3 %4.length)</font>> color="black" fillcolor="white", style=filled]
    node9007 -> node9008 [label=<<font color="black">true</font>> color="black"]
    node9007 -> node9013 [label=<<font color="black">false</font>> color="black"]
    node9030_name [shape=none, label=<<font color="black">Call[9030]</font>>]
    node9030_name -> node9030 [arrowhead=none, color="black", style=dashed]
    node9030 [shape=cds, label=<<font color="black">%10 = clo&lt;OrdinaryObjectCreate&gt;(protoParent)</font>> color="black" fillcolor="white", style=filled]
    node9030 -> node9031 [color="black"]
    node9016_name [shape=none, label=<<font color="black">Call[9016]</font>>]
    node9016_name -> node9016 [arrowhead=none, color="black", style=dashed]
    node9016 [shape=cds, label=<<font color="black">%6 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node9016 -> node9017 [color="black"]
    node9008_name [shape=none, label=<<font color="black">Block[9008]</font>>]
    node9008_name -> node9008 [arrowhead=none, color="black", style=dashed]
    node9008 [shape=box, label=<<font color="black">[0] let dn = %4[%3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9008 -> node9009 [color="black"]
    node9031_name [shape=none, label=<<font color="black">Block[9031]</font>>]
    node9031_name -> node9031 [arrowhead=none, color="black", style=dashed]
    node9031 [shape=box, label=<<font color="black">[0] let proto = %10<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9031 -> node9032 [color="black"]
    node9017_name [shape=none, label=<<font color="black">Block[9017]</font>>]
    node9017_name -> node9017 [arrowhead=none, color="black", style=dashed]
    node9017 [shape=box, label=<<font color="black">[0] let superclassRef = %6<BR ALIGN="LEFT"/>[1] @EXECUTION_STACK[0].LexicalEnvironment = env<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9017 -> node9018 [color="black"]
    node9009_name [shape=none, label=<<font color="black">Branch[9009]</font>>]
    node9009_name -> node9009 [arrowhead=none, color="black", style=dashed]
    node9009 [shape=diamond, label=<<font color="black">(contains classPrivateEnvironment.Names dn: Unknown[&quot;PrivateName&quot;] Description)</font>> color="black" fillcolor="white", style=filled]
    node9009 -> node9010 [label=<<font color="black">true</font>> color="black"]
    node9009 -> node9011 [label=<<font color="black">false</font>> color="black"]
    node9032_name [shape=none, label=<<font color="black">Branch[9032]</font>>]
    node9032_name -> node9032 [arrowhead=none, color="black", style=dashed]
    node9032 [shape=diamond, label=<<font color="black">(= this[1] absent)</font>> color="black" fillcolor="white", style=filled]
    node9032 -> node9033 [label=<<font color="black">true</font>> color="black"]
    node9032 -> node9034 [label=<<font color="black">false</font>> color="black"]
    node9018_name [shape=none, label=<<font color="black">Call[9018]</font>>]
    node9018_name -> node9018 [arrowhead=none, color="black", style=dashed]
    node9018 [shape=cds, label=<<font color="black">%7 = clo&lt;GetValue&gt;(superclassRef)</font>> color="black" fillcolor="white", style=filled]
    node9018 -> node9019 [color="black"]
    node9010_name [shape=none, label=<<font color="black">Block[9010]</font>>]
    node9010_name -> node9010 [arrowhead=none, color="black", style=dashed]
    node9010 [shape=box, label=<<font color="black">[0] assert (yet &quot;This is only possible for getter/setter pairs.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9010 -> node9012 [color="black"]
    node9011_name [shape=none, label=<<font color="black">Block[9011]</font>>]
    node9011_name -> node9011 [arrowhead=none, color="black", style=dashed]
    node9011 [shape=box, label=<<font color="black">[0] let name = (new PrivateName(&quot;Description&quot; -&gt; dn))[#735]<BR ALIGN="LEFT"/>[1] push classPrivateEnvironment.Names &lt; name<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9011 -> node9012 [color="black"]
    node9033_name [shape=none, label=<<font color="black">Block[9033]</font>>]
    node9033_name -> node9033 [arrowhead=none, color="black", style=dashed]
    node9033 [shape=box, label=<<font color="black">[0] let constructor = ~empty~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9033 -> node9036 [color="black"]
    node9034_name [shape=none, label=<<font color="black">Call[9034]</font>>]
    node9034_name -> node9034 [arrowhead=none, color="black", style=dashed]
    node9034 [shape=cds, label=<<font color="black">%11 = this[1]-&gt;ConstructorMethod()</font>> color="black" fillcolor="white", style=filled]
    node9034 -> node9035 [color="black"]
    node9019_name [shape=none, label=<<font color="black">Block[9019]</font>>]
    node9019_name -> node9019 [arrowhead=none, color="black", style=dashed]
    node9019 [shape=box, label=<<font color="black">[0] let superclass = [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9019 -> node9020 [color="black"]
    node9012_name [shape=none, label=<<font color="black">Block[9012]</font>>]
    node9012_name -> node9012 [arrowhead=none, color="black", style=dashed]
    node9012 [shape=box, label=<<font color="black">[0] %3 = (+ %3 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9012 -> node9007 [color="black"]
    node9036_name [shape=none, label=<<font color="black">Block[9036]</font>>]
    node9036_name -> node9036 [arrowhead=none, color="black", style=dashed]
    node9036 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = classEnv<BR ALIGN="LEFT"/>[1] @EXECUTION_STACK[0].PrivateEnvironment = classPrivateEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9036 -> node9037 [color="black"]
    node9035_name [shape=none, label=<<font color="black">Block[9035]</font>>]
    node9035_name -> node9035 [arrowhead=none, color="black", style=dashed]
    node9035 [shape=box, label=<<font color="black">[0] let constructor = %11<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9035 -> node9036 [color="black"]
    node9020_name [shape=none, label=<<font color="black">Branch[9020]</font>>]
    node9020_name -> node9020 [arrowhead=none, color="black", style=dashed]
    node9020 [shape=diamond, label=<<font color="black">(= superclass null)</font>> color="black" fillcolor="white", style=filled]
    node9020 -> node9021 [label=<<font color="black">true</font>> color="black"]
    node9020 -> node9022 [label=<<font color="black">false</font>> color="black"]
    node9037_name [shape=none, label=<<font color="black">Branch[9037]</font>>]
    node9037_name -> node9037 [arrowhead=none, color="black", style=dashed]
    node9037 [shape=diamond, label=<<font color="black">(= constructor ~empty~)</font>> color="black" fillcolor="white", style=filled]
    node9037 -> node9038 [label=<<font color="black">true</font>> color="black"]
    node9037 -> node9041 [label=<<font color="black">false</font>> color="black"]
    node9021_name [shape=none, label=<<font color="black">Block[9021]</font>>]
    node9021_name -> node9021 [arrowhead=none, color="black", style=dashed]
    node9021 [shape=box, label=<<font color="black">[0] let protoParent = null<BR ALIGN="LEFT"/>[1] let constructorParent = @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Function.prototype%&quot;]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9021 -> node9030 [color="black"]
    node9022_name [shape=none, label=<<font color="black">Call[9022]</font>>]
    node9022_name -> node9022 [arrowhead=none, color="black", style=dashed]
    node9022 [shape=cds, label=<<font color="black">%8 = clo&lt;IsConstructor&gt;(superclass)</font>> color="black" fillcolor="white", style=filled]
    node9022 -> node9023 [color="black"]
    node9038_name [shape=none, label=<<font color="black">Block[9038]</font>>]
    node9038_name -> node9038 [arrowhead=none, color="black", style=dashed]
    node9038 [shape=box, label=<<font color="black">[0] let defaultConstructor = clo&lt;ClassTail[0,0].ClassDefinitionEvaluation:clo0&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9038 -> node9039 [color="black"]
    node9041_name [shape=none, label=<<font color="black">Call[9041]</font>>]
    node9041_name -> node9041 [arrowhead=none, color="black", style=dashed]
    node9041 [shape=cds, label=<<font color="black">%13 = constructor-&gt;DefineMethod(proto, constructorParent)</font>> color="black" fillcolor="white", style=filled]
    node9041 -> node9042 [color="black"]
    node9023_name [shape=none, label=<<font color="black">Branch[9023]</font>>]
    node9023_name -> node9023 [arrowhead=none, color="black", style=dashed]
    node9023 [shape=diamond, label=<<font color="black">(= %8 false)</font>> color="black" fillcolor="white", style=filled]
    node9023 -> node9024 [label=<<font color="black">true</font>> color="black"]
    node9023 -> node9025 [label=<<font color="black">false</font>> color="black"]
    node9039_name [shape=none, label=<<font color="black">Call[9039]</font>>]
    node9039_name -> node9039 [arrowhead=none, color="black", style=dashed]
    node9039 [shape=cds, label=<<font color="black">%12 = clo&lt;CreateBuiltinFunction&gt;(defaultConstructor, 0, className, (new [&quot;ConstructorKind&quot;, &quot;SourceText&quot;])[#699], @EXECUTION_STACK[0].Realm, constructorParent)</font>> color="black" fillcolor="white", style=filled]
    node9039 -> node9040 [color="black"]
    node9042_name [shape=none, label=<<font color="black">Block[9042]</font>>]
    node9042_name -> node9042 [arrowhead=none, color="black", style=dashed]
    node9042 [shape=box, label=<<font color="black">[0] let constructorInfo = [! %13]<BR ALIGN="LEFT"/>[1] let F = constructorInfo.Closure<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9042 -> node9043 [color="black"]
    node9024_name [shape=none, label=<<font color="black">Block[9024]</font>>]
    node9024_name -> node9024 [arrowhead=none, color="black", style=dashed]
    node9024 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#697])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9024 -> cluster1690_exit [color="black"]
    node9025_name [shape=none, label=<<font color="black">Call[9025]</font>>]
    node9025_name -> node9025 [arrowhead=none, color="black", style=dashed]
    node9025 [shape=cds, label=<<font color="black">%9 = clo&lt;Get&gt;(superclass, &quot;prototype&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9025 -> node9026 [color="black"]
    node9040_name [shape=none, label=<<font color="black">Block[9040]</font>>]
    node9040_name -> node9040 [arrowhead=none, color="black", style=dashed]
    node9040 [shape=box, label=<<font color="black">[0] let F = %12<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9040 -> node9045 [color="black"]
    node9043_name [shape=none, label=<<font color="black">Call[9043]</font>>]
    node9043_name -> node9043 [arrowhead=none, color="black", style=dashed]
    node9043 [shape=cds, label=<<font color="black">%14 = clo&lt;MakeClassConstructor&gt;(F)</font>> color="black" fillcolor="white", style=filled]
    node9043 -> node9044 [color="black"]
    node9026_name [shape=none, label=<<font color="black">Block[9026]</font>>]
    node9026_name -> node9026 [arrowhead=none, color="black", style=dashed]
    node9026 [shape=box, label=<<font color="black">[0] let protoParent = [? %9]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9026 -> node9027 [color="black"]
    node9045_name [shape=none, label=<<font color="black">Call[9045]</font>>]
    node9045_name -> node9045 [arrowhead=none, color="black", style=dashed]
    node9045 [shape=cds, label=<<font color="black">%16 = clo&lt;MakeConstructor&gt;(F, false, proto)</font>> color="black" fillcolor="white", style=filled]
    node9045 -> node9046 [color="black"]
    node9044_name [shape=none, label=<<font color="black">Call[9044]</font>>]
    node9044_name -> node9044 [arrowhead=none, color="black", style=dashed]
    node9044 [shape=cds, label=<<font color="black">%15 = clo&lt;SetFunctionName&gt;(F, className)</font>> color="black" fillcolor="white", style=filled]
    node9044 -> node9045 [color="black"]
    node9027_name [shape=none, label=<<font color="black">Branch[9027]</font>>]
    node9027_name -> node9027 [arrowhead=none, color="black", style=dashed]
    node9027 [shape=diamond, label=<<font color="black">(! (|| (= (typeof protoParent) @Object) (= (typeof protoParent) @Null)))</font>> color="black" fillcolor="white", style=filled]
    node9027 -> node9028 [label=<<font color="black">true</font>> color="black"]
    node9027 -> node9029 [label=<<font color="black">false</font>> color="black"]
    node9046_name [shape=none, label=<<font color="black">Branch[9046]</font>>]
    node9046_name -> node9046 [arrowhead=none, color="black", style=dashed]
    node9046 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node9046 -> node9047 [label=<<font color="black">true</font>> color="black"]
    node9046 -> node9048 [label=<<font color="black">false</font>> color="black"]
    node9028_name [shape=none, label=<<font color="black">Block[9028]</font>>]
    node9028_name -> node9028 [arrowhead=none, color="black", style=dashed]
    node9028 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#698])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9028 -> cluster1690_exit [color="black"]
    node9029_name [shape=none, label=<<font color="black">Block[9029]</font>>]
    node9029_name -> node9029 [arrowhead=none, color="black", style=dashed]
    node9029 [shape=box, label=<<font color="black">[0] let constructorParent = superclass<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9029 -> node9030 [color="black"]
    node9047_name [shape=none, label=<<font color="black">Block[9047]</font>>]
    node9047_name -> node9047 [arrowhead=none, color="black", style=dashed]
    node9047 [shape=box, label=<<font color="black">[0] F.ConstructorKind = ~derived~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9047 -> node9048 [color="black"]
    node9048_name [shape=none, label=<<font color="black">Call[9048]</font>>]
    node9048_name -> node9048 [arrowhead=none, color="black", style=dashed]
    node9048 [shape=cds, label=<<font color="black">%17 = clo&lt;CreateMethodProperty&gt;(proto, &quot;constructor&quot;, F)</font>> color="black" fillcolor="white", style=filled]
    node9048 -> node9049 [color="black"]
    node9049_name [shape=none, label=<<font color="black">Branch[9049]</font>>]
    node9049_name -> node9049 [arrowhead=none, color="black", style=dashed]
    node9049 [shape=diamond, label=<<font color="black">(= this[1] absent)</font>> color="black" fillcolor="white", style=filled]
    node9049 -> node9050 [label=<<font color="black">true</font>> color="black"]
    node9049 -> node9051 [label=<<font color="black">false</font>> color="black"]
    node9050_name [shape=none, label=<<font color="black">Block[9050]</font>>]
    node9050_name -> node9050 [arrowhead=none, color="black", style=dashed]
    node9050 [shape=box, label=<<font color="black">[0] let elements = (new [])[#700]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9050 -> node9053 [color="black"]
    node9051_name [shape=none, label=<<font color="black">Call[9051]</font>>]
    node9051_name -> node9051 [arrowhead=none, color="black", style=dashed]
    node9051 [shape=cds, label=<<font color="black">%18 = this[1]-&gt;NonConstructorElements()</font>> color="black" fillcolor="white", style=filled]
    node9051 -> node9052 [color="black"]
    node9053_name [shape=none, label=<<font color="black">Block[9053]</font>>]
    node9053_name -> node9053 [arrowhead=none, color="black", style=dashed]
    node9053 [shape=box, label=<<font color="black">[0] let instancePrivateMethods = (new [])[#701]<BR ALIGN="LEFT"/>[1] let staticPrivateMethods = (new [])[#702]<BR ALIGN="LEFT"/>[2] let instanceFields = (new [])[#703]<BR ALIGN="LEFT"/>[3] let staticElements = (new [])[#704]<BR ALIGN="LEFT"/>[4] %20 = elements<BR ALIGN="LEFT"/>[5] %19 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9053 -> node9054 [color="black"]
    node9052_name [shape=none, label=<<font color="black">Block[9052]</font>>]
    node9052_name -> node9052 [arrowhead=none, color="black", style=dashed]
    node9052 [shape=box, label=<<font color="black">[0] let elements = %18<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9052 -> node9053 [color="black"]
    node9054_name [shape=none, label=<<font color="black">Branch[9054]</font>>]
    node9054_name -> node9054 [arrowhead=none, color="black", style=dashed]
    node9054 [shape=diamond, label=<<font color="black">(&lt; %19 %20.length)</font>> color="black" fillcolor="white", style=filled]
    node9054 -> node9055 [label=<<font color="black">true</font>> color="black"]
    node9054 -> node9099 [label=<<font color="black">false</font>> color="black"]
    node9055_name [shape=none, label=<<font color="black">Block[9055]</font>>]
    node9055_name -> node9055 [arrowhead=none, color="black", style=dashed]
    node9055 [shape=box, label=<<font color="black">[0] let e = %20[%19]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9055 -> node9056 [color="black"]
    node9099_name [shape=none, label=<<font color="black">Block[9099]</font>>]
    node9099_name -> node9099 [arrowhead=none, color="black", style=dashed]
    node9099 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = env<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9099 -> node9100 [color="black"]
    node9056_name [shape=none, label=<<font color="black">Call[9056]</font>>]
    node9056_name -> node9056 [arrowhead=none, color="black", style=dashed]
    node9056 [shape=cds, label=<<font color="black">%21 = e-&gt;IsStatic()</font>> color="black" fillcolor="white", style=filled]
    node9056 -> node9057 [color="black"]
    node9100_name [shape=none, label=<<font color="black">Branch[9100]</font>>]
    node9100_name -> node9100 [arrowhead=none, color="black", style=dashed]
    node9100 [shape=diamond, label=<<font color="black">(! (= classBinding undefined))</font>> color="black" fillcolor="white", style=filled]
    node9100 -> node9101 [label=<<font color="black">true</font>> color="black"]
    node9100 -> node9103 [label=<<font color="black">false</font>> color="black"]
    node9057_name [shape=none, label=<<font color="black">Branch[9057]</font>>]
    node9057_name -> node9057 [arrowhead=none, color="black", style=dashed]
    node9057 [shape=diamond, label=<<font color="black">(= %21 false)</font>> color="black" fillcolor="white", style=filled]
    node9057 -> node9058 [label=<<font color="black">true</font>> color="black"]
    node9057 -> node9061 [label=<<font color="black">false</font>> color="black"]
    node9101_name [shape=none, label=<<font color="black">Call[9101]</font>>]
    node9101_name -> node9101 [arrowhead=none, color="black", style=dashed]
    node9101 [shape=cds, label=<<font color="black">%28 = classEnv-&gt;InitializeBinding(classBinding, F)</font>> color="black" fillcolor="white", style=filled]
    node9101 -> node9102 [color="black"]
    node9103_name [shape=none, label=<<font color="black">Block[9103]</font>>]
    node9103_name -> node9103 [arrowhead=none, color="black", style=dashed]
    node9103 [shape=box, label=<<font color="black">[0] F.PrivateMethods = instancePrivateMethods<BR ALIGN="LEFT"/>[1] F.Fields = instanceFields<BR ALIGN="LEFT"/>[2] %30 = staticPrivateMethods<BR ALIGN="LEFT"/>[3] %29 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9103 -> node9104 [color="black"]
    node9058_name [shape=none, label=<<font color="black">Call[9058]</font>>]
    node9058_name -> node9058 [arrowhead=none, color="black", style=dashed]
    node9058 [shape=cds, label=<<font color="black">%22 = e-&gt;ClassElementEvaluation(proto)</font>> color="black" fillcolor="white", style=filled]
    node9058 -> node9059 [color="black"]
    node9061_name [shape=none, label=<<font color="black">Call[9061]</font>>]
    node9061_name -> node9061 [arrowhead=none, color="black", style=dashed]
    node9061 [shape=cds, label=<<font color="black">%24 = e-&gt;ClassElementEvaluation(F)</font>> color="black" fillcolor="white", style=filled]
    node9061 -> node9062 [color="black"]
    node9102_name [shape=none, label=<<font color="black">Block[9102]</font>>]
    node9102_name -> node9102 [arrowhead=none, color="black", style=dashed]
    node9102 [shape=box, label=<<font color="black">[0] [! %28]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9102 -> node9103 [color="black"]
    node9104_name [shape=none, label=<<font color="black">Branch[9104]</font>>]
    node9104_name -> node9104 [arrowhead=none, color="black", style=dashed]
    node9104 [shape=diamond, label=<<font color="black">(&lt; %29 %30.length)</font>> color="black" fillcolor="white", style=filled]
    node9104 -> node9105 [label=<<font color="black">true</font>> color="black"]
    node9104 -> node9108 [label=<<font color="black">false</font>> color="black"]
    node9059_name [shape=none, label=<<font color="black">Call[9059]</font>>]
    node9059_name -> node9059 [arrowhead=none, color="black", style=dashed]
    node9059 [shape=cds, label=<<font color="black">%23 = clo&lt;Completion&gt;(%22)</font>> color="black" fillcolor="white", style=filled]
    node9059 -> node9060 [color="black"]
    node9062_name [shape=none, label=<<font color="black">Call[9062]</font>>]
    node9062_name -> node9062 [arrowhead=none, color="black", style=dashed]
    node9062 [shape=cds, label=<<font color="black">%25 = clo&lt;Completion&gt;(%24)</font>> color="black" fillcolor="white", style=filled]
    node9062 -> node9063 [color="black"]
    node9105_name [shape=none, label=<<font color="black">Block[9105]</font>>]
    node9105_name -> node9105 [arrowhead=none, color="black", style=dashed]
    node9105 [shape=box, label=<<font color="black">[0] let method = %30[%29]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9105 -> node9106 [color="black"]
    node9108_name [shape=none, label=<<font color="black">Block[9108]</font>>]
    node9108_name -> node9108 [arrowhead=none, color="black", style=dashed]
    node9108 [shape=box, label=<<font color="black">[0] %33 = staticElements<BR ALIGN="LEFT"/>[1] %32 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9108 -> node9109 [color="black"]
    node9060_name [shape=none, label=<<font color="black">Block[9060]</font>>]
    node9060_name -> node9060 [arrowhead=none, color="black", style=dashed]
    node9060 [shape=box, label=<<font color="black">[0] let element = %23<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9060 -> node9064 [color="black"]
    node9063_name [shape=none, label=<<font color="black">Block[9063]</font>>]
    node9063_name -> node9063 [arrowhead=none, color="black", style=dashed]
    node9063 [shape=box, label=<<font color="black">[0] let element = %25<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9063 -> node9064 [color="black"]
    node9106_name [shape=none, label=<<font color="black">Call[9106]</font>>]
    node9106_name -> node9106 [arrowhead=none, color="black", style=dashed]
    node9106 [shape=cds, label=<<font color="black">%31 = clo&lt;PrivateMethodOrAccessorAdd&gt;(F, method)</font>> color="black" fillcolor="white", style=filled]
    node9106 -> node9107 [color="black"]
    node9109_name [shape=none, label=<<font color="black">Branch[9109]</font>>]
    node9109_name -> node9109 [arrowhead=none, color="black", style=dashed]
    node9109 [shape=diamond, label=<<font color="black">(&lt; %32 %33.length)</font>> color="black" fillcolor="white", style=filled]
    node9109 -> node9110 [label=<<font color="black">true</font>> color="black"]
    node9109 -> node9122 [label=<<font color="black">false</font>> color="black"]
    node9064_name [shape=none, label=<<font color="black">Branch[9064]</font>>]
    node9064_name -> node9064 [arrowhead=none, color="black", style=dashed]
    node9064 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? element) (! (= element.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node9064 -> node9065 [label=<<font color="black">true</font>> color="black"]
    node9064 -> node9066 [label=<<font color="black">false</font>> color="black"]
    node9107_name [shape=none, label=<<font color="black">Block[9107]</font>>]
    node9107_name -> node9107 [arrowhead=none, color="black", style=dashed]
    node9107 [shape=box, label=<<font color="black">[0] [! %31]<BR ALIGN="LEFT"/>[1] %29 = (+ %29 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9107 -> node9104 [color="black"]
    node9110_name [shape=none, label=<<font color="black">Block[9110]</font>>]
    node9110_name -> node9110 [arrowhead=none, color="black", style=dashed]
    node9110 [shape=box, label=<<font color="black">[0] let elementRecord = %33[%32]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9110 -> node9111 [color="black"]
    node9122_name [shape=none, label=<<font color="black">Block[9122]</font>>]
    node9122_name -> node9122 [arrowhead=none, color="black", style=dashed]
    node9122 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].PrivateEnvironment = outerPrivateEnvironment<BR ALIGN="LEFT"/>[1] return F<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9122 -> cluster1690_exit [color="black"]
    node9065_name [shape=none, label=<<font color="black">Block[9065]</font>>]
    node9065_name -> node9065 [arrowhead=none, color="black", style=dashed]
    node9065 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = env<BR ALIGN="LEFT"/>[1] @EXECUTION_STACK[0].PrivateEnvironment = outerPrivateEnvironment<BR ALIGN="LEFT"/>[2] return [? element]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9065 -> cluster1690_exit [color="black"]
    node9066_name [shape=none, label=<<font color="black">Block[9066]</font>>]
    node9066_name -> node9066 [arrowhead=none, color="black", style=dashed]
    node9066 [shape=box, label=<<font color="black">[0] element = element.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9066 -> node9067 [color="black"]
    node9111_name [shape=none, label=<<font color="black">Branch[9111]</font>>]
    node9111_name -> node9111 [arrowhead=none, color="black", style=dashed]
    node9111 [shape=diamond, label=<<font color="black">(? elementRecord: &quot;ClassFieldDefinitionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9111 -> node9112 [label=<<font color="black">true</font>> color="black"]
    node9111 -> node9115 [label=<<font color="black">false</font>> color="black"]
    node9067_name [shape=none, label=<<font color="black">Branch[9067]</font>>]
    node9067_name -> node9067 [arrowhead=none, color="black", style=dashed]
    node9067 [shape=diamond, label=<<font color="black">(? element: &quot;PrivateElement&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9067 -> node9068 [label=<<font color="black">true</font>> color="black"]
    node9067 -> node9091 [label=<<font color="black">false</font>> color="black"]
    node9112_name [shape=none, label=<<font color="black">Call[9112]</font>>]
    node9112_name -> node9112 [arrowhead=none, color="black", style=dashed]
    node9112 [shape=cds, label=<<font color="black">%34 = clo&lt;DefineField&gt;(F, elementRecord)</font>> color="black" fillcolor="white", style=filled]
    node9112 -> node9113 [color="black"]
    node9115_name [shape=none, label=<<font color="black">Block[9115]</font>>]
    node9115_name -> node9115 [arrowhead=none, color="black", style=dashed]
    node9115 [shape=box, label=<<font color="black">[0] assert (? elementRecord: &quot;ClassStaticBlockDefinitionRecord&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9115 -> node9116 [color="black"]
    node9068_name [shape=none, label=<<font color="black">Block[9068]</font>>]
    node9068_name -> node9068 [arrowhead=none, color="black", style=dashed]
    node9068 [shape=box, label=<<font color="black">[0] assert (|| (= element.Kind ~method~) (= element.Kind ~accessor~))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9068 -> node9069 [color="black"]
    node9091_name [shape=none, label=<<font color="black">Branch[9091]</font>>]
    node9091_name -> node9091 [arrowhead=none, color="black", style=dashed]
    node9091 [shape=diamond, label=<<font color="black">(? element: &quot;ClassFieldDefinitionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9091 -> node9092 [label=<<font color="black">true</font>> color="black"]
    node9091 -> node9096 [label=<<font color="black">false</font>> color="black"]
    node9113_name [shape=none, label=<<font color="black">Call[9113]</font>>]
    node9113_name -> node9113 [arrowhead=none, color="black", style=dashed]
    node9113 [shape=cds, label=<<font color="black">%35 = clo&lt;Completion&gt;(%34)</font>> color="black" fillcolor="white", style=filled]
    node9113 -> node9114 [color="black"]
    node9116_name [shape=none, label=<<font color="black">Call[9116]</font>>]
    node9116_name -> node9116 [arrowhead=none, color="black", style=dashed]
    node9116 [shape=cds, label=<<font color="black">%36 = clo&lt;Call&gt;(elementRecord.BodyFunction, F)</font>> color="black" fillcolor="white", style=filled]
    node9116 -> node9117 [color="black"]
    node9069_name [shape=none, label=<<font color="black">Call[9069]</font>>]
    node9069_name -> node9069 [arrowhead=none, color="black", style=dashed]
    node9069 [shape=cds, label=<<font color="black">%26 = e-&gt;IsStatic()</font>> color="black" fillcolor="white", style=filled]
    node9069 -> node9070 [color="black"]
    node9092_name [shape=none, label=<<font color="black">Call[9092]</font>>]
    node9092_name -> node9092 [arrowhead=none, color="black", style=dashed]
    node9092 [shape=cds, label=<<font color="black">%27 = e-&gt;IsStatic()</font>> color="black" fillcolor="white", style=filled]
    node9092 -> node9093 [color="black"]
    node9096_name [shape=none, label=<<font color="black">Branch[9096]</font>>]
    node9096_name -> node9096 [arrowhead=none, color="black", style=dashed]
    node9096 [shape=diamond, label=<<font color="black">(? element: &quot;ClassStaticBlockDefinitionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9096 -> node9097 [label=<<font color="black">true</font>> color="black"]
    node9096 -> node9098 [label=<<font color="black">false</font>> color="black"]
    node9114_name [shape=none, label=<<font color="black">Block[9114]</font>>]
    node9114_name -> node9114 [arrowhead=none, color="black", style=dashed]
    node9114 [shape=box, label=<<font color="black">[0] let result = %35<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9114 -> node9119 [color="black"]
    node9117_name [shape=none, label=<<font color="black">Call[9117]</font>>]
    node9117_name -> node9117 [arrowhead=none, color="black", style=dashed]
    node9117 [shape=cds, label=<<font color="black">%37 = clo&lt;Completion&gt;(%36)</font>> color="black" fillcolor="white", style=filled]
    node9117 -> node9118 [color="black"]
    node9070_name [shape=none, label=<<font color="black">Branch[9070]</font>>]
    node9070_name -> node9070 [arrowhead=none, color="black", style=dashed]
    node9070 [shape=diamond, label=<<font color="black">(= %26 false)</font>> color="black" fillcolor="white", style=filled]
    node9070 -> node9071 [label=<<font color="black">true</font>> color="black"]
    node9070 -> node9072 [label=<<font color="black">false</font>> color="black"]
    node9093_name [shape=none, label=<<font color="black">Branch[9093]</font>>]
    node9093_name -> node9093 [arrowhead=none, color="black", style=dashed]
    node9093 [shape=diamond, label=<<font color="black">(= %27 false)</font>> color="black" fillcolor="white", style=filled]
    node9093 -> node9094 [label=<<font color="black">true</font>> color="black"]
    node9093 -> node9095 [label=<<font color="black">false</font>> color="black"]
    node9097_name [shape=none, label=<<font color="black">Block[9097]</font>>]
    node9097_name -> node9097 [arrowhead=none, color="black", style=dashed]
    node9097 [shape=box, label=<<font color="black">[0] push staticElements &lt; element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9097 -> node9098 [color="black"]
    node9098_name [shape=none, label=<<font color="black">Block[9098]</font>>]
    node9098_name -> node9098 [arrowhead=none, color="black", style=dashed]
    node9098 [shape=box, label=<<font color="black">[0] %19 = (+ %19 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9098 -> node9054 [color="black"]
    node9119_name [shape=none, label=<<font color="black">Branch[9119]</font>>]
    node9119_name -> node9119 [arrowhead=none, color="black", style=dashed]
    node9119 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? result) (! (= result.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node9119 -> node9120 [label=<<font color="black">true</font>> color="black"]
    node9119 -> node9121 [label=<<font color="black">false</font>> color="black"]
    node9118_name [shape=none, label=<<font color="black">Block[9118]</font>>]
    node9118_name -> node9118 [arrowhead=none, color="black", style=dashed]
    node9118 [shape=box, label=<<font color="black">[0] let result = %37<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9118 -> node9119 [color="black"]
    node9071_name [shape=none, label=<<font color="black">Block[9071]</font>>]
    node9071_name -> node9071 [arrowhead=none, color="black", style=dashed]
    node9071 [shape=box, label=<<font color="black">[0] let container = instancePrivateMethods<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9071 -> node9073 [color="black"]
    node9072_name [shape=none, label=<<font color="black">Block[9072]</font>>]
    node9072_name -> node9072 [arrowhead=none, color="black", style=dashed]
    node9072 [shape=box, label=<<font color="black">[0] let container = staticPrivateMethods<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9072 -> node9073 [color="black"]
    node9094_name [shape=none, label=<<font color="black">Block[9094]</font>>]
    node9094_name -> node9094 [arrowhead=none, color="black", style=dashed]
    node9094 [shape=box, label=<<font color="black">[0] push instanceFields &lt; element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9094 -> node9098 [color="black"]
    node9095_name [shape=none, label=<<font color="black">Block[9095]</font>>]
    node9095_name -> node9095 [arrowhead=none, color="black", style=dashed]
    node9095 [shape=box, label=<<font color="black">[0] push staticElements &lt; element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9095 -> node9098 [color="black"]
    node9120_name [shape=none, label=<<font color="black">Block[9120]</font>>]
    node9120_name -> node9120 [arrowhead=none, color="black", style=dashed]
    node9120 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].PrivateEnvironment = outerPrivateEnvironment<BR ALIGN="LEFT"/>[1] return [? result]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9120 -> cluster1690_exit [color="black"]
    node9121_name [shape=none, label=<<font color="black">Block[9121]</font>>]
    node9121_name -> node9121 [arrowhead=none, color="black", style=dashed]
    node9121 [shape=box, label=<<font color="black">[0] %32 = (+ %32 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9121 -> node9109 [color="black"]
    node9073_name [shape=none, label=<<font color="black">Branch[9073]</font>>]
    node9073_name -> node9073 [arrowhead=none, color="black", style=dashed]
    node9073 [shape=diamond, label=<<font color="black">(contains container element.Key: Unknown[&quot;PrivateElement&quot;] Key)</font>> color="black" fillcolor="white", style=filled]
    node9073 -> node9074 [label=<<font color="black">true</font>> color="black"]
    node9073 -> node9090 [label=<<font color="black">false</font>> color="black"]
    node9074_name [shape=none, label=<<font color="black">Block[9074]</font>>]
    node9074_name -> node9074 [arrowhead=none, color="black", style=dashed]
    node9074 [shape=box, label=<<font color="black">[0] let elems = container<BR ALIGN="LEFT"/>[1] let idx = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9074 -> node9075 [color="black"]
    node9090_name [shape=none, label=<<font color="black">Block[9090]</font>>]
    node9090_name -> node9090 [arrowhead=none, color="black", style=dashed]
    node9090 [shape=box, label=<<font color="black">[0] push container &lt; element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9090 -> node9098 [color="black"]
    node9075_name [shape=none, label=<<font color="black">Branch[9075]</font>>]
    node9075_name -> node9075 [arrowhead=none, color="black", style=dashed]
    node9075 [shape=diamond, label=<<font color="black">(&lt; idx elems.length)</font>> color="black" fillcolor="white", style=filled]
    node9075 -> node9076 [label=<<font color="black">true</font>> color="black"]
    node9075 -> node9080 [label=<<font color="black">false</font>> color="black"]
    node9076_name [shape=none, label=<<font color="black">Block[9076]</font>>]
    node9076_name -> node9076 [arrowhead=none, color="black", style=dashed]
    node9076 [shape=box, label=<<font color="black">[0] let elem = elems[idx]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9076 -> node9077 [color="black"]
    node9080_name [shape=none, label=<<font color="black">Block[9080]</font>>]
    node9080_name -> node9080 [arrowhead=none, color="black", style=dashed]
    node9080 [shape=box, label=<<font color="black">[0] assert (&amp;&amp; (= element.Kind ~accessor~) (= existing.Kind ~accessor~))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9080 -> node9081 [color="black"]
    node9077_name [shape=none, label=<<font color="black">Branch[9077]</font>>]
    node9077_name -> node9077 [arrowhead=none, color="black", style=dashed]
    node9077 [shape=diamond, label=<<font color="black">(= elem.Key element.Key)</font>> color="black" fillcolor="white", style=filled]
    node9077 -> node9078 [label=<<font color="black">true</font>> color="black"]
    node9077 -> node9079 [label=<<font color="black">false</font>> color="black"]
    node9081_name [shape=none, label=<<font color="black">Branch[9081]</font>>]
    node9081_name -> node9081 [arrowhead=none, color="black", style=dashed]
    node9081 [shape=diamond, label=<<font color="black">(= element.Get undefined)</font>> color="black" fillcolor="white", style=filled]
    node9081 -> node9082 [label=<<font color="black">true</font>> color="black"]
    node9081 -> node9083 [label=<<font color="black">false</font>> color="black"]
    node9078_name [shape=none, label=<<font color="black">Block[9078]</font>>]
    node9078_name -> node9078 [arrowhead=none, color="black", style=dashed]
    node9078 [shape=box, label=<<font color="black">[0] let existing = elem<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9078 -> node9079 [color="black"]
    node9079_name [shape=none, label=<<font color="black">Block[9079]</font>>]
    node9079_name -> node9079 [arrowhead=none, color="black", style=dashed]
    node9079 [shape=box, label=<<font color="black">[0] idx = (+ idx 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9079 -> node9075 [color="black"]
    node9082_name [shape=none, label=<<font color="black">Block[9082]</font>>]
    node9082_name -> node9082 [arrowhead=none, color="black", style=dashed]
    node9082 [shape=box, label=<<font color="black">[0] let combined = (new PrivateElement(&quot;Key&quot; -&gt; element.Key, &quot;Kind&quot; -&gt; ~accessor~, &quot;Get&quot; -&gt; existing.Get, &quot;Set&quot; -&gt; element.Set))[#705]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9082 -> node9084 [color="black"]
    node9083_name [shape=none, label=<<font color="black">Block[9083]</font>>]
    node9083_name -> node9083 [arrowhead=none, color="black", style=dashed]
    node9083 [shape=box, label=<<font color="black">[0] let combined = (new PrivateElement(&quot;Key&quot; -&gt; element.Key, &quot;Kind&quot; -&gt; ~accessor~, &quot;Get&quot; -&gt; element.Get, &quot;Set&quot; -&gt; existing.Set))[#706]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9083 -> node9084 [color="black"]
    node9084_name [shape=none, label=<<font color="black">Block[9084]</font>>]
    node9084_name -> node9084 [arrowhead=none, color="black", style=dashed]
    node9084 [shape=box, label=<<font color="black">[0] let elems = container<BR ALIGN="LEFT"/>[1] let idx = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9084 -> node9085 [color="black"]
    node9085_name [shape=none, label=<<font color="black">Branch[9085]</font>>]
    node9085_name -> node9085 [arrowhead=none, color="black", style=dashed]
    node9085 [shape=diamond, label=<<font color="black">(&lt; idx elems.length)</font>> color="black" fillcolor="white", style=filled]
    node9085 -> node9086 [label=<<font color="black">true</font>> color="black"]
    node9085 -> node9098 [label=<<font color="black">false</font>> color="black"]
    node9086_name [shape=none, label=<<font color="black">Block[9086]</font>>]
    node9086_name -> node9086 [arrowhead=none, color="black", style=dashed]
    node9086 [shape=box, label=<<font color="black">[0] let elem = elems[idx]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9086 -> node9087 [color="black"]
    node9087_name [shape=none, label=<<font color="black">Branch[9087]</font>>]
    node9087_name -> node9087 [arrowhead=none, color="black", style=dashed]
    node9087 [shape=diamond, label=<<font color="black">(= elem existing)</font>> color="black" fillcolor="white", style=filled]
    node9087 -> node9088 [label=<<font color="black">true</font>> color="black"]
    node9087 -> node9089 [label=<<font color="black">false</font>> color="black"]
    node9088_name [shape=none, label=<<font color="black">Block[9088]</font>>]
    node9088_name -> node9088 [arrowhead=none, color="black", style=dashed]
    node9088 [shape=box, label=<<font color="black">[0] elems[idx] = combined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9088 -> node9089 [color="black"]
    node9089_name [shape=none, label=<<font color="black">Block[9089]</font>>]
    node9089_name -> node9089 [arrowhead=none, color="black", style=dashed]
    node9089 [shape=box, label=<<font color="black">[0] idx = (+ idx 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9089 -> node9085 [color="black"]
  }
}