digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster160 {
    label = "def DefineField(receiver: Object, fieldRecord: ClassFieldDefinitionRecord): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster160_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster160_entry_name -> cluster160_entry [arrowhead=none, color="black", style=dashed]
    cluster160_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster160_entry -> node1376 [color="black"]
    cluster160_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster160_exit_name -> cluster160_exit [arrowhead=none, color="black", style=dashed]
    cluster160_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1376_name [shape=none, label=<<font color="black">Block[1376]</font>>]
    node1376_name -> node1376 [arrowhead=none, color="black", style=dashed]
    node1376 [shape=box, label=<<font color="black">[0] let fieldName = fieldRecord.Name<BR ALIGN="LEFT"/>[1] let initializer = fieldRecord.Initializer<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1376 -> node1377 [color="black"]
    node1377_name [shape=none, label=<<font color="black">Branch[1377]</font>>]
    node1377_name -> node1377 [arrowhead=none, color="black", style=dashed]
    node1377 [shape=diamond, label=<<font color="black">(! (= initializer ~empty~))</font>> color="black" fillcolor="white", style=filled]
    node1377 -> node1378 [label=<<font color="black">true</font>> color="black"]
    node1377 -> node1380 [label=<<font color="black">false</font>> color="black"]
    node1378_name [shape=none, label=<<font color="black">Call[1378]</font>>]
    node1378_name -> node1378 [arrowhead=none, color="black", style=dashed]
    node1378 [shape=cds, label=<<font color="black">%0 = clo&lt;Call&gt;(initializer, receiver)</font>> color="black" fillcolor="white", style=filled]
    node1378 -> node1379 [color="black"]
    node1380_name [shape=none, label=<<font color="black">Block[1380]</font>>]
    node1380_name -> node1380 [arrowhead=none, color="black", style=dashed]
    node1380 [shape=box, label=<<font color="black">[0] let initValue = undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1380 -> node1381 [color="black"]
    node1379_name [shape=none, label=<<font color="black">Block[1379]</font>>]
    node1379_name -> node1379 [arrowhead=none, color="black", style=dashed]
    node1379 [shape=box, label=<<font color="black">[0] let initValue = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1379 -> node1381 [color="black"]
    node1381_name [shape=none, label=<<font color="black">Branch[1381]</font>>]
    node1381_name -> node1381 [arrowhead=none, color="black", style=dashed]
    node1381 [shape=diamond, label=<<font color="black">(? fieldName: &quot;PrivateName&quot;)</font>> color="black" fillcolor="white", style=filled]
    node1381 -> node1382 [label=<<font color="black">true</font>> color="black"]
    node1381 -> node1384 [label=<<font color="black">false</font>> color="black"]
    node1382_name [shape=none, label=<<font color="black">Call[1382]</font>>]
    node1382_name -> node1382 [arrowhead=none, color="black", style=dashed]
    node1382 [shape=cds, label=<<font color="black">%1 = clo&lt;PrivateFieldAdd&gt;(receiver, fieldName, initValue)</font>> color="black" fillcolor="white", style=filled]
    node1382 -> node1383 [color="black"]
    node1384_name [shape=none, label=<<font color="black">Call[1384]</font>>]
    node1384_name -> node1384 [arrowhead=none, color="black", style=dashed]
    node1384 [shape=cds, label=<<font color="black">%2 = clo&lt;IsPropertyKey&gt;(fieldName)</font>> color="black" fillcolor="white", style=filled]
    node1384 -> node1385 [color="black"]
    node1383_name [shape=none, label=<<font color="black">Block[1383]</font>>]
    node1383_name -> node1383 [arrowhead=none, color="black", style=dashed]
    node1383 [shape=box, label=<<font color="black">[0] [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1383 -> node1388 [color="black"]
    node1385_name [shape=none, label=<<font color="black">Block[1385]</font>>]
    node1385_name -> node1385 [arrowhead=none, color="black", style=dashed]
    node1385 [shape=box, label=<<font color="black">[0] assert (= %2 true)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1385 -> node1386 [color="black"]
    node1388_name [shape=none, label=<<font color="black">Block[1388]</font>>]
    node1388_name -> node1388 [arrowhead=none, color="black", style=dashed]
    node1388 [shape=box, label=<<font color="black">[0] return ~unused~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1388 -> cluster160_exit [color="black"]
    node1386_name [shape=none, label=<<font color="black">Call[1386]</font>>]
    node1386_name -> node1386 [arrowhead=none, color="black", style=dashed]
    node1386 [shape=cds, label=<<font color="black">%3 = clo&lt;CreateDataPropertyOrThrow&gt;(receiver, fieldName, initValue)</font>> color="black" fillcolor="white", style=filled]
    node1386 -> node1387 [color="black"]
    node1387_name [shape=none, label=<<font color="black">Block[1387]</font>>]
    node1387_name -> node1387 [arrowhead=none, color="black", style=dashed]
    node1387 [shape=box, label=<<font color="black">[0] [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1387 -> node1388 [color="black"]
  }
}