digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster814 {
    label = "def <SYNTAX>:AsyncArrowFunction[0,0].Contains(this: Ast:AsyncArrowFunction[0,0], symbol: Unknown): Boolean"
    style = rounded
    cluster814_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster814_entry_name -> cluster814_entry [arrowhead=none, color="black", style=dashed]
    cluster814_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster814_entry -> node3107 [color="black"]
    cluster814_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster814_exit_name -> cluster814_exit [arrowhead=none, color="black", style=dashed]
    cluster814_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3107_name [shape=none, label=<<font color="black">Branch[3107]</font>>]
    node3107_name -> node3107 [arrowhead=none, color="black", style=dashed]
    node3107 [shape=diamond, label=<<font color="black">(! (|| (|| (|| (|| (= symbol (nt |NewTarget|[])) (= symbol (nt |SuperProperty|[]))) (= symbol (nt |SuperCall|[]))) (= symbol &quot;super&quot;)) (= symbol &quot;this&quot;)))</font>> color="black" fillcolor="white", style=filled]
    node3107 -> node3108 [label=<<font color="black">true</font>> color="black"]
    node3107 -> node3109 [label=<<font color="black">false</font>> color="black"]
    node3108_name [shape=none, label=<<font color="black">Block[3108]</font>>]
    node3108_name -> node3108 [arrowhead=none, color="black", style=dashed]
    node3108 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3108 -> cluster814_exit [color="black"]
    node3109_name [shape=none, label=<<font color="black">Call[3109]</font>>]
    node3109_name -> node3109 [arrowhead=none, color="black", style=dashed]
    node3109 [shape=cds, label=<<font color="black">%0 = this[1]-&gt;Contains(symbol)</font>> color="black" fillcolor="white", style=filled]
    node3109 -> node3110 [color="black"]
    node3110_name [shape=none, label=<<font color="black">Block[3110]</font>>]
    node3110_name -> node3110 [arrowhead=none, color="black", style=dashed]
    node3110 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3110 -> cluster814_exit [color="black"]
  }
}