digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster166 {
    label = "def IteratorStep(iteratorRecord: IteratorRecord): Normal[Object | False] | Abrupt"
    style = rounded
    cluster166_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster166_entry_name -> cluster166_entry [arrowhead=none, color="black", style=dashed]
    cluster166_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster166_entry -> node1434 [color="black"]
    cluster166_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster166_exit_name -> cluster166_exit [arrowhead=none, color="black", style=dashed]
    cluster166_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1434_name [shape=none, label=<<font color="black">Call[1434]</font>>]
    node1434_name -> node1434 [arrowhead=none, color="black", style=dashed]
    node1434 [shape=cds, label=<<font color="black">%0 = clo&lt;IteratorNext&gt;(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node1434 -> node1435 [color="black"]
    node1435_name [shape=none, label=<<font color="black">Block[1435]</font>>]
    node1435_name -> node1435 [arrowhead=none, color="black", style=dashed]
    node1435 [shape=box, label=<<font color="black">[0] let result = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1435 -> node1436 [color="black"]
    node1436_name [shape=none, label=<<font color="black">Call[1436]</font>>]
    node1436_name -> node1436 [arrowhead=none, color="black", style=dashed]
    node1436 [shape=cds, label=<<font color="black">%1 = clo&lt;IteratorComplete&gt;(result)</font>> color="black" fillcolor="white", style=filled]
    node1436 -> node1437 [color="black"]
    node1437_name [shape=none, label=<<font color="black">Block[1437]</font>>]
    node1437_name -> node1437 [arrowhead=none, color="black", style=dashed]
    node1437 [shape=box, label=<<font color="black">[0] let done = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1437 -> node1438 [color="black"]
    node1438_name [shape=none, label=<<font color="black">Branch[1438]</font>>]
    node1438_name -> node1438 [arrowhead=none, color="black", style=dashed]
    node1438 [shape=diamond, label=<<font color="black">(= done true)</font>> color="black" fillcolor="white", style=filled]
    node1438 -> node1439 [label=<<font color="black">true</font>> color="black"]
    node1438 -> node1440 [label=<<font color="black">false</font>> color="black"]
    node1439_name [shape=none, label=<<font color="black">Block[1439]</font>>]
    node1439_name -> node1439 [arrowhead=none, color="black", style=dashed]
    node1439 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1439 -> cluster166_exit [color="black"]
    node1440_name [shape=none, label=<<font color="black">Block[1440]</font>>]
    node1440_name -> node1440 [arrowhead=none, color="black", style=dashed]
    node1440 [shape=box, label=<<font color="black">[0] return result<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1440 -> cluster166_exit [color="black"]
  }
}