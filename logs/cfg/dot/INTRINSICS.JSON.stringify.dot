digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2547 {
    label = "def <BUILTIN>:INTRINSICS.JSON.stringify(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2547_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2547_entry_name -> cluster2547_entry [arrowhead=none, color="black", style=dashed]
    cluster2547_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2547_entry -> node18331 [color="black"]
    cluster2547_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2547_exit_name -> cluster2547_exit [arrowhead=none, color="black", style=dashed]
    cluster2547_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node18331_name [shape=none, label=<<font color="black">Branch[18331]</font>>]
    node18331_name -> node18331 [arrowhead=none, color="black", style=dashed]
    node18331 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node18331 -> node18332 [label=<<font color="black">true</font>> color="black"]
    node18331 -> node18333 [label=<<font color="black">false</font>> color="black"]
    node18332_name [shape=none, label=<<font color="black">Block[18332]</font>>]
    node18332_name -> node18332 [arrowhead=none, color="black", style=dashed]
    node18332 [shape=box, label=<<font color="black">[0] let value = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18332 -> node18334 [color="black"]
    node18333_name [shape=none, label=<<font color="black">Block[18333]</font>>]
    node18333_name -> node18333 [arrowhead=none, color="black", style=dashed]
    node18333 [shape=box, label=<<font color="black">[0] let value = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18333 -> node18334 [color="black"]
    node18334_name [shape=none, label=<<font color="black">Branch[18334]</font>>]
    node18334_name -> node18334 [arrowhead=none, color="black", style=dashed]
    node18334 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node18334 -> node18335 [label=<<font color="black">true</font>> color="black"]
    node18334 -> node18336 [label=<<font color="black">false</font>> color="black"]
    node18335_name [shape=none, label=<<font color="black">Block[18335]</font>>]
    node18335_name -> node18335 [arrowhead=none, color="black", style=dashed]
    node18335 [shape=box, label=<<font color="black">[0] let replacer = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18335 -> node18337 [color="black"]
    node18336_name [shape=none, label=<<font color="black">Block[18336]</font>>]
    node18336_name -> node18336 [arrowhead=none, color="black", style=dashed]
    node18336 [shape=box, label=<<font color="black">[0] let replacer = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18336 -> node18337 [color="black"]
    node18337_name [shape=none, label=<<font color="black">Branch[18337]</font>>]
    node18337_name -> node18337 [arrowhead=none, color="black", style=dashed]
    node18337 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node18337 -> node18338 [label=<<font color="black">true</font>> color="black"]
    node18337 -> node18339 [label=<<font color="black">false</font>> color="black"]
    node18338_name [shape=none, label=<<font color="black">Block[18338]</font>>]
    node18338_name -> node18338 [arrowhead=none, color="black", style=dashed]
    node18338 [shape=box, label=<<font color="black">[0] let space = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18338 -> node18340 [color="black"]
    node18339_name [shape=none, label=<<font color="black">Block[18339]</font>>]
    node18339_name -> node18339 [arrowhead=none, color="black", style=dashed]
    node18339 [shape=box, label=<<font color="black">[0] let space = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18339 -> node18340 [color="black"]
    node18340_name [shape=none, label=<<font color="black">Block[18340]</font>>]
    node18340_name -> node18340 [arrowhead=none, color="black", style=dashed]
    node18340 [shape=box, label=<<font color="black">[0] let stack = (new [])[#1194]<BR ALIGN="LEFT"/>[1] let indent = &quot;&quot;<BR ALIGN="LEFT"/>[2] (yet &quot;Let _PropertyList_ and _ReplacerFunction_ be *undefined*.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18340 -> node18341 [color="black"]
    node18341_name [shape=none, label=<<font color="black">Branch[18341]</font>>]
    node18341_name -> node18341 [arrowhead=none, color="black", style=dashed]
    node18341 [shape=diamond, label=<<font color="black">(= (typeof replacer) @Object)</font>> color="black" fillcolor="white", style=filled]
    node18341 -> node18342 [label=<<font color="black">true</font>> color="black"]
    node18341 -> node18366 [label=<<font color="black">false</font>> color="black"]
    node18342_name [shape=none, label=<<font color="black">Call[18342]</font>>]
    node18342_name -> node18342 [arrowhead=none, color="black", style=dashed]
    node18342 [shape=cds, label=<<font color="black">%0 = clo&lt;IsCallable&gt;(replacer)</font>> color="black" fillcolor="white", style=filled]
    node18342 -> node18343 [color="black"]
    node18366_name [shape=none, label=<<font color="black">Branch[18366]</font>>]
    node18366_name -> node18366 [arrowhead=none, color="black", style=dashed]
    node18366 [shape=diamond, label=<<font color="black">(= (typeof space) @Object)</font>> color="black" fillcolor="white", style=filled]
    node18366 -> node18367 [label=<<font color="black">true</font>> color="black"]
    node18366 -> node18373 [label=<<font color="black">false</font>> color="black"]
    node18343_name [shape=none, label=<<font color="black">Branch[18343]</font>>]
    node18343_name -> node18343 [arrowhead=none, color="black", style=dashed]
    node18343 [shape=diamond, label=<<font color="black">(= %0 true)</font>> color="black" fillcolor="white", style=filled]
    node18343 -> node18344 [label=<<font color="black">true</font>> color="black"]
    node18343 -> node18345 [label=<<font color="black">false</font>> color="black"]
    node18367_name [shape=none, label=<<font color="black">Branch[18367]</font>>]
    node18367_name -> node18367 [arrowhead=none, color="black", style=dashed]
    node18367 [shape=diamond, label=<<font color="black">(! (= space.NumberData absent))</font>> color="black" fillcolor="white", style=filled]
    node18367 -> node18368 [label=<<font color="black">true</font>> color="black"]
    node18367 -> node18370 [label=<<font color="black">false</font>> color="black"]
    node18373_name [shape=none, label=<<font color="black">Branch[18373]</font>>]
    node18373_name -> node18373 [arrowhead=none, color="black", style=dashed]
    node18373 [shape=diamond, label=<<font color="black">(= (typeof space) @Number)</font>> color="black" fillcolor="white", style=filled]
    node18373 -> node18374 [label=<<font color="black">true</font>> color="black"]
    node18373 -> node18379 [label=<<font color="black">false</font>> color="black"]
    node18344_name [shape=none, label=<<font color="black">Block[18344]</font>>]
    node18344_name -> node18344 [arrowhead=none, color="black", style=dashed]
    node18344 [shape=box, label=<<font color="black">[0] ReplacerFunction = replacer<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18344 -> node18366 [color="black"]
    node18345_name [shape=none, label=<<font color="black">Call[18345]</font>>]
    node18345_name -> node18345 [arrowhead=none, color="black", style=dashed]
    node18345 [shape=cds, label=<<font color="black">%1 = clo&lt;IsArray&gt;(replacer)</font>> color="black" fillcolor="white", style=filled]
    node18345 -> node18346 [color="black"]
    node18368_name [shape=none, label=<<font color="black">Call[18368]</font>>]
    node18368_name -> node18368 [arrowhead=none, color="black", style=dashed]
    node18368 [shape=cds, label=<<font color="black">%6 = clo&lt;ToNumber&gt;(space)</font>> color="black" fillcolor="white", style=filled]
    node18368 -> node18369 [color="black"]
    node18370_name [shape=none, label=<<font color="black">Branch[18370]</font>>]
    node18370_name -> node18370 [arrowhead=none, color="black", style=dashed]
    node18370 [shape=diamond, label=<<font color="black">(! (= space.StringData absent))</font>> color="black" fillcolor="white", style=filled]
    node18370 -> node18371 [label=<<font color="black">true</font>> color="black"]
    node18370 -> node18373 [label=<<font color="black">false</font>> color="black"]
    node18374_name [shape=none, label=<<font color="black">Call[18374]</font>>]
    node18374_name -> node18374 [arrowhead=none, color="black", style=dashed]
    node18374 [shape=cds, label=<<font color="black">%8 = clo&lt;ToIntegerOrInfinity&gt;(space)</font>> color="black" fillcolor="white", style=filled]
    node18374 -> node18375 [color="black"]
    node18379_name [shape=none, label=<<font color="black">Branch[18379]</font>>]
    node18379_name -> node18379 [arrowhead=none, color="black", style=dashed]
    node18379 [shape=diamond, label=<<font color="black">(= (typeof space) @String)</font>> color="black" fillcolor="white", style=filled]
    node18379 -> node18380 [label=<<font color="black">true</font>> color="black"]
    node18379 -> node18381 [label=<<font color="black">false</font>> color="black"]
    node18346_name [shape=none, label=<<font color="black">Block[18346]</font>>]
    node18346_name -> node18346 [arrowhead=none, color="black", style=dashed]
    node18346 [shape=box, label=<<font color="black">[0] let isArray = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18346 -> node18347 [color="black"]
    node18369_name [shape=none, label=<<font color="black">Block[18369]</font>>]
    node18369_name -> node18369 [arrowhead=none, color="black", style=dashed]
    node18369 [shape=box, label=<<font color="black">[0] space = [? %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18369 -> node18373 [color="black"]
    node18371_name [shape=none, label=<<font color="black">Call[18371]</font>>]
    node18371_name -> node18371 [arrowhead=none, color="black", style=dashed]
    node18371 [shape=cds, label=<<font color="black">%7 = clo&lt;ToString&gt;(space)</font>> color="black" fillcolor="white", style=filled]
    node18371 -> node18372 [color="black"]
    node18375_name [shape=none, label=<<font color="black">Block[18375]</font>>]
    node18375_name -> node18375 [arrowhead=none, color="black", style=dashed]
    node18375 [shape=box, label=<<font color="black">[0] let spaceMV = [! %8]<BR ALIGN="LEFT"/>[1] spaceMV = (min 10 spaceMV)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18375 -> node18376 [color="black"]
    node18380_name [shape=none, label=<<font color="black">Block[18380]</font>>]
    node18380_name -> node18380 [arrowhead=none, color="black", style=dashed]
    node18380 [shape=box, label=<<font color="black">[0] (yet &quot;If the length of _space_ is 10 or less, let _gap_ be _space_; otherwise let _gap_ be the substring of _space_ from 0 to 10.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18380 -> node18382 [color="black"]
    node18381_name [shape=none, label=<<font color="black">Block[18381]</font>>]
    node18381_name -> node18381 [arrowhead=none, color="black", style=dashed]
    node18381 [shape=box, label=<<font color="black">[0] let gap = &quot;&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18381 -> node18382 [color="black"]
    node18347_name [shape=none, label=<<font color="black">Branch[18347]</font>>]
    node18347_name -> node18347 [arrowhead=none, color="black", style=dashed]
    node18347 [shape=diamond, label=<<font color="black">(= isArray true)</font>> color="black" fillcolor="white", style=filled]
    node18347 -> node18348 [label=<<font color="black">true</font>> color="black"]
    node18347 -> node18366 [label=<<font color="black">false</font>> color="black"]
    node18372_name [shape=none, label=<<font color="black">Block[18372]</font>>]
    node18372_name -> node18372 [arrowhead=none, color="black", style=dashed]
    node18372 [shape=box, label=<<font color="black">[0] space = [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18372 -> node18373 [color="black"]
    node18376_name [shape=none, label=<<font color="black">Branch[18376]</font>>]
    node18376_name -> node18376 [arrowhead=none, color="black", style=dashed]
    node18376 [shape=diamond, label=<<font color="black">(&lt; spaceMV 1)</font>> color="black" fillcolor="white", style=filled]
    node18376 -> node18377 [label=<<font color="black">true</font>> color="black"]
    node18376 -> node18378 [label=<<font color="black">false</font>> color="black"]
    node18382_name [shape=none, label=<<font color="black">Call[18382]</font>>]
    node18382_name -> node18382 [arrowhead=none, color="black", style=dashed]
    node18382 [shape=cds, label=<<font color="black">%9 = clo&lt;OrdinaryObjectCreate&gt;(@EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Object.prototype%&quot;])</font>> color="black" fillcolor="white", style=filled]
    node18382 -> node18383 [color="black"]
    node18348_name [shape=none, label=<<font color="black">Block[18348]</font>>]
    node18348_name -> node18348 [arrowhead=none, color="black", style=dashed]
    node18348 [shape=box, label=<<font color="black">[0] PropertyList = (new [])[#1195]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18348 -> node18349 [color="black"]
    node18377_name [shape=none, label=<<font color="black">Block[18377]</font>>]
    node18377_name -> node18377 [arrowhead=none, color="black", style=dashed]
    node18377 [shape=box, label=<<font color="black">[0] let gap = &quot;&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18377 -> node18382 [color="black"]
    node18378_name [shape=none, label=<<font color="black">Block[18378]</font>>]
    node18378_name -> node18378 [arrowhead=none, color="black", style=dashed]
    node18378 [shape=box, label=<<font color="black">[0] (yet &quot;let _gap_ be the String value containing _spaceMV_ occurrences of the code unit 0x0020 (SPACE).&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18378 -> node18382 [color="black"]
    node18383_name [shape=none, label=<<font color="black">Block[18383]</font>>]
    node18383_name -> node18383 [arrowhead=none, color="black", style=dashed]
    node18383 [shape=box, label=<<font color="black">[0] let wrapper = %9<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18383 -> node18384 [color="black"]
    node18349_name [shape=none, label=<<font color="black">Call[18349]</font>>]
    node18349_name -> node18349 [arrowhead=none, color="black", style=dashed]
    node18349 [shape=cds, label=<<font color="black">%2 = clo&lt;LengthOfArrayLike&gt;(replacer)</font>> color="black" fillcolor="white", style=filled]
    node18349 -> node18350 [color="black"]
    node18384_name [shape=none, label=<<font color="black">Call[18384]</font>>]
    node18384_name -> node18384 [arrowhead=none, color="black", style=dashed]
    node18384 [shape=cds, label=<<font color="black">%10 = clo&lt;CreateDataPropertyOrThrow&gt;(wrapper, &quot;&quot;, value)</font>> color="black" fillcolor="white", style=filled]
    node18384 -> node18385 [color="black"]
    node18350_name [shape=none, label=<<font color="black">Block[18350]</font>>]
    node18350_name -> node18350 [arrowhead=none, color="black", style=dashed]
    node18350 [shape=box, label=<<font color="black">[0] let len = [? %2]<BR ALIGN="LEFT"/>[1] let k = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18350 -> node18351 [color="black"]
    node18385_name [shape=none, label=<<font color="black">Block[18385]</font>>]
    node18385_name -> node18385 [arrowhead=none, color="black", style=dashed]
    node18385 [shape=box, label=<<font color="black">[0] [! %10]<BR ALIGN="LEFT"/>[1] let state = (new Record(&quot;ReplacerFunction&quot; -&gt; ReplacerFunction, &quot;Stack&quot; -&gt; stack, &quot;Indent&quot; -&gt; indent, &quot;Gap&quot; -&gt; gap, &quot;PropertyList&quot; -&gt; PropertyList))[#1196]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18385 -> node18386 [color="black"]
    node18351_name [shape=none, label=<<font color="black">Branch[18351]</font>>]
    node18351_name -> node18351 [arrowhead=none, color="black", style=dashed]
    node18351 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white", style=filled]
    node18351 -> node18352 [label=<<font color="black">true</font>> color="black"]
    node18351 -> node18366 [label=<<font color="black">false</font>> color="black"]
    node18386_name [shape=none, label=<<font color="black">Call[18386]</font>>]
    node18386_name -> node18386 [arrowhead=none, color="black", style=dashed]
    node18386 [shape=cds, label=<<font color="black">%11 = clo&lt;SerializeJSONProperty&gt;(state, &quot;&quot;, wrapper)</font>> color="black" fillcolor="white", style=filled]
    node18386 -> node18387 [color="black"]
    node18352_name [shape=none, label=<<font color="black">Call[18352]</font>>]
    node18352_name -> node18352 [arrowhead=none, color="black", style=dashed]
    node18352 [shape=cds, label=<<font color="black">%3 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node18352 -> node18353 [color="black"]
    node18387_name [shape=none, label=<<font color="black">Block[18387]</font>>]
    node18387_name -> node18387 [arrowhead=none, color="black", style=dashed]
    node18387 [shape=box, label=<<font color="black">[0] return [? %11]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18387 -> cluster2547_exit [color="black"]
    node18353_name [shape=none, label=<<font color="black">Block[18353]</font>>]
    node18353_name -> node18353 [arrowhead=none, color="black", style=dashed]
    node18353 [shape=box, label=<<font color="black">[0] let prop = [! %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18353 -> node18354 [color="black"]
    node18354_name [shape=none, label=<<font color="black">Call[18354]</font>>]
    node18354_name -> node18354 [arrowhead=none, color="black", style=dashed]
    node18354 [shape=cds, label=<<font color="black">%4 = clo&lt;Get&gt;(replacer, prop)</font>> color="black" fillcolor="white", style=filled]
    node18354 -> node18355 [color="black"]
    node18355_name [shape=none, label=<<font color="black">Block[18355]</font>>]
    node18355_name -> node18355 [arrowhead=none, color="black", style=dashed]
    node18355 [shape=box, label=<<font color="black">[0] let v = [? %4]<BR ALIGN="LEFT"/>[1] let item = undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18355 -> node18356 [color="black"]
    node18356_name [shape=none, label=<<font color="black">Branch[18356]</font>>]
    node18356_name -> node18356 [arrowhead=none, color="black", style=dashed]
    node18356 [shape=diamond, label=<<font color="black">(= (typeof v) @String)</font>> color="black" fillcolor="white", style=filled]
    node18356 -> node18357 [label=<<font color="black">true</font>> color="black"]
    node18356 -> node18358 [label=<<font color="black">false</font>> color="black"]
    node18357_name [shape=none, label=<<font color="black">Block[18357]</font>>]
    node18357_name -> node18357 [arrowhead=none, color="black", style=dashed]
    node18357 [shape=box, label=<<font color="black">[0] item = v<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18357 -> node18363 [color="black"]
    node18358_name [shape=none, label=<<font color="black">Branch[18358]</font>>]
    node18358_name -> node18358 [arrowhead=none, color="black", style=dashed]
    node18358 [shape=diamond, label=<<font color="black">(= (typeof v) @Number)</font>> color="black" fillcolor="white", style=filled]
    node18358 -> node18359 [label=<<font color="black">true</font>> color="black"]
    node18358 -> node18361 [label=<<font color="black">false</font>> color="black"]
    node18363_name [shape=none, label=<<font color="black">Branch[18363]</font>>]
    node18363_name -> node18363 [arrowhead=none, color="black", style=dashed]
    node18363 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= item undefined)) (! (contains PropertyList item)))</font>> color="black" fillcolor="white", style=filled]
    node18363 -> node18364 [label=<<font color="black">true</font>> color="black"]
    node18363 -> node18365 [label=<<font color="black">false</font>> color="black"]
    node18359_name [shape=none, label=<<font color="black">Call[18359]</font>>]
    node18359_name -> node18359 [arrowhead=none, color="black", style=dashed]
    node18359 [shape=cds, label=<<font color="black">%5 = clo&lt;ToString&gt;(v)</font>> color="black" fillcolor="white", style=filled]
    node18359 -> node18360 [color="black"]
    node18361_name [shape=none, label=<<font color="black">Branch[18361]</font>>]
    node18361_name -> node18361 [arrowhead=none, color="black", style=dashed]
    node18361 [shape=diamond, label=<<font color="black">(= (typeof v) @Object)</font>> color="black" fillcolor="white", style=filled]
    node18361 -> node18362 [label=<<font color="black">true</font>> color="black"]
    node18361 -> node18363 [label=<<font color="black">false</font>> color="black"]
    node18364_name [shape=none, label=<<font color="black">Block[18364]</font>>]
    node18364_name -> node18364 [arrowhead=none, color="black", style=dashed]
    node18364 [shape=box, label=<<font color="black">[0] push PropertyList &lt; item<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18364 -> node18365 [color="black"]
    node18365_name [shape=none, label=<<font color="black">Block[18365]</font>>]
    node18365_name -> node18365 [arrowhead=none, color="black", style=dashed]
    node18365 [shape=box, label=<<font color="black">[0] k = (+ k 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18365 -> node18351 [color="black"]
    node18360_name [shape=none, label=<<font color="black">Block[18360]</font>>]
    node18360_name -> node18360 [arrowhead=none, color="black", style=dashed]
    node18360 [shape=box, label=<<font color="black">[0] item = [! %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18360 -> node18363 [color="black"]
    node18362_name [shape=none, label=<<font color="black">Block[18362]</font>>]
    node18362_name -> node18362 [arrowhead=none, color="black", style=dashed]
    node18362 [shape=box, label=<<font color="black">[0] (yet &quot;If _v_ has a [[StringData]] or [[NumberData]] internal slot, set _item_ to ? ToString(_v_).&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18362 -> node18363 [color="black"]
  }
}