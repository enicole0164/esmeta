digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster573 {
    label = "def <SYNTAX>:ForInOfStatement[3,0].ContainsUndefinedBreakTarget(this: Ast:ForInOfStatement[3,0], labelSet: Unknown): Boolean"
    style = rounded
    cluster573_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster573_entry_name -> cluster573_entry [arrowhead=none, color="black", style=dashed]
    cluster573_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster573_entry -> node2575 [color="black"]
    cluster573_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster573_exit_name -> cluster573_exit [arrowhead=none, color="black", style=dashed]
    cluster573_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2575_name [shape=none, label=<<font color="black">Call[2575]</font>>]
    node2575_name -> node2575 [arrowhead=none, color="black", style=dashed]
    node2575 [shape=cds, label=<<font color="black">%0 = this[2]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2575 -> node2576 [color="black"]
    node2576_name [shape=none, label=<<font color="black">Block[2576]</font>>]
    node2576_name -> node2576 [arrowhead=none, color="black", style=dashed]
    node2576 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2576 -> cluster573_exit [color="black"]
  }
}