digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster792 {
    label = "def <SYNTAX>:<DEFAULT>.Contains(this: Ast, symbol: Unknown): Boolean"
    style = rounded
    cluster792_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster792_entry_name -> cluster792_entry [arrowhead=none, color="black", style=dashed]
    cluster792_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster792_entry -> node3044 [color="black"]
    cluster792_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster792_exit_name -> cluster792_exit [arrowhead=none, color="black", style=dashed]
    cluster792_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3044_name [shape=none, label=<<font color="black">Block[3044]</font>>]
    node3044_name -> node3044 [arrowhead=none, color="black", style=dashed]
    node3044 [shape=box, label=<<font color="black">[0] %1 = (get-children this)[#364]<BR ALIGN="LEFT"/>[1] %0 = 0<BR ALIGN="LEFT"/>[2] %2 = %1.length<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3044 -> node3045 [color="black"]
    node3045_name [shape=none, label=<<font color="black">Branch[3045]</font>>]
    node3045_name -> node3045 [arrowhead=none, color="black", style=dashed]
    node3045 [shape=diamond, label=<<font color="black">(&lt; %0 %2)</font>> color="black" fillcolor="white", style=filled]
    node3045 -> node3046 [label=<<font color="black">true</font>> color="black"]
    node3045 -> node3055 [label=<<font color="black">false</font>> color="black"]
    node3046_name [shape=none, label=<<font color="black">Block[3046]</font>>]
    node3046_name -> node3046 [arrowhead=none, color="black", style=dashed]
    node3046 [shape=box, label=<<font color="black">[0] let child = %1[%0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3046 -> node3047 [color="black"]
    node3055_name [shape=none, label=<<font color="black">Block[3055]</font>>]
    node3055_name -> node3055 [arrowhead=none, color="black", style=dashed]
    node3055 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3055 -> cluster792_exit [color="black"]
    node3047_name [shape=none, label=<<font color="black">Branch[3047]</font>>]
    node3047_name -> node3047 [arrowhead=none, color="black", style=dashed]
    node3047 [shape=diamond, label=<<font color="black">(? child: symbol)</font>> color="black" fillcolor="white", style=filled]
    node3047 -> node3048 [label=<<font color="black">true</font>> color="black"]
    node3047 -> node3049 [label=<<font color="black">false</font>> color="black"]
    node3048_name [shape=none, label=<<font color="black">Block[3048]</font>>]
    node3048_name -> node3048 [arrowhead=none, color="black", style=dashed]
    node3048 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3048 -> cluster792_exit [color="black"]
    node3049_name [shape=none, label=<<font color="black">Branch[3049]</font>>]
    node3049_name -> node3049 [arrowhead=none, color="black", style=dashed]
    node3049 [shape=diamond, label=<<font color="black">(? child: &quot;Nonterminal&quot;)</font>> color="black" fillcolor="white", style=filled]
    node3049 -> node3050 [label=<<font color="black">true</font>> color="black"]
    node3049 -> node3054 [label=<<font color="black">false</font>> color="black"]
    node3050_name [shape=none, label=<<font color="black">Call[3050]</font>>]
    node3050_name -> node3050 [arrowhead=none, color="black", style=dashed]
    node3050 [shape=cds, label=<<font color="black">result = child-&gt;Contains(symbol)</font>> color="black" fillcolor="white", style=filled]
    node3050 -> node3051 [color="black"]
    node3054_name [shape=none, label=<<font color="black">Block[3054]</font>>]
    node3054_name -> node3054 [arrowhead=none, color="black", style=dashed]
    node3054 [shape=box, label=<<font color="black">[0] %0 = (+ %0 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3054 -> node3045 [color="black"]
    node3051_name [shape=none, label=<<font color="black">Block[3051]</font>>]
    node3051_name -> node3051 [arrowhead=none, color="black", style=dashed]
    node3051 [shape=box, label=<<font color="black">[0] let contained = result<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3051 -> node3052 [color="black"]
    node3052_name [shape=none, label=<<font color="black">Branch[3052]</font>>]
    node3052_name -> node3052 [arrowhead=none, color="black", style=dashed]
    node3052 [shape=diamond, label=<<font color="black">(= contained true)</font>> color="black" fillcolor="white", style=filled]
    node3052 -> node3053 [label=<<font color="black">true</font>> color="black"]
    node3052 -> node3054 [label=<<font color="black">false</font>> color="black"]
    node3053_name [shape=none, label=<<font color="black">Block[3053]</font>>]
    node3053_name -> node3053 [arrowhead=none, color="black", style=dashed]
    node3053 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3053 -> cluster792_exit [color="black"]
  }
}