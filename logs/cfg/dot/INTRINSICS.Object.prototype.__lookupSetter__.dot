digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2032 {
    label = "def <BUILTIN>:INTRINSICS.Object.prototype.__lookupSetter__(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2032_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2032_entry_name -> cluster2032_entry [arrowhead=none, color="black", style=dashed]
    cluster2032_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2032_entry -> node11474 [color="black"]
    cluster2032_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2032_exit_name -> cluster2032_exit [arrowhead=none, color="black", style=dashed]
    cluster2032_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11474_name [shape=none, label=<<font color="black">Branch[11474]</font>>]
    node11474_name -> node11474 [arrowhead=none, color="black", style=dashed]
    node11474 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11474 -> node11475 [label=<<font color="black">true</font>> color="black"]
    node11474 -> node11476 [label=<<font color="black">false</font>> color="black"]
    node11475_name [shape=none, label=<<font color="black">Block[11475]</font>>]
    node11475_name -> node11475 [arrowhead=none, color="black", style=dashed]
    node11475 [shape=box, label=<<font color="black">[0] let P = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11475 -> node11477 [color="black"]
    node11476_name [shape=none, label=<<font color="black">Block[11476]</font>>]
    node11476_name -> node11476 [arrowhead=none, color="black", style=dashed]
    node11476 [shape=box, label=<<font color="black">[0] let P = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11476 -> node11477 [color="black"]
    node11477_name [shape=none, label=<<font color="black">Call[11477]</font>>]
    node11477_name -> node11477 [arrowhead=none, color="black", style=dashed]
    node11477 [shape=cds, label=<<font color="black">%0 = clo&lt;ToObject&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node11477 -> node11478 [color="black"]
    node11478_name [shape=none, label=<<font color="black">Block[11478]</font>>]
    node11478_name -> node11478 [arrowhead=none, color="black", style=dashed]
    node11478 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11478 -> node11479 [color="black"]
    node11479_name [shape=none, label=<<font color="black">Call[11479]</font>>]
    node11479_name -> node11479 [arrowhead=none, color="black", style=dashed]
    node11479 [shape=cds, label=<<font color="black">%1 = clo&lt;ToPropertyKey&gt;(P)</font>> color="black" fillcolor="white", style=filled]
    node11479 -> node11480 [color="black"]
    node11480_name [shape=none, label=<<font color="black">Block[11480]</font>>]
    node11480_name -> node11480 [arrowhead=none, color="black", style=dashed]
    node11480 [shape=box, label=<<font color="black">[0] let key = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11480 -> node11481 [color="black"]
    node11481_name [shape=none, label=<<font color="black">Branch[11481]</font>>]
    node11481_name -> node11481 [arrowhead=none, color="black", style=dashed]
    node11481 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white", style=filled]
    node11481 -> node11482 [label=<<font color="black">true</font>> color="black"]
    node11482_name [shape=none, label=<<font color="black">Call[11482]</font>>]
    node11482_name -> node11482 [arrowhead=none, color="black", style=dashed]
    node11482 [shape=cds, label=<<font color="black">%2 = O-&gt;GetOwnProperty(key)</font>> color="black" fillcolor="white", style=filled]
    node11482 -> node11483 [color="black"]
    node11483_name [shape=none, label=<<font color="black">Block[11483]</font>>]
    node11483_name -> node11483 [arrowhead=none, color="black", style=dashed]
    node11483 [shape=box, label=<<font color="black">[0] let desc = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11483 -> node11484 [color="black"]
    node11484_name [shape=none, label=<<font color="black">Branch[11484]</font>>]
    node11484_name -> node11484 [arrowhead=none, color="black", style=dashed]
    node11484 [shape=diamond, label=<<font color="black">(! (= desc undefined))</font>> color="black" fillcolor="white", style=filled]
    node11484 -> node11485 [label=<<font color="black">true</font>> color="black"]
    node11484 -> node11489 [label=<<font color="black">false</font>> color="black"]
    node11485_name [shape=none, label=<<font color="black">Call[11485]</font>>]
    node11485_name -> node11485 [arrowhead=none, color="black", style=dashed]
    node11485 [shape=cds, label=<<font color="black">%3 = clo&lt;IsAccessorDescriptor&gt;(desc)</font>> color="black" fillcolor="white", style=filled]
    node11485 -> node11486 [color="black"]
    node11489_name [shape=none, label=<<font color="black">Call[11489]</font>>]
    node11489_name -> node11489 [arrowhead=none, color="black", style=dashed]
    node11489 [shape=cds, label=<<font color="black">%4 = O-&gt;GetPrototypeOf()</font>> color="black" fillcolor="white", style=filled]
    node11489 -> node11490 [color="black"]
    node11486_name [shape=none, label=<<font color="black">Branch[11486]</font>>]
    node11486_name -> node11486 [arrowhead=none, color="black", style=dashed]
    node11486 [shape=diamond, label=<<font color="black">(= %3 true)</font>> color="black" fillcolor="white", style=filled]
    node11486 -> node11487 [label=<<font color="black">true</font>> color="black"]
    node11486 -> node11488 [label=<<font color="black">false</font>> color="black"]
    node11490_name [shape=none, label=<<font color="black">Block[11490]</font>>]
    node11490_name -> node11490 [arrowhead=none, color="black", style=dashed]
    node11490 [shape=box, label=<<font color="black">[0] O = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11490 -> node11491 [color="black"]
    node11487_name [shape=none, label=<<font color="black">Block[11487]</font>>]
    node11487_name -> node11487 [arrowhead=none, color="black", style=dashed]
    node11487 [shape=box, label=<<font color="black">[0] return desc.Set<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11487 -> cluster2032_exit [color="black"]
    node11488_name [shape=none, label=<<font color="black">Block[11488]</font>>]
    node11488_name -> node11488 [arrowhead=none, color="black", style=dashed]
    node11488 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11488 -> cluster2032_exit [color="black"]
    node11491_name [shape=none, label=<<font color="black">Branch[11491]</font>>]
    node11491_name -> node11491 [arrowhead=none, color="black", style=dashed]
    node11491 [shape=diamond, label=<<font color="black">(= O null)</font>> color="black" fillcolor="white", style=filled]
    node11491 -> node11492 [label=<<font color="black">true</font>> color="black"]
    node11491 -> node11481 [label=<<font color="black">false</font>> color="black"]
    node11492_name [shape=none, label=<<font color="black">Block[11492]</font>>]
    node11492_name -> node11492 [arrowhead=none, color="black", style=dashed]
    node11492 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11492 -> cluster2032_exit [color="black"]
  }
}