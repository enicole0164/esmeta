digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster866 {
    label = "def <SYNTAX>:SingleNameBinding[0,1].IteratorBindingInitialization(this: Ast:SingleNameBinding[0,1], iteratorRecord: Unknown, environment: Unknown): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster866_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster866_entry_name -> cluster866_entry [arrowhead=none, color="black", style=dashed]
    cluster866_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster866_entry -> node3293 [color="black"]
    cluster866_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster866_exit_name -> cluster866_exit [arrowhead=none, color="black", style=dashed]
    cluster866_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3293_name [shape=none, label=<<font color="black">Call[3293]</font>>]
    node3293_name -> node3293 [arrowhead=none, color="black", style=dashed]
    node3293 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;StringValue()</font>> color="black" fillcolor="white", style=filled]
    node3293 -> node3294 [color="black"]
    node3294_name [shape=none, label=<<font color="black">Block[3294]</font>>]
    node3294_name -> node3294 [arrowhead=none, color="black", style=dashed]
    node3294 [shape=box, label=<<font color="black">[0] let bindingId = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3294 -> node3295 [color="black"]
    node3295_name [shape=none, label=<<font color="black">Call[3295]</font>>]
    node3295_name -> node3295 [arrowhead=none, color="black", style=dashed]
    node3295 [shape=cds, label=<<font color="black">%1 = clo&lt;ResolveBinding&gt;(bindingId, environment)</font>> color="black" fillcolor="white", style=filled]
    node3295 -> node3296 [color="black"]
    node3296_name [shape=none, label=<<font color="black">Block[3296]</font>>]
    node3296_name -> node3296 [arrowhead=none, color="black", style=dashed]
    node3296 [shape=box, label=<<font color="black">[0] let lhs = [? %1]<BR ALIGN="LEFT"/>[1] let v = undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3296 -> node3297 [color="black"]
    node3297_name [shape=none, label=<<font color="black">Branch[3297]</font>>]
    node3297_name -> node3297 [arrowhead=none, color="black", style=dashed]
    node3297 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white", style=filled]
    node3297 -> node3298 [label=<<font color="black">true</font>> color="black"]
    node3297 -> node3312 [label=<<font color="black">false</font>> color="black"]
    node3298_name [shape=none, label=<<font color="black">Call[3298]</font>>]
    node3298_name -> node3298 [arrowhead=none, color="black", style=dashed]
    node3298 [shape=cds, label=<<font color="black">%2 = clo&lt;IteratorStep&gt;(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node3298 -> node3299 [color="black"]
    node3312_name [shape=none, label=<<font color="black">Branch[3312]</font>>]
    node3312_name -> node3312 [arrowhead=none, color="black", style=dashed]
    node3312 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= this[1] absent)) (= v undefined))</font>> color="black" fillcolor="white", style=filled]
    node3312 -> node3313 [label=<<font color="black">true</font>> color="black"]
    node3312 -> node3321 [label=<<font color="black">false</font>> color="black"]
    node3299_name [shape=none, label=<<font color="black">Call[3299]</font>>]
    node3299_name -> node3299 [arrowhead=none, color="black", style=dashed]
    node3299 [shape=cds, label=<<font color="black">%3 = clo&lt;Completion&gt;(%2)</font>> color="black" fillcolor="white", style=filled]
    node3299 -> node3300 [color="black"]
    node3313_name [shape=none, label=<<font color="black">Call[3313]</font>>]
    node3313_name -> node3313 [arrowhead=none, color="black", style=dashed]
    node3313 [shape=cds, label=<<font color="black">%6 = clo&lt;IsAnonymousFunctionDefinition&gt;(this[1])</font>> color="black" fillcolor="white", style=filled]
    node3313 -> node3314 [color="black"]
    node3321_name [shape=none, label=<<font color="black">Branch[3321]</font>>]
    node3321_name -> node3321 [arrowhead=none, color="black", style=dashed]
    node3321 [shape=diamond, label=<<font color="black">(= environment undefined)</font>> color="black" fillcolor="white", style=filled]
    node3321 -> node3322 [label=<<font color="black">true</font>> color="black"]
    node3321 -> node3324 [label=<<font color="black">false</font>> color="black"]
    node3300_name [shape=none, label=<<font color="black">Block[3300]</font>>]
    node3300_name -> node3300 [arrowhead=none, color="black", style=dashed]
    node3300 [shape=box, label=<<font color="black">[0] let next = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3300 -> node3301 [color="black"]
    node3314_name [shape=none, label=<<font color="black">Branch[3314]</font>>]
    node3314_name -> node3314 [arrowhead=none, color="black", style=dashed]
    node3314 [shape=diamond, label=<<font color="black">(= %6 true)</font>> color="black" fillcolor="white", style=filled]
    node3314 -> node3315 [label=<<font color="black">true</font>> color="black"]
    node3314 -> node3317 [label=<<font color="black">false</font>> color="black"]
    node3322_name [shape=none, label=<<font color="black">Call[3322]</font>>]
    node3322_name -> node3322 [arrowhead=none, color="black", style=dashed]
    node3322 [shape=cds, label=<<font color="black">%10 = clo&lt;PutValue&gt;(lhs, v)</font>> color="black" fillcolor="white", style=filled]
    node3322 -> node3323 [color="black"]
    node3324_name [shape=none, label=<<font color="black">Call[3324]</font>>]
    node3324_name -> node3324 [arrowhead=none, color="black", style=dashed]
    node3324 [shape=cds, label=<<font color="black">%11 = clo&lt;InitializeReferencedBinding&gt;(lhs, v)</font>> color="black" fillcolor="white", style=filled]
    node3324 -> node3325 [color="black"]
    node3301_name [shape=none, label=<<font color="black">Branch[3301]</font>>]
    node3301_name -> node3301 [arrowhead=none, color="black", style=dashed]
    node3301 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? next) (! (= next.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node3301 -> node3302 [label=<<font color="black">true</font>> color="black"]
    node3301 -> node3303 [label=<<font color="black">false</font>> color="black"]
    node3315_name [shape=none, label=<<font color="black">Call[3315]</font>>]
    node3315_name -> node3315 [arrowhead=none, color="black", style=dashed]
    node3315 [shape=cds, label=<<font color="black">%7 = this[1]-&gt;NamedEvaluation(bindingId)</font>> color="black" fillcolor="white", style=filled]
    node3315 -> node3316 [color="black"]
    node3317_name [shape=none, label=<<font color="black">Call[3317]</font>>]
    node3317_name -> node3317 [arrowhead=none, color="black", style=dashed]
    node3317 [shape=cds, label=<<font color="black">%8 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node3317 -> node3318 [color="black"]
    node3323_name [shape=none, label=<<font color="black">Block[3323]</font>>]
    node3323_name -> node3323 [arrowhead=none, color="black", style=dashed]
    node3323 [shape=box, label=<<font color="black">[0] return [? %10]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3323 -> cluster866_exit [color="black"]
    node3325_name [shape=none, label=<<font color="black">Block[3325]</font>>]
    node3325_name -> node3325 [arrowhead=none, color="black", style=dashed]
    node3325 [shape=box, label=<<font color="black">[0] return [? %11]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3325 -> cluster866_exit [color="black"]
    node3302_name [shape=none, label=<<font color="black">Block[3302]</font>>]
    node3302_name -> node3302 [arrowhead=none, color="black", style=dashed]
    node3302 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3302 -> node3303 [color="black"]
    node3303_name [shape=none, label=<<font color="black">Block[3303]</font>>]
    node3303_name -> node3303 [arrowhead=none, color="black", style=dashed]
    node3303 [shape=box, label=<<font color="black">[0] [? next]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3303 -> node3304 [color="black"]
    node3316_name [shape=none, label=<<font color="black">Block[3316]</font>>]
    node3316_name -> node3316 [arrowhead=none, color="black", style=dashed]
    node3316 [shape=box, label=<<font color="black">[0] v = [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3316 -> node3321 [color="black"]
    node3318_name [shape=none, label=<<font color="black">Block[3318]</font>>]
    node3318_name -> node3318 [arrowhead=none, color="black", style=dashed]
    node3318 [shape=box, label=<<font color="black">[0] let defaultValue = %8<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3318 -> node3319 [color="black"]
    node3304_name [shape=none, label=<<font color="black">Branch[3304]</font>>]
    node3304_name -> node3304 [arrowhead=none, color="black", style=dashed]
    node3304 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white", style=filled]
    node3304 -> node3305 [label=<<font color="black">true</font>> color="black"]
    node3304 -> node3306 [label=<<font color="black">false</font>> color="black"]
    node3319_name [shape=none, label=<<font color="black">Call[3319]</font>>]
    node3319_name -> node3319 [arrowhead=none, color="black", style=dashed]
    node3319 [shape=cds, label=<<font color="black">%9 = clo&lt;GetValue&gt;(defaultValue)</font>> color="black" fillcolor="white", style=filled]
    node3319 -> node3320 [color="black"]
    node3305_name [shape=none, label=<<font color="black">Block[3305]</font>>]
    node3305_name -> node3305 [arrowhead=none, color="black", style=dashed]
    node3305 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3305 -> node3312 [color="black"]
    node3306_name [shape=none, label=<<font color="black">Call[3306]</font>>]
    node3306_name -> node3306 [arrowhead=none, color="black", style=dashed]
    node3306 [shape=cds, label=<<font color="black">%4 = clo&lt;IteratorValue&gt;(next)</font>> color="black" fillcolor="white", style=filled]
    node3306 -> node3307 [color="black"]
    node3320_name [shape=none, label=<<font color="black">Block[3320]</font>>]
    node3320_name -> node3320 [arrowhead=none, color="black", style=dashed]
    node3320 [shape=box, label=<<font color="black">[0] v = [? %9]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3320 -> node3321 [color="black"]
    node3307_name [shape=none, label=<<font color="black">Call[3307]</font>>]
    node3307_name -> node3307 [arrowhead=none, color="black", style=dashed]
    node3307 [shape=cds, label=<<font color="black">%5 = clo&lt;Completion&gt;(%4)</font>> color="black" fillcolor="white", style=filled]
    node3307 -> node3308 [color="black"]
    node3308_name [shape=none, label=<<font color="black">Block[3308]</font>>]
    node3308_name -> node3308 [arrowhead=none, color="black", style=dashed]
    node3308 [shape=box, label=<<font color="black">[0] v = %5<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3308 -> node3309 [color="black"]
    node3309_name [shape=none, label=<<font color="black">Branch[3309]</font>>]
    node3309_name -> node3309 [arrowhead=none, color="black", style=dashed]
    node3309 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? v) (! (= v.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node3309 -> node3310 [label=<<font color="black">true</font>> color="black"]
    node3309 -> node3311 [label=<<font color="black">false</font>> color="black"]
    node3310_name [shape=none, label=<<font color="black">Block[3310]</font>>]
    node3310_name -> node3310 [arrowhead=none, color="black", style=dashed]
    node3310 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3310 -> node3311 [color="black"]
    node3311_name [shape=none, label=<<font color="black">Block[3311]</font>>]
    node3311_name -> node3311 [arrowhead=none, color="black", style=dashed]
    node3311 [shape=box, label=<<font color="black">[0] [? v]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3311 -> node3312 [color="black"]
  }
}