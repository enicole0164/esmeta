digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1238 {
    label = "def <SYNTAX>:PrimaryExpression[10,0].Evaluation(this: Ast:PrimaryExpression[10,0]): Unknown"
    style = rounded
    cluster1238_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1238_entry_name -> cluster1238_entry [arrowhead=none, color="black", style=dashed]
    cluster1238_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1238_entry -> node5650 [color="black"]
    cluster1238_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1238_exit_name -> cluster1238_exit [arrowhead=none, color="black", style=dashed]
    cluster1238_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node5650_name [shape=none, label=<<font color="black">Call[5650]</font>>]
    node5650_name -> node5650 [arrowhead=none, color="black", style=dashed]
    node5650 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;BodyText()</font>> color="black" fillcolor="white", style=filled]
    node5650 -> node5651 [color="black"]
    node5651_name [shape=none, label=<<font color="black">Call[5651]</font>>]
    node5651_name -> node5651 [arrowhead=none, color="black", style=dashed]
    node5651 [shape=cds, label=<<font color="black">%1 = clo&lt;CodePointsToString&gt;(%0)</font>> color="black" fillcolor="white", style=filled]
    node5651 -> node5652 [color="black"]
    node5652_name [shape=none, label=<<font color="black">Block[5652]</font>>]
    node5652_name -> node5652 [arrowhead=none, color="black", style=dashed]
    node5652 [shape=box, label=<<font color="black">[0] let pattern = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5652 -> node5653 [color="black"]
    node5653_name [shape=none, label=<<font color="black">Call[5653]</font>>]
    node5653_name -> node5653 [arrowhead=none, color="black", style=dashed]
    node5653 [shape=cds, label=<<font color="black">%2 = this[0]-&gt;FlagText()</font>> color="black" fillcolor="white", style=filled]
    node5653 -> node5654 [color="black"]
    node5654_name [shape=none, label=<<font color="black">Call[5654]</font>>]
    node5654_name -> node5654 [arrowhead=none, color="black", style=dashed]
    node5654 [shape=cds, label=<<font color="black">%3 = clo&lt;CodePointsToString&gt;(%2)</font>> color="black" fillcolor="white", style=filled]
    node5654 -> node5655 [color="black"]
    node5655_name [shape=none, label=<<font color="black">Block[5655]</font>>]
    node5655_name -> node5655 [arrowhead=none, color="black", style=dashed]
    node5655 [shape=box, label=<<font color="black">[0] let flags = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5655 -> node5656 [color="black"]
    node5656_name [shape=none, label=<<font color="black">Call[5656]</font>>]
    node5656_name -> node5656 [arrowhead=none, color="black", style=dashed]
    node5656 [shape=cds, label=<<font color="black">%4 = clo&lt;RegExpCreate&gt;(pattern, flags)</font>> color="black" fillcolor="white", style=filled]
    node5656 -> node5657 [color="black"]
    node5657_name [shape=none, label=<<font color="black">Block[5657]</font>>]
    node5657_name -> node5657 [arrowhead=none, color="black", style=dashed]
    node5657 [shape=box, label=<<font color="black">[0] return [! %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5657 -> cluster1238_exit [color="black"]
  }
}