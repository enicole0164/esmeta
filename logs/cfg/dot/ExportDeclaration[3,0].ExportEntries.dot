digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1960 {
    label = "def <SYNTAX>:ExportDeclaration[3,0].ExportEntries(this: Ast:ExportDeclaration[3,0]): Unknown["ListOfExportEntryRecords"]"
    style = rounded
    cluster1960_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1960_entry_name -> cluster1960_entry [arrowhead=none, color="black", style=dashed]
    cluster1960_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1960_entry -> node10641 [color="black"]
    cluster1960_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1960_exit_name -> cluster1960_exit [arrowhead=none, color="black", style=dashed]
    cluster1960_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node10641_name [shape=none, label=<<font color="black">Block[10641]</font>>]
    node10641_name -> node10641 [arrowhead=none, color="black", style=dashed]
    node10641 [shape=box, label=<<font color="black">[0] let entries = (new [])[#846]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10641 -> node10642 [color="black"]
    node10642_name [shape=none, label=<<font color="black">Call[10642]</font>>]
    node10642_name -> node10642 [arrowhead=none, color="black", style=dashed]
    node10642 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node10642 -> node10643 [color="black"]
    node10643_name [shape=none, label=<<font color="black">Block[10643]</font>>]
    node10643_name -> node10643 [arrowhead=none, color="black", style=dashed]
    node10643 [shape=box, label=<<font color="black">[0] let names = %0<BR ALIGN="LEFT"/>[1] %2 = names<BR ALIGN="LEFT"/>[2] %1 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10643 -> node10644 [color="black"]
    node10644_name [shape=none, label=<<font color="black">Branch[10644]</font>>]
    node10644_name -> node10644 [arrowhead=none, color="black", style=dashed]
    node10644 [shape=diamond, label=<<font color="black">(&lt; %1 %2.length)</font>> color="black" fillcolor="white", style=filled]
    node10644 -> node10645 [label=<<font color="black">true</font>> color="black"]
    node10644 -> node10646 [label=<<font color="black">false</font>> color="black"]
    node10645_name [shape=none, label=<<font color="black">Block[10645]</font>>]
    node10645_name -> node10645 [arrowhead=none, color="black", style=dashed]
    node10645 [shape=box, label=<<font color="black">[0] let name = %2[%1]<BR ALIGN="LEFT"/>[1] push entries &lt; (new ExportEntryRecord(&quot;ModuleRequest&quot; -&gt; null, &quot;ImportName&quot; -&gt; null, &quot;LocalName&quot; -&gt; name, &quot;ExportName&quot; -&gt; name))[#847]<BR ALIGN="LEFT"/>[2] %1 = (+ %1 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10645 -> node10644 [color="black"]
    node10646_name [shape=none, label=<<font color="black">Block[10646]</font>>]
    node10646_name -> node10646 [arrowhead=none, color="black", style=dashed]
    node10646 [shape=box, label=<<font color="black">[0] return entries<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10646 -> cluster1960_exit [color="black"]
  }
}