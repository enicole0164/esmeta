digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1047 {
    label = "def <INTERNAL>:OrdinaryObject.GetPrototypeOf(O: OrdinaryObject): Normal[Object | Null]"
    style = rounded
    cluster1047_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1047_entry_name -> cluster1047_entry [arrowhead=none, color="black", style=dashed]
    cluster1047_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1047_entry -> node3927 [color="black"]
    cluster1047_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1047_exit_name -> cluster1047_exit [arrowhead=none, color="black", style=dashed]
    cluster1047_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3927_name [shape=none, label=<<font color="black">Call[3927]</font>>]
    node3927_name -> node3927 [arrowhead=none, color="black", style=dashed]
    node3927 [shape=cds, label=<<font color="black">%0 = clo&lt;OrdinaryGetPrototypeOf&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node3927 -> node3928 [color="black"]
    node3928_name [shape=none, label=<<font color="black">Block[3928]</font>>]
    node3928_name -> node3928 [arrowhead=none, color="black", style=dashed]
    node3928 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3928 -> cluster1047_exit [color="black"]
  }
}