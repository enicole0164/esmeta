digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2092 {
    label = "def <BUILTIN>:INTRINSICS.Math.fround(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2092_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2092_entry_name -> cluster2092_entry [arrowhead=none, color="black", style=dashed]
    cluster2092_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2092_entry -> node12208 [color="black"]
    cluster2092_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2092_exit_name -> cluster2092_exit [arrowhead=none, color="black", style=dashed]
    cluster2092_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node12208_name [shape=none, label=<<font color="black">Branch[12208]</font>>]
    node12208_name -> node12208 [arrowhead=none, color="black", style=dashed]
    node12208 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node12208 -> node12209 [label=<<font color="black">true</font>> color="black"]
    node12208 -> node12210 [label=<<font color="black">false</font>> color="black"]
    node12209_name [shape=none, label=<<font color="black">Block[12209]</font>>]
    node12209_name -> node12209 [arrowhead=none, color="black", style=dashed]
    node12209 [shape=box, label=<<font color="black">[0] let x = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12209 -> node12211 [color="black"]
    node12210_name [shape=none, label=<<font color="black">Block[12210]</font>>]
    node12210_name -> node12210 [arrowhead=none, color="black", style=dashed]
    node12210 [shape=box, label=<<font color="black">[0] let x = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12210 -> node12211 [color="black"]
    node12211_name [shape=none, label=<<font color="black">Call[12211]</font>>]
    node12211_name -> node12211 [arrowhead=none, color="black", style=dashed]
    node12211 [shape=cds, label=<<font color="black">%0 = clo&lt;ToNumber&gt;(x)</font>> color="black" fillcolor="white", style=filled]
    node12211 -> node12212 [color="black"]
    node12212_name [shape=none, label=<<font color="black">Block[12212]</font>>]
    node12212_name -> node12212 [arrowhead=none, color="black", style=dashed]
    node12212 [shape=box, label=<<font color="black">[0] let n = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12212 -> node12213 [color="black"]
    node12213_name [shape=none, label=<<font color="black">Branch[12213]</font>>]
    node12213_name -> node12213 [arrowhead=none, color="black", style=dashed]
    node12213 [shape=diamond, label=<<font color="black">(= n NaN)</font>> color="black" fillcolor="white", style=filled]
    node12213 -> node12214 [label=<<font color="black">true</font>> color="black"]
    node12213 -> node12215 [label=<<font color="black">false</font>> color="black"]
    node12214_name [shape=none, label=<<font color="black">Block[12214]</font>>]
    node12214_name -> node12214 [arrowhead=none, color="black", style=dashed]
    node12214 [shape=box, label=<<font color="black">[0] return NaN<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12214 -> cluster2092_exit [color="black"]
    node12215_name [shape=none, label=<<font color="black">Branch[12215]</font>>]
    node12215_name -> node12215 [arrowhead=none, color="black", style=dashed]
    node12215 [shape=diamond, label=<<font color="black">(|| (|| (|| (= n 0.0f) (= n -0.0f)) (= n +INF)) (= n -INF))</font>> color="black" fillcolor="white", style=filled]
    node12215 -> node12216 [label=<<font color="black">true</font>> color="black"]
    node12215 -> node12217 [label=<<font color="black">false</font>> color="black"]
    node12216_name [shape=none, label=<<font color="black">Block[12216]</font>>]
    node12216_name -> node12216 [arrowhead=none, color="black", style=dashed]
    node12216 [shape=box, label=<<font color="black">[0] return n<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12216 -> cluster2092_exit [color="black"]
    node12217_name [shape=none, label=<<font color="black">Block[12217]</font>>]
    node12217_name -> node12217 [arrowhead=none, color="black", style=dashed]
    node12217 [shape=box, label=<<font color="black">[0] (yet &quot;Let _n32_ be the result of converting _n_ to a value in IEEE 754-2019 binary32 format using roundTiesToEven mode.&quot;)<BR ALIGN="LEFT"/>[1] (yet &quot;Let _n64_ be the result of converting _n32_ to a value in IEEE 754-2019 binary64 format.&quot;)<BR ALIGN="LEFT"/>[2] (yet &quot;Return the ECMAScript Number value corresponding to _n64_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12217 -> cluster2092_exit [color="black"]
  }
}