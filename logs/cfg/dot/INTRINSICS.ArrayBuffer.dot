digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2483 {
    label = "def <BUILTIN>:INTRINSICS.ArrayBuffer(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2483_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2483_entry_name -> cluster2483_entry [arrowhead=none, color="black", style=dashed]
    cluster2483_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2483_entry -> node17465 [color="black"]
    cluster2483_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2483_exit_name -> cluster2483_exit [arrowhead=none, color="black", style=dashed]
    cluster2483_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17465_name [shape=none, label=<<font color="black">Branch[17465]</font>>]
    node17465_name -> node17465 [arrowhead=none, color="black", style=dashed]
    node17465 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node17465 -> node17466 [label=<<font color="black">true</font>> color="black"]
    node17465 -> node17467 [label=<<font color="black">false</font>> color="black"]
    node17466_name [shape=none, label=<<font color="black">Block[17466]</font>>]
    node17466_name -> node17466 [arrowhead=none, color="black", style=dashed]
    node17466 [shape=box, label=<<font color="black">[0] let length = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17466 -> node17468 [color="black"]
    node17467_name [shape=none, label=<<font color="black">Block[17467]</font>>]
    node17467_name -> node17467 [arrowhead=none, color="black", style=dashed]
    node17467 [shape=box, label=<<font color="black">[0] let length = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17467 -> node17468 [color="black"]
    node17468_name [shape=none, label=<<font color="black">Branch[17468]</font>>]
    node17468_name -> node17468 [arrowhead=none, color="black", style=dashed]
    node17468 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white", style=filled]
    node17468 -> node17469 [label=<<font color="black">true</font>> color="black"]
    node17468 -> node17470 [label=<<font color="black">false</font>> color="black"]
    node17469_name [shape=none, label=<<font color="black">Block[17469]</font>>]
    node17469_name -> node17469 [arrowhead=none, color="black", style=dashed]
    node17469 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1150])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17469 -> cluster2483_exit [color="black"]
    node17470_name [shape=none, label=<<font color="black">Call[17470]</font>>]
    node17470_name -> node17470 [arrowhead=none, color="black", style=dashed]
    node17470 [shape=cds, label=<<font color="black">%0 = clo&lt;ToIndex&gt;(length)</font>> color="black" fillcolor="white", style=filled]
    node17470 -> node17471 [color="black"]
    node17471_name [shape=none, label=<<font color="black">Block[17471]</font>>]
    node17471_name -> node17471 [arrowhead=none, color="black", style=dashed]
    node17471 [shape=box, label=<<font color="black">[0] let byteLength = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17471 -> node17472 [color="black"]
    node17472_name [shape=none, label=<<font color="black">Call[17472]</font>>]
    node17472_name -> node17472 [arrowhead=none, color="black", style=dashed]
    node17472 [shape=cds, label=<<font color="black">%1 = clo&lt;AllocateArrayBuffer&gt;(NewTarget, byteLength)</font>> color="black" fillcolor="white", style=filled]
    node17472 -> node17473 [color="black"]
    node17473_name [shape=none, label=<<font color="black">Block[17473]</font>>]
    node17473_name -> node17473 [arrowhead=none, color="black", style=dashed]
    node17473 [shape=box, label=<<font color="black">[0] return [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17473 -> cluster2483_exit [color="black"]
  }
}