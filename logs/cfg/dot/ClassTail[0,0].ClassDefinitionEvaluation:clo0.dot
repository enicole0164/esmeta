digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1689 {
    label = "def <BUILTIN-CLO>:ClassTail[0,0].ClassDefinitionEvaluation:clo0(this: Unknown, argumentsList: Unknown, NewTarget: Unknown): Unknown"
    style = rounded
    cluster1689_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1689_entry_name -> cluster1689_entry [arrowhead=none, color="black", style=dashed]
    cluster1689_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1689_entry -> node8978 [color="black"]
    cluster1689_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1689_exit_name -> cluster1689_exit [arrowhead=none, color="black", style=dashed]
    cluster1689_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8978_name [shape=none, label=<<font color="black">Block[8978]</font>>]
    node8978_name -> node8978 [arrowhead=none, color="black", style=dashed]
    node8978 [shape=box, label=<<font color="black">[0] let args = argumentsList<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8978 -> node8979 [color="black"]
    node8979_name [shape=none, label=<<font color="black">Branch[8979]</font>>]
    node8979_name -> node8979 [arrowhead=none, color="black", style=dashed]
    node8979 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white", style=filled]
    node8979 -> node8980 [label=<<font color="black">true</font>> color="black"]
    node8979 -> node8981 [label=<<font color="black">false</font>> color="black"]
    node8980_name [shape=none, label=<<font color="black">Block[8980]</font>>]
    node8980_name -> node8980 [arrowhead=none, color="black", style=dashed]
    node8980 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#694])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8980 -> cluster1689_exit [color="black"]
    node8981_name [shape=none, label=<<font color="black">Block[8981]</font>>]
    node8981_name -> node8981 [arrowhead=none, color="black", style=dashed]
    node8981 [shape=box, label=<<font color="black">[0] let F = @EXECUTION_STACK[0].Function<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8981 -> node8982 [color="black"]
    node8982_name [shape=none, label=<<font color="black">Branch[8982]</font>>]
    node8982_name -> node8982 [arrowhead=none, color="black", style=dashed]
    node8982 [shape=diamond, label=<<font color="black">(= F.ConstructorKind ~derived~)</font>> color="black" fillcolor="white", style=filled]
    node8982 -> node8983 [label=<<font color="black">true</font>> color="black"]
    node8982 -> node8991 [label=<<font color="black">false</font>> color="black"]
    node8983_name [shape=none, label=<<font color="black">Block[8983]</font>>]
    node8983_name -> node8983 [arrowhead=none, color="black", style=dashed]
    node8983 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8983 -> node8984 [color="black"]
    node8991_name [shape=none, label=<<font color="black">Block[8991]</font>>]
    node8991_name -> node8991 [arrowhead=none, color="black", style=dashed]
    node8991 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8991 -> node8992 [color="black"]
    node8984_name [shape=none, label=<<font color="black">Call[8984]</font>>]
    node8984_name -> node8984 [arrowhead=none, color="black", style=dashed]
    node8984 [shape=cds, label=<<font color="black">%0 = F-&gt;GetPrototypeOf()</font>> color="black" fillcolor="white", style=filled]
    node8984 -> node8985 [color="black"]
    node8992_name [shape=none, label=<<font color="black">Call[8992]</font>>]
    node8992_name -> node8992 [arrowhead=none, color="black", style=dashed]
    node8992 [shape=cds, label=<<font color="black">%3 = clo&lt;OrdinaryCreateFromConstructor&gt;(NewTarget, &quot;%Object.prototype%&quot;)</font>> color="black" fillcolor="white", style=filled]
    node8992 -> node8993 [color="black"]
    node8985_name [shape=none, label=<<font color="black">Block[8985]</font>>]
    node8985_name -> node8985 [arrowhead=none, color="black", style=dashed]
    node8985 [shape=box, label=<<font color="black">[0] let func = [! %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8985 -> node8986 [color="black"]
    node8993_name [shape=none, label=<<font color="black">Block[8993]</font>>]
    node8993_name -> node8993 [arrowhead=none, color="black", style=dashed]
    node8993 [shape=box, label=<<font color="black">[0] let result = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8993 -> node8994 [color="black"]
    node8986_name [shape=none, label=<<font color="black">Call[8986]</font>>]
    node8986_name -> node8986 [arrowhead=none, color="black", style=dashed]
    node8986 [shape=cds, label=<<font color="black">%1 = clo&lt;IsConstructor&gt;(func)</font>> color="black" fillcolor="white", style=filled]
    node8986 -> node8987 [color="black"]
    node8994_name [shape=none, label=<<font color="black">Call[8994]</font>>]
    node8994_name -> node8994 [arrowhead=none, color="black", style=dashed]
    node8994 [shape=cds, label=<<font color="black">%4 = clo&lt;InitializeInstanceElements&gt;(result, F)</font>> color="black" fillcolor="white", style=filled]
    node8994 -> node8995 [color="black"]
    node8987_name [shape=none, label=<<font color="black">Branch[8987]</font>>]
    node8987_name -> node8987 [arrowhead=none, color="black", style=dashed]
    node8987 [shape=diamond, label=<<font color="black">(= %1 false)</font>> color="black" fillcolor="white", style=filled]
    node8987 -> node8988 [label=<<font color="black">true</font>> color="black"]
    node8987 -> node8989 [label=<<font color="black">false</font>> color="black"]
    node8995_name [shape=none, label=<<font color="black">Block[8995]</font>>]
    node8995_name -> node8995 [arrowhead=none, color="black", style=dashed]
    node8995 [shape=box, label=<<font color="black">[0] [? %4]<BR ALIGN="LEFT"/>[1] return result<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8995 -> cluster1689_exit [color="black"]
    node8988_name [shape=none, label=<<font color="black">Block[8988]</font>>]
    node8988_name -> node8988 [arrowhead=none, color="black", style=dashed]
    node8988 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#695])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8988 -> cluster1689_exit [color="black"]
    node8989_name [shape=none, label=<<font color="black">Call[8989]</font>>]
    node8989_name -> node8989 [arrowhead=none, color="black", style=dashed]
    node8989 [shape=cds, label=<<font color="black">%2 = clo&lt;Construct&gt;(func, args, NewTarget)</font>> color="black" fillcolor="white", style=filled]
    node8989 -> node8990 [color="black"]
    node8990_name [shape=none, label=<<font color="black">Block[8990]</font>>]
    node8990_name -> node8990 [arrowhead=none, color="black", style=dashed]
    node8990 [shape=box, label=<<font color="black">[0] let result = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8990 -> node8994 [color="black"]
  }
}