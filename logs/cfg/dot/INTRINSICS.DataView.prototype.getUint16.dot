digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2508 {
    label = "def <BUILTIN>:INTRINSICS.DataView.prototype.getUint16(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2508_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2508_entry_name -> cluster2508_entry [arrowhead=none, color="black", style=dashed]
    cluster2508_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2508_entry -> node17782 [color="black"]
    cluster2508_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2508_exit_name -> cluster2508_exit [arrowhead=none, color="black", style=dashed]
    cluster2508_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17782_name [shape=none, label=<<font color="black">Branch[17782]</font>>]
    node17782_name -> node17782 [arrowhead=none, color="black", style=dashed]
    node17782 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node17782 -> node17783 [label=<<font color="black">true</font>> color="black"]
    node17782 -> node17784 [label=<<font color="black">false</font>> color="black"]
    node17783_name [shape=none, label=<<font color="black">Block[17783]</font>>]
    node17783_name -> node17783 [arrowhead=none, color="black", style=dashed]
    node17783 [shape=box, label=<<font color="black">[0] let byteOffset = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17783 -> node17785 [color="black"]
    node17784_name [shape=none, label=<<font color="black">Block[17784]</font>>]
    node17784_name -> node17784 [arrowhead=none, color="black", style=dashed]
    node17784 [shape=box, label=<<font color="black">[0] let byteOffset = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17784 -> node17785 [color="black"]
    node17785_name [shape=none, label=<<font color="black">Branch[17785]</font>>]
    node17785_name -> node17785 [arrowhead=none, color="black", style=dashed]
    node17785 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node17785 -> node17786 [label=<<font color="black">true</font>> color="black"]
    node17785 -> node17787 [label=<<font color="black">false</font>> color="black"]
    node17786_name [shape=none, label=<<font color="black">Block[17786]</font>>]
    node17786_name -> node17786 [arrowhead=none, color="black", style=dashed]
    node17786 [shape=box, label=<<font color="black">[0] let littleEndian = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17786 -> node17788 [color="black"]
    node17787_name [shape=none, label=<<font color="black">Block[17787]</font>>]
    node17787_name -> node17787 [arrowhead=none, color="black", style=dashed]
    node17787 [shape=box, label=<<font color="black">[0] let littleEndian = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17787 -> node17788 [color="black"]
    node17788_name [shape=none, label=<<font color="black">Block[17788]</font>>]
    node17788_name -> node17788 [arrowhead=none, color="black", style=dashed]
    node17788 [shape=box, label=<<font color="black">[0] let v = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17788 -> node17789 [color="black"]
    node17789_name [shape=none, label=<<font color="black">Branch[17789]</font>>]
    node17789_name -> node17789 [arrowhead=none, color="black", style=dashed]
    node17789 [shape=diamond, label=<<font color="black">(= littleEndian absent)</font>> color="black" fillcolor="white", style=filled]
    node17789 -> node17790 [label=<<font color="black">true</font>> color="black"]
    node17789 -> node17791 [label=<<font color="black">false</font>> color="black"]
    node17790_name [shape=none, label=<<font color="black">Block[17790]</font>>]
    node17790_name -> node17790 [arrowhead=none, color="black", style=dashed]
    node17790 [shape=box, label=<<font color="black">[0] littleEndian = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17790 -> node17791 [color="black"]
    node17791_name [shape=none, label=<<font color="black">Call[17791]</font>>]
    node17791_name -> node17791 [arrowhead=none, color="black", style=dashed]
    node17791 [shape=cds, label=<<font color="black">%0 = clo&lt;GetViewValue&gt;(v, byteOffset, littleEndian, ~Uint16~)</font>> color="black" fillcolor="white", style=filled]
    node17791 -> node17792 [color="black"]
    node17792_name [shape=none, label=<<font color="black">Block[17792]</font>>]
    node17792_name -> node17792 [arrowhead=none, color="black", style=dashed]
    node17792 [shape=box, label=<<font color="black">[0] return [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17792 -> cluster2508_exit [color="black"]
  }
}