digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1302 {
    label = "def <SYNTAX>:UpdateExpression[2,0].Evaluation(this: Ast:UpdateExpression[2,0]): Unknown"
    style = rounded
    cluster1302_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1302_entry_name -> cluster1302_entry [arrowhead=none, color="black", style=dashed]
    cluster1302_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1302_entry -> node6164 [color="black"]
    cluster1302_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1302_exit_name -> cluster1302_exit [arrowhead=none, color="black", style=dashed]
    cluster1302_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6164_name [shape=none, label=<<font color="black">Call[6164]</font>>]
    node6164_name -> node6164 [arrowhead=none, color="black", style=dashed]
    node6164 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6164 -> node6165 [color="black"]
    node6165_name [shape=none, label=<<font color="black">Block[6165]</font>>]
    node6165_name -> node6165 [arrowhead=none, color="black", style=dashed]
    node6165 [shape=box, label=<<font color="black">[0] let lhs = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6165 -> node6166 [color="black"]
    node6166_name [shape=none, label=<<font color="black">Call[6166]</font>>]
    node6166_name -> node6166 [arrowhead=none, color="black", style=dashed]
    node6166 [shape=cds, label=<<font color="black">%1 = clo&lt;GetValue&gt;(lhs)</font>> color="black" fillcolor="white", style=filled]
    node6166 -> node6167 [color="black"]
    node6167_name [shape=none, label=<<font color="black">Call[6167]</font>>]
    node6167_name -> node6167 [arrowhead=none, color="black", style=dashed]
    node6167 [shape=cds, label=<<font color="black">%2 = clo&lt;ToNumeric&gt;([? %1])</font>> color="black" fillcolor="white", style=filled]
    node6167 -> node6168 [color="black"]
    node6168_name [shape=none, label=<<font color="black">Block[6168]</font>>]
    node6168_name -> node6168 [arrowhead=none, color="black", style=dashed]
    node6168 [shape=box, label=<<font color="black">[0] let oldValue = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6168 -> node6169 [color="black"]
    node6169_name [shape=none, label=<<font color="black">Branch[6169]</font>>]
    node6169_name -> node6169 [arrowhead=none, color="black", style=dashed]
    node6169 [shape=diamond, label=<<font color="black">(= (typeof oldValue) @Number)</font>> color="black" fillcolor="white", style=filled]
    node6169 -> node6170 [label=<<font color="black">true</font>> color="black"]
    node6169 -> node6172 [label=<<font color="black">false</font>> color="black"]
    node6170_name [shape=none, label=<<font color="black">Call[6170]</font>>]
    node6170_name -> node6170 [arrowhead=none, color="black", style=dashed]
    node6170 [shape=cds, label=<<font color="black">%3 = clo&lt;Number::subtract&gt;(oldValue, 1.0f)</font>> color="black" fillcolor="white", style=filled]
    node6170 -> node6171 [color="black"]
    node6172_name [shape=none, label=<<font color="black">Block[6172]</font>>]
    node6172_name -> node6172 [arrowhead=none, color="black", style=dashed]
    node6172 [shape=box, label=<<font color="black">[0] assert (= (typeof oldValue) @BigInt)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6172 -> node6173 [color="black"]
    node6171_name [shape=none, label=<<font color="black">Block[6171]</font>>]
    node6171_name -> node6171 [arrowhead=none, color="black", style=dashed]
    node6171 [shape=box, label=<<font color="black">[0] let newValue = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6171 -> node6175 [color="black"]
    node6173_name [shape=none, label=<<font color="black">Call[6173]</font>>]
    node6173_name -> node6173 [arrowhead=none, color="black", style=dashed]
    node6173 [shape=cds, label=<<font color="black">%4 = clo&lt;BigInt::subtract&gt;(oldValue, 1n)</font>> color="black" fillcolor="white", style=filled]
    node6173 -> node6174 [color="black"]
    node6175_name [shape=none, label=<<font color="black">Call[6175]</font>>]
    node6175_name -> node6175 [arrowhead=none, color="black", style=dashed]
    node6175 [shape=cds, label=<<font color="black">%5 = clo&lt;PutValue&gt;(lhs, newValue)</font>> color="black" fillcolor="white", style=filled]
    node6175 -> node6176 [color="black"]
    node6174_name [shape=none, label=<<font color="black">Block[6174]</font>>]
    node6174_name -> node6174 [arrowhead=none, color="black", style=dashed]
    node6174 [shape=box, label=<<font color="black">[0] let newValue = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6174 -> node6175 [color="black"]
    node6176_name [shape=none, label=<<font color="black">Block[6176]</font>>]
    node6176_name -> node6176 [arrowhead=none, color="black", style=dashed]
    node6176 [shape=box, label=<<font color="black">[0] [? %5]<BR ALIGN="LEFT"/>[1] return oldValue<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6176 -> cluster1302_exit [color="black"]
  }
}