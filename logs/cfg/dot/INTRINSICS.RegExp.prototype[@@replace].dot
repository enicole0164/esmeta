digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2328 {
    label = "def <BUILTIN>:INTRINSICS.RegExp.prototype[@@replace](this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2328_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2328_entry_name -> cluster2328_entry [arrowhead=none, color="black", style=dashed]
    cluster2328_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2328_entry -> node14423 [color="black"]
    cluster2328_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2328_exit_name -> cluster2328_exit [arrowhead=none, color="black", style=dashed]
    cluster2328_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node14423_name [shape=none, label=<<font color="black">Branch[14423]</font>>]
    node14423_name -> node14423 [arrowhead=none, color="black", style=dashed]
    node14423 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node14423 -> node14424 [label=<<font color="black">true</font>> color="black"]
    node14423 -> node14425 [label=<<font color="black">false</font>> color="black"]
    node14424_name [shape=none, label=<<font color="black">Block[14424]</font>>]
    node14424_name -> node14424 [arrowhead=none, color="black", style=dashed]
    node14424 [shape=box, label=<<font color="black">[0] let string = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14424 -> node14426 [color="black"]
    node14425_name [shape=none, label=<<font color="black">Block[14425]</font>>]
    node14425_name -> node14425 [arrowhead=none, color="black", style=dashed]
    node14425 [shape=box, label=<<font color="black">[0] let string = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14425 -> node14426 [color="black"]
    node14426_name [shape=none, label=<<font color="black">Branch[14426]</font>>]
    node14426_name -> node14426 [arrowhead=none, color="black", style=dashed]
    node14426 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node14426 -> node14427 [label=<<font color="black">true</font>> color="black"]
    node14426 -> node14428 [label=<<font color="black">false</font>> color="black"]
    node14427_name [shape=none, label=<<font color="black">Block[14427]</font>>]
    node14427_name -> node14427 [arrowhead=none, color="black", style=dashed]
    node14427 [shape=box, label=<<font color="black">[0] let replaceValue = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14427 -> node14429 [color="black"]
    node14428_name [shape=none, label=<<font color="black">Block[14428]</font>>]
    node14428_name -> node14428 [arrowhead=none, color="black", style=dashed]
    node14428 [shape=box, label=<<font color="black">[0] let replaceValue = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14428 -> node14429 [color="black"]
    node14429_name [shape=none, label=<<font color="black">Block[14429]</font>>]
    node14429_name -> node14429 [arrowhead=none, color="black", style=dashed]
    node14429 [shape=box, label=<<font color="black">[0] let rx = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14429 -> node14430 [color="black"]
    node14430_name [shape=none, label=<<font color="black">Branch[14430]</font>>]
    node14430_name -> node14430 [arrowhead=none, color="black", style=dashed]
    node14430 [shape=diamond, label=<<font color="black">(! (= (typeof rx) @Object))</font>> color="black" fillcolor="white", style=filled]
    node14430 -> node14431 [label=<<font color="black">true</font>> color="black"]
    node14430 -> node14432 [label=<<font color="black">false</font>> color="black"]
    node14431_name [shape=none, label=<<font color="black">Block[14431]</font>>]
    node14431_name -> node14431 [arrowhead=none, color="black", style=dashed]
    node14431 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#999])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14431 -> cluster2328_exit [color="black"]
    node14432_name [shape=none, label=<<font color="black">Call[14432]</font>>]
    node14432_name -> node14432 [arrowhead=none, color="black", style=dashed]
    node14432 [shape=cds, label=<<font color="black">%0 = clo&lt;ToString&gt;(string)</font>> color="black" fillcolor="white", style=filled]
    node14432 -> node14433 [color="black"]
    node14433_name [shape=none, label=<<font color="black">Block[14433]</font>>]
    node14433_name -> node14433 [arrowhead=none, color="black", style=dashed]
    node14433 [shape=box, label=<<font color="black">[0] let S = [? %0]<BR ALIGN="LEFT"/>[1] let lengthS = S.length<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14433 -> node14434 [color="black"]
    node14434_name [shape=none, label=<<font color="black">Call[14434]</font>>]
    node14434_name -> node14434 [arrowhead=none, color="black", style=dashed]
    node14434 [shape=cds, label=<<font color="black">%1 = clo&lt;IsCallable&gt;(replaceValue)</font>> color="black" fillcolor="white", style=filled]
    node14434 -> node14435 [color="black"]
    node14435_name [shape=none, label=<<font color="black">Block[14435]</font>>]
    node14435_name -> node14435 [arrowhead=none, color="black", style=dashed]
    node14435 [shape=box, label=<<font color="black">[0] let functionalReplace = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14435 -> node14436 [color="black"]
    node14436_name [shape=none, label=<<font color="black">Branch[14436]</font>>]
    node14436_name -> node14436 [arrowhead=none, color="black", style=dashed]
    node14436 [shape=diamond, label=<<font color="black">(= functionalReplace false)</font>> color="black" fillcolor="white", style=filled]
    node14436 -> node14437 [label=<<font color="black">true</font>> color="black"]
    node14436 -> node14439 [label=<<font color="black">false</font>> color="black"]
    node14437_name [shape=none, label=<<font color="black">Call[14437]</font>>]
    node14437_name -> node14437 [arrowhead=none, color="black", style=dashed]
    node14437 [shape=cds, label=<<font color="black">%2 = clo&lt;ToString&gt;(replaceValue)</font>> color="black" fillcolor="white", style=filled]
    node14437 -> node14438 [color="black"]
    node14439_name [shape=none, label=<<font color="black">Call[14439]</font>>]
    node14439_name -> node14439 [arrowhead=none, color="black", style=dashed]
    node14439 [shape=cds, label=<<font color="black">%3 = clo&lt;Get&gt;(rx, &quot;global&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14439 -> node14440 [color="black"]
    node14438_name [shape=none, label=<<font color="black">Block[14438]</font>>]
    node14438_name -> node14438 [arrowhead=none, color="black", style=dashed]
    node14438 [shape=box, label=<<font color="black">[0] replaceValue = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14438 -> node14439 [color="black"]
    node14440_name [shape=none, label=<<font color="black">Call[14440]</font>>]
    node14440_name -> node14440 [arrowhead=none, color="black", style=dashed]
    node14440 [shape=cds, label=<<font color="black">%4 = clo&lt;ToBoolean&gt;([? %3])</font>> color="black" fillcolor="white", style=filled]
    node14440 -> node14441 [color="black"]
    node14441_name [shape=none, label=<<font color="black">Block[14441]</font>>]
    node14441_name -> node14441 [arrowhead=none, color="black", style=dashed]
    node14441 [shape=box, label=<<font color="black">[0] let global = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14441 -> node14442 [color="black"]
    node14442_name [shape=none, label=<<font color="black">Branch[14442]</font>>]
    node14442_name -> node14442 [arrowhead=none, color="black", style=dashed]
    node14442 [shape=diamond, label=<<font color="black">(= global true)</font>> color="black" fillcolor="white", style=filled]
    node14442 -> node14443 [label=<<font color="black">true</font>> color="black"]
    node14442 -> node14448 [label=<<font color="black">false</font>> color="black"]
    node14443_name [shape=none, label=<<font color="black">Call[14443]</font>>]
    node14443_name -> node14443 [arrowhead=none, color="black", style=dashed]
    node14443 [shape=cds, label=<<font color="black">%5 = clo&lt;Get&gt;(rx, &quot;unicode&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14443 -> node14444 [color="black"]
    node14448_name [shape=none, label=<<font color="black">Block[14448]</font>>]
    node14448_name -> node14448 [arrowhead=none, color="black", style=dashed]
    node14448 [shape=box, label=<<font color="black">[0] let results = (new [])[#1000]<BR ALIGN="LEFT"/>[1] let done = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14448 -> node14449 [color="black"]
    node14444_name [shape=none, label=<<font color="black">Call[14444]</font>>]
    node14444_name -> node14444 [arrowhead=none, color="black", style=dashed]
    node14444 [shape=cds, label=<<font color="black">%6 = clo&lt;ToBoolean&gt;([? %5])</font>> color="black" fillcolor="white", style=filled]
    node14444 -> node14445 [color="black"]
    node14449_name [shape=none, label=<<font color="black">Branch[14449]</font>>]
    node14449_name -> node14449 [arrowhead=none, color="black", style=dashed]
    node14449 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white", style=filled]
    node14449 -> node14450 [label=<<font color="black">true</font>> color="black"]
    node14449 -> node14468 [label=<<font color="black">false</font>> color="black"]
    node14445_name [shape=none, label=<<font color="black">Block[14445]</font>>]
    node14445_name -> node14445 [arrowhead=none, color="black", style=dashed]
    node14445 [shape=box, label=<<font color="black">[0] let fullUnicode = %6<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14445 -> node14446 [color="black"]
    node14450_name [shape=none, label=<<font color="black">Call[14450]</font>>]
    node14450_name -> node14450 [arrowhead=none, color="black", style=dashed]
    node14450 [shape=cds, label=<<font color="black">%8 = clo&lt;RegExpExec&gt;(rx, S)</font>> color="black" fillcolor="white", style=filled]
    node14450 -> node14451 [color="black"]
    node14468_name [shape=none, label=<<font color="black">Block[14468]</font>>]
    node14468_name -> node14468 [arrowhead=none, color="black", style=dashed]
    node14468 [shape=box, label=<<font color="black">[0] let accumulatedResult = &quot;&quot;<BR ALIGN="LEFT"/>[1] let nextSourcePosition = 0<BR ALIGN="LEFT"/>[2] %16 = results<BR ALIGN="LEFT"/>[3] %15 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14468 -> node14469 [color="black"]
    node14446_name [shape=none, label=<<font color="black">Call[14446]</font>>]
    node14446_name -> node14446 [arrowhead=none, color="black", style=dashed]
    node14446 [shape=cds, label=<<font color="black">%7 = clo&lt;Set&gt;(rx, &quot;lastIndex&quot;, 0.0f, true)</font>> color="black" fillcolor="white", style=filled]
    node14446 -> node14447 [color="black"]
    node14451_name [shape=none, label=<<font color="black">Block[14451]</font>>]
    node14451_name -> node14451 [arrowhead=none, color="black", style=dashed]
    node14451 [shape=box, label=<<font color="black">[0] let result = [? %8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14451 -> node14452 [color="black"]
    node14469_name [shape=none, label=<<font color="black">Branch[14469]</font>>]
    node14469_name -> node14469 [arrowhead=none, color="black", style=dashed]
    node14469 [shape=diamond, label=<<font color="black">(&lt; %15 %16.length)</font>> color="black" fillcolor="white", style=filled]
    node14469 -> node14470 [label=<<font color="black">true</font>> color="black"]
    node14469 -> node14505 [label=<<font color="black">false</font>> color="black"]
    node14447_name [shape=none, label=<<font color="black">Block[14447]</font>>]
    node14447_name -> node14447 [arrowhead=none, color="black", style=dashed]
    node14447 [shape=box, label=<<font color="black">[0] [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14447 -> node14448 [color="black"]
    node14452_name [shape=none, label=<<font color="black">Branch[14452]</font>>]
    node14452_name -> node14452 [arrowhead=none, color="black", style=dashed]
    node14452 [shape=diamond, label=<<font color="black">(= result null)</font>> color="black" fillcolor="white", style=filled]
    node14452 -> node14453 [label=<<font color="black">true</font>> color="black"]
    node14452 -> node14454 [label=<<font color="black">false</font>> color="black"]
    node14470_name [shape=none, label=<<font color="black">Block[14470]</font>>]
    node14470_name -> node14470 [arrowhead=none, color="black", style=dashed]
    node14470 [shape=box, label=<<font color="black">[0] let result = %16[%15]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14470 -> node14471 [color="black"]
    node14505_name [shape=none, label=<<font color="black">Branch[14505]</font>>]
    node14505_name -> node14505 [arrowhead=none, color="black", style=dashed]
    node14505 [shape=diamond, label=<<font color="black">(! (&lt; nextSourcePosition lengthS))</font>> color="black" fillcolor="white", style=filled]
    node14505 -> node14506 [label=<<font color="black">true</font>> color="black"]
    node14505 -> node14507 [label=<<font color="black">false</font>> color="black"]
    node14453_name [shape=none, label=<<font color="black">Block[14453]</font>>]
    node14453_name -> node14453 [arrowhead=none, color="black", style=dashed]
    node14453 [shape=box, label=<<font color="black">[0] done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14453 -> node14449 [color="black"]
    node14454_name [shape=none, label=<<font color="black">Block[14454]</font>>]
    node14454_name -> node14454 [arrowhead=none, color="black", style=dashed]
    node14454 [shape=box, label=<<font color="black">[0] push results &lt; result<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14454 -> node14455 [color="black"]
    node14471_name [shape=none, label=<<font color="black">Call[14471]</font>>]
    node14471_name -> node14471 [arrowhead=none, color="black", style=dashed]
    node14471 [shape=cds, label=<<font color="black">%17 = clo&lt;LengthOfArrayLike&gt;(result)</font>> color="black" fillcolor="white", style=filled]
    node14471 -> node14472 [color="black"]
    node14506_name [shape=none, label=<<font color="black">Block[14506]</font>>]
    node14506_name -> node14506 [arrowhead=none, color="black", style=dashed]
    node14506 [shape=box, label=<<font color="black">[0] return accumulatedResult<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14506 -> cluster2328_exit [color="black"]
    node14507_name [shape=none, label=<<font color="black">Block[14507]</font>>]
    node14507_name -> node14507 [arrowhead=none, color="black", style=dashed]
    node14507 [shape=box, label=<<font color="black">[0] return (concat accumulatedResult (substring S nextSourcePosition))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14507 -> cluster2328_exit [color="black"]
    node14455_name [shape=none, label=<<font color="black">Branch[14455]</font>>]
    node14455_name -> node14455 [arrowhead=none, color="black", style=dashed]
    node14455 [shape=diamond, label=<<font color="black">(= global false)</font>> color="black" fillcolor="white", style=filled]
    node14455 -> node14456 [label=<<font color="black">true</font>> color="black"]
    node14455 -> node14457 [label=<<font color="black">false</font>> color="black"]
    node14472_name [shape=none, label=<<font color="black">Block[14472]</font>>]
    node14472_name -> node14472 [arrowhead=none, color="black", style=dashed]
    node14472 [shape=box, label=<<font color="black">[0] let resultLength = [? %17]<BR ALIGN="LEFT"/>[1] let nCaptures = (max (- resultLength 1) 0)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14472 -> node14473 [color="black"]
    node14456_name [shape=none, label=<<font color="black">Block[14456]</font>>]
    node14456_name -> node14456 [arrowhead=none, color="black", style=dashed]
    node14456 [shape=box, label=<<font color="black">[0] done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14456 -> node14449 [color="black"]
    node14457_name [shape=none, label=<<font color="black">Call[14457]</font>>]
    node14457_name -> node14457 [arrowhead=none, color="black", style=dashed]
    node14457 [shape=cds, label=<<font color="black">%9 = clo&lt;Get&gt;(result, &quot;0&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14457 -> node14458 [color="black"]
    node14473_name [shape=none, label=<<font color="black">Call[14473]</font>>]
    node14473_name -> node14473 [arrowhead=none, color="black", style=dashed]
    node14473 [shape=cds, label=<<font color="black">%18 = clo&lt;Get&gt;(result, &quot;0&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14473 -> node14474 [color="black"]
    node14458_name [shape=none, label=<<font color="black">Call[14458]</font>>]
    node14458_name -> node14458 [arrowhead=none, color="black", style=dashed]
    node14458 [shape=cds, label=<<font color="black">%10 = clo&lt;ToString&gt;([? %9])</font>> color="black" fillcolor="white", style=filled]
    node14458 -> node14459 [color="black"]
    node14474_name [shape=none, label=<<font color="black">Call[14474]</font>>]
    node14474_name -> node14474 [arrowhead=none, color="black", style=dashed]
    node14474 [shape=cds, label=<<font color="black">%19 = clo&lt;ToString&gt;([? %18])</font>> color="black" fillcolor="white", style=filled]
    node14474 -> node14475 [color="black"]
    node14459_name [shape=none, label=<<font color="black">Block[14459]</font>>]
    node14459_name -> node14459 [arrowhead=none, color="black", style=dashed]
    node14459 [shape=box, label=<<font color="black">[0] let matchStr = [? %10]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14459 -> node14460 [color="black"]
    node14475_name [shape=none, label=<<font color="black">Block[14475]</font>>]
    node14475_name -> node14475 [arrowhead=none, color="black", style=dashed]
    node14475 [shape=box, label=<<font color="black">[0] let matched = [? %19]<BR ALIGN="LEFT"/>[1] let matchLength = matched.length<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14475 -> node14476 [color="black"]
    node14460_name [shape=none, label=<<font color="black">Branch[14460]</font>>]
    node14460_name -> node14460 [arrowhead=none, color="black", style=dashed]
    node14460 [shape=diamond, label=<<font color="black">(= matchStr &quot;&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14460 -> node14461 [label=<<font color="black">true</font>> color="black"]
    node14460 -> node14449 [label=<<font color="black">false</font>> color="black"]
    node14476_name [shape=none, label=<<font color="black">Call[14476]</font>>]
    node14476_name -> node14476 [arrowhead=none, color="black", style=dashed]
    node14476 [shape=cds, label=<<font color="black">%20 = clo&lt;Get&gt;(result, &quot;index&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14476 -> node14477 [color="black"]
    node14461_name [shape=none, label=<<font color="black">Call[14461]</font>>]
    node14461_name -> node14461 [arrowhead=none, color="black", style=dashed]
    node14461 [shape=cds, label=<<font color="black">%11 = clo&lt;Get&gt;(rx, &quot;lastIndex&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14461 -> node14462 [color="black"]
    node14477_name [shape=none, label=<<font color="black">Call[14477]</font>>]
    node14477_name -> node14477 [arrowhead=none, color="black", style=dashed]
    node14477 [shape=cds, label=<<font color="black">%21 = clo&lt;ToIntegerOrInfinity&gt;([? %20])</font>> color="black" fillcolor="white", style=filled]
    node14477 -> node14478 [color="black"]
    node14462_name [shape=none, label=<<font color="black">Call[14462]</font>>]
    node14462_name -> node14462 [arrowhead=none, color="black", style=dashed]
    node14462 [shape=cds, label=<<font color="black">%12 = clo&lt;ToLength&gt;([? %11])</font>> color="black" fillcolor="white", style=filled]
    node14462 -> node14463 [color="black"]
    node14478_name [shape=none, label=<<font color="black">Block[14478]</font>>]
    node14478_name -> node14478 [arrowhead=none, color="black", style=dashed]
    node14478 [shape=box, label=<<font color="black">[0] let position = [? %21]<BR ALIGN="LEFT"/>[1] position = (clamp position 0 lengthS)<BR ALIGN="LEFT"/>[2] let n = 1<BR ALIGN="LEFT"/>[3] let captures = (new [])[#1001]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14478 -> node14479 [color="black"]
    node14463_name [shape=none, label=<<font color="black">Block[14463]</font>>]
    node14463_name -> node14463 [arrowhead=none, color="black", style=dashed]
    node14463 [shape=box, label=<<font color="black">[0] let thisIndex = ([math] [? %12])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14463 -> node14464 [color="black"]
    node14479_name [shape=none, label=<<font color="black">Branch[14479]</font>>]
    node14479_name -> node14479 [arrowhead=none, color="black", style=dashed]
    node14479 [shape=diamond, label=<<font color="black">(! (&lt; nCaptures n))</font>> color="black" fillcolor="white", style=filled]
    node14479 -> node14480 [label=<<font color="black">true</font>> color="black"]
    node14479 -> node14487 [label=<<font color="black">false</font>> color="black"]
    node14464_name [shape=none, label=<<font color="black">Call[14464]</font>>]
    node14464_name -> node14464 [arrowhead=none, color="black", style=dashed]
    node14464 [shape=cds, label=<<font color="black">%13 = clo&lt;AdvanceStringIndex&gt;(S, thisIndex, fullUnicode)</font>> color="black" fillcolor="white", style=filled]
    node14464 -> node14465 [color="black"]
    node14480_name [shape=none, label=<<font color="black">Call[14480]</font>>]
    node14480_name -> node14480 [arrowhead=none, color="black", style=dashed]
    node14480 [shape=cds, label=<<font color="black">%22 = clo&lt;ToString&gt;(([number] n))</font>> color="black" fillcolor="white", style=filled]
    node14480 -> node14481 [color="black"]
    node14487_name [shape=none, label=<<font color="black">Call[14487]</font>>]
    node14487_name -> node14487 [arrowhead=none, color="black", style=dashed]
    node14487 [shape=cds, label=<<font color="black">%25 = clo&lt;Get&gt;(result, &quot;groups&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14487 -> node14488 [color="black"]
    node14465_name [shape=none, label=<<font color="black">Block[14465]</font>>]
    node14465_name -> node14465 [arrowhead=none, color="black", style=dashed]
    node14465 [shape=box, label=<<font color="black">[0] let nextIndex = %13<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14465 -> node14466 [color="black"]
    node14481_name [shape=none, label=<<font color="black">Call[14481]</font>>]
    node14481_name -> node14481 [arrowhead=none, color="black", style=dashed]
    node14481 [shape=cds, label=<<font color="black">%23 = clo&lt;Get&gt;(result, [! %22])</font>> color="black" fillcolor="white", style=filled]
    node14481 -> node14482 [color="black"]
    node14488_name [shape=none, label=<<font color="black">Block[14488]</font>>]
    node14488_name -> node14488 [arrowhead=none, color="black", style=dashed]
    node14488 [shape=box, label=<<font color="black">[0] let namedCaptures = [? %25]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14488 -> node14489 [color="black"]
    node14466_name [shape=none, label=<<font color="black">Call[14466]</font>>]
    node14466_name -> node14466 [arrowhead=none, color="black", style=dashed]
    node14466 [shape=cds, label=<<font color="black">%14 = clo&lt;Set&gt;(rx, &quot;lastIndex&quot;, ([number] nextIndex), true)</font>> color="black" fillcolor="white", style=filled]
    node14466 -> node14467 [color="black"]
    node14482_name [shape=none, label=<<font color="black">Block[14482]</font>>]
    node14482_name -> node14482 [arrowhead=none, color="black", style=dashed]
    node14482 [shape=box, label=<<font color="black">[0] let capN = [? %23]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14482 -> node14483 [color="black"]
    node14489_name [shape=none, label=<<font color="black">Branch[14489]</font>>]
    node14489_name -> node14489 [arrowhead=none, color="black", style=dashed]
    node14489 [shape=diamond, label=<<font color="black">(= functionalReplace true)</font>> color="black" fillcolor="white", style=filled]
    node14489 -> node14490 [label=<<font color="black">true</font>> color="black"]
    node14489 -> node14497 [label=<<font color="black">false</font>> color="black"]
    node14467_name [shape=none, label=<<font color="black">Block[14467]</font>>]
    node14467_name -> node14467 [arrowhead=none, color="black", style=dashed]
    node14467 [shape=box, label=<<font color="black">[0] [? %14]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14467 -> node14449 [color="black"]
    node14483_name [shape=none, label=<<font color="black">Branch[14483]</font>>]
    node14483_name -> node14483 [arrowhead=none, color="black", style=dashed]
    node14483 [shape=diamond, label=<<font color="black">(! (= capN undefined))</font>> color="black" fillcolor="white", style=filled]
    node14483 -> node14484 [label=<<font color="black">true</font>> color="black"]
    node14483 -> node14486 [label=<<font color="black">false</font>> color="black"]
    node14490_name [shape=none, label=<<font color="black">Block[14490]</font>>]
    node14490_name -> node14490 [arrowhead=none, color="black", style=dashed]
    node14490 [shape=box, label=<<font color="black">[0] let replacerArgs = (new [matched])[#1002]<BR ALIGN="LEFT"/>[1] (yet &quot;Append in List order the elements of _captures_ to the end of the List _replacerArgs_.&quot;)<BR ALIGN="LEFT"/>[2] (yet &quot;Append 𝔽(_position_) and _S_ to _replacerArgs_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14490 -> node14491 [color="black"]
    node14497_name [shape=none, label=<<font color="black">Branch[14497]</font>>]
    node14497_name -> node14497 [arrowhead=none, color="black", style=dashed]
    node14497 [shape=diamond, label=<<font color="black">(! (= namedCaptures undefined))</font>> color="black" fillcolor="white", style=filled]
    node14497 -> node14498 [label=<<font color="black">true</font>> color="black"]
    node14497 -> node14500 [label=<<font color="black">false</font>> color="black"]
    node14484_name [shape=none, label=<<font color="black">Call[14484]</font>>]
    node14484_name -> node14484 [arrowhead=none, color="black", style=dashed]
    node14484 [shape=cds, label=<<font color="black">%24 = clo&lt;ToString&gt;(capN)</font>> color="black" fillcolor="white", style=filled]
    node14484 -> node14485 [color="black"]
    node14486_name [shape=none, label=<<font color="black">Block[14486]</font>>]
    node14486_name -> node14486 [arrowhead=none, color="black", style=dashed]
    node14486 [shape=box, label=<<font color="black">[0] push captures &lt; capN<BR ALIGN="LEFT"/>[1] nop<BR ALIGN="LEFT"/>[2] n = (+ n 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14486 -> node14479 [color="black"]
    node14491_name [shape=none, label=<<font color="black">Branch[14491]</font>>]
    node14491_name -> node14491 [arrowhead=none, color="black", style=dashed]
    node14491 [shape=diamond, label=<<font color="black">(! (= namedCaptures undefined))</font>> color="black" fillcolor="white", style=filled]
    node14491 -> node14492 [label=<<font color="black">true</font>> color="black"]
    node14491 -> node14493 [label=<<font color="black">false</font>> color="black"]
    node14498_name [shape=none, label=<<font color="black">Call[14498]</font>>]
    node14498_name -> node14498 [arrowhead=none, color="black", style=dashed]
    node14498 [shape=cds, label=<<font color="black">%28 = clo&lt;ToObject&gt;(namedCaptures)</font>> color="black" fillcolor="white", style=filled]
    node14498 -> node14499 [color="black"]
    node14500_name [shape=none, label=<<font color="black">Call[14500]</font>>]
    node14500_name -> node14500 [arrowhead=none, color="black", style=dashed]
    node14500 [shape=cds, label=<<font color="black">%29 = clo&lt;GetSubstitution&gt;(matched, S, position, captures, namedCaptures, replaceValue)</font>> color="black" fillcolor="white", style=filled]
    node14500 -> node14501 [color="black"]
    node14485_name [shape=none, label=<<font color="black">Block[14485]</font>>]
    node14485_name -> node14485 [arrowhead=none, color="black", style=dashed]
    node14485 [shape=box, label=<<font color="black">[0] capN = [? %24]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14485 -> node14486 [color="black"]
    node14492_name [shape=none, label=<<font color="black">Block[14492]</font>>]
    node14492_name -> node14492 [arrowhead=none, color="black", style=dashed]
    node14492 [shape=box, label=<<font color="black">[0] push replacerArgs &lt; namedCaptures<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14492 -> node14493 [color="black"]
    node14493_name [shape=none, label=<<font color="black">Call[14493]</font>>]
    node14493_name -> node14493 [arrowhead=none, color="black", style=dashed]
    node14493 [shape=cds, label=<<font color="black">%26 = clo&lt;Call&gt;(replaceValue, undefined, replacerArgs)</font>> color="black" fillcolor="white", style=filled]
    node14493 -> node14494 [color="black"]
    node14499_name [shape=none, label=<<font color="black">Block[14499]</font>>]
    node14499_name -> node14499 [arrowhead=none, color="black", style=dashed]
    node14499 [shape=box, label=<<font color="black">[0] namedCaptures = [? %28]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14499 -> node14500 [color="black"]
    node14501_name [shape=none, label=<<font color="black">Block[14501]</font>>]
    node14501_name -> node14501 [arrowhead=none, color="black", style=dashed]
    node14501 [shape=box, label=<<font color="black">[0] let replacement = [? %29]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14501 -> node14502 [color="black"]
    node14494_name [shape=none, label=<<font color="black">Block[14494]</font>>]
    node14494_name -> node14494 [arrowhead=none, color="black", style=dashed]
    node14494 [shape=box, label=<<font color="black">[0] let replValue = [? %26]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14494 -> node14495 [color="black"]
    node14502_name [shape=none, label=<<font color="black">Branch[14502]</font>>]
    node14502_name -> node14502 [arrowhead=none, color="black", style=dashed]
    node14502 [shape=diamond, label=<<font color="black">(! (&lt; position nextSourcePosition))</font>> color="black" fillcolor="white", style=filled]
    node14502 -> node14503 [label=<<font color="black">true</font>> color="black"]
    node14502 -> node14504 [label=<<font color="black">false</font>> color="black"]
    node14495_name [shape=none, label=<<font color="black">Call[14495]</font>>]
    node14495_name -> node14495 [arrowhead=none, color="black", style=dashed]
    node14495 [shape=cds, label=<<font color="black">%27 = clo&lt;ToString&gt;(replValue)</font>> color="black" fillcolor="white", style=filled]
    node14495 -> node14496 [color="black"]
    node14503_name [shape=none, label=<<font color="black">Block[14503]</font>>]
    node14503_name -> node14503 [arrowhead=none, color="black", style=dashed]
    node14503 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/>[1] accumulatedResult = (concat accumulatedResult (substring S nextSourcePosition position) replacement)<BR ALIGN="LEFT"/>[2] nextSourcePosition = (+ position matchLength)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14503 -> node14504 [color="black"]
    node14504_name [shape=none, label=<<font color="black">Block[14504]</font>>]
    node14504_name -> node14504 [arrowhead=none, color="black", style=dashed]
    node14504 [shape=box, label=<<font color="black">[0] %15 = (+ %15 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14504 -> node14469 [color="black"]
    node14496_name [shape=none, label=<<font color="black">Block[14496]</font>>]
    node14496_name -> node14496 [arrowhead=none, color="black", style=dashed]
    node14496 [shape=box, label=<<font color="black">[0] let replacement = [? %27]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14496 -> node14502 [color="black"]
  }
}