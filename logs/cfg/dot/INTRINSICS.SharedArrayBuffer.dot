digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2490 {
    label = "def <BUILTIN>:INTRINSICS.SharedArrayBuffer(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2490_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2490_entry_name -> cluster2490_entry [arrowhead=none, color="black", style=dashed]
    cluster2490_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2490_entry -> node17560 [color="black"]
    cluster2490_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2490_exit_name -> cluster2490_exit [arrowhead=none, color="black", style=dashed]
    cluster2490_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17560_name [shape=none, label=<<font color="black">Branch[17560]</font>>]
    node17560_name -> node17560 [arrowhead=none, color="black", style=dashed]
    node17560 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node17560 -> node17561 [label=<<font color="black">true</font>> color="black"]
    node17560 -> node17562 [label=<<font color="black">false</font>> color="black"]
    node17561_name [shape=none, label=<<font color="black">Block[17561]</font>>]
    node17561_name -> node17561 [arrowhead=none, color="black", style=dashed]
    node17561 [shape=box, label=<<font color="black">[0] let length = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17561 -> node17563 [color="black"]
    node17562_name [shape=none, label=<<font color="black">Block[17562]</font>>]
    node17562_name -> node17562 [arrowhead=none, color="black", style=dashed]
    node17562 [shape=box, label=<<font color="black">[0] let length = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17562 -> node17563 [color="black"]
    node17563_name [shape=none, label=<<font color="black">Branch[17563]</font>>]
    node17563_name -> node17563 [arrowhead=none, color="black", style=dashed]
    node17563 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white", style=filled]
    node17563 -> node17564 [label=<<font color="black">true</font>> color="black"]
    node17563 -> node17565 [label=<<font color="black">false</font>> color="black"]
    node17564_name [shape=none, label=<<font color="black">Block[17564]</font>>]
    node17564_name -> node17564 [arrowhead=none, color="black", style=dashed]
    node17564 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1161])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17564 -> cluster2490_exit [color="black"]
    node17565_name [shape=none, label=<<font color="black">Call[17565]</font>>]
    node17565_name -> node17565 [arrowhead=none, color="black", style=dashed]
    node17565 [shape=cds, label=<<font color="black">%0 = clo&lt;ToIndex&gt;(length)</font>> color="black" fillcolor="white", style=filled]
    node17565 -> node17566 [color="black"]
    node17566_name [shape=none, label=<<font color="black">Block[17566]</font>>]
    node17566_name -> node17566 [arrowhead=none, color="black", style=dashed]
    node17566 [shape=box, label=<<font color="black">[0] let byteLength = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17566 -> node17567 [color="black"]
    node17567_name [shape=none, label=<<font color="black">Call[17567]</font>>]
    node17567_name -> node17567 [arrowhead=none, color="black", style=dashed]
    node17567 [shape=cds, label=<<font color="black">%1 = clo&lt;AllocateSharedArrayBuffer&gt;(NewTarget, byteLength)</font>> color="black" fillcolor="white", style=filled]
    node17567 -> node17568 [color="black"]
    node17568_name [shape=none, label=<<font color="black">Block[17568]</font>>]
    node17568_name -> node17568 [arrowhead=none, color="black", style=dashed]
    node17568 [shape=box, label=<<font color="black">[0] return [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17568 -> cluster2490_exit [color="black"]
  }
}