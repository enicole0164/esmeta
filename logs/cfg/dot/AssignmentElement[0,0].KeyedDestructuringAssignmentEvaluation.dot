digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1373 {
    label = "def <SYNTAX>:AssignmentElement[0,0].KeyedDestructuringAssignmentEvaluation(this: Ast:AssignmentElement[0,0], value: Unknown, propertyName: Unknown): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster1373_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1373_entry_name -> cluster1373_entry [arrowhead=none, color="black", style=dashed]
    cluster1373_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1373_entry -> node7078 [color="black"]
    cluster1373_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1373_exit_name -> cluster1373_exit [arrowhead=none, color="black", style=dashed]
    cluster1373_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7078_name [shape=none, label=<<font color="black">Branch[7078]</font>>]
    node7078_name -> node7078 [arrowhead=none, color="black", style=dashed]
    node7078 [shape=diamond, label=<<font color="black">(! (|| (? this[0]: &quot;ObjectLiteral&quot;) (? this[0]: &quot;ArrayLiteral&quot;)))</font>> color="black" fillcolor="white", style=filled]
    node7078 -> node7079 [label=<<font color="black">true</font>> color="black"]
    node7078 -> node7081 [label=<<font color="black">false</font>> color="black"]
    node7079_name [shape=none, label=<<font color="black">Call[7079]</font>>]
    node7079_name -> node7079 [arrowhead=none, color="black", style=dashed]
    node7079 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7079 -> node7080 [color="black"]
    node7081_name [shape=none, label=<<font color="black">Call[7081]</font>>]
    node7081_name -> node7081 [arrowhead=none, color="black", style=dashed]
    node7081 [shape=cds, label=<<font color="black">%1 = clo&lt;GetV&gt;(value, propertyName)</font>> color="black" fillcolor="white", style=filled]
    node7081 -> node7082 [color="black"]
    node7080_name [shape=none, label=<<font color="black">Block[7080]</font>>]
    node7080_name -> node7080 [arrowhead=none, color="black", style=dashed]
    node7080 [shape=box, label=<<font color="black">[0] let lref = %0<BR ALIGN="LEFT"/>[1] [? lref]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7080 -> node7081 [color="black"]
    node7082_name [shape=none, label=<<font color="black">Block[7082]</font>>]
    node7082_name -> node7082 [arrowhead=none, color="black", style=dashed]
    node7082 [shape=box, label=<<font color="black">[0] let v = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7082 -> node7083 [color="black"]
    node7083_name [shape=none, label=<<font color="black">Branch[7083]</font>>]
    node7083_name -> node7083 [arrowhead=none, color="black", style=dashed]
    node7083 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= this[1] absent)) (= v undefined))</font>> color="black" fillcolor="white", style=filled]
    node7083 -> node7084 [label=<<font color="black">true</font>> color="black"]
    node7083 -> node7093 [label=<<font color="black">false</font>> color="black"]
    node7084_name [shape=none, label=<<font color="black">Call[7084]</font>>]
    node7084_name -> node7084 [arrowhead=none, color="black", style=dashed]
    node7084 [shape=cds, label=<<font color="black">%2 = clo&lt;IsAnonymousFunctionDefinition&gt;(this[1])</font>> color="black" fillcolor="white", style=filled]
    node7084 -> node7085 [color="black"]
    node7093_name [shape=none, label=<<font color="black">Block[7093]</font>>]
    node7093_name -> node7093 [arrowhead=none, color="black", style=dashed]
    node7093 [shape=box, label=<<font color="black">[0] let rhsValue = v<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7093 -> node7094 [color="black"]
    node7085_name [shape=none, label=<<font color="black">Call[7085]</font>>]
    node7085_name -> node7085 [arrowhead=none, color="black", style=dashed]
    node7085 [shape=cds, label=<<font color="black">%3 = this[0]-&gt;IsIdentifierRef()</font>> color="black" fillcolor="white", style=filled]
    node7085 -> node7086 [color="black"]
    node7094_name [shape=none, label=<<font color="black">Branch[7094]</font>>]
    node7094_name -> node7094 [arrowhead=none, color="black", style=dashed]
    node7094 [shape=diamond, label=<<font color="black">(|| (? this[0]: &quot;ObjectLiteral&quot;) (? this[0]: &quot;ArrayLiteral&quot;))</font>> color="black" fillcolor="white", style=filled]
    node7094 -> node7095 [label=<<font color="black">true</font>> color="black"]
    node7094 -> node7098 [label=<<font color="black">false</font>> color="black"]
    node7086_name [shape=none, label=<<font color="black">Branch[7086]</font>>]
    node7086_name -> node7086 [arrowhead=none, color="black", style=dashed]
    node7086 [shape=diamond, label=<<font color="black">(&amp;&amp; (= %2 true) (= %3 true))</font>> color="black" fillcolor="white", style=filled]
    node7086 -> node7087 [label=<<font color="black">true</font>> color="black"]
    node7086 -> node7089 [label=<<font color="black">false</font>> color="black"]
    node7095_name [shape=none, label=<<font color="black">Block[7095]</font>>]
    node7095_name -> node7095 [arrowhead=none, color="black", style=dashed]
    node7095 [shape=box, label=<<font color="black">[0] let assignmentPattern = (parse this[0] (nt |AssignmentPattern|[]))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7095 -> node7096 [color="black"]
    node7098_name [shape=none, label=<<font color="black">Call[7098]</font>>]
    node7098_name -> node7098 [arrowhead=none, color="black", style=dashed]
    node7098 [shape=cds, label=<<font color="black">%8 = clo&lt;PutValue&gt;(lref, rhsValue)</font>> color="black" fillcolor="white", style=filled]
    node7098 -> node7099 [color="black"]
    node7087_name [shape=none, label=<<font color="black">Call[7087]</font>>]
    node7087_name -> node7087 [arrowhead=none, color="black", style=dashed]
    node7087 [shape=cds, label=<<font color="black">%4 = this[1]-&gt;NamedEvaluation(lref.ReferencedName)</font>> color="black" fillcolor="white", style=filled]
    node7087 -> node7088 [color="black"]
    node7089_name [shape=none, label=<<font color="black">Call[7089]</font>>]
    node7089_name -> node7089 [arrowhead=none, color="black", style=dashed]
    node7089 [shape=cds, label=<<font color="black">%5 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7089 -> node7090 [color="black"]
    node7096_name [shape=none, label=<<font color="black">Call[7096]</font>>]
    node7096_name -> node7096 [arrowhead=none, color="black", style=dashed]
    node7096 [shape=cds, label=<<font color="black">%7 = assignmentPattern-&gt;DestructuringAssignmentEvaluation(rhsValue)</font>> color="black" fillcolor="white", style=filled]
    node7096 -> node7097 [color="black"]
    node7099_name [shape=none, label=<<font color="black">Block[7099]</font>>]
    node7099_name -> node7099 [arrowhead=none, color="black", style=dashed]
    node7099 [shape=box, label=<<font color="black">[0] return [? %8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7099 -> cluster1373_exit [color="black"]
    node7088_name [shape=none, label=<<font color="black">Block[7088]</font>>]
    node7088_name -> node7088 [arrowhead=none, color="black", style=dashed]
    node7088 [shape=box, label=<<font color="black">[0] let rhsValue = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7088 -> node7094 [color="black"]
    node7090_name [shape=none, label=<<font color="black">Block[7090]</font>>]
    node7090_name -> node7090 [arrowhead=none, color="black", style=dashed]
    node7090 [shape=box, label=<<font color="black">[0] let defaultValue = %5<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7090 -> node7091 [color="black"]
    node7097_name [shape=none, label=<<font color="black">Block[7097]</font>>]
    node7097_name -> node7097 [arrowhead=none, color="black", style=dashed]
    node7097 [shape=box, label=<<font color="black">[0] return [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7097 -> cluster1373_exit [color="black"]
    node7091_name [shape=none, label=<<font color="black">Call[7091]</font>>]
    node7091_name -> node7091 [arrowhead=none, color="black", style=dashed]
    node7091 [shape=cds, label=<<font color="black">%6 = clo&lt;GetValue&gt;(defaultValue)</font>> color="black" fillcolor="white", style=filled]
    node7091 -> node7092 [color="black"]
    node7092_name [shape=none, label=<<font color="black">Block[7092]</font>>]
    node7092_name -> node7092 [arrowhead=none, color="black", style=dashed]
    node7092 [shape=box, label=<<font color="black">[0] let rhsValue = [? %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7092 -> node7094 [color="black"]
  }
}