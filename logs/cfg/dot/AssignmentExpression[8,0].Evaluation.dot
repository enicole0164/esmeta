digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1342 {
    label = "def <SYNTAX>:AssignmentExpression[8,0].Evaluation(this: Ast:AssignmentExpression[8,0]): Unknown"
    style = rounded
    cluster1342_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1342_entry_name -> cluster1342_entry [arrowhead=none, color="black", style=dashed]
    cluster1342_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1342_entry -> node6611 [color="black"]
    cluster1342_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1342_exit_name -> cluster1342_exit [arrowhead=none, color="black", style=dashed]
    cluster1342_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6611_name [shape=none, label=<<font color="black">Call[6611]</font>>]
    node6611_name -> node6611 [arrowhead=none, color="black", style=dashed]
    node6611 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6611 -> node6612 [color="black"]
    node6612_name [shape=none, label=<<font color="black">Block[6612]</font>>]
    node6612_name -> node6612 [arrowhead=none, color="black", style=dashed]
    node6612 [shape=box, label=<<font color="black">[0] let lref = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6612 -> node6613 [color="black"]
    node6613_name [shape=none, label=<<font color="black">Call[6613]</font>>]
    node6613_name -> node6613 [arrowhead=none, color="black", style=dashed]
    node6613 [shape=cds, label=<<font color="black">%1 = clo&lt;GetValue&gt;(lref)</font>> color="black" fillcolor="white", style=filled]
    node6613 -> node6614 [color="black"]
    node6614_name [shape=none, label=<<font color="black">Block[6614]</font>>]
    node6614_name -> node6614 [arrowhead=none, color="black", style=dashed]
    node6614 [shape=box, label=<<font color="black">[0] let lval = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6614 -> node6615 [color="black"]
    node6615_name [shape=none, label=<<font color="black">Branch[6615]</font>>]
    node6615_name -> node6615 [arrowhead=none, color="black", style=dashed]
    node6615 [shape=diamond, label=<<font color="black">(! (|| (= lval undefined) (= lval null)))</font>> color="black" fillcolor="white", style=filled]
    node6615 -> node6616 [label=<<font color="black">true</font>> color="black"]
    node6615 -> node6617 [label=<<font color="black">false</font>> color="black"]
    node6616_name [shape=none, label=<<font color="black">Block[6616]</font>>]
    node6616_name -> node6616 [arrowhead=none, color="black", style=dashed]
    node6616 [shape=box, label=<<font color="black">[0] return lval<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6616 -> cluster1342_exit [color="black"]
    node6617_name [shape=none, label=<<font color="black">Call[6617]</font>>]
    node6617_name -> node6617 [arrowhead=none, color="black", style=dashed]
    node6617 [shape=cds, label=<<font color="black">%3 = clo&lt;IsAnonymousFunctionDefinition&gt;(this[1])</font>> color="black" fillcolor="white", style=filled]
    node6617 -> node6618 [color="black"]
    node6618_name [shape=none, label=<<font color="black">Block[6618]</font>>]
    node6618_name -> node6618 [arrowhead=none, color="black", style=dashed]
    node6618 [shape=box, label=<<font color="black">[0] %2 = (= %3 true)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6618 -> node6619 [color="black"]
    node6619_name [shape=none, label=<<font color="black">Branch[6619]</font>>]
    node6619_name -> node6619 [arrowhead=none, color="black", style=dashed]
    node6619 [shape=diamond, label=<<font color="black">%2</font>> color="black" fillcolor="white", style=filled]
    node6619 -> node6620 [label=<<font color="black">true</font>> color="black"]
    node6619 -> node6622 [label=<<font color="black">false</font>> color="black"]
    node6620_name [shape=none, label=<<font color="black">Call[6620]</font>>]
    node6620_name -> node6620 [arrowhead=none, color="black", style=dashed]
    node6620 [shape=cds, label=<<font color="black">%4 = this[0]-&gt;IsIdentifierRef()</font>> color="black" fillcolor="white", style=filled]
    node6620 -> node6621 [color="black"]
    node6622_name [shape=none, label=<<font color="black">Branch[6622]</font>>]
    node6622_name -> node6622 [arrowhead=none, color="black", style=dashed]
    node6622 [shape=diamond, label=<<font color="black">%2</font>> color="black" fillcolor="white", style=filled]
    node6622 -> node6623 [label=<<font color="black">true</font>> color="black"]
    node6622 -> node6625 [label=<<font color="black">false</font>> color="black"]
    node6621_name [shape=none, label=<<font color="black">Block[6621]</font>>]
    node6621_name -> node6621 [arrowhead=none, color="black", style=dashed]
    node6621 [shape=box, label=<<font color="black">[0] %2 = (= %4 true)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6621 -> node6622 [color="black"]
    node6623_name [shape=none, label=<<font color="black">Call[6623]</font>>]
    node6623_name -> node6623 [arrowhead=none, color="black", style=dashed]
    node6623 [shape=cds, label=<<font color="black">%5 = this[1]-&gt;NamedEvaluation(lref.ReferencedName)</font>> color="black" fillcolor="white", style=filled]
    node6623 -> node6624 [color="black"]
    node6625_name [shape=none, label=<<font color="black">Call[6625]</font>>]
    node6625_name -> node6625 [arrowhead=none, color="black", style=dashed]
    node6625 [shape=cds, label=<<font color="black">%6 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6625 -> node6626 [color="black"]
    node6624_name [shape=none, label=<<font color="black">Block[6624]</font>>]
    node6624_name -> node6624 [arrowhead=none, color="black", style=dashed]
    node6624 [shape=box, label=<<font color="black">[0] let rval = [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6624 -> node6629 [color="black"]
    node6626_name [shape=none, label=<<font color="black">Block[6626]</font>>]
    node6626_name -> node6626 [arrowhead=none, color="black", style=dashed]
    node6626 [shape=box, label=<<font color="black">[0] let rref = %6<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6626 -> node6627 [color="black"]
    node6629_name [shape=none, label=<<font color="black">Call[6629]</font>>]
    node6629_name -> node6629 [arrowhead=none, color="black", style=dashed]
    node6629 [shape=cds, label=<<font color="black">%8 = clo&lt;PutValue&gt;(lref, rval)</font>> color="black" fillcolor="white", style=filled]
    node6629 -> node6630 [color="black"]
    node6627_name [shape=none, label=<<font color="black">Call[6627]</font>>]
    node6627_name -> node6627 [arrowhead=none, color="black", style=dashed]
    node6627 [shape=cds, label=<<font color="black">%7 = clo&lt;GetValue&gt;(rref)</font>> color="black" fillcolor="white", style=filled]
    node6627 -> node6628 [color="black"]
    node6630_name [shape=none, label=<<font color="black">Block[6630]</font>>]
    node6630_name -> node6630 [arrowhead=none, color="black", style=dashed]
    node6630 [shape=box, label=<<font color="black">[0] [? %8]<BR ALIGN="LEFT"/>[1] return rval<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6630 -> cluster1342_exit [color="black"]
    node6628_name [shape=none, label=<<font color="black">Block[6628]</font>>]
    node6628_name -> node6628 [arrowhead=none, color="black", style=dashed]
    node6628 [shape=box, label=<<font color="black">[0] let rval = [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6628 -> node6629 [color="black"]
  }
}