digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2189 {
    label = "def <BUILTIN>:INTRINSICS.String.prototype.search(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2189_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2189_entry_name -> cluster2189_entry [arrowhead=none, color="black", style=dashed]
    cluster2189_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2189_entry -> node13655 [color="black"]
    cluster2189_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2189_exit_name -> cluster2189_exit [arrowhead=none, color="black", style=dashed]
    cluster2189_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node13655_name [shape=none, label=<<font color="black">Branch[13655]</font>>]
    node13655_name -> node13655 [arrowhead=none, color="black", style=dashed]
    node13655 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node13655 -> node13656 [label=<<font color="black">true</font>> color="black"]
    node13655 -> node13657 [label=<<font color="black">false</font>> color="black"]
    node13656_name [shape=none, label=<<font color="black">Block[13656]</font>>]
    node13656_name -> node13656 [arrowhead=none, color="black", style=dashed]
    node13656 [shape=box, label=<<font color="black">[0] let regexp = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13656 -> node13658 [color="black"]
    node13657_name [shape=none, label=<<font color="black">Block[13657]</font>>]
    node13657_name -> node13657 [arrowhead=none, color="black", style=dashed]
    node13657 [shape=box, label=<<font color="black">[0] let regexp = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13657 -> node13658 [color="black"]
    node13658_name [shape=none, label=<<font color="black">Call[13658]</font>>]
    node13658_name -> node13658 [arrowhead=none, color="black", style=dashed]
    node13658 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireObjectCoercible&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node13658 -> node13659 [color="black"]
    node13659_name [shape=none, label=<<font color="black">Block[13659]</font>>]
    node13659_name -> node13659 [arrowhead=none, color="black", style=dashed]
    node13659 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13659 -> node13660 [color="black"]
    node13660_name [shape=none, label=<<font color="black">Branch[13660]</font>>]
    node13660_name -> node13660 [arrowhead=none, color="black", style=dashed]
    node13660 [shape=diamond, label=<<font color="black">(! (|| (= regexp undefined) (= regexp null)))</font>> color="black" fillcolor="white", style=filled]
    node13660 -> node13661 [label=<<font color="black">true</font>> color="black"]
    node13660 -> node13666 [label=<<font color="black">false</font>> color="black"]
    node13661_name [shape=none, label=<<font color="black">Call[13661]</font>>]
    node13661_name -> node13661 [arrowhead=none, color="black", style=dashed]
    node13661 [shape=cds, label=<<font color="black">%1 = clo&lt;GetMethod&gt;(regexp, @SYMBOL.search)</font>> color="black" fillcolor="white", style=filled]
    node13661 -> node13662 [color="black"]
    node13666_name [shape=none, label=<<font color="black">Call[13666]</font>>]
    node13666_name -> node13666 [arrowhead=none, color="black", style=dashed]
    node13666 [shape=cds, label=<<font color="black">%3 = clo&lt;ToString&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node13666 -> node13667 [color="black"]
    node13662_name [shape=none, label=<<font color="black">Block[13662]</font>>]
    node13662_name -> node13662 [arrowhead=none, color="black", style=dashed]
    node13662 [shape=box, label=<<font color="black">[0] let searcher = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13662 -> node13663 [color="black"]
    node13667_name [shape=none, label=<<font color="black">Block[13667]</font>>]
    node13667_name -> node13667 [arrowhead=none, color="black", style=dashed]
    node13667 [shape=box, label=<<font color="black">[0] let string = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13667 -> node13668 [color="black"]
    node13663_name [shape=none, label=<<font color="black">Branch[13663]</font>>]
    node13663_name -> node13663 [arrowhead=none, color="black", style=dashed]
    node13663 [shape=diamond, label=<<font color="black">(! (= searcher undefined))</font>> color="black" fillcolor="white", style=filled]
    node13663 -> node13664 [label=<<font color="black">true</font>> color="black"]
    node13663 -> node13666 [label=<<font color="black">false</font>> color="black"]
    node13668_name [shape=none, label=<<font color="black">Call[13668]</font>>]
    node13668_name -> node13668 [arrowhead=none, color="black", style=dashed]
    node13668 [shape=cds, label=<<font color="black">%4 = clo&lt;RegExpCreate&gt;(regexp, undefined)</font>> color="black" fillcolor="white", style=filled]
    node13668 -> node13669 [color="black"]
    node13664_name [shape=none, label=<<font color="black">Call[13664]</font>>]
    node13664_name -> node13664 [arrowhead=none, color="black", style=dashed]
    node13664 [shape=cds, label=<<font color="black">%2 = clo&lt;Call&gt;(searcher, regexp, (new [O])[#964])</font>> color="black" fillcolor="white", style=filled]
    node13664 -> node13665 [color="black"]
    node13669_name [shape=none, label=<<font color="black">Block[13669]</font>>]
    node13669_name -> node13669 [arrowhead=none, color="black", style=dashed]
    node13669 [shape=box, label=<<font color="black">[0] let rx = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13669 -> node13670 [color="black"]
    node13665_name [shape=none, label=<<font color="black">Block[13665]</font>>]
    node13665_name -> node13665 [arrowhead=none, color="black", style=dashed]
    node13665 [shape=box, label=<<font color="black">[0] return [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13665 -> cluster2189_exit [color="black"]
    node13670_name [shape=none, label=<<font color="black">Call[13670]</font>>]
    node13670_name -> node13670 [arrowhead=none, color="black", style=dashed]
    node13670 [shape=cds, label=<<font color="black">%5 = clo&lt;Invoke&gt;(rx, @SYMBOL.search, (new [string])[#965])</font>> color="black" fillcolor="white", style=filled]
    node13670 -> node13671 [color="black"]
    node13671_name [shape=none, label=<<font color="black">Block[13671]</font>>]
    node13671_name -> node13671 [arrowhead=none, color="black", style=dashed]
    node13671 [shape=box, label=<<font color="black">[0] return [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13671 -> cluster2189_exit [color="black"]
  }
}