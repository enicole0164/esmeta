digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1259 {
    label = "def <SYNTAX>:MemberExpression[2,0].Evaluation(this: Ast:MemberExpression[2,0]): Unknown"
    style = rounded
    cluster1259_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1259_entry_name -> cluster1259_entry [arrowhead=none, color="black", style=dashed]
    cluster1259_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1259_entry -> node5789 [color="black"]
    cluster1259_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1259_exit_name -> cluster1259_exit [arrowhead=none, color="black", style=dashed]
    cluster1259_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node5789_name [shape=none, label=<<font color="black">Call[5789]</font>>]
    node5789_name -> node5789 [arrowhead=none, color="black", style=dashed]
    node5789 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node5789 -> node5790 [color="black"]
    node5790_name [shape=none, label=<<font color="black">Block[5790]</font>>]
    node5790_name -> node5790 [arrowhead=none, color="black", style=dashed]
    node5790 [shape=box, label=<<font color="black">[0] let baseReference = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5790 -> node5791 [color="black"]
    node5791_name [shape=none, label=<<font color="black">Call[5791]</font>>]
    node5791_name -> node5791 [arrowhead=none, color="black", style=dashed]
    node5791 [shape=cds, label=<<font color="black">%1 = clo&lt;GetValue&gt;(baseReference)</font>> color="black" fillcolor="white", style=filled]
    node5791 -> node5792 [color="black"]
    node5792_name [shape=none, label=<<font color="black">Block[5792]</font>>]
    node5792_name -> node5792 [arrowhead=none, color="black", style=dashed]
    node5792 [shape=box, label=<<font color="black">[0] let baseValue = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5792 -> node5793 [color="black"]
    node5793_name [shape=none, label=<<font color="black">Branch[5793]</font>>]
    node5793_name -> node5793 [arrowhead=none, color="black", style=dashed]
    node5793 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white", style=filled]
    node5793 -> node5794 [label=<<font color="black">true</font>> color="black"]
    node5793 -> node5795 [label=<<font color="black">false</font>> color="black"]
    node5794_name [shape=none, label=<<font color="black">Block[5794]</font>>]
    node5794_name -> node5794 [arrowhead=none, color="black", style=dashed]
    node5794 [shape=box, label=<<font color="black">[0] let strict = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5794 -> node5796 [color="black"]
    node5795_name [shape=none, label=<<font color="black">Block[5795]</font>>]
    node5795_name -> node5795 [arrowhead=none, color="black", style=dashed]
    node5795 [shape=box, label=<<font color="black">[0] let strict = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5795 -> node5796 [color="black"]
    node5796_name [shape=none, label=<<font color="black">Call[5796]</font>>]
    node5796_name -> node5796 [arrowhead=none, color="black", style=dashed]
    node5796 [shape=cds, label=<<font color="black">%2 = clo&lt;EvaluatePropertyAccessWithIdentifierKey&gt;(baseValue, this[1], strict)</font>> color="black" fillcolor="white", style=filled]
    node5796 -> node5797 [color="black"]
    node5797_name [shape=none, label=<<font color="black">Block[5797]</font>>]
    node5797_name -> node5797 [arrowhead=none, color="black", style=dashed]
    node5797 [shape=box, label=<<font color="black">[0] return %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5797 -> cluster1259_exit [color="black"]
  }
}