digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster568 {
    label = "def <SYNTAX>:ForStatement[2,2].ContainsUndefinedBreakTarget(this: Ast:ForStatement[2,2], labelSet: Unknown): Boolean"
    style = rounded
    cluster568_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster568_entry_name -> cluster568_entry [arrowhead=none, color="black", style=dashed]
    cluster568_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster568_entry -> node2565 [color="black"]
    cluster568_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster568_exit_name -> cluster568_exit [arrowhead=none, color="black", style=dashed]
    cluster568_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2565_name [shape=none, label=<<font color="black">Call[2565]</font>>]
    node2565_name -> node2565 [arrowhead=none, color="black", style=dashed]
    node2565 [shape=cds, label=<<font color="black">%0 = this[3]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2565 -> node2566 [color="black"]
    node2566_name [shape=none, label=<<font color="black">Block[2566]</font>>]
    node2566_name -> node2566 [arrowhead=none, color="black", style=dashed]
    node2566 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2566 -> cluster568_exit [color="black"]
  }
}