digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2465 {
    label = "def <BUILTIN>:INTRINSICS.WeakMap.prototype.set(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2465_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2465_entry_name -> cluster2465_entry [arrowhead=none, color="black", style=dashed]
    cluster2465_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2465_entry -> node17244 [color="black"]
    cluster2465_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2465_exit_name -> cluster2465_exit [arrowhead=none, color="black", style=dashed]
    cluster2465_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17244_name [shape=none, label=<<font color="black">Branch[17244]</font>>]
    node17244_name -> node17244 [arrowhead=none, color="black", style=dashed]
    node17244 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node17244 -> node17245 [label=<<font color="black">true</font>> color="black"]
    node17244 -> node17246 [label=<<font color="black">false</font>> color="black"]
    node17245_name [shape=none, label=<<font color="black">Block[17245]</font>>]
    node17245_name -> node17245 [arrowhead=none, color="black", style=dashed]
    node17245 [shape=box, label=<<font color="black">[0] let key = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17245 -> node17247 [color="black"]
    node17246_name [shape=none, label=<<font color="black">Block[17246]</font>>]
    node17246_name -> node17246 [arrowhead=none, color="black", style=dashed]
    node17246 [shape=box, label=<<font color="black">[0] let key = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17246 -> node17247 [color="black"]
    node17247_name [shape=none, label=<<font color="black">Branch[17247]</font>>]
    node17247_name -> node17247 [arrowhead=none, color="black", style=dashed]
    node17247 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node17247 -> node17248 [label=<<font color="black">true</font>> color="black"]
    node17247 -> node17249 [label=<<font color="black">false</font>> color="black"]
    node17248_name [shape=none, label=<<font color="black">Block[17248]</font>>]
    node17248_name -> node17248 [arrowhead=none, color="black", style=dashed]
    node17248 [shape=box, label=<<font color="black">[0] let value = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17248 -> node17250 [color="black"]
    node17249_name [shape=none, label=<<font color="black">Block[17249]</font>>]
    node17249_name -> node17249 [arrowhead=none, color="black", style=dashed]
    node17249 [shape=box, label=<<font color="black">[0] let value = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17249 -> node17250 [color="black"]
    node17250_name [shape=none, label=<<font color="black">Block[17250]</font>>]
    node17250_name -> node17250 [arrowhead=none, color="black", style=dashed]
    node17250 [shape=box, label=<<font color="black">[0] let M = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17250 -> node17251 [color="black"]
    node17251_name [shape=none, label=<<font color="black">Call[17251]</font>>]
    node17251_name -> node17251 [arrowhead=none, color="black", style=dashed]
    node17251 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireInternalSlot&gt;(M, &quot;WeakMapData&quot;)</font>> color="black" fillcolor="white", style=filled]
    node17251 -> node17252 [color="black"]
    node17252_name [shape=none, label=<<font color="black">Block[17252]</font>>]
    node17252_name -> node17252 [arrowhead=none, color="black", style=dashed]
    node17252 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/>[1] let entries = M.WeakMapData<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17252 -> node17253 [color="black"]
    node17253_name [shape=none, label=<<font color="black">Branch[17253]</font>>]
    node17253_name -> node17253 [arrowhead=none, color="black", style=dashed]
    node17253 [shape=diamond, label=<<font color="black">(! (= (typeof key) @Object))</font>> color="black" fillcolor="white", style=filled]
    node17253 -> node17254 [label=<<font color="black">true</font>> color="black"]
    node17253 -> node17255 [label=<<font color="black">false</font>> color="black"]
    node17254_name [shape=none, label=<<font color="black">Block[17254]</font>>]
    node17254_name -> node17254 [arrowhead=none, color="black", style=dashed]
    node17254 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1134])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17254 -> cluster2465_exit [color="black"]
    node17255_name [shape=none, label=<<font color="black">Block[17255]</font>>]
    node17255_name -> node17255 [arrowhead=none, color="black", style=dashed]
    node17255 [shape=box, label=<<font color="black">[0] %2 = entries<BR ALIGN="LEFT"/>[1] %1 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17255 -> node17256 [color="black"]
    node17256_name [shape=none, label=<<font color="black">Branch[17256]</font>>]
    node17256_name -> node17256 [arrowhead=none, color="black", style=dashed]
    node17256 [shape=diamond, label=<<font color="black">(&lt; %1 %2.length)</font>> color="black" fillcolor="white", style=filled]
    node17256 -> node17257 [label=<<font color="black">true</font>> color="black"]
    node17256 -> node17264 [label=<<font color="black">false</font>> color="black"]
    node17257_name [shape=none, label=<<font color="black">Block[17257]</font>>]
    node17257_name -> node17257 [arrowhead=none, color="black", style=dashed]
    node17257 [shape=box, label=<<font color="black">[0] let p = %2[%1]<BR ALIGN="LEFT"/>[1] %3 = (! (= p.Key ~empty~))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17257 -> node17258 [color="black"]
    node17264_name [shape=none, label=<<font color="black">Block[17264]</font>>]
    node17264_name -> node17264 [arrowhead=none, color="black", style=dashed]
    node17264 [shape=box, label=<<font color="black">[0] let p = (new Record(&quot;Key&quot; -&gt; key, &quot;Value&quot; -&gt; value))[#1135]<BR ALIGN="LEFT"/>[1] push entries &lt; p<BR ALIGN="LEFT"/>[2] return M<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17264 -> cluster2465_exit [color="black"]
    node17258_name [shape=none, label=<<font color="black">Branch[17258]</font>>]
    node17258_name -> node17258 [arrowhead=none, color="black", style=dashed]
    node17258 [shape=diamond, label=<<font color="black">%3</font>> color="black" fillcolor="white", style=filled]
    node17258 -> node17259 [label=<<font color="black">true</font>> color="black"]
    node17258 -> node17261 [label=<<font color="black">false</font>> color="black"]
    node17259_name [shape=none, label=<<font color="black">Call[17259]</font>>]
    node17259_name -> node17259 [arrowhead=none, color="black", style=dashed]
    node17259 [shape=cds, label=<<font color="black">%4 = clo&lt;SameValue&gt;(p.Key, key)</font>> color="black" fillcolor="white", style=filled]
    node17259 -> node17260 [color="black"]
    node17261_name [shape=none, label=<<font color="black">Branch[17261]</font>>]
    node17261_name -> node17261 [arrowhead=none, color="black", style=dashed]
    node17261 [shape=diamond, label=<<font color="black">%3</font>> color="black" fillcolor="white", style=filled]
    node17261 -> node17262 [label=<<font color="black">true</font>> color="black"]
    node17261 -> node17263 [label=<<font color="black">false</font>> color="black"]
    node17260_name [shape=none, label=<<font color="black">Block[17260]</font>>]
    node17260_name -> node17260 [arrowhead=none, color="black", style=dashed]
    node17260 [shape=box, label=<<font color="black">[0] %3 = (= %4 true)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17260 -> node17261 [color="black"]
    node17262_name [shape=none, label=<<font color="black">Block[17262]</font>>]
    node17262_name -> node17262 [arrowhead=none, color="black", style=dashed]
    node17262 [shape=box, label=<<font color="black">[0] p.Value = value<BR ALIGN="LEFT"/>[1] return M<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17262 -> cluster2465_exit [color="black"]
    node17263_name [shape=none, label=<<font color="black">Block[17263]</font>>]
    node17263_name -> node17263 [arrowhead=none, color="black", style=dashed]
    node17263 [shape=box, label=<<font color="black">[0] %1 = (+ %1 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17263 -> node17256 [color="black"]
  }
}