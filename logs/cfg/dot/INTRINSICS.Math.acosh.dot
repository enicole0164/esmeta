digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2078 {
    label = "def <BUILTIN>:INTRINSICS.Math.acosh(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2078_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2078_entry_name -> cluster2078_entry [arrowhead=none, color="black", style=dashed]
    cluster2078_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2078_entry -> node12023 [color="black"]
    cluster2078_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2078_exit_name -> cluster2078_exit [arrowhead=none, color="black", style=dashed]
    cluster2078_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node12023_name [shape=none, label=<<font color="black">Branch[12023]</font>>]
    node12023_name -> node12023 [arrowhead=none, color="black", style=dashed]
    node12023 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node12023 -> node12024 [label=<<font color="black">true</font>> color="black"]
    node12023 -> node12025 [label=<<font color="black">false</font>> color="black"]
    node12024_name [shape=none, label=<<font color="black">Block[12024]</font>>]
    node12024_name -> node12024 [arrowhead=none, color="black", style=dashed]
    node12024 [shape=box, label=<<font color="black">[0] let x = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12024 -> node12026 [color="black"]
    node12025_name [shape=none, label=<<font color="black">Block[12025]</font>>]
    node12025_name -> node12025 [arrowhead=none, color="black", style=dashed]
    node12025 [shape=box, label=<<font color="black">[0] let x = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12025 -> node12026 [color="black"]
    node12026_name [shape=none, label=<<font color="black">Call[12026]</font>>]
    node12026_name -> node12026 [arrowhead=none, color="black", style=dashed]
    node12026 [shape=cds, label=<<font color="black">%0 = clo&lt;ToNumber&gt;(x)</font>> color="black" fillcolor="white", style=filled]
    node12026 -> node12027 [color="black"]
    node12027_name [shape=none, label=<<font color="black">Block[12027]</font>>]
    node12027_name -> node12027 [arrowhead=none, color="black", style=dashed]
    node12027 [shape=box, label=<<font color="black">[0] let n = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12027 -> node12028 [color="black"]
    node12028_name [shape=none, label=<<font color="black">Branch[12028]</font>>]
    node12028_name -> node12028 [arrowhead=none, color="black", style=dashed]
    node12028 [shape=diamond, label=<<font color="black">(|| (= n NaN) (= n +INF))</font>> color="black" fillcolor="white", style=filled]
    node12028 -> node12029 [label=<<font color="black">true</font>> color="black"]
    node12028 -> node12030 [label=<<font color="black">false</font>> color="black"]
    node12029_name [shape=none, label=<<font color="black">Block[12029]</font>>]
    node12029_name -> node12029 [arrowhead=none, color="black", style=dashed]
    node12029 [shape=box, label=<<font color="black">[0] return n<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12029 -> cluster2078_exit [color="black"]
    node12030_name [shape=none, label=<<font color="black">Branch[12030]</font>>]
    node12030_name -> node12030 [arrowhead=none, color="black", style=dashed]
    node12030 [shape=diamond, label=<<font color="black">(= n 1.0f)</font>> color="black" fillcolor="white", style=filled]
    node12030 -> node12031 [label=<<font color="black">true</font>> color="black"]
    node12030 -> node12032 [label=<<font color="black">false</font>> color="black"]
    node12031_name [shape=none, label=<<font color="black">Block[12031]</font>>]
    node12031_name -> node12031 [arrowhead=none, color="black", style=dashed]
    node12031 [shape=box, label=<<font color="black">[0] return 0.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12031 -> cluster2078_exit [color="black"]
    node12032_name [shape=none, label=<<font color="black">Branch[12032]</font>>]
    node12032_name -> node12032 [arrowhead=none, color="black", style=dashed]
    node12032 [shape=diamond, label=<<font color="black">(&lt; n 1.0f)</font>> color="black" fillcolor="white", style=filled]
    node12032 -> node12033 [label=<<font color="black">true</font>> color="black"]
    node12032 -> node12034 [label=<<font color="black">false</font>> color="black"]
    node12033_name [shape=none, label=<<font color="black">Block[12033]</font>>]
    node12033_name -> node12033 [arrowhead=none, color="black", style=dashed]
    node12033 [shape=box, label=<<font color="black">[0] return NaN<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12033 -> cluster2078_exit [color="black"]
    node12034_name [shape=none, label=<<font color="black">Block[12034]</font>>]
    node12034_name -> node12034 [arrowhead=none, color="black", style=dashed]
    node12034 [shape=box, label=<<font color="black">[0] return ([approx-number] ([math:acosh] ([math] n)))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12034 -> cluster2078_exit [color="black"]
  }
}