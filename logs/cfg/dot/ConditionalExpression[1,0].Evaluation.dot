digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1337 {
    label = "def <SYNTAX>:ConditionalExpression[1,0].Evaluation(this: Ast:ConditionalExpression[1,0]): Unknown"
    style = rounded
    cluster1337_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1337_entry_name -> cluster1337_entry [arrowhead=none, color="black", style=dashed]
    cluster1337_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1337_entry -> node6496 [color="black"]
    cluster1337_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1337_exit_name -> cluster1337_exit [arrowhead=none, color="black", style=dashed]
    cluster1337_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6496_name [shape=none, label=<<font color="black">Call[6496]</font>>]
    node6496_name -> node6496 [arrowhead=none, color="black", style=dashed]
    node6496 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6496 -> node6497 [color="black"]
    node6497_name [shape=none, label=<<font color="black">Block[6497]</font>>]
    node6497_name -> node6497 [arrowhead=none, color="black", style=dashed]
    node6497 [shape=box, label=<<font color="black">[0] let lref = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6497 -> node6498 [color="black"]
    node6498_name [shape=none, label=<<font color="black">Call[6498]</font>>]
    node6498_name -> node6498 [arrowhead=none, color="black", style=dashed]
    node6498 [shape=cds, label=<<font color="black">%1 = clo&lt;GetValue&gt;(lref)</font>> color="black" fillcolor="white", style=filled]
    node6498 -> node6499 [color="black"]
    node6499_name [shape=none, label=<<font color="black">Call[6499]</font>>]
    node6499_name -> node6499 [arrowhead=none, color="black", style=dashed]
    node6499 [shape=cds, label=<<font color="black">%2 = clo&lt;ToBoolean&gt;([? %1])</font>> color="black" fillcolor="white", style=filled]
    node6499 -> node6500 [color="black"]
    node6500_name [shape=none, label=<<font color="black">Block[6500]</font>>]
    node6500_name -> node6500 [arrowhead=none, color="black", style=dashed]
    node6500 [shape=box, label=<<font color="black">[0] let lval = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6500 -> node6501 [color="black"]
    node6501_name [shape=none, label=<<font color="black">Branch[6501]</font>>]
    node6501_name -> node6501 [arrowhead=none, color="black", style=dashed]
    node6501 [shape=diamond, label=<<font color="black">(= lval true)</font>> color="black" fillcolor="white", style=filled]
    node6501 -> node6502 [label=<<font color="black">true</font>> color="black"]
    node6501 -> node6506 [label=<<font color="black">false</font>> color="black"]
    node6502_name [shape=none, label=<<font color="black">Call[6502]</font>>]
    node6502_name -> node6502 [arrowhead=none, color="black", style=dashed]
    node6502 [shape=cds, label=<<font color="black">%3 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6502 -> node6503 [color="black"]
    node6506_name [shape=none, label=<<font color="black">Call[6506]</font>>]
    node6506_name -> node6506 [arrowhead=none, color="black", style=dashed]
    node6506 [shape=cds, label=<<font color="black">%5 = this[2]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6506 -> node6507 [color="black"]
    node6503_name [shape=none, label=<<font color="black">Block[6503]</font>>]
    node6503_name -> node6503 [arrowhead=none, color="black", style=dashed]
    node6503 [shape=box, label=<<font color="black">[0] let trueRef = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6503 -> node6504 [color="black"]
    node6507_name [shape=none, label=<<font color="black">Block[6507]</font>>]
    node6507_name -> node6507 [arrowhead=none, color="black", style=dashed]
    node6507 [shape=box, label=<<font color="black">[0] let falseRef = %5<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6507 -> node6508 [color="black"]
    node6504_name [shape=none, label=<<font color="black">Call[6504]</font>>]
    node6504_name -> node6504 [arrowhead=none, color="black", style=dashed]
    node6504 [shape=cds, label=<<font color="black">%4 = clo&lt;GetValue&gt;(trueRef)</font>> color="black" fillcolor="white", style=filled]
    node6504 -> node6505 [color="black"]
    node6508_name [shape=none, label=<<font color="black">Call[6508]</font>>]
    node6508_name -> node6508 [arrowhead=none, color="black", style=dashed]
    node6508 [shape=cds, label=<<font color="black">%6 = clo&lt;GetValue&gt;(falseRef)</font>> color="black" fillcolor="white", style=filled]
    node6508 -> node6509 [color="black"]
    node6505_name [shape=none, label=<<font color="black">Block[6505]</font>>]
    node6505_name -> node6505 [arrowhead=none, color="black", style=dashed]
    node6505 [shape=box, label=<<font color="black">[0] return [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6505 -> cluster1337_exit [color="black"]
    node6509_name [shape=none, label=<<font color="black">Block[6509]</font>>]
    node6509_name -> node6509 [arrowhead=none, color="black", style=dashed]
    node6509 [shape=box, label=<<font color="black">[0] return [? %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6509 -> cluster1337_exit [color="black"]
  }
}