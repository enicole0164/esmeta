digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1080 {
    label = "def <SYNTAX>:ConciseBody[0,0].EvaluateBody(this: Ast:ConciseBody[0,0], functionObject: Unknown, argumentsList: Unknown["List"]): Normal[ESValue] | Abrupt"
    style = rounded
    cluster1080_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1080_entry_name -> cluster1080_entry [arrowhead=none, color="black", style=dashed]
    cluster1080_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1080_entry -> node4259 [color="black"]
    cluster1080_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1080_exit_name -> cluster1080_exit [arrowhead=none, color="black", style=dashed]
    cluster1080_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4259_name [shape=none, label=<<font color="black">Call[4259]</font>>]
    node4259_name -> node4259 [arrowhead=none, color="black", style=dashed]
    node4259 [shape=cds, label=<<font color="black">%0 = this-&gt;EvaluateConciseBody(functionObject, argumentsList)</font>> color="black" fillcolor="white", style=filled]
    node4259 -> node4260 [color="black"]
    node4260_name [shape=none, label=<<font color="black">Block[4260]</font>>]
    node4260_name -> node4260 [arrowhead=none, color="black", style=dashed]
    node4260 [shape=box, label=<<font color="black">[0] return [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4260 -> cluster1080_exit [color="black"]
  }
}