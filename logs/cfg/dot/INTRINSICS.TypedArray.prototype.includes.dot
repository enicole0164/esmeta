digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2400 {
    label = "def <BUILTIN>:INTRINSICS.TypedArray.prototype.includes(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2400_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2400_entry_name -> cluster2400_entry [arrowhead=none, color="black", style=dashed]
    cluster2400_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2400_entry -> node16202 [color="black"]
    cluster2400_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2400_exit_name -> cluster2400_exit [arrowhead=none, color="black", style=dashed]
    cluster2400_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node16202_name [shape=none, label=<<font color="black">Branch[16202]</font>>]
    node16202_name -> node16202 [arrowhead=none, color="black", style=dashed]
    node16202 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node16202 -> node16203 [label=<<font color="black">true</font>> color="black"]
    node16202 -> node16204 [label=<<font color="black">false</font>> color="black"]
    node16203_name [shape=none, label=<<font color="black">Block[16203]</font>>]
    node16203_name -> node16203 [arrowhead=none, color="black", style=dashed]
    node16203 [shape=box, label=<<font color="black">[0] let searchElement = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16203 -> node16205 [color="black"]
    node16204_name [shape=none, label=<<font color="black">Block[16204]</font>>]
    node16204_name -> node16204 [arrowhead=none, color="black", style=dashed]
    node16204 [shape=box, label=<<font color="black">[0] let searchElement = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16204 -> node16205 [color="black"]
    node16205_name [shape=none, label=<<font color="black">Branch[16205]</font>>]
    node16205_name -> node16205 [arrowhead=none, color="black", style=dashed]
    node16205 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node16205 -> node16206 [label=<<font color="black">true</font>> color="black"]
    node16205 -> node16207 [label=<<font color="black">false</font>> color="black"]
    node16206_name [shape=none, label=<<font color="black">Block[16206]</font>>]
    node16206_name -> node16206 [arrowhead=none, color="black", style=dashed]
    node16206 [shape=box, label=<<font color="black">[0] let fromIndex = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16206 -> node16208 [color="black"]
    node16207_name [shape=none, label=<<font color="black">Block[16207]</font>>]
    node16207_name -> node16207 [arrowhead=none, color="black", style=dashed]
    node16207 [shape=box, label=<<font color="black">[0] let fromIndex = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16207 -> node16208 [color="black"]
    node16208_name [shape=none, label=<<font color="black">Block[16208]</font>>]
    node16208_name -> node16208 [arrowhead=none, color="black", style=dashed]
    node16208 [shape=box, label=<<font color="black">[0] let O = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16208 -> node16209 [color="black"]
    node16209_name [shape=none, label=<<font color="black">Call[16209]</font>>]
    node16209_name -> node16209 [arrowhead=none, color="black", style=dashed]
    node16209 [shape=cds, label=<<font color="black">%0 = clo&lt;ValidateTypedArray&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node16209 -> node16210 [color="black"]
    node16210_name [shape=none, label=<<font color="black">Block[16210]</font>>]
    node16210_name -> node16210 [arrowhead=none, color="black", style=dashed]
    node16210 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/>[1] let len = O.ArrayLength<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16210 -> node16211 [color="black"]
    node16211_name [shape=none, label=<<font color="black">Branch[16211]</font>>]
    node16211_name -> node16211 [arrowhead=none, color="black", style=dashed]
    node16211 [shape=diamond, label=<<font color="black">(= len 0)</font>> color="black" fillcolor="white", style=filled]
    node16211 -> node16212 [label=<<font color="black">true</font>> color="black"]
    node16211 -> node16213 [label=<<font color="black">false</font>> color="black"]
    node16212_name [shape=none, label=<<font color="black">Block[16212]</font>>]
    node16212_name -> node16212 [arrowhead=none, color="black", style=dashed]
    node16212 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16212 -> cluster2400_exit [color="black"]
    node16213_name [shape=none, label=<<font color="black">Call[16213]</font>>]
    node16213_name -> node16213 [arrowhead=none, color="black", style=dashed]
    node16213 [shape=cds, label=<<font color="black">%1 = clo&lt;ToIntegerOrInfinity&gt;(fromIndex)</font>> color="black" fillcolor="white", style=filled]
    node16213 -> node16214 [color="black"]
    node16214_name [shape=none, label=<<font color="black">Block[16214]</font>>]
    node16214_name -> node16214 [arrowhead=none, color="black", style=dashed]
    node16214 [shape=box, label=<<font color="black">[0] let n = [? %1]<BR ALIGN="LEFT"/>[1] assert (|| (! (= fromIndex undefined)) (= n 0))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16214 -> node16215 [color="black"]
    node16215_name [shape=none, label=<<font color="black">Branch[16215]</font>>]
    node16215_name -> node16215 [arrowhead=none, color="black", style=dashed]
    node16215 [shape=diamond, label=<<font color="black">(= n +INF)</font>> color="black" fillcolor="white", style=filled]
    node16215 -> node16216 [label=<<font color="black">true</font>> color="black"]
    node16215 -> node16217 [label=<<font color="black">false</font>> color="black"]
    node16216_name [shape=none, label=<<font color="black">Block[16216]</font>>]
    node16216_name -> node16216 [arrowhead=none, color="black", style=dashed]
    node16216 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16216 -> cluster2400_exit [color="black"]
    node16217_name [shape=none, label=<<font color="black">Branch[16217]</font>>]
    node16217_name -> node16217 [arrowhead=none, color="black", style=dashed]
    node16217 [shape=diamond, label=<<font color="black">(= n -INF)</font>> color="black" fillcolor="white", style=filled]
    node16217 -> node16218 [label=<<font color="black">true</font>> color="black"]
    node16217 -> node16219 [label=<<font color="black">false</font>> color="black"]
    node16218_name [shape=none, label=<<font color="black">Block[16218]</font>>]
    node16218_name -> node16218 [arrowhead=none, color="black", style=dashed]
    node16218 [shape=box, label=<<font color="black">[0] n = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16218 -> node16219 [color="black"]
    node16219_name [shape=none, label=<<font color="black">Branch[16219]</font>>]
    node16219_name -> node16219 [arrowhead=none, color="black", style=dashed]
    node16219 [shape=diamond, label=<<font color="black">(! (&lt; n 0))</font>> color="black" fillcolor="white", style=filled]
    node16219 -> node16220 [label=<<font color="black">true</font>> color="black"]
    node16219 -> node16221 [label=<<font color="black">false</font>> color="black"]
    node16220_name [shape=none, label=<<font color="black">Block[16220]</font>>]
    node16220_name -> node16220 [arrowhead=none, color="black", style=dashed]
    node16220 [shape=box, label=<<font color="black">[0] let k = n<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16220 -> node16224 [color="black"]
    node16221_name [shape=none, label=<<font color="black">Block[16221]</font>>]
    node16221_name -> node16221 [arrowhead=none, color="black", style=dashed]
    node16221 [shape=box, label=<<font color="black">[0] let k = (+ len n)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16221 -> node16222 [color="black"]
    node16224_name [shape=none, label=<<font color="black">Branch[16224]</font>>]
    node16224_name -> node16224 [arrowhead=none, color="black", style=dashed]
    node16224 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white", style=filled]
    node16224 -> node16225 [label=<<font color="black">true</font>> color="black"]
    node16224 -> node16232 [label=<<font color="black">false</font>> color="black"]
    node16222_name [shape=none, label=<<font color="black">Branch[16222]</font>>]
    node16222_name -> node16222 [arrowhead=none, color="black", style=dashed]
    node16222 [shape=diamond, label=<<font color="black">(&lt; k 0)</font>> color="black" fillcolor="white", style=filled]
    node16222 -> node16223 [label=<<font color="black">true</font>> color="black"]
    node16222 -> node16224 [label=<<font color="black">false</font>> color="black"]
    node16225_name [shape=none, label=<<font color="black">Call[16225]</font>>]
    node16225_name -> node16225 [arrowhead=none, color="black", style=dashed]
    node16225 [shape=cds, label=<<font color="black">%2 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node16225 -> node16226 [color="black"]
    node16232_name [shape=none, label=<<font color="black">Block[16232]</font>>]
    node16232_name -> node16232 [arrowhead=none, color="black", style=dashed]
    node16232 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16232 -> cluster2400_exit [color="black"]
    node16223_name [shape=none, label=<<font color="black">Block[16223]</font>>]
    node16223_name -> node16223 [arrowhead=none, color="black", style=dashed]
    node16223 [shape=box, label=<<font color="black">[0] k = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16223 -> node16224 [color="black"]
    node16226_name [shape=none, label=<<font color="black">Call[16226]</font>>]
    node16226_name -> node16226 [arrowhead=none, color="black", style=dashed]
    node16226 [shape=cds, label=<<font color="black">%3 = clo&lt;Get&gt;(O, [! %2])</font>> color="black" fillcolor="white", style=filled]
    node16226 -> node16227 [color="black"]
    node16227_name [shape=none, label=<<font color="black">Block[16227]</font>>]
    node16227_name -> node16227 [arrowhead=none, color="black", style=dashed]
    node16227 [shape=box, label=<<font color="black">[0] let elementK = [! %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16227 -> node16228 [color="black"]
    node16228_name [shape=none, label=<<font color="black">Call[16228]</font>>]
    node16228_name -> node16228 [arrowhead=none, color="black", style=dashed]
    node16228 [shape=cds, label=<<font color="black">%4 = clo&lt;SameValueZero&gt;(searchElement, elementK)</font>> color="black" fillcolor="white", style=filled]
    node16228 -> node16229 [color="black"]
    node16229_name [shape=none, label=<<font color="black">Branch[16229]</font>>]
    node16229_name -> node16229 [arrowhead=none, color="black", style=dashed]
    node16229 [shape=diamond, label=<<font color="black">(= %4 true)</font>> color="black" fillcolor="white", style=filled]
    node16229 -> node16230 [label=<<font color="black">true</font>> color="black"]
    node16229 -> node16231 [label=<<font color="black">false</font>> color="black"]
    node16230_name [shape=none, label=<<font color="black">Block[16230]</font>>]
    node16230_name -> node16230 [arrowhead=none, color="black", style=dashed]
    node16230 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16230 -> cluster2400_exit [color="black"]
    node16231_name [shape=none, label=<<font color="black">Block[16231]</font>>]
    node16231_name -> node16231 [arrowhead=none, color="black", style=dashed]
    node16231 [shape=box, label=<<font color="black">[0] k = (+ k 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16231 -> node16224 [color="black"]
  }
}