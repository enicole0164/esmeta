digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2596 {
    label = "def PromiseResolve(C: Unknown["Constructor"], x: ESValue): Normal[ESValue] | Abrupt"
    style = rounded
    cluster2596_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2596_entry_name -> cluster2596_entry [arrowhead=none, color="black", style=dashed]
    cluster2596_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2596_entry -> node19187 [color="black"]
    cluster2596_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2596_exit_name -> cluster2596_exit [arrowhead=none, color="black", style=dashed]
    cluster2596_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node19187_name [shape=none, label=<<font color="black">Call[19187]</font>>]
    node19187_name -> node19187 [arrowhead=none, color="black", style=dashed]
    node19187 [shape=cds, label=<<font color="black">%0 = clo&lt;IsPromise&gt;(x)</font>> color="black" fillcolor="white", style=filled]
    node19187 -> node19188 [color="black"]
    node19188_name [shape=none, label=<<font color="black">Branch[19188]</font>>]
    node19188_name -> node19188 [arrowhead=none, color="black", style=dashed]
    node19188 [shape=diamond, label=<<font color="black">(= %0 true)</font>> color="black" fillcolor="white", style=filled]
    node19188 -> node19189 [label=<<font color="black">true</font>> color="black"]
    node19188 -> node19194 [label=<<font color="black">false</font>> color="black"]
    node19189_name [shape=none, label=<<font color="black">Call[19189]</font>>]
    node19189_name -> node19189 [arrowhead=none, color="black", style=dashed]
    node19189 [shape=cds, label=<<font color="black">%1 = clo&lt;Get&gt;(x, &quot;constructor&quot;)</font>> color="black" fillcolor="white", style=filled]
    node19189 -> node19190 [color="black"]
    node19194_name [shape=none, label=<<font color="black">Call[19194]</font>>]
    node19194_name -> node19194 [arrowhead=none, color="black", style=dashed]
    node19194 [shape=cds, label=<<font color="black">%3 = clo&lt;NewPromiseCapability&gt;(C)</font>> color="black" fillcolor="white", style=filled]
    node19194 -> node19195 [color="black"]
    node19190_name [shape=none, label=<<font color="black">Block[19190]</font>>]
    node19190_name -> node19190 [arrowhead=none, color="black", style=dashed]
    node19190 [shape=box, label=<<font color="black">[0] let xConstructor = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19190 -> node19191 [color="black"]
    node19195_name [shape=none, label=<<font color="black">Block[19195]</font>>]
    node19195_name -> node19195 [arrowhead=none, color="black", style=dashed]
    node19195 [shape=box, label=<<font color="black">[0] let promiseCapability = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19195 -> node19196 [color="black"]
    node19191_name [shape=none, label=<<font color="black">Call[19191]</font>>]
    node19191_name -> node19191 [arrowhead=none, color="black", style=dashed]
    node19191 [shape=cds, label=<<font color="black">%2 = clo&lt;SameValue&gt;(xConstructor, C)</font>> color="black" fillcolor="white", style=filled]
    node19191 -> node19192 [color="black"]
    node19196_name [shape=none, label=<<font color="black">Call[19196]</font>>]
    node19196_name -> node19196 [arrowhead=none, color="black", style=dashed]
    node19196 [shape=cds, label=<<font color="black">%4 = clo&lt;Call&gt;(promiseCapability.Resolve, undefined, (new [x])[#1304])</font>> color="black" fillcolor="white", style=filled]
    node19196 -> node19197 [color="black"]
    node19192_name [shape=none, label=<<font color="black">Branch[19192]</font>>]
    node19192_name -> node19192 [arrowhead=none, color="black", style=dashed]
    node19192 [shape=diamond, label=<<font color="black">(= %2 true)</font>> color="black" fillcolor="white", style=filled]
    node19192 -> node19193 [label=<<font color="black">true</font>> color="black"]
    node19192 -> node19194 [label=<<font color="black">false</font>> color="black"]
    node19197_name [shape=none, label=<<font color="black">Block[19197]</font>>]
    node19197_name -> node19197 [arrowhead=none, color="black", style=dashed]
    node19197 [shape=box, label=<<font color="black">[0] [? %4]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19197 -> cluster2596_exit [color="black"]
    node19193_name [shape=none, label=<<font color="black">Block[19193]</font>>]
    node19193_name -> node19193 [arrowhead=none, color="black", style=dashed]
    node19193 [shape=box, label=<<font color="black">[0] return x<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node19193 -> cluster2596_exit [color="black"]
  }
}