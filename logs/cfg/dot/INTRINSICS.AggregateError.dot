digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2056 {
    label = "def <BUILTIN>:INTRINSICS.AggregateError(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2056_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2056_entry_name -> cluster2056_entry [arrowhead=none, color="black", style=dashed]
    cluster2056_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2056_entry -> node11744 [color="black"]
    cluster2056_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2056_exit_name -> cluster2056_exit [arrowhead=none, color="black", style=dashed]
    cluster2056_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11744_name [shape=none, label=<<font color="black">Branch[11744]</font>>]
    node11744_name -> node11744 [arrowhead=none, color="black", style=dashed]
    node11744 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11744 -> node11745 [label=<<font color="black">true</font>> color="black"]
    node11744 -> node11746 [label=<<font color="black">false</font>> color="black"]
    node11745_name [shape=none, label=<<font color="black">Block[11745]</font>>]
    node11745_name -> node11745 [arrowhead=none, color="black", style=dashed]
    node11745 [shape=box, label=<<font color="black">[0] let errors = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11745 -> node11747 [color="black"]
    node11746_name [shape=none, label=<<font color="black">Block[11746]</font>>]
    node11746_name -> node11746 [arrowhead=none, color="black", style=dashed]
    node11746 [shape=box, label=<<font color="black">[0] let errors = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11746 -> node11747 [color="black"]
    node11747_name [shape=none, label=<<font color="black">Branch[11747]</font>>]
    node11747_name -> node11747 [arrowhead=none, color="black", style=dashed]
    node11747 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11747 -> node11748 [label=<<font color="black">true</font>> color="black"]
    node11747 -> node11749 [label=<<font color="black">false</font>> color="black"]
    node11748_name [shape=none, label=<<font color="black">Block[11748]</font>>]
    node11748_name -> node11748 [arrowhead=none, color="black", style=dashed]
    node11748 [shape=box, label=<<font color="black">[0] let message = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11748 -> node11750 [color="black"]
    node11749_name [shape=none, label=<<font color="black">Block[11749]</font>>]
    node11749_name -> node11749 [arrowhead=none, color="black", style=dashed]
    node11749 [shape=box, label=<<font color="black">[0] let message = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11749 -> node11750 [color="black"]
    node11750_name [shape=none, label=<<font color="black">Branch[11750]</font>>]
    node11750_name -> node11750 [arrowhead=none, color="black", style=dashed]
    node11750 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11750 -> node11751 [label=<<font color="black">true</font>> color="black"]
    node11750 -> node11752 [label=<<font color="black">false</font>> color="black"]
    node11751_name [shape=none, label=<<font color="black">Block[11751]</font>>]
    node11751_name -> node11751 [arrowhead=none, color="black", style=dashed]
    node11751 [shape=box, label=<<font color="black">[0] let options = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11751 -> node11753 [color="black"]
    node11752_name [shape=none, label=<<font color="black">Block[11752]</font>>]
    node11752_name -> node11752 [arrowhead=none, color="black", style=dashed]
    node11752 [shape=box, label=<<font color="black">[0] let options = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11752 -> node11753 [color="black"]
    node11753_name [shape=none, label=<<font color="black">Branch[11753]</font>>]
    node11753_name -> node11753 [arrowhead=none, color="black", style=dashed]
    node11753 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white", style=filled]
    node11753 -> node11754 [label=<<font color="black">true</font>> color="black"]
    node11753 -> node11755 [label=<<font color="black">false</font>> color="black"]
    node11754_name [shape=none, label=<<font color="black">Block[11754]</font>>]
    node11754_name -> node11754 [arrowhead=none, color="black", style=dashed]
    node11754 [shape=box, label=<<font color="black">[0] let newTarget = @EXECUTION_STACK[0].Function<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11754 -> node11756 [color="black"]
    node11755_name [shape=none, label=<<font color="black">Block[11755]</font>>]
    node11755_name -> node11755 [arrowhead=none, color="black", style=dashed]
    node11755 [shape=box, label=<<font color="black">[0] let newTarget = NewTarget<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11755 -> node11756 [color="black"]
    node11756_name [shape=none, label=<<font color="black">Call[11756]</font>>]
    node11756_name -> node11756 [arrowhead=none, color="black", style=dashed]
    node11756 [shape=cds, label=<<font color="black">%0 = clo&lt;OrdinaryCreateFromConstructor&gt;(newTarget, &quot;%AggregateError.prototype%&quot;, (new [&quot;ErrorData&quot;])[#922])</font>> color="black" fillcolor="white", style=filled]
    node11756 -> node11757 [color="black"]
    node11757_name [shape=none, label=<<font color="black">Block[11757]</font>>]
    node11757_name -> node11757 [arrowhead=none, color="black", style=dashed]
    node11757 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11757 -> node11758 [color="black"]
    node11758_name [shape=none, label=<<font color="black">Branch[11758]</font>>]
    node11758_name -> node11758 [arrowhead=none, color="black", style=dashed]
    node11758 [shape=diamond, label=<<font color="black">(! (= message undefined))</font>> color="black" fillcolor="white", style=filled]
    node11758 -> node11759 [label=<<font color="black">true</font>> color="black"]
    node11758 -> node11762 [label=<<font color="black">false</font>> color="black"]
    node11759_name [shape=none, label=<<font color="black">Call[11759]</font>>]
    node11759_name -> node11759 [arrowhead=none, color="black", style=dashed]
    node11759 [shape=cds, label=<<font color="black">%1 = clo&lt;ToString&gt;(message)</font>> color="black" fillcolor="white", style=filled]
    node11759 -> node11760 [color="black"]
    node11762_name [shape=none, label=<<font color="black">Call[11762]</font>>]
    node11762_name -> node11762 [arrowhead=none, color="black", style=dashed]
    node11762 [shape=cds, label=<<font color="black">%3 = clo&lt;InstallErrorCause&gt;(O, options)</font>> color="black" fillcolor="white", style=filled]
    node11762 -> node11763 [color="black"]
    node11760_name [shape=none, label=<<font color="black">Block[11760]</font>>]
    node11760_name -> node11760 [arrowhead=none, color="black", style=dashed]
    node11760 [shape=box, label=<<font color="black">[0] let msg = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11760 -> node11761 [color="black"]
    node11763_name [shape=none, label=<<font color="black">Block[11763]</font>>]
    node11763_name -> node11763 [arrowhead=none, color="black", style=dashed]
    node11763 [shape=box, label=<<font color="black">[0] [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11763 -> node11764 [color="black"]
    node11761_name [shape=none, label=<<font color="black">Call[11761]</font>>]
    node11761_name -> node11761 [arrowhead=none, color="black", style=dashed]
    node11761 [shape=cds, label=<<font color="black">%2 = clo&lt;CreateNonEnumerableDataPropertyOrThrow&gt;(O, &quot;message&quot;, msg)</font>> color="black" fillcolor="white", style=filled]
    node11761 -> node11762 [color="black"]
    node11764_name [shape=none, label=<<font color="black">Call[11764]</font>>]
    node11764_name -> node11764 [arrowhead=none, color="black", style=dashed]
    node11764 [shape=cds, label=<<font color="black">%4 = clo&lt;IterableToList&gt;(errors)</font>> color="black" fillcolor="white", style=filled]
    node11764 -> node11765 [color="black"]
    node11765_name [shape=none, label=<<font color="black">Block[11765]</font>>]
    node11765_name -> node11765 [arrowhead=none, color="black", style=dashed]
    node11765 [shape=box, label=<<font color="black">[0] let errorsList = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11765 -> node11766 [color="black"]
    node11766_name [shape=none, label=<<font color="black">Call[11766]</font>>]
    node11766_name -> node11766 [arrowhead=none, color="black", style=dashed]
    node11766 [shape=cds, label=<<font color="black">%5 = clo&lt;CreateArrayFromList&gt;(errorsList)</font>> color="black" fillcolor="white", style=filled]
    node11766 -> node11767 [color="black"]
    node11767_name [shape=none, label=<<font color="black">Call[11767]</font>>]
    node11767_name -> node11767 [arrowhead=none, color="black", style=dashed]
    node11767 [shape=cds, label=<<font color="black">%6 = clo&lt;DefinePropertyOrThrow&gt;(O, &quot;errors&quot;, (new PropertyDescriptor(&quot;Configurable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Writable&quot; -&gt; true, &quot;Value&quot; -&gt; %5))[#923])</font>> color="black" fillcolor="white", style=filled]
    node11767 -> node11768 [color="black"]
    node11768_name [shape=none, label=<<font color="black">Block[11768]</font>>]
    node11768_name -> node11768 [arrowhead=none, color="black", style=dashed]
    node11768 [shape=box, label=<<font color="black">[0] [! %6]<BR ALIGN="LEFT"/>[1] return O<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11768 -> cluster2056_exit [color="black"]
  }
}