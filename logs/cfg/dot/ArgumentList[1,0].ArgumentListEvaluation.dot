digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1279 {
    label = "def <SYNTAX>:ArgumentList[1,0].ArgumentListEvaluation(this: Ast:ArgumentList[1,0]): Normal[List[ESValue]] | Abrupt"
    style = rounded
    cluster1279_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1279_entry_name -> cluster1279_entry [arrowhead=none, color="black", style=dashed]
    cluster1279_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1279_entry -> node5972 [color="black"]
    cluster1279_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1279_exit_name -> cluster1279_exit [arrowhead=none, color="black", style=dashed]
    cluster1279_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node5972_name [shape=none, label=<<font color="black">Block[5972]</font>>]
    node5972_name -> node5972 [arrowhead=none, color="black", style=dashed]
    node5972 [shape=box, label=<<font color="black">[0] let list = (new [])[#577]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5972 -> node5973 [color="black"]
    node5973_name [shape=none, label=<<font color="black">Call[5973]</font>>]
    node5973_name -> node5973 [arrowhead=none, color="black", style=dashed]
    node5973 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node5973 -> node5974 [color="black"]
    node5974_name [shape=none, label=<<font color="black">Block[5974]</font>>]
    node5974_name -> node5974 [arrowhead=none, color="black", style=dashed]
    node5974 [shape=box, label=<<font color="black">[0] let spreadRef = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5974 -> node5975 [color="black"]
    node5975_name [shape=none, label=<<font color="black">Call[5975]</font>>]
    node5975_name -> node5975 [arrowhead=none, color="black", style=dashed]
    node5975 [shape=cds, label=<<font color="black">%1 = clo&lt;GetValue&gt;(spreadRef)</font>> color="black" fillcolor="white", style=filled]
    node5975 -> node5976 [color="black"]
    node5976_name [shape=none, label=<<font color="black">Block[5976]</font>>]
    node5976_name -> node5976 [arrowhead=none, color="black", style=dashed]
    node5976 [shape=box, label=<<font color="black">[0] let spreadObj = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5976 -> node5977 [color="black"]
    node5977_name [shape=none, label=<<font color="black">Call[5977]</font>>]
    node5977_name -> node5977 [arrowhead=none, color="black", style=dashed]
    node5977 [shape=cds, label=<<font color="black">%2 = clo&lt;GetIterator&gt;(spreadObj)</font>> color="black" fillcolor="white", style=filled]
    node5977 -> node5978 [color="black"]
    node5978_name [shape=none, label=<<font color="black">Block[5978]</font>>]
    node5978_name -> node5978 [arrowhead=none, color="black", style=dashed]
    node5978 [shape=box, label=<<font color="black">[0] let iteratorRecord = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5978 -> node5979 [color="black"]
    node5979_name [shape=none, label=<<font color="black">Branch[5979]</font>>]
    node5979_name -> node5979 [arrowhead=none, color="black", style=dashed]
    node5979 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white", style=filled]
    node5979 -> node5980 [label=<<font color="black">true</font>> color="black"]
    node5980_name [shape=none, label=<<font color="black">Call[5980]</font>>]
    node5980_name -> node5980 [arrowhead=none, color="black", style=dashed]
    node5980 [shape=cds, label=<<font color="black">%3 = clo&lt;IteratorStep&gt;(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node5980 -> node5981 [color="black"]
    node5981_name [shape=none, label=<<font color="black">Block[5981]</font>>]
    node5981_name -> node5981 [arrowhead=none, color="black", style=dashed]
    node5981 [shape=box, label=<<font color="black">[0] let next = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5981 -> node5982 [color="black"]
    node5982_name [shape=none, label=<<font color="black">Branch[5982]</font>>]
    node5982_name -> node5982 [arrowhead=none, color="black", style=dashed]
    node5982 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white", style=filled]
    node5982 -> node5983 [label=<<font color="black">true</font>> color="black"]
    node5982 -> node5984 [label=<<font color="black">false</font>> color="black"]
    node5983_name [shape=none, label=<<font color="black">Block[5983]</font>>]
    node5983_name -> node5983 [arrowhead=none, color="black", style=dashed]
    node5983 [shape=box, label=<<font color="black">[0] return list<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5983 -> cluster1279_exit [color="black"]
    node5984_name [shape=none, label=<<font color="black">Call[5984]</font>>]
    node5984_name -> node5984 [arrowhead=none, color="black", style=dashed]
    node5984 [shape=cds, label=<<font color="black">%4 = clo&lt;IteratorValue&gt;(next)</font>> color="black" fillcolor="white", style=filled]
    node5984 -> node5985 [color="black"]
    node5985_name [shape=none, label=<<font color="black">Block[5985]</font>>]
    node5985_name -> node5985 [arrowhead=none, color="black", style=dashed]
    node5985 [shape=box, label=<<font color="black">[0] let nextArg = [? %4]<BR ALIGN="LEFT"/>[1] push list &lt; nextArg<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5985 -> node5979 [color="black"]
  }
}