digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2058 {
    label = "def <BUILTIN>:INTRINSICS.Number(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2058_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2058_entry_name -> cluster2058_entry [arrowhead=none, color="black", style=dashed]
    cluster2058_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2058_entry -> node11778 [color="black"]
    cluster2058_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2058_exit_name -> cluster2058_exit [arrowhead=none, color="black", style=dashed]
    cluster2058_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11778_name [shape=none, label=<<font color="black">Branch[11778]</font>>]
    node11778_name -> node11778 [arrowhead=none, color="black", style=dashed]
    node11778 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11778 -> node11779 [label=<<font color="black">true</font>> color="black"]
    node11778 -> node11780 [label=<<font color="black">false</font>> color="black"]
    node11779_name [shape=none, label=<<font color="black">Block[11779]</font>>]
    node11779_name -> node11779 [arrowhead=none, color="black", style=dashed]
    node11779 [shape=box, label=<<font color="black">[0] let value = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11779 -> node11781 [color="black"]
    node11780_name [shape=none, label=<<font color="black">Block[11780]</font>>]
    node11780_name -> node11780 [arrowhead=none, color="black", style=dashed]
    node11780 [shape=box, label=<<font color="black">[0] let value = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11780 -> node11781 [color="black"]
    node11781_name [shape=none, label=<<font color="black">Branch[11781]</font>>]
    node11781_name -> node11781 [arrowhead=none, color="black", style=dashed]
    node11781 [shape=diamond, label=<<font color="black">(! (= value absent))</font>> color="black" fillcolor="white", style=filled]
    node11781 -> node11782 [label=<<font color="black">true</font>> color="black"]
    node11781 -> node11787 [label=<<font color="black">false</font>> color="black"]
    node11782_name [shape=none, label=<<font color="black">Call[11782]</font>>]
    node11782_name -> node11782 [arrowhead=none, color="black", style=dashed]
    node11782 [shape=cds, label=<<font color="black">%0 = clo&lt;ToNumeric&gt;(value)</font>> color="black" fillcolor="white", style=filled]
    node11782 -> node11783 [color="black"]
    node11787_name [shape=none, label=<<font color="black">Block[11787]</font>>]
    node11787_name -> node11787 [arrowhead=none, color="black", style=dashed]
    node11787 [shape=box, label=<<font color="black">[0] let n = 0.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11787 -> node11788 [color="black"]
    node11783_name [shape=none, label=<<font color="black">Block[11783]</font>>]
    node11783_name -> node11783 [arrowhead=none, color="black", style=dashed]
    node11783 [shape=box, label=<<font color="black">[0] let prim = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11783 -> node11784 [color="black"]
    node11788_name [shape=none, label=<<font color="black">Branch[11788]</font>>]
    node11788_name -> node11788 [arrowhead=none, color="black", style=dashed]
    node11788 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white", style=filled]
    node11788 -> node11789 [label=<<font color="black">true</font>> color="black"]
    node11788 -> node11790 [label=<<font color="black">false</font>> color="black"]
    node11784_name [shape=none, label=<<font color="black">Branch[11784]</font>>]
    node11784_name -> node11784 [arrowhead=none, color="black", style=dashed]
    node11784 [shape=diamond, label=<<font color="black">(= (typeof prim) @BigInt)</font>> color="black" fillcolor="white", style=filled]
    node11784 -> node11785 [label=<<font color="black">true</font>> color="black"]
    node11784 -> node11786 [label=<<font color="black">false</font>> color="black"]
    node11789_name [shape=none, label=<<font color="black">Block[11789]</font>>]
    node11789_name -> node11789 [arrowhead=none, color="black", style=dashed]
    node11789 [shape=box, label=<<font color="black">[0] return n<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11789 -> cluster2058_exit [color="black"]
    node11790_name [shape=none, label=<<font color="black">Call[11790]</font>>]
    node11790_name -> node11790 [arrowhead=none, color="black", style=dashed]
    node11790 [shape=cds, label=<<font color="black">%1 = clo&lt;OrdinaryCreateFromConstructor&gt;(NewTarget, &quot;%Number.prototype%&quot;, (new [&quot;NumberData&quot;])[#924])</font>> color="black" fillcolor="white", style=filled]
    node11790 -> node11791 [color="black"]
    node11785_name [shape=none, label=<<font color="black">Block[11785]</font>>]
    node11785_name -> node11785 [arrowhead=none, color="black", style=dashed]
    node11785 [shape=box, label=<<font color="black">[0] let n = ([number] ([math] prim))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11785 -> node11788 [color="black"]
    node11786_name [shape=none, label=<<font color="black">Block[11786]</font>>]
    node11786_name -> node11786 [arrowhead=none, color="black", style=dashed]
    node11786 [shape=box, label=<<font color="black">[0] let n = prim<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11786 -> node11788 [color="black"]
    node11791_name [shape=none, label=<<font color="black">Block[11791]</font>>]
    node11791_name -> node11791 [arrowhead=none, color="black", style=dashed]
    node11791 [shape=box, label=<<font color="black">[0] let O = [? %1]<BR ALIGN="LEFT"/>[1] O.NumberData = n<BR ALIGN="LEFT"/>[2] return O<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11791 -> cluster2058_exit [color="black"]
  }
}