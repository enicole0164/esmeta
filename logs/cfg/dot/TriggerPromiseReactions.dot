digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2575 {
    label = "def TriggerPromiseReactions(reactions: Unknown["ListOfPromiseReactionRecords"], argument: Unknown): Const[~unused~]"
    style = rounded
    cluster2575_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2575_entry_name -> cluster2575_entry [arrowhead=none, color="black", style=dashed]
    cluster2575_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2575_entry -> node18775 [color="black"]
    cluster2575_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2575_exit_name -> cluster2575_exit [arrowhead=none, color="black", style=dashed]
    cluster2575_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node18775_name [shape=none, label=<<font color="black">Block[18775]</font>>]
    node18775_name -> node18775 [arrowhead=none, color="black", style=dashed]
    node18775 [shape=box, label=<<font color="black">[0] %1 = reactions<BR ALIGN="LEFT"/>[1] %0 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18775 -> node18776 [color="black"]
    node18776_name [shape=none, label=<<font color="black">Branch[18776]</font>>]
    node18776_name -> node18776 [arrowhead=none, color="black", style=dashed]
    node18776 [shape=diamond, label=<<font color="black">(&lt; %0 %1.length)</font>> color="black" fillcolor="white", style=filled]
    node18776 -> node18777 [label=<<font color="black">true</font>> color="black"]
    node18776 -> node18782 [label=<<font color="black">false</font>> color="black"]
    node18777_name [shape=none, label=<<font color="black">Block[18777]</font>>]
    node18777_name -> node18777 [arrowhead=none, color="black", style=dashed]
    node18777 [shape=box, label=<<font color="black">[0] let reaction = %1[%0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18777 -> node18778 [color="black"]
    node18782_name [shape=none, label=<<font color="black">Block[18782]</font>>]
    node18782_name -> node18782 [arrowhead=none, color="black", style=dashed]
    node18782 [shape=box, label=<<font color="black">[0] return ~unused~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18782 -> cluster2575_exit [color="black"]
    node18778_name [shape=none, label=<<font color="black">Call[18778]</font>>]
    node18778_name -> node18778 [arrowhead=none, color="black", style=dashed]
    node18778 [shape=cds, label=<<font color="black">%2 = clo&lt;NewPromiseReactionJob&gt;(reaction, argument)</font>> color="black" fillcolor="white", style=filled]
    node18778 -> node18779 [color="black"]
    node18779_name [shape=none, label=<<font color="black">Block[18779]</font>>]
    node18779_name -> node18779 [arrowhead=none, color="black", style=dashed]
    node18779 [shape=box, label=<<font color="black">[0] let job = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18779 -> node18780 [color="black"]
    node18780_name [shape=none, label=<<font color="black">Call[18780]</font>>]
    node18780_name -> node18780 [arrowhead=none, color="black", style=dashed]
    node18780 [shape=cds, label=<<font color="black">%3 = clo&lt;HostEnqueuePromiseJob&gt;(job.Job, job.Realm)</font>> color="black" fillcolor="white", style=filled]
    node18780 -> node18781 [color="black"]
    node18781_name [shape=none, label=<<font color="black">Block[18781]</font>>]
    node18781_name -> node18781 [arrowhead=none, color="black", style=dashed]
    node18781 [shape=box, label=<<font color="black">[0] %0 = (+ %0 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18781 -> node18776 [color="black"]
  }
}