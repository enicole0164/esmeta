digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2349 {
    label = "def <BUILTIN>:INTRINSICS.Array.prototype.every(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2349_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2349_entry_name -> cluster2349_entry [arrowhead=none, color="black", style=dashed]
    cluster2349_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2349_entry -> node14942 [color="black"]
    cluster2349_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2349_exit_name -> cluster2349_exit [arrowhead=none, color="black", style=dashed]
    cluster2349_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node14942_name [shape=none, label=<<font color="black">Branch[14942]</font>>]
    node14942_name -> node14942 [arrowhead=none, color="black", style=dashed]
    node14942 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node14942 -> node14943 [label=<<font color="black">true</font>> color="black"]
    node14942 -> node14944 [label=<<font color="black">false</font>> color="black"]
    node14943_name [shape=none, label=<<font color="black">Block[14943]</font>>]
    node14943_name -> node14943 [arrowhead=none, color="black", style=dashed]
    node14943 [shape=box, label=<<font color="black">[0] let callbackfn = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14943 -> node14945 [color="black"]
    node14944_name [shape=none, label=<<font color="black">Block[14944]</font>>]
    node14944_name -> node14944 [arrowhead=none, color="black", style=dashed]
    node14944 [shape=box, label=<<font color="black">[0] let callbackfn = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14944 -> node14945 [color="black"]
    node14945_name [shape=none, label=<<font color="black">Branch[14945]</font>>]
    node14945_name -> node14945 [arrowhead=none, color="black", style=dashed]
    node14945 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node14945 -> node14946 [label=<<font color="black">true</font>> color="black"]
    node14945 -> node14947 [label=<<font color="black">false</font>> color="black"]
    node14946_name [shape=none, label=<<font color="black">Block[14946]</font>>]
    node14946_name -> node14946 [arrowhead=none, color="black", style=dashed]
    node14946 [shape=box, label=<<font color="black">[0] let thisArg = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14946 -> node14948 [color="black"]
    node14947_name [shape=none, label=<<font color="black">Block[14947]</font>>]
    node14947_name -> node14947 [arrowhead=none, color="black", style=dashed]
    node14947 [shape=box, label=<<font color="black">[0] let thisArg = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14947 -> node14948 [color="black"]
    node14948_name [shape=none, label=<<font color="black">Call[14948]</font>>]
    node14948_name -> node14948 [arrowhead=none, color="black", style=dashed]
    node14948 [shape=cds, label=<<font color="black">%0 = clo&lt;ToObject&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node14948 -> node14949 [color="black"]
    node14949_name [shape=none, label=<<font color="black">Block[14949]</font>>]
    node14949_name -> node14949 [arrowhead=none, color="black", style=dashed]
    node14949 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14949 -> node14950 [color="black"]
    node14950_name [shape=none, label=<<font color="black">Call[14950]</font>>]
    node14950_name -> node14950 [arrowhead=none, color="black", style=dashed]
    node14950 [shape=cds, label=<<font color="black">%1 = clo&lt;LengthOfArrayLike&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node14950 -> node14951 [color="black"]
    node14951_name [shape=none, label=<<font color="black">Block[14951]</font>>]
    node14951_name -> node14951 [arrowhead=none, color="black", style=dashed]
    node14951 [shape=box, label=<<font color="black">[0] let len = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14951 -> node14952 [color="black"]
    node14952_name [shape=none, label=<<font color="black">Call[14952]</font>>]
    node14952_name -> node14952 [arrowhead=none, color="black", style=dashed]
    node14952 [shape=cds, label=<<font color="black">%2 = clo&lt;IsCallable&gt;(callbackfn)</font>> color="black" fillcolor="white", style=filled]
    node14952 -> node14953 [color="black"]
    node14953_name [shape=none, label=<<font color="black">Branch[14953]</font>>]
    node14953_name -> node14953 [arrowhead=none, color="black", style=dashed]
    node14953 [shape=diamond, label=<<font color="black">(= %2 false)</font>> color="black" fillcolor="white", style=filled]
    node14953 -> node14954 [label=<<font color="black">true</font>> color="black"]
    node14953 -> node14955 [label=<<font color="black">false</font>> color="black"]
    node14954_name [shape=none, label=<<font color="black">Block[14954]</font>>]
    node14954_name -> node14954 [arrowhead=none, color="black", style=dashed]
    node14954 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1019])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14954 -> cluster2349_exit [color="black"]
    node14955_name [shape=none, label=<<font color="black">Block[14955]</font>>]
    node14955_name -> node14955 [arrowhead=none, color="black", style=dashed]
    node14955 [shape=box, label=<<font color="black">[0] let k = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14955 -> node14956 [color="black"]
    node14956_name [shape=none, label=<<font color="black">Branch[14956]</font>>]
    node14956_name -> node14956 [arrowhead=none, color="black", style=dashed]
    node14956 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white", style=filled]
    node14956 -> node14957 [label=<<font color="black">true</font>> color="black"]
    node14956 -> node14970 [label=<<font color="black">false</font>> color="black"]
    node14957_name [shape=none, label=<<font color="black">Call[14957]</font>>]
    node14957_name -> node14957 [arrowhead=none, color="black", style=dashed]
    node14957 [shape=cds, label=<<font color="black">%3 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node14957 -> node14958 [color="black"]
    node14970_name [shape=none, label=<<font color="black">Block[14970]</font>>]
    node14970_name -> node14970 [arrowhead=none, color="black", style=dashed]
    node14970 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14970 -> cluster2349_exit [color="black"]
    node14958_name [shape=none, label=<<font color="black">Block[14958]</font>>]
    node14958_name -> node14958 [arrowhead=none, color="black", style=dashed]
    node14958 [shape=box, label=<<font color="black">[0] let Pk = [! %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14958 -> node14959 [color="black"]
    node14959_name [shape=none, label=<<font color="black">Call[14959]</font>>]
    node14959_name -> node14959 [arrowhead=none, color="black", style=dashed]
    node14959 [shape=cds, label=<<font color="black">%4 = clo&lt;HasProperty&gt;(O, Pk)</font>> color="black" fillcolor="white", style=filled]
    node14959 -> node14960 [color="black"]
    node14960_name [shape=none, label=<<font color="black">Block[14960]</font>>]
    node14960_name -> node14960 [arrowhead=none, color="black", style=dashed]
    node14960 [shape=box, label=<<font color="black">[0] let kPresent = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14960 -> node14961 [color="black"]
    node14961_name [shape=none, label=<<font color="black">Branch[14961]</font>>]
    node14961_name -> node14961 [arrowhead=none, color="black", style=dashed]
    node14961 [shape=diamond, label=<<font color="black">(= kPresent true)</font>> color="black" fillcolor="white", style=filled]
    node14961 -> node14962 [label=<<font color="black">true</font>> color="black"]
    node14961 -> node14969 [label=<<font color="black">false</font>> color="black"]
    node14962_name [shape=none, label=<<font color="black">Call[14962]</font>>]
    node14962_name -> node14962 [arrowhead=none, color="black", style=dashed]
    node14962 [shape=cds, label=<<font color="black">%5 = clo&lt;Get&gt;(O, Pk)</font>> color="black" fillcolor="white", style=filled]
    node14962 -> node14963 [color="black"]
    node14969_name [shape=none, label=<<font color="black">Block[14969]</font>>]
    node14969_name -> node14969 [arrowhead=none, color="black", style=dashed]
    node14969 [shape=box, label=<<font color="black">[0] k = (+ k 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14969 -> node14956 [color="black"]
    node14963_name [shape=none, label=<<font color="black">Block[14963]</font>>]
    node14963_name -> node14963 [arrowhead=none, color="black", style=dashed]
    node14963 [shape=box, label=<<font color="black">[0] let kValue = [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14963 -> node14964 [color="black"]
    node14964_name [shape=none, label=<<font color="black">Call[14964]</font>>]
    node14964_name -> node14964 [arrowhead=none, color="black", style=dashed]
    node14964 [shape=cds, label=<<font color="black">%6 = clo&lt;Call&gt;(callbackfn, thisArg, (new [kValue, ([number] k), O])[#1020])</font>> color="black" fillcolor="white", style=filled]
    node14964 -> node14965 [color="black"]
    node14965_name [shape=none, label=<<font color="black">Call[14965]</font>>]
    node14965_name -> node14965 [arrowhead=none, color="black", style=dashed]
    node14965 [shape=cds, label=<<font color="black">%7 = clo&lt;ToBoolean&gt;([? %6])</font>> color="black" fillcolor="white", style=filled]
    node14965 -> node14966 [color="black"]
    node14966_name [shape=none, label=<<font color="black">Block[14966]</font>>]
    node14966_name -> node14966 [arrowhead=none, color="black", style=dashed]
    node14966 [shape=box, label=<<font color="black">[0] let testResult = %7<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14966 -> node14967 [color="black"]
    node14967_name [shape=none, label=<<font color="black">Branch[14967]</font>>]
    node14967_name -> node14967 [arrowhead=none, color="black", style=dashed]
    node14967 [shape=diamond, label=<<font color="black">(= testResult false)</font>> color="black" fillcolor="white", style=filled]
    node14967 -> node14968 [label=<<font color="black">true</font>> color="black"]
    node14967 -> node14969 [label=<<font color="black">false</font>> color="black"]
    node14968_name [shape=none, label=<<font color="black">Block[14968]</font>>]
    node14968_name -> node14968 [arrowhead=none, color="black", style=dashed]
    node14968 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14968 -> cluster2349_exit [color="black"]
  }
}