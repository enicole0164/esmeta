digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster581 {
    label = "def <SYNTAX>:WithStatement[0,0].ContainsUndefinedBreakTarget(this: Ast:WithStatement[0,0], labelSet: Unknown): Boolean"
    style = rounded
    cluster581_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster581_entry_name -> cluster581_entry [arrowhead=none, color="black", style=dashed]
    cluster581_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster581_entry -> node2592 [color="black"]
    cluster581_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster581_exit_name -> cluster581_exit [arrowhead=none, color="black", style=dashed]
    cluster581_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2592_name [shape=none, label=<<font color="black">Call[2592]</font>>]
    node2592_name -> node2592 [arrowhead=none, color="black", style=dashed]
    node2592 [shape=cds, label=<<font color="black">%0 = this[1]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2592 -> node2593 [color="black"]
    node2593_name [shape=none, label=<<font color="black">Block[2593]</font>>]
    node2593_name -> node2593 [arrowhead=none, color="black", style=dashed]
    node2593 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2593 -> cluster581_exit [color="black"]
  }
}