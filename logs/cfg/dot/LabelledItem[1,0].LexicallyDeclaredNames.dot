digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster272 {
    label = "def <SYNTAX>:LabelledItem[1,0].LexicallyDeclaredNames(this: Ast:LabelledItem[1,0]): List[String]"
    style = rounded
    cluster272_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster272_entry_name -> cluster272_entry [arrowhead=none, color="black", style=dashed]
    cluster272_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster272_entry -> node1745 [color="black"]
    cluster272_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster272_exit_name -> cluster272_exit [arrowhead=none, color="black", style=dashed]
    cluster272_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1745_name [shape=none, label=<<font color="black">Call[1745]</font>>]
    node1745_name -> node1745 [arrowhead=none, color="black", style=dashed]
    node1745 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node1745 -> node1746 [color="black"]
    node1746_name [shape=none, label=<<font color="black">Block[1746]</font>>]
    node1746_name -> node1746 [arrowhead=none, color="black", style=dashed]
    node1746 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1746 -> cluster272_exit [color="black"]
  }
}