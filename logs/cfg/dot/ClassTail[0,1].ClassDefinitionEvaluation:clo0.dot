digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1691 {
    label = "def <BUILTIN-CLO>:ClassTail[0,1].ClassDefinitionEvaluation:clo0(this: Unknown, argumentsList: Unknown, NewTarget: Unknown): Unknown"
    style = rounded
    cluster1691_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1691_entry_name -> cluster1691_entry [arrowhead=none, color="black", style=dashed]
    cluster1691_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1691_entry -> node9123 [color="black"]
    cluster1691_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1691_exit_name -> cluster1691_exit [arrowhead=none, color="black", style=dashed]
    cluster1691_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9123_name [shape=none, label=<<font color="black">Block[9123]</font>>]
    node9123_name -> node9123 [arrowhead=none, color="black", style=dashed]
    node9123 [shape=box, label=<<font color="black">[0] let args = argumentsList<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9123 -> node9124 [color="black"]
    node9124_name [shape=none, label=<<font color="black">Branch[9124]</font>>]
    node9124_name -> node9124 [arrowhead=none, color="black", style=dashed]
    node9124 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white", style=filled]
    node9124 -> node9125 [label=<<font color="black">true</font>> color="black"]
    node9124 -> node9126 [label=<<font color="black">false</font>> color="black"]
    node9125_name [shape=none, label=<<font color="black">Block[9125]</font>>]
    node9125_name -> node9125 [arrowhead=none, color="black", style=dashed]
    node9125 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#707])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9125 -> cluster1691_exit [color="black"]
    node9126_name [shape=none, label=<<font color="black">Block[9126]</font>>]
    node9126_name -> node9126 [arrowhead=none, color="black", style=dashed]
    node9126 [shape=box, label=<<font color="black">[0] let F = @EXECUTION_STACK[0].Function<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9126 -> node9127 [color="black"]
    node9127_name [shape=none, label=<<font color="black">Branch[9127]</font>>]
    node9127_name -> node9127 [arrowhead=none, color="black", style=dashed]
    node9127 [shape=diamond, label=<<font color="black">(= F.ConstructorKind ~derived~)</font>> color="black" fillcolor="white", style=filled]
    node9127 -> node9128 [label=<<font color="black">true</font>> color="black"]
    node9127 -> node9136 [label=<<font color="black">false</font>> color="black"]
    node9128_name [shape=none, label=<<font color="black">Block[9128]</font>>]
    node9128_name -> node9128 [arrowhead=none, color="black", style=dashed]
    node9128 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9128 -> node9129 [color="black"]
    node9136_name [shape=none, label=<<font color="black">Block[9136]</font>>]
    node9136_name -> node9136 [arrowhead=none, color="black", style=dashed]
    node9136 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9136 -> node9137 [color="black"]
    node9129_name [shape=none, label=<<font color="black">Call[9129]</font>>]
    node9129_name -> node9129 [arrowhead=none, color="black", style=dashed]
    node9129 [shape=cds, label=<<font color="black">%0 = F-&gt;GetPrototypeOf()</font>> color="black" fillcolor="white", style=filled]
    node9129 -> node9130 [color="black"]
    node9137_name [shape=none, label=<<font color="black">Call[9137]</font>>]
    node9137_name -> node9137 [arrowhead=none, color="black", style=dashed]
    node9137 [shape=cds, label=<<font color="black">%3 = clo&lt;OrdinaryCreateFromConstructor&gt;(NewTarget, &quot;%Object.prototype%&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9137 -> node9138 [color="black"]
    node9130_name [shape=none, label=<<font color="black">Block[9130]</font>>]
    node9130_name -> node9130 [arrowhead=none, color="black", style=dashed]
    node9130 [shape=box, label=<<font color="black">[0] let func = [! %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9130 -> node9131 [color="black"]
    node9138_name [shape=none, label=<<font color="black">Block[9138]</font>>]
    node9138_name -> node9138 [arrowhead=none, color="black", style=dashed]
    node9138 [shape=box, label=<<font color="black">[0] let result = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9138 -> node9139 [color="black"]
    node9131_name [shape=none, label=<<font color="black">Call[9131]</font>>]
    node9131_name -> node9131 [arrowhead=none, color="black", style=dashed]
    node9131 [shape=cds, label=<<font color="black">%1 = clo&lt;IsConstructor&gt;(func)</font>> color="black" fillcolor="white", style=filled]
    node9131 -> node9132 [color="black"]
    node9139_name [shape=none, label=<<font color="black">Call[9139]</font>>]
    node9139_name -> node9139 [arrowhead=none, color="black", style=dashed]
    node9139 [shape=cds, label=<<font color="black">%4 = clo&lt;InitializeInstanceElements&gt;(result, F)</font>> color="black" fillcolor="white", style=filled]
    node9139 -> node9140 [color="black"]
    node9132_name [shape=none, label=<<font color="black">Branch[9132]</font>>]
    node9132_name -> node9132 [arrowhead=none, color="black", style=dashed]
    node9132 [shape=diamond, label=<<font color="black">(= %1 false)</font>> color="black" fillcolor="white", style=filled]
    node9132 -> node9133 [label=<<font color="black">true</font>> color="black"]
    node9132 -> node9134 [label=<<font color="black">false</font>> color="black"]
    node9140_name [shape=none, label=<<font color="black">Block[9140]</font>>]
    node9140_name -> node9140 [arrowhead=none, color="black", style=dashed]
    node9140 [shape=box, label=<<font color="black">[0] [? %4]<BR ALIGN="LEFT"/>[1] return result<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9140 -> cluster1691_exit [color="black"]
    node9133_name [shape=none, label=<<font color="black">Block[9133]</font>>]
    node9133_name -> node9133 [arrowhead=none, color="black", style=dashed]
    node9133 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#708])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9133 -> cluster1691_exit [color="black"]
    node9134_name [shape=none, label=<<font color="black">Call[9134]</font>>]
    node9134_name -> node9134 [arrowhead=none, color="black", style=dashed]
    node9134 [shape=cds, label=<<font color="black">%2 = clo&lt;Construct&gt;(func, args, NewTarget)</font>> color="black" fillcolor="white", style=filled]
    node9134 -> node9135 [color="black"]
    node9135_name [shape=none, label=<<font color="black">Block[9135]</font>>]
    node9135_name -> node9135 [arrowhead=none, color="black", style=dashed]
    node9135 [shape=box, label=<<font color="black">[0] let result = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9135 -> node9139 [color="black"]
  }
}