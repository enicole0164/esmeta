digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2085 {
    label = "def <BUILTIN>:INTRINSICS.Math.ceil(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2085_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2085_entry_name -> cluster2085_entry [arrowhead=none, color="black", style=dashed]
    cluster2085_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2085_entry -> node12135 [color="black"]
    cluster2085_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2085_exit_name -> cluster2085_exit [arrowhead=none, color="black", style=dashed]
    cluster2085_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node12135_name [shape=none, label=<<font color="black">Branch[12135]</font>>]
    node12135_name -> node12135 [arrowhead=none, color="black", style=dashed]
    node12135 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node12135 -> node12136 [label=<<font color="black">true</font>> color="black"]
    node12135 -> node12137 [label=<<font color="black">false</font>> color="black"]
    node12136_name [shape=none, label=<<font color="black">Block[12136]</font>>]
    node12136_name -> node12136 [arrowhead=none, color="black", style=dashed]
    node12136 [shape=box, label=<<font color="black">[0] let x = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12136 -> node12138 [color="black"]
    node12137_name [shape=none, label=<<font color="black">Block[12137]</font>>]
    node12137_name -> node12137 [arrowhead=none, color="black", style=dashed]
    node12137 [shape=box, label=<<font color="black">[0] let x = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12137 -> node12138 [color="black"]
    node12138_name [shape=none, label=<<font color="black">Call[12138]</font>>]
    node12138_name -> node12138 [arrowhead=none, color="black", style=dashed]
    node12138 [shape=cds, label=<<font color="black">%0 = clo&lt;ToNumber&gt;(x)</font>> color="black" fillcolor="white", style=filled]
    node12138 -> node12139 [color="black"]
    node12139_name [shape=none, label=<<font color="black">Block[12139]</font>>]
    node12139_name -> node12139 [arrowhead=none, color="black", style=dashed]
    node12139 [shape=box, label=<<font color="black">[0] let n = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12139 -> node12140 [color="black"]
    node12140_name [shape=none, label=<<font color="black">Branch[12140]</font>>]
    node12140_name -> node12140 [arrowhead=none, color="black", style=dashed]
    node12140 [shape=diamond, label=<<font color="black">(|| (= n NaN) (|| (= n 0.0f) (|| (= n -0.0f) (|| (= n +INF) (= n -INF)))))</font>> color="black" fillcolor="white", style=filled]
    node12140 -> node12141 [label=<<font color="black">true</font>> color="black"]
    node12140 -> node12142 [label=<<font color="black">false</font>> color="black"]
    node12141_name [shape=none, label=<<font color="black">Block[12141]</font>>]
    node12141_name -> node12141 [arrowhead=none, color="black", style=dashed]
    node12141 [shape=box, label=<<font color="black">[0] return n<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12141 -> cluster2085_exit [color="black"]
    node12142_name [shape=none, label=<<font color="black">Branch[12142]</font>>]
    node12142_name -> node12142 [arrowhead=none, color="black", style=dashed]
    node12142 [shape=diamond, label=<<font color="black">(&amp;&amp; (&lt; n -0.0f) (&lt; -1.0f n))</font>> color="black" fillcolor="white", style=filled]
    node12142 -> node12143 [label=<<font color="black">true</font>> color="black"]
    node12142 -> node12144 [label=<<font color="black">false</font>> color="black"]
    node12143_name [shape=none, label=<<font color="black">Block[12143]</font>>]
    node12143_name -> node12143 [arrowhead=none, color="black", style=dashed]
    node12143 [shape=box, label=<<font color="black">[0] return -0.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12143 -> cluster2085_exit [color="black"]
    node12144_name [shape=none, label=<<font color="black">Branch[12144]</font>>]
    node12144_name -> node12144 [arrowhead=none, color="black", style=dashed]
    node12144 [shape=diamond, label=<<font color="black">(&amp;&amp; (? n: &quot;Number&quot;) (= ([math] n) (floor ([math] n))))</font>> color="black" fillcolor="white", style=filled]
    node12144 -> node12145 [label=<<font color="black">true</font>> color="black"]
    node12144 -> node12146 [label=<<font color="black">false</font>> color="black"]
    node12145_name [shape=none, label=<<font color="black">Block[12145]</font>>]
    node12145_name -> node12145 [arrowhead=none, color="black", style=dashed]
    node12145 [shape=box, label=<<font color="black">[0] return n<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12145 -> cluster2085_exit [color="black"]
    node12146_name [shape=none, label=<<font color="black">Block[12146]</font>>]
    node12146_name -> node12146 [arrowhead=none, color="black", style=dashed]
    node12146 [shape=box, label=<<font color="black">[0] (yet &quot;Return the smallest (closest to -&infin;) integral Number value that is not less than _n_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12146 -> cluster2085_exit [color="black"]
  }
}