digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2365 {
    label = "def <BUILTIN>:INTRINSICS.Array.prototype.push(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2365_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2365_entry_name -> cluster2365_entry [arrowhead=none, color="black", style=dashed]
    cluster2365_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2365_entry -> node15357 [color="black"]
    cluster2365_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2365_exit_name -> cluster2365_exit [arrowhead=none, color="black", style=dashed]
    cluster2365_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node15357_name [shape=none, label=<<font color="black">Block[15357]</font>>]
    node15357_name -> node15357 [arrowhead=none, color="black", style=dashed]
    node15357 [shape=box, label=<<font color="black">[0] let items = argumentsList<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15357 -> node15358 [color="black"]
    node15358_name [shape=none, label=<<font color="black">Call[15358]</font>>]
    node15358_name -> node15358 [arrowhead=none, color="black", style=dashed]
    node15358 [shape=cds, label=<<font color="black">%0 = clo&lt;ToObject&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node15358 -> node15359 [color="black"]
    node15359_name [shape=none, label=<<font color="black">Block[15359]</font>>]
    node15359_name -> node15359 [arrowhead=none, color="black", style=dashed]
    node15359 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15359 -> node15360 [color="black"]
    node15360_name [shape=none, label=<<font color="black">Call[15360]</font>>]
    node15360_name -> node15360 [arrowhead=none, color="black", style=dashed]
    node15360 [shape=cds, label=<<font color="black">%1 = clo&lt;LengthOfArrayLike&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node15360 -> node15361 [color="black"]
    node15361_name [shape=none, label=<<font color="black">Block[15361]</font>>]
    node15361_name -> node15361 [arrowhead=none, color="black", style=dashed]
    node15361 [shape=box, label=<<font color="black">[0] let len = [? %1]<BR ALIGN="LEFT"/>[1] let argCount = items.length<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15361 -> node15362 [color="black"]
    node15362_name [shape=none, label=<<font color="black">Branch[15362]</font>>]
    node15362_name -> node15362 [arrowhead=none, color="black", style=dashed]
    node15362 [shape=diamond, label=<<font color="black">(&lt; (- (** 2 53) 1) (+ len argCount))</font>> color="black" fillcolor="white", style=filled]
    node15362 -> node15363 [label=<<font color="black">true</font>> color="black"]
    node15362 -> node15364 [label=<<font color="black">false</font>> color="black"]
    node15363_name [shape=none, label=<<font color="black">Block[15363]</font>>]
    node15363_name -> node15363 [arrowhead=none, color="black", style=dashed]
    node15363 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1034])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15363 -> cluster2365_exit [color="black"]
    node15364_name [shape=none, label=<<font color="black">Block[15364]</font>>]
    node15364_name -> node15364 [arrowhead=none, color="black", style=dashed]
    node15364 [shape=box, label=<<font color="black">[0] %3 = items<BR ALIGN="LEFT"/>[1] %2 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15364 -> node15365 [color="black"]
    node15365_name [shape=none, label=<<font color="black">Branch[15365]</font>>]
    node15365_name -> node15365 [arrowhead=none, color="black", style=dashed]
    node15365 [shape=diamond, label=<<font color="black">(&lt; %2 %3.length)</font>> color="black" fillcolor="white", style=filled]
    node15365 -> node15366 [label=<<font color="black">true</font>> color="black"]
    node15365 -> node15370 [label=<<font color="black">false</font>> color="black"]
    node15366_name [shape=none, label=<<font color="black">Block[15366]</font>>]
    node15366_name -> node15366 [arrowhead=none, color="black", style=dashed]
    node15366 [shape=box, label=<<font color="black">[0] let E = %3[%2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15366 -> node15367 [color="black"]
    node15370_name [shape=none, label=<<font color="black">Call[15370]</font>>]
    node15370_name -> node15370 [arrowhead=none, color="black", style=dashed]
    node15370 [shape=cds, label=<<font color="black">%6 = clo&lt;Set&gt;(O, &quot;length&quot;, ([number] len), true)</font>> color="black" fillcolor="white", style=filled]
    node15370 -> node15371 [color="black"]
    node15367_name [shape=none, label=<<font color="black">Call[15367]</font>>]
    node15367_name -> node15367 [arrowhead=none, color="black", style=dashed]
    node15367 [shape=cds, label=<<font color="black">%4 = clo&lt;ToString&gt;(([number] len))</font>> color="black" fillcolor="white", style=filled]
    node15367 -> node15368 [color="black"]
    node15371_name [shape=none, label=<<font color="black">Block[15371]</font>>]
    node15371_name -> node15371 [arrowhead=none, color="black", style=dashed]
    node15371 [shape=box, label=<<font color="black">[0] [? %6]<BR ALIGN="LEFT"/>[1] return ([number] len)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15371 -> cluster2365_exit [color="black"]
    node15368_name [shape=none, label=<<font color="black">Call[15368]</font>>]
    node15368_name -> node15368 [arrowhead=none, color="black", style=dashed]
    node15368 [shape=cds, label=<<font color="black">%5 = clo&lt;Set&gt;(O, [! %4], E, true)</font>> color="black" fillcolor="white", style=filled]
    node15368 -> node15369 [color="black"]
    node15369_name [shape=none, label=<<font color="black">Block[15369]</font>>]
    node15369_name -> node15369 [arrowhead=none, color="black", style=dashed]
    node15369 [shape=box, label=<<font color="black">[0] [? %5]<BR ALIGN="LEFT"/>[1] len = (+ len 1)<BR ALIGN="LEFT"/>[2] %2 = (+ %2 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15369 -> node15365 [color="black"]
  }
}