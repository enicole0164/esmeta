digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster989 {
    label = "def <CONC>:ObjectEnvironmentRecord.DeleteBinding(envRec: ObjectEnvironmentRecord, N: String): Normal[Boolean] | Abrupt"
    style = rounded
    cluster989_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster989_entry_name -> cluster989_entry [arrowhead=none, color="black", style=dashed]
    cluster989_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster989_entry -> node3663 [color="black"]
    cluster989_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster989_exit_name -> cluster989_exit [arrowhead=none, color="black", style=dashed]
    cluster989_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3663_name [shape=none, label=<<font color="black">Block[3663]</font>>]
    node3663_name -> node3663 [arrowhead=none, color="black", style=dashed]
    node3663 [shape=box, label=<<font color="black">[0] let bindingObject = envRec.BindingObject<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3663 -> node3664 [color="black"]
    node3664_name [shape=none, label=<<font color="black">Call[3664]</font>>]
    node3664_name -> node3664 [arrowhead=none, color="black", style=dashed]
    node3664 [shape=cds, label=<<font color="black">%0 = bindingObject-&gt;Delete(N)</font>> color="black" fillcolor="white", style=filled]
    node3664 -> node3665 [color="black"]
    node3665_name [shape=none, label=<<font color="black">Block[3665]</font>>]
    node3665_name -> node3665 [arrowhead=none, color="black", style=dashed]
    node3665 [shape=box, label=<<font color="black">[0] return [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3665 -> cluster989_exit [color="black"]
  }
}