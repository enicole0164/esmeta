digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2401 {
    label = "def <BUILTIN>:INTRINSICS.TypedArray.prototype.indexOf(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2401_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2401_entry_name -> cluster2401_entry [arrowhead=none, color="black", style=dashed]
    cluster2401_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2401_entry -> node16233 [color="black"]
    cluster2401_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2401_exit_name -> cluster2401_exit [arrowhead=none, color="black", style=dashed]
    cluster2401_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node16233_name [shape=none, label=<<font color="black">Branch[16233]</font>>]
    node16233_name -> node16233 [arrowhead=none, color="black", style=dashed]
    node16233 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node16233 -> node16234 [label=<<font color="black">true</font>> color="black"]
    node16233 -> node16235 [label=<<font color="black">false</font>> color="black"]
    node16234_name [shape=none, label=<<font color="black">Block[16234]</font>>]
    node16234_name -> node16234 [arrowhead=none, color="black", style=dashed]
    node16234 [shape=box, label=<<font color="black">[0] let searchElement = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16234 -> node16236 [color="black"]
    node16235_name [shape=none, label=<<font color="black">Block[16235]</font>>]
    node16235_name -> node16235 [arrowhead=none, color="black", style=dashed]
    node16235 [shape=box, label=<<font color="black">[0] let searchElement = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16235 -> node16236 [color="black"]
    node16236_name [shape=none, label=<<font color="black">Branch[16236]</font>>]
    node16236_name -> node16236 [arrowhead=none, color="black", style=dashed]
    node16236 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node16236 -> node16237 [label=<<font color="black">true</font>> color="black"]
    node16236 -> node16238 [label=<<font color="black">false</font>> color="black"]
    node16237_name [shape=none, label=<<font color="black">Block[16237]</font>>]
    node16237_name -> node16237 [arrowhead=none, color="black", style=dashed]
    node16237 [shape=box, label=<<font color="black">[0] let fromIndex = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16237 -> node16239 [color="black"]
    node16238_name [shape=none, label=<<font color="black">Block[16238]</font>>]
    node16238_name -> node16238 [arrowhead=none, color="black", style=dashed]
    node16238 [shape=box, label=<<font color="black">[0] let fromIndex = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16238 -> node16239 [color="black"]
    node16239_name [shape=none, label=<<font color="black">Block[16239]</font>>]
    node16239_name -> node16239 [arrowhead=none, color="black", style=dashed]
    node16239 [shape=box, label=<<font color="black">[0] let O = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16239 -> node16240 [color="black"]
    node16240_name [shape=none, label=<<font color="black">Call[16240]</font>>]
    node16240_name -> node16240 [arrowhead=none, color="black", style=dashed]
    node16240 [shape=cds, label=<<font color="black">%0 = clo&lt;ValidateTypedArray&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node16240 -> node16241 [color="black"]
    node16241_name [shape=none, label=<<font color="black">Block[16241]</font>>]
    node16241_name -> node16241 [arrowhead=none, color="black", style=dashed]
    node16241 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/>[1] let len = O.ArrayLength<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16241 -> node16242 [color="black"]
    node16242_name [shape=none, label=<<font color="black">Branch[16242]</font>>]
    node16242_name -> node16242 [arrowhead=none, color="black", style=dashed]
    node16242 [shape=diamond, label=<<font color="black">(= len 0)</font>> color="black" fillcolor="white", style=filled]
    node16242 -> node16243 [label=<<font color="black">true</font>> color="black"]
    node16242 -> node16244 [label=<<font color="black">false</font>> color="black"]
    node16243_name [shape=none, label=<<font color="black">Block[16243]</font>>]
    node16243_name -> node16243 [arrowhead=none, color="black", style=dashed]
    node16243 [shape=box, label=<<font color="black">[0] return -1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16243 -> cluster2401_exit [color="black"]
    node16244_name [shape=none, label=<<font color="black">Call[16244]</font>>]
    node16244_name -> node16244 [arrowhead=none, color="black", style=dashed]
    node16244 [shape=cds, label=<<font color="black">%1 = clo&lt;ToIntegerOrInfinity&gt;(fromIndex)</font>> color="black" fillcolor="white", style=filled]
    node16244 -> node16245 [color="black"]
    node16245_name [shape=none, label=<<font color="black">Block[16245]</font>>]
    node16245_name -> node16245 [arrowhead=none, color="black", style=dashed]
    node16245 [shape=box, label=<<font color="black">[0] let n = [? %1]<BR ALIGN="LEFT"/>[1] assert (|| (! (= fromIndex undefined)) (= n 0))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16245 -> node16246 [color="black"]
    node16246_name [shape=none, label=<<font color="black">Branch[16246]</font>>]
    node16246_name -> node16246 [arrowhead=none, color="black", style=dashed]
    node16246 [shape=diamond, label=<<font color="black">(= n +INF)</font>> color="black" fillcolor="white", style=filled]
    node16246 -> node16247 [label=<<font color="black">true</font>> color="black"]
    node16246 -> node16248 [label=<<font color="black">false</font>> color="black"]
    node16247_name [shape=none, label=<<font color="black">Block[16247]</font>>]
    node16247_name -> node16247 [arrowhead=none, color="black", style=dashed]
    node16247 [shape=box, label=<<font color="black">[0] return -1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16247 -> cluster2401_exit [color="black"]
    node16248_name [shape=none, label=<<font color="black">Branch[16248]</font>>]
    node16248_name -> node16248 [arrowhead=none, color="black", style=dashed]
    node16248 [shape=diamond, label=<<font color="black">(= n -INF)</font>> color="black" fillcolor="white", style=filled]
    node16248 -> node16249 [label=<<font color="black">true</font>> color="black"]
    node16248 -> node16250 [label=<<font color="black">false</font>> color="black"]
    node16249_name [shape=none, label=<<font color="black">Block[16249]</font>>]
    node16249_name -> node16249 [arrowhead=none, color="black", style=dashed]
    node16249 [shape=box, label=<<font color="black">[0] n = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16249 -> node16250 [color="black"]
    node16250_name [shape=none, label=<<font color="black">Branch[16250]</font>>]
    node16250_name -> node16250 [arrowhead=none, color="black", style=dashed]
    node16250 [shape=diamond, label=<<font color="black">(! (&lt; n 0))</font>> color="black" fillcolor="white", style=filled]
    node16250 -> node16251 [label=<<font color="black">true</font>> color="black"]
    node16250 -> node16252 [label=<<font color="black">false</font>> color="black"]
    node16251_name [shape=none, label=<<font color="black">Block[16251]</font>>]
    node16251_name -> node16251 [arrowhead=none, color="black", style=dashed]
    node16251 [shape=box, label=<<font color="black">[0] let k = n<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16251 -> node16255 [color="black"]
    node16252_name [shape=none, label=<<font color="black">Block[16252]</font>>]
    node16252_name -> node16252 [arrowhead=none, color="black", style=dashed]
    node16252 [shape=box, label=<<font color="black">[0] let k = (+ len n)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16252 -> node16253 [color="black"]
    node16255_name [shape=none, label=<<font color="black">Branch[16255]</font>>]
    node16255_name -> node16255 [arrowhead=none, color="black", style=dashed]
    node16255 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white", style=filled]
    node16255 -> node16256 [label=<<font color="black">true</font>> color="black"]
    node16255 -> node16268 [label=<<font color="black">false</font>> color="black"]
    node16253_name [shape=none, label=<<font color="black">Branch[16253]</font>>]
    node16253_name -> node16253 [arrowhead=none, color="black", style=dashed]
    node16253 [shape=diamond, label=<<font color="black">(&lt; k 0)</font>> color="black" fillcolor="white", style=filled]
    node16253 -> node16254 [label=<<font color="black">true</font>> color="black"]
    node16253 -> node16255 [label=<<font color="black">false</font>> color="black"]
    node16256_name [shape=none, label=<<font color="black">Call[16256]</font>>]
    node16256_name -> node16256 [arrowhead=none, color="black", style=dashed]
    node16256 [shape=cds, label=<<font color="black">%2 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node16256 -> node16257 [color="black"]
    node16268_name [shape=none, label=<<font color="black">Block[16268]</font>>]
    node16268_name -> node16268 [arrowhead=none, color="black", style=dashed]
    node16268 [shape=box, label=<<font color="black">[0] return -1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16268 -> cluster2401_exit [color="black"]
    node16254_name [shape=none, label=<<font color="black">Block[16254]</font>>]
    node16254_name -> node16254 [arrowhead=none, color="black", style=dashed]
    node16254 [shape=box, label=<<font color="black">[0] k = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16254 -> node16255 [color="black"]
    node16257_name [shape=none, label=<<font color="black">Call[16257]</font>>]
    node16257_name -> node16257 [arrowhead=none, color="black", style=dashed]
    node16257 [shape=cds, label=<<font color="black">%3 = clo&lt;HasProperty&gt;(O, [! %2])</font>> color="black" fillcolor="white", style=filled]
    node16257 -> node16258 [color="black"]
    node16258_name [shape=none, label=<<font color="black">Block[16258]</font>>]
    node16258_name -> node16258 [arrowhead=none, color="black", style=dashed]
    node16258 [shape=box, label=<<font color="black">[0] let kPresent = [! %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16258 -> node16259 [color="black"]
    node16259_name [shape=none, label=<<font color="black">Branch[16259]</font>>]
    node16259_name -> node16259 [arrowhead=none, color="black", style=dashed]
    node16259 [shape=diamond, label=<<font color="black">(= kPresent true)</font>> color="black" fillcolor="white", style=filled]
    node16259 -> node16260 [label=<<font color="black">true</font>> color="black"]
    node16259 -> node16267 [label=<<font color="black">false</font>> color="black"]
    node16260_name [shape=none, label=<<font color="black">Call[16260]</font>>]
    node16260_name -> node16260 [arrowhead=none, color="black", style=dashed]
    node16260 [shape=cds, label=<<font color="black">%4 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node16260 -> node16261 [color="black"]
    node16267_name [shape=none, label=<<font color="black">Block[16267]</font>>]
    node16267_name -> node16267 [arrowhead=none, color="black", style=dashed]
    node16267 [shape=box, label=<<font color="black">[0] k = (+ k 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16267 -> node16255 [color="black"]
    node16261_name [shape=none, label=<<font color="black">Call[16261]</font>>]
    node16261_name -> node16261 [arrowhead=none, color="black", style=dashed]
    node16261 [shape=cds, label=<<font color="black">%5 = clo&lt;Get&gt;(O, [! %4])</font>> color="black" fillcolor="white", style=filled]
    node16261 -> node16262 [color="black"]
    node16262_name [shape=none, label=<<font color="black">Block[16262]</font>>]
    node16262_name -> node16262 [arrowhead=none, color="black", style=dashed]
    node16262 [shape=box, label=<<font color="black">[0] let elementK = [! %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16262 -> node16263 [color="black"]
    node16263_name [shape=none, label=<<font color="black">Call[16263]</font>>]
    node16263_name -> node16263 [arrowhead=none, color="black", style=dashed]
    node16263 [shape=cds, label=<<font color="black">%6 = clo&lt;IsStrictlyEqual&gt;(searchElement, elementK)</font>> color="black" fillcolor="white", style=filled]
    node16263 -> node16264 [color="black"]
    node16264_name [shape=none, label=<<font color="black">Block[16264]</font>>]
    node16264_name -> node16264 [arrowhead=none, color="black", style=dashed]
    node16264 [shape=box, label=<<font color="black">[0] let same = %6<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16264 -> node16265 [color="black"]
    node16265_name [shape=none, label=<<font color="black">Branch[16265]</font>>]
    node16265_name -> node16265 [arrowhead=none, color="black", style=dashed]
    node16265 [shape=diamond, label=<<font color="black">(= same true)</font>> color="black" fillcolor="white", style=filled]
    node16265 -> node16266 [label=<<font color="black">true</font>> color="black"]
    node16265 -> node16267 [label=<<font color="black">false</font>> color="black"]
    node16266_name [shape=none, label=<<font color="black">Block[16266]</font>>]
    node16266_name -> node16266 [arrowhead=none, color="black", style=dashed]
    node16266 [shape=box, label=<<font color="black">[0] return ([number] k)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16266 -> cluster2401_exit [color="black"]
  }
}