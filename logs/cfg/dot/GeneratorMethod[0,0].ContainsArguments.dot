digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1676 {
    label = "def <SYNTAX>:GeneratorMethod[0,0].ContainsArguments(this: Ast:GeneratorMethod[0,0]): Boolean"
    style = rounded
    cluster1676_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1676_entry_name -> cluster1676_entry [arrowhead=none, color="black", style=dashed]
    cluster1676_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1676_entry -> node8932 [color="black"]
    cluster1676_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1676_exit_name -> cluster1676_exit [arrowhead=none, color="black", style=dashed]
    cluster1676_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8932_name [shape=none, label=<<font color="black">Call[8932]</font>>]
    node8932_name -> node8932 [arrowhead=none, color="black", style=dashed]
    node8932 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;ContainsArguments()</font>> color="black" fillcolor="white", style=filled]
    node8932 -> node8933 [color="black"]
    node8933_name [shape=none, label=<<font color="black">Block[8933]</font>>]
    node8933_name -> node8933 [arrowhead=none, color="black", style=dashed]
    node8933 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8933 -> cluster1676_exit [color="black"]
  }
}