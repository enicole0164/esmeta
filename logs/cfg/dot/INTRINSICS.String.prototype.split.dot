digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2191 {
    label = "def <BUILTIN>:INTRINSICS.String.prototype.split(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2191_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2191_entry_name -> cluster2191_entry [arrowhead=none, color="black", style=dashed]
    cluster2191_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2191_entry -> node13701 [color="black"]
    cluster2191_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2191_exit_name -> cluster2191_exit [arrowhead=none, color="black", style=dashed]
    cluster2191_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node13701_name [shape=none, label=<<font color="black">Branch[13701]</font>>]
    node13701_name -> node13701 [arrowhead=none, color="black", style=dashed]
    node13701 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node13701 -> node13702 [label=<<font color="black">true</font>> color="black"]
    node13701 -> node13703 [label=<<font color="black">false</font>> color="black"]
    node13702_name [shape=none, label=<<font color="black">Block[13702]</font>>]
    node13702_name -> node13702 [arrowhead=none, color="black", style=dashed]
    node13702 [shape=box, label=<<font color="black">[0] let separator = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13702 -> node13704 [color="black"]
    node13703_name [shape=none, label=<<font color="black">Block[13703]</font>>]
    node13703_name -> node13703 [arrowhead=none, color="black", style=dashed]
    node13703 [shape=box, label=<<font color="black">[0] let separator = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13703 -> node13704 [color="black"]
    node13704_name [shape=none, label=<<font color="black">Branch[13704]</font>>]
    node13704_name -> node13704 [arrowhead=none, color="black", style=dashed]
    node13704 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node13704 -> node13705 [label=<<font color="black">true</font>> color="black"]
    node13704 -> node13706 [label=<<font color="black">false</font>> color="black"]
    node13705_name [shape=none, label=<<font color="black">Block[13705]</font>>]
    node13705_name -> node13705 [arrowhead=none, color="black", style=dashed]
    node13705 [shape=box, label=<<font color="black">[0] let limit = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13705 -> node13707 [color="black"]
    node13706_name [shape=none, label=<<font color="black">Block[13706]</font>>]
    node13706_name -> node13706 [arrowhead=none, color="black", style=dashed]
    node13706 [shape=box, label=<<font color="black">[0] let limit = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13706 -> node13707 [color="black"]
    node13707_name [shape=none, label=<<font color="black">Call[13707]</font>>]
    node13707_name -> node13707 [arrowhead=none, color="black", style=dashed]
    node13707 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireObjectCoercible&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node13707 -> node13708 [color="black"]
    node13708_name [shape=none, label=<<font color="black">Block[13708]</font>>]
    node13708_name -> node13708 [arrowhead=none, color="black", style=dashed]
    node13708 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13708 -> node13709 [color="black"]
    node13709_name [shape=none, label=<<font color="black">Branch[13709]</font>>]
    node13709_name -> node13709 [arrowhead=none, color="black", style=dashed]
    node13709 [shape=diamond, label=<<font color="black">(! (|| (= separator undefined) (= separator null)))</font>> color="black" fillcolor="white", style=filled]
    node13709 -> node13710 [label=<<font color="black">true</font>> color="black"]
    node13709 -> node13715 [label=<<font color="black">false</font>> color="black"]
    node13710_name [shape=none, label=<<font color="black">Call[13710]</font>>]
    node13710_name -> node13710 [arrowhead=none, color="black", style=dashed]
    node13710 [shape=cds, label=<<font color="black">%1 = clo&lt;GetMethod&gt;(separator, @SYMBOL.split)</font>> color="black" fillcolor="white", style=filled]
    node13710 -> node13711 [color="black"]
    node13715_name [shape=none, label=<<font color="black">Call[13715]</font>>]
    node13715_name -> node13715 [arrowhead=none, color="black", style=dashed]
    node13715 [shape=cds, label=<<font color="black">%3 = clo&lt;ToString&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node13715 -> node13716 [color="black"]
    node13711_name [shape=none, label=<<font color="black">Block[13711]</font>>]
    node13711_name -> node13711 [arrowhead=none, color="black", style=dashed]
    node13711 [shape=box, label=<<font color="black">[0] let splitter = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13711 -> node13712 [color="black"]
    node13716_name [shape=none, label=<<font color="black">Block[13716]</font>>]
    node13716_name -> node13716 [arrowhead=none, color="black", style=dashed]
    node13716 [shape=box, label=<<font color="black">[0] let S = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13716 -> node13717 [color="black"]
    node13712_name [shape=none, label=<<font color="black">Branch[13712]</font>>]
    node13712_name -> node13712 [arrowhead=none, color="black", style=dashed]
    node13712 [shape=diamond, label=<<font color="black">(! (= splitter undefined))</font>> color="black" fillcolor="white", style=filled]
    node13712 -> node13713 [label=<<font color="black">true</font>> color="black"]
    node13712 -> node13715 [label=<<font color="black">false</font>> color="black"]
    node13717_name [shape=none, label=<<font color="black">Branch[13717]</font>>]
    node13717_name -> node13717 [arrowhead=none, color="black", style=dashed]
    node13717 [shape=diamond, label=<<font color="black">(= limit undefined)</font>> color="black" fillcolor="white", style=filled]
    node13717 -> node13718 [label=<<font color="black">true</font>> color="black"]
    node13717 -> node13719 [label=<<font color="black">false</font>> color="black"]
    node13713_name [shape=none, label=<<font color="black">Call[13713]</font>>]
    node13713_name -> node13713 [arrowhead=none, color="black", style=dashed]
    node13713 [shape=cds, label=<<font color="black">%2 = clo&lt;Call&gt;(splitter, separator, (new [O, limit])[#966])</font>> color="black" fillcolor="white", style=filled]
    node13713 -> node13714 [color="black"]
    node13718_name [shape=none, label=<<font color="black">Block[13718]</font>>]
    node13718_name -> node13718 [arrowhead=none, color="black", style=dashed]
    node13718 [shape=box, label=<<font color="black">[0] let lim = (- (** 2 32) 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13718 -> node13721 [color="black"]
    node13719_name [shape=none, label=<<font color="black">Call[13719]</font>>]
    node13719_name -> node13719 [arrowhead=none, color="black", style=dashed]
    node13719 [shape=cds, label=<<font color="black">%4 = clo&lt;ToUint32&gt;(limit)</font>> color="black" fillcolor="white", style=filled]
    node13719 -> node13720 [color="black"]
    node13714_name [shape=none, label=<<font color="black">Block[13714]</font>>]
    node13714_name -> node13714 [arrowhead=none, color="black", style=dashed]
    node13714 [shape=box, label=<<font color="black">[0] return [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13714 -> cluster2191_exit [color="black"]
    node13721_name [shape=none, label=<<font color="black">Call[13721]</font>>]
    node13721_name -> node13721 [arrowhead=none, color="black", style=dashed]
    node13721 [shape=cds, label=<<font color="black">%5 = clo&lt;ToString&gt;(separator)</font>> color="black" fillcolor="white", style=filled]
    node13721 -> node13722 [color="black"]
    node13720_name [shape=none, label=<<font color="black">Block[13720]</font>>]
    node13720_name -> node13720 [arrowhead=none, color="black", style=dashed]
    node13720 [shape=box, label=<<font color="black">[0] let lim = ([math] [? %4])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13720 -> node13721 [color="black"]
    node13722_name [shape=none, label=<<font color="black">Block[13722]</font>>]
    node13722_name -> node13722 [arrowhead=none, color="black", style=dashed]
    node13722 [shape=box, label=<<font color="black">[0] let R = [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13722 -> node13723 [color="black"]
    node13723_name [shape=none, label=<<font color="black">Branch[13723]</font>>]
    node13723_name -> node13723 [arrowhead=none, color="black", style=dashed]
    node13723 [shape=diamond, label=<<font color="black">(== lim 0)</font>> color="black" fillcolor="white", style=filled]
    node13723 -> node13724 [label=<<font color="black">true</font>> color="black"]
    node13723 -> node13726 [label=<<font color="black">false</font>> color="black"]
    node13724_name [shape=none, label=<<font color="black">Call[13724]</font>>]
    node13724_name -> node13724 [arrowhead=none, color="black", style=dashed]
    node13724 [shape=cds, label=<<font color="black">%6 = clo&lt;CreateArrayFromList&gt;((new [])[#967])</font>> color="black" fillcolor="white", style=filled]
    node13724 -> node13725 [color="black"]
    node13726_name [shape=none, label=<<font color="black">Branch[13726]</font>>]
    node13726_name -> node13726 [arrowhead=none, color="black", style=dashed]
    node13726 [shape=diamond, label=<<font color="black">(= separator undefined)</font>> color="black" fillcolor="white", style=filled]
    node13726 -> node13727 [label=<<font color="black">true</font>> color="black"]
    node13726 -> node13729 [label=<<font color="black">false</font>> color="black"]
    node13725_name [shape=none, label=<<font color="black">Block[13725]</font>>]
    node13725_name -> node13725 [arrowhead=none, color="black", style=dashed]
    node13725 [shape=box, label=<<font color="black">[0] return %6<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13725 -> cluster2191_exit [color="black"]
    node13727_name [shape=none, label=<<font color="black">Call[13727]</font>>]
    node13727_name -> node13727 [arrowhead=none, color="black", style=dashed]
    node13727 [shape=cds, label=<<font color="black">%7 = clo&lt;CreateArrayFromList&gt;((new [S])[#968])</font>> color="black" fillcolor="white", style=filled]
    node13727 -> node13728 [color="black"]
    node13729_name [shape=none, label=<<font color="black">Block[13729]</font>>]
    node13729_name -> node13729 [arrowhead=none, color="black", style=dashed]
    node13729 [shape=box, label=<<font color="black">[0] let separatorLength = R.length<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13729 -> node13730 [color="black"]
    node13728_name [shape=none, label=<<font color="black">Block[13728]</font>>]
    node13728_name -> node13728 [arrowhead=none, color="black", style=dashed]
    node13728 [shape=box, label=<<font color="black">[0] return %7<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13728 -> cluster2191_exit [color="black"]
    node13730_name [shape=none, label=<<font color="black">Branch[13730]</font>>]
    node13730_name -> node13730 [arrowhead=none, color="black", style=dashed]
    node13730 [shape=diamond, label=<<font color="black">(= separatorLength 0)</font>> color="black" fillcolor="white", style=filled]
    node13730 -> node13731 [label=<<font color="black">true</font>> color="black"]
    node13730 -> node13734 [label=<<font color="black">false</font>> color="black"]
    node13731_name [shape=none, label=<<font color="black">Block[13731]</font>>]
    node13731_name -> node13731 [arrowhead=none, color="black", style=dashed]
    node13731 [shape=box, label=<<font color="black">[0] let head = (substring S 0 lim)<BR ALIGN="LEFT"/>[1] (yet &quot;Let _codeUnits_ be a List consisting of the sequence of code units that are the elements of _head_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13731 -> node13732 [color="black"]
    node13734_name [shape=none, label=<<font color="black">Branch[13734]</font>>]
    node13734_name -> node13734 [arrowhead=none, color="black", style=dashed]
    node13734 [shape=diamond, label=<<font color="black">(= S &quot;&quot;)</font>> color="black" fillcolor="white", style=filled]
    node13734 -> node13735 [label=<<font color="black">true</font>> color="black"]
    node13734 -> node13737 [label=<<font color="black">false</font>> color="black"]
    node13732_name [shape=none, label=<<font color="black">Call[13732]</font>>]
    node13732_name -> node13732 [arrowhead=none, color="black", style=dashed]
    node13732 [shape=cds, label=<<font color="black">%8 = clo&lt;CreateArrayFromList&gt;(codeUnits)</font>> color="black" fillcolor="white", style=filled]
    node13732 -> node13733 [color="black"]
    node13735_name [shape=none, label=<<font color="black">Call[13735]</font>>]
    node13735_name -> node13735 [arrowhead=none, color="black", style=dashed]
    node13735 [shape=cds, label=<<font color="black">%9 = clo&lt;CreateArrayFromList&gt;((new [S])[#969])</font>> color="black" fillcolor="white", style=filled]
    node13735 -> node13736 [color="black"]
    node13737_name [shape=none, label=<<font color="black">Block[13737]</font>>]
    node13737_name -> node13737 [arrowhead=none, color="black", style=dashed]
    node13737 [shape=box, label=<<font color="black">[0] let substrings = (new [])[#970]<BR ALIGN="LEFT"/>[1] let i = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13737 -> node13738 [color="black"]
    node13733_name [shape=none, label=<<font color="black">Block[13733]</font>>]
    node13733_name -> node13733 [arrowhead=none, color="black", style=dashed]
    node13733 [shape=box, label=<<font color="black">[0] return %8<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13733 -> cluster2191_exit [color="black"]
    node13736_name [shape=none, label=<<font color="black">Block[13736]</font>>]
    node13736_name -> node13736 [arrowhead=none, color="black", style=dashed]
    node13736 [shape=box, label=<<font color="black">[0] return %9<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13736 -> cluster2191_exit [color="black"]
    node13738_name [shape=none, label=<<font color="black">Call[13738]</font>>]
    node13738_name -> node13738 [arrowhead=none, color="black", style=dashed]
    node13738 [shape=cds, label=<<font color="black">%10 = clo&lt;StringIndexOf&gt;(S, R, 0)</font>> color="black" fillcolor="white", style=filled]
    node13738 -> node13739 [color="black"]
    node13739_name [shape=none, label=<<font color="black">Block[13739]</font>>]
    node13739_name -> node13739 [arrowhead=none, color="black", style=dashed]
    node13739 [shape=box, label=<<font color="black">[0] let j = %10<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13739 -> node13740 [color="black"]
    node13740_name [shape=none, label=<<font color="black">Branch[13740]</font>>]
    node13740_name -> node13740 [arrowhead=none, color="black", style=dashed]
    node13740 [shape=diamond, label=<<font color="black">(! (= j (- 1)))</font>> color="black" fillcolor="white", style=filled]
    node13740 -> node13741 [label=<<font color="black">true</font>> color="black"]
    node13740 -> node13748 [label=<<font color="black">false</font>> color="black"]
    node13741_name [shape=none, label=<<font color="black">Block[13741]</font>>]
    node13741_name -> node13741 [arrowhead=none, color="black", style=dashed]
    node13741 [shape=box, label=<<font color="black">[0] let T = (substring S i j)<BR ALIGN="LEFT"/>[1] push substrings &lt; T<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13741 -> node13742 [color="black"]
    node13748_name [shape=none, label=<<font color="black">Block[13748]</font>>]
    node13748_name -> node13748 [arrowhead=none, color="black", style=dashed]
    node13748 [shape=box, label=<<font color="black">[0] let T = (substring S i)<BR ALIGN="LEFT"/>[1] push substrings &lt; T<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13748 -> node13749 [color="black"]
    node13742_name [shape=none, label=<<font color="black">Branch[13742]</font>>]
    node13742_name -> node13742 [arrowhead=none, color="black", style=dashed]
    node13742 [shape=diamond, label=<<font color="black">(= substrings.length lim)</font>> color="black" fillcolor="white", style=filled]
    node13742 -> node13743 [label=<<font color="black">true</font>> color="black"]
    node13742 -> node13745 [label=<<font color="black">false</font>> color="black"]
    node13749_name [shape=none, label=<<font color="black">Call[13749]</font>>]
    node13749_name -> node13749 [arrowhead=none, color="black", style=dashed]
    node13749 [shape=cds, label=<<font color="black">%13 = clo&lt;CreateArrayFromList&gt;(substrings)</font>> color="black" fillcolor="white", style=filled]
    node13749 -> node13750 [color="black"]
    node13743_name [shape=none, label=<<font color="black">Call[13743]</font>>]
    node13743_name -> node13743 [arrowhead=none, color="black", style=dashed]
    node13743 [shape=cds, label=<<font color="black">%11 = clo&lt;CreateArrayFromList&gt;(substrings)</font>> color="black" fillcolor="white", style=filled]
    node13743 -> node13744 [color="black"]
    node13745_name [shape=none, label=<<font color="black">Block[13745]</font>>]
    node13745_name -> node13745 [arrowhead=none, color="black", style=dashed]
    node13745 [shape=box, label=<<font color="black">[0] i = (+ j separatorLength)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13745 -> node13746 [color="black"]
    node13750_name [shape=none, label=<<font color="black">Block[13750]</font>>]
    node13750_name -> node13750 [arrowhead=none, color="black", style=dashed]
    node13750 [shape=box, label=<<font color="black">[0] return %13<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13750 -> cluster2191_exit [color="black"]
    node13744_name [shape=none, label=<<font color="black">Block[13744]</font>>]
    node13744_name -> node13744 [arrowhead=none, color="black", style=dashed]
    node13744 [shape=box, label=<<font color="black">[0] return %11<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13744 -> cluster2191_exit [color="black"]
    node13746_name [shape=none, label=<<font color="black">Call[13746]</font>>]
    node13746_name -> node13746 [arrowhead=none, color="black", style=dashed]
    node13746 [shape=cds, label=<<font color="black">%12 = clo&lt;StringIndexOf&gt;(S, R, i)</font>> color="black" fillcolor="white", style=filled]
    node13746 -> node13747 [color="black"]
    node13747_name [shape=none, label=<<font color="black">Block[13747]</font>>]
    node13747_name -> node13747 [arrowhead=none, color="black", style=dashed]
    node13747 [shape=box, label=<<font color="black">[0] j = %12<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13747 -> node13740 [color="black"]
  }
}