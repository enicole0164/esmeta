digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster210 {
    label = "def <SYNTAX>:ArrowParameters[1,0].BoundNames(this: Ast:ArrowParameters[1,0]): List[String]"
    style = rounded
    cluster210_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster210_entry_name -> cluster210_entry [arrowhead=none, color="black", style=dashed]
    cluster210_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster210_entry -> node1596 [color="black"]
    cluster210_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster210_exit_name -> cluster210_exit [arrowhead=none, color="black", style=dashed]
    cluster210_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1596_name [shape=none, label=<<font color="black">Block[1596]</font>>]
    node1596_name -> node1596 [arrowhead=none, color="black", style=dashed]
    node1596 [shape=box, label=<<font color="black">[0] let formals = (parse this[0] (nt |ArrowFormalParameters|[]))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1596 -> node1597 [color="black"]
    node1597_name [shape=none, label=<<font color="black">Call[1597]</font>>]
    node1597_name -> node1597 [arrowhead=none, color="black", style=dashed]
    node1597 [shape=cds, label=<<font color="black">%0 = formals-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node1597 -> node1598 [color="black"]
    node1598_name [shape=none, label=<<font color="black">Block[1598]</font>>]
    node1598_name -> node1598 [arrowhead=none, color="black", style=dashed]
    node1598 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1598 -> cluster210_exit [color="black"]
  }
}