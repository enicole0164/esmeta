digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1270 {
    label = "def <SYNTAX>:CallExpression[3,0].Evaluation(this: Ast:CallExpression[3,0]): Unknown"
    style = rounded
    cluster1270_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1270_entry_name -> cluster1270_entry [arrowhead=none, color="black", style=dashed]
    cluster1270_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1270_entry -> node5886 [color="black"]
    cluster1270_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1270_exit_name -> cluster1270_exit [arrowhead=none, color="black", style=dashed]
    cluster1270_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node5886_name [shape=none, label=<<font color="black">Call[5886]</font>>]
    node5886_name -> node5886 [arrowhead=none, color="black", style=dashed]
    node5886 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node5886 -> node5887 [color="black"]
    node5887_name [shape=none, label=<<font color="black">Block[5887]</font>>]
    node5887_name -> node5887 [arrowhead=none, color="black", style=dashed]
    node5887 [shape=box, label=<<font color="black">[0] let ref = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5887 -> node5888 [color="black"]
    node5888_name [shape=none, label=<<font color="black">Call[5888]</font>>]
    node5888_name -> node5888 [arrowhead=none, color="black", style=dashed]
    node5888 [shape=cds, label=<<font color="black">%1 = clo&lt;GetValue&gt;(ref)</font>> color="black" fillcolor="white", style=filled]
    node5888 -> node5889 [color="black"]
    node5889_name [shape=none, label=<<font color="black">Block[5889]</font>>]
    node5889_name -> node5889 [arrowhead=none, color="black", style=dashed]
    node5889 [shape=box, label=<<font color="black">[0] let func = [? %1]<BR ALIGN="LEFT"/>[1] let thisCall = this[0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5889 -> node5890 [color="black"]
    node5890_name [shape=none, label=<<font color="black">Call[5890]</font>>]
    node5890_name -> node5890 [arrowhead=none, color="black", style=dashed]
    node5890 [shape=cds, label=<<font color="black">%2 = clo&lt;IsInTailPosition&gt;(thisCall)</font>> color="black" fillcolor="white", style=filled]
    node5890 -> node5891 [color="black"]
    node5891_name [shape=none, label=<<font color="black">Block[5891]</font>>]
    node5891_name -> node5891 [arrowhead=none, color="black", style=dashed]
    node5891 [shape=box, label=<<font color="black">[0] let tailCall = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5891 -> node5892 [color="black"]
    node5892_name [shape=none, label=<<font color="black">Call[5892]</font>>]
    node5892_name -> node5892 [arrowhead=none, color="black", style=dashed]
    node5892 [shape=cds, label=<<font color="black">%3 = clo&lt;EvaluateCall&gt;(func, ref, this[1], tailCall)</font>> color="black" fillcolor="white", style=filled]
    node5892 -> node5893 [color="black"]
    node5893_name [shape=none, label=<<font color="black">Block[5893]</font>>]
    node5893_name -> node5893 [arrowhead=none, color="black", style=dashed]
    node5893 [shape=box, label=<<font color="black">[0] return [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5893 -> cluster1270_exit [color="black"]
  }
}