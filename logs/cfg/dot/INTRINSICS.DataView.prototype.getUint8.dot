digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2507 {
    label = "def <BUILTIN>:INTRINSICS.DataView.prototype.getUint8(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2507_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2507_entry_name -> cluster2507_entry [arrowhead=none, color="black", style=dashed]
    cluster2507_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2507_entry -> node17776 [color="black"]
    cluster2507_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2507_exit_name -> cluster2507_exit [arrowhead=none, color="black", style=dashed]
    cluster2507_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17776_name [shape=none, label=<<font color="black">Branch[17776]</font>>]
    node17776_name -> node17776 [arrowhead=none, color="black", style=dashed]
    node17776 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node17776 -> node17777 [label=<<font color="black">true</font>> color="black"]
    node17776 -> node17778 [label=<<font color="black">false</font>> color="black"]
    node17777_name [shape=none, label=<<font color="black">Block[17777]</font>>]
    node17777_name -> node17777 [arrowhead=none, color="black", style=dashed]
    node17777 [shape=box, label=<<font color="black">[0] let byteOffset = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17777 -> node17779 [color="black"]
    node17778_name [shape=none, label=<<font color="black">Block[17778]</font>>]
    node17778_name -> node17778 [arrowhead=none, color="black", style=dashed]
    node17778 [shape=box, label=<<font color="black">[0] let byteOffset = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17778 -> node17779 [color="black"]
    node17779_name [shape=none, label=<<font color="black">Block[17779]</font>>]
    node17779_name -> node17779 [arrowhead=none, color="black", style=dashed]
    node17779 [shape=box, label=<<font color="black">[0] let v = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17779 -> node17780 [color="black"]
    node17780_name [shape=none, label=<<font color="black">Call[17780]</font>>]
    node17780_name -> node17780 [arrowhead=none, color="black", style=dashed]
    node17780 [shape=cds, label=<<font color="black">%0 = clo&lt;GetViewValue&gt;(v, byteOffset, true, ~Uint8~)</font>> color="black" fillcolor="white", style=filled]
    node17780 -> node17781 [color="black"]
    node17781_name [shape=none, label=<<font color="black">Block[17781]</font>>]
    node17781_name -> node17781 [arrowhead=none, color="black", style=dashed]
    node17781 [shape=box, label=<<font color="black">[0] return [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17781 -> cluster2507_exit [color="black"]
  }
}