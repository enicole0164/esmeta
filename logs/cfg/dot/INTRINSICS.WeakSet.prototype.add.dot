digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2467 {
    label = "def <BUILTIN>:INTRINSICS.WeakSet.prototype.add(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2467_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2467_entry_name -> cluster2467_entry [arrowhead=none, color="black", style=dashed]
    cluster2467_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2467_entry -> node17296 [color="black"]
    cluster2467_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2467_exit_name -> cluster2467_exit [arrowhead=none, color="black", style=dashed]
    cluster2467_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17296_name [shape=none, label=<<font color="black">Branch[17296]</font>>]
    node17296_name -> node17296 [arrowhead=none, color="black", style=dashed]
    node17296 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node17296 -> node17297 [label=<<font color="black">true</font>> color="black"]
    node17296 -> node17298 [label=<<font color="black">false</font>> color="black"]
    node17297_name [shape=none, label=<<font color="black">Block[17297]</font>>]
    node17297_name -> node17297 [arrowhead=none, color="black", style=dashed]
    node17297 [shape=box, label=<<font color="black">[0] let value = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17297 -> node17299 [color="black"]
    node17298_name [shape=none, label=<<font color="black">Block[17298]</font>>]
    node17298_name -> node17298 [arrowhead=none, color="black", style=dashed]
    node17298 [shape=box, label=<<font color="black">[0] let value = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17298 -> node17299 [color="black"]
    node17299_name [shape=none, label=<<font color="black">Block[17299]</font>>]
    node17299_name -> node17299 [arrowhead=none, color="black", style=dashed]
    node17299 [shape=box, label=<<font color="black">[0] let S = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17299 -> node17300 [color="black"]
    node17300_name [shape=none, label=<<font color="black">Call[17300]</font>>]
    node17300_name -> node17300 [arrowhead=none, color="black", style=dashed]
    node17300 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireInternalSlot&gt;(S, &quot;WeakSetData&quot;)</font>> color="black" fillcolor="white", style=filled]
    node17300 -> node17301 [color="black"]
    node17301_name [shape=none, label=<<font color="black">Block[17301]</font>>]
    node17301_name -> node17301 [arrowhead=none, color="black", style=dashed]
    node17301 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17301 -> node17302 [color="black"]
    node17302_name [shape=none, label=<<font color="black">Branch[17302]</font>>]
    node17302_name -> node17302 [arrowhead=none, color="black", style=dashed]
    node17302 [shape=diamond, label=<<font color="black">(! (= (typeof value) @Object))</font>> color="black" fillcolor="white", style=filled]
    node17302 -> node17303 [label=<<font color="black">true</font>> color="black"]
    node17302 -> node17304 [label=<<font color="black">false</font>> color="black"]
    node17303_name [shape=none, label=<<font color="black">Block[17303]</font>>]
    node17303_name -> node17303 [arrowhead=none, color="black", style=dashed]
    node17303 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1141])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17303 -> cluster2467_exit [color="black"]
    node17304_name [shape=none, label=<<font color="black">Block[17304]</font>>]
    node17304_name -> node17304 [arrowhead=none, color="black", style=dashed]
    node17304 [shape=box, label=<<font color="black">[0] let entries = S.WeakSetData<BR ALIGN="LEFT"/>[1] %2 = entries<BR ALIGN="LEFT"/>[2] %1 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17304 -> node17305 [color="black"]
    node17305_name [shape=none, label=<<font color="black">Branch[17305]</font>>]
    node17305_name -> node17305 [arrowhead=none, color="black", style=dashed]
    node17305 [shape=diamond, label=<<font color="black">(&lt; %1 %2.length)</font>> color="black" fillcolor="white", style=filled]
    node17305 -> node17306 [label=<<font color="black">true</font>> color="black"]
    node17305 -> node17313 [label=<<font color="black">false</font>> color="black"]
    node17306_name [shape=none, label=<<font color="black">Block[17306]</font>>]
    node17306_name -> node17306 [arrowhead=none, color="black", style=dashed]
    node17306 [shape=box, label=<<font color="black">[0] let e = %2[%1]<BR ALIGN="LEFT"/>[1] %3 = (! (= e ~empty~))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17306 -> node17307 [color="black"]
    node17313_name [shape=none, label=<<font color="black">Block[17313]</font>>]
    node17313_name -> node17313 [arrowhead=none, color="black", style=dashed]
    node17313 [shape=box, label=<<font color="black">[0] push entries &lt; value<BR ALIGN="LEFT"/>[1] return S<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17313 -> cluster2467_exit [color="black"]
    node17307_name [shape=none, label=<<font color="black">Branch[17307]</font>>]
    node17307_name -> node17307 [arrowhead=none, color="black", style=dashed]
    node17307 [shape=diamond, label=<<font color="black">%3</font>> color="black" fillcolor="white", style=filled]
    node17307 -> node17308 [label=<<font color="black">true</font>> color="black"]
    node17307 -> node17310 [label=<<font color="black">false</font>> color="black"]
    node17308_name [shape=none, label=<<font color="black">Call[17308]</font>>]
    node17308_name -> node17308 [arrowhead=none, color="black", style=dashed]
    node17308 [shape=cds, label=<<font color="black">%4 = clo&lt;SameValue&gt;(e, value)</font>> color="black" fillcolor="white", style=filled]
    node17308 -> node17309 [color="black"]
    node17310_name [shape=none, label=<<font color="black">Branch[17310]</font>>]
    node17310_name -> node17310 [arrowhead=none, color="black", style=dashed]
    node17310 [shape=diamond, label=<<font color="black">%3</font>> color="black" fillcolor="white", style=filled]
    node17310 -> node17311 [label=<<font color="black">true</font>> color="black"]
    node17310 -> node17312 [label=<<font color="black">false</font>> color="black"]
    node17309_name [shape=none, label=<<font color="black">Block[17309]</font>>]
    node17309_name -> node17309 [arrowhead=none, color="black", style=dashed]
    node17309 [shape=box, label=<<font color="black">[0] %3 = (= %4 true)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17309 -> node17310 [color="black"]
    node17311_name [shape=none, label=<<font color="black">Block[17311]</font>>]
    node17311_name -> node17311 [arrowhead=none, color="black", style=dashed]
    node17311 [shape=box, label=<<font color="black">[0] return S<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17311 -> cluster2467_exit [color="black"]
    node17312_name [shape=none, label=<<font color="black">Block[17312]</font>>]
    node17312_name -> node17312 [arrowhead=none, color="black", style=dashed]
    node17312 [shape=box, label=<<font color="black">[0] %1 = (+ %1 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17312 -> node17305 [color="black"]
  }
}