digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster867 {
    label = "def <SYNTAX>:BindingElement[1,0].IteratorBindingInitialization(this: Ast:BindingElement[1,0], iteratorRecord: Unknown, environment: Unknown): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster867_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster867_entry_name -> cluster867_entry [arrowhead=none, color="black", style=dashed]
    cluster867_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster867_entry -> node3326 [color="black"]
    cluster867_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster867_exit_name -> cluster867_exit [arrowhead=none, color="black", style=dashed]
    cluster867_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3326_name [shape=none, label=<<font color="black">Block[3326]</font>>]
    node3326_name -> node3326 [arrowhead=none, color="black", style=dashed]
    node3326 [shape=box, label=<<font color="black">[0] let v = undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3326 -> node3327 [color="black"]
    node3327_name [shape=none, label=<<font color="black">Branch[3327]</font>>]
    node3327_name -> node3327 [arrowhead=none, color="black", style=dashed]
    node3327 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white", style=filled]
    node3327 -> node3328 [label=<<font color="black">true</font>> color="black"]
    node3327 -> node3342 [label=<<font color="black">false</font>> color="black"]
    node3328_name [shape=none, label=<<font color="black">Call[3328]</font>>]
    node3328_name -> node3328 [arrowhead=none, color="black", style=dashed]
    node3328 [shape=cds, label=<<font color="black">%0 = clo&lt;IteratorStep&gt;(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node3328 -> node3329 [color="black"]
    node3342_name [shape=none, label=<<font color="black">Branch[3342]</font>>]
    node3342_name -> node3342 [arrowhead=none, color="black", style=dashed]
    node3342 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= this[1] absent)) (= v undefined))</font>> color="black" fillcolor="white", style=filled]
    node3342 -> node3343 [label=<<font color="black">true</font>> color="black"]
    node3342 -> node3347 [label=<<font color="black">false</font>> color="black"]
    node3329_name [shape=none, label=<<font color="black">Call[3329]</font>>]
    node3329_name -> node3329 [arrowhead=none, color="black", style=dashed]
    node3329 [shape=cds, label=<<font color="black">%1 = clo&lt;Completion&gt;(%0)</font>> color="black" fillcolor="white", style=filled]
    node3329 -> node3330 [color="black"]
    node3343_name [shape=none, label=<<font color="black">Call[3343]</font>>]
    node3343_name -> node3343 [arrowhead=none, color="black", style=dashed]
    node3343 [shape=cds, label=<<font color="black">%4 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node3343 -> node3344 [color="black"]
    node3347_name [shape=none, label=<<font color="black">Call[3347]</font>>]
    node3347_name -> node3347 [arrowhead=none, color="black", style=dashed]
    node3347 [shape=cds, label=<<font color="black">%6 = this[0]-&gt;BindingInitialization(v, environment)</font>> color="black" fillcolor="white", style=filled]
    node3347 -> node3348 [color="black"]
    node3330_name [shape=none, label=<<font color="black">Block[3330]</font>>]
    node3330_name -> node3330 [arrowhead=none, color="black", style=dashed]
    node3330 [shape=box, label=<<font color="black">[0] let next = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3330 -> node3331 [color="black"]
    node3344_name [shape=none, label=<<font color="black">Block[3344]</font>>]
    node3344_name -> node3344 [arrowhead=none, color="black", style=dashed]
    node3344 [shape=box, label=<<font color="black">[0] let defaultValue = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3344 -> node3345 [color="black"]
    node3348_name [shape=none, label=<<font color="black">Block[3348]</font>>]
    node3348_name -> node3348 [arrowhead=none, color="black", style=dashed]
    node3348 [shape=box, label=<<font color="black">[0] return [? %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3348 -> cluster867_exit [color="black"]
    node3331_name [shape=none, label=<<font color="black">Branch[3331]</font>>]
    node3331_name -> node3331 [arrowhead=none, color="black", style=dashed]
    node3331 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? next) (! (= next.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node3331 -> node3332 [label=<<font color="black">true</font>> color="black"]
    node3331 -> node3333 [label=<<font color="black">false</font>> color="black"]
    node3345_name [shape=none, label=<<font color="black">Call[3345]</font>>]
    node3345_name -> node3345 [arrowhead=none, color="black", style=dashed]
    node3345 [shape=cds, label=<<font color="black">%5 = clo&lt;GetValue&gt;(defaultValue)</font>> color="black" fillcolor="white", style=filled]
    node3345 -> node3346 [color="black"]
    node3332_name [shape=none, label=<<font color="black">Block[3332]</font>>]
    node3332_name -> node3332 [arrowhead=none, color="black", style=dashed]
    node3332 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3332 -> node3333 [color="black"]
    node3333_name [shape=none, label=<<font color="black">Block[3333]</font>>]
    node3333_name -> node3333 [arrowhead=none, color="black", style=dashed]
    node3333 [shape=box, label=<<font color="black">[0] [? next]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3333 -> node3334 [color="black"]
    node3346_name [shape=none, label=<<font color="black">Block[3346]</font>>]
    node3346_name -> node3346 [arrowhead=none, color="black", style=dashed]
    node3346 [shape=box, label=<<font color="black">[0] v = [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3346 -> node3347 [color="black"]
    node3334_name [shape=none, label=<<font color="black">Branch[3334]</font>>]
    node3334_name -> node3334 [arrowhead=none, color="black", style=dashed]
    node3334 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white", style=filled]
    node3334 -> node3335 [label=<<font color="black">true</font>> color="black"]
    node3334 -> node3336 [label=<<font color="black">false</font>> color="black"]
    node3335_name [shape=none, label=<<font color="black">Block[3335]</font>>]
    node3335_name -> node3335 [arrowhead=none, color="black", style=dashed]
    node3335 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3335 -> node3342 [color="black"]
    node3336_name [shape=none, label=<<font color="black">Call[3336]</font>>]
    node3336_name -> node3336 [arrowhead=none, color="black", style=dashed]
    node3336 [shape=cds, label=<<font color="black">%2 = clo&lt;IteratorValue&gt;(next)</font>> color="black" fillcolor="white", style=filled]
    node3336 -> node3337 [color="black"]
    node3337_name [shape=none, label=<<font color="black">Call[3337]</font>>]
    node3337_name -> node3337 [arrowhead=none, color="black", style=dashed]
    node3337 [shape=cds, label=<<font color="black">%3 = clo&lt;Completion&gt;(%2)</font>> color="black" fillcolor="white", style=filled]
    node3337 -> node3338 [color="black"]
    node3338_name [shape=none, label=<<font color="black">Block[3338]</font>>]
    node3338_name -> node3338 [arrowhead=none, color="black", style=dashed]
    node3338 [shape=box, label=<<font color="black">[0] v = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3338 -> node3339 [color="black"]
    node3339_name [shape=none, label=<<font color="black">Branch[3339]</font>>]
    node3339_name -> node3339 [arrowhead=none, color="black", style=dashed]
    node3339 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? v) (! (= v.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node3339 -> node3340 [label=<<font color="black">true</font>> color="black"]
    node3339 -> node3341 [label=<<font color="black">false</font>> color="black"]
    node3340_name [shape=none, label=<<font color="black">Block[3340]</font>>]
    node3340_name -> node3340 [arrowhead=none, color="black", style=dashed]
    node3340 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3340 -> node3341 [color="black"]
    node3341_name [shape=none, label=<<font color="black">Block[3341]</font>>]
    node3341_name -> node3341 [arrowhead=none, color="black", style=dashed]
    node3341 [shape=box, label=<<font color="black">[0] [? v]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3341 -> node3342 [color="black"]
  }
}