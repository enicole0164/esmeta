digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2524 {
    label = "def LeaveCriticalSection(WL: Unknown["WaiterList"]): Const[~unused~]"
    style = rounded
    cluster2524_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2524_entry_name -> cluster2524_entry [arrowhead=none, color="black", style=dashed]
    cluster2524_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2524_entry -> node17956 [color="black"]
    cluster2524_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2524_exit_name -> cluster2524_exit [arrowhead=none, color="black", style=dashed]
    cluster2524_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17956_name [shape=none, label=<<font color="black">Block[17956]</font>>]
    node17956_name -> node17956 [arrowhead=none, color="black", style=dashed]
    node17956 [shape=box, label=<<font color="black">[0] assert (yet &quot;The calling agent is in the critical section for _WL_.&quot;)<BR ALIGN="LEFT"/>[1] (yet &quot;Let _execution_ be the [[CandidateExecution]] field of the calling surrounding's Agent Record.&quot;)<BR ALIGN="LEFT"/>[2] (yet &quot;Let _eventsRecord_ be the Agent Events Record in _execution_.[[EventsRecords]] whose [[AgentSignifier]] is AgentSignifier().&quot;)<BR ALIGN="LEFT"/>[3] let leaverEventList = eventsRecord.EventList<BR ALIGN="LEFT"/>[4] (yet &quot;Let _leaveEvent_ be a new Synchronize event.&quot;)<BR ALIGN="LEFT"/>[5] push leaverEventList &lt; leaveEvent<BR ALIGN="LEFT"/>[6] (yet &quot;Set the Synchronize event in _WL_ to _leaveEvent_.&quot;)<BR ALIGN="LEFT"/>[7] (yet &quot;Leave the critical section for _WL_.&quot;)<BR ALIGN="LEFT"/>[8] return ~unused~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17956 -> cluster2524_exit [color="black"]
  }
}