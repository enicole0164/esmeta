digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2089 {
    label = "def <BUILTIN>:INTRINSICS.Math.exp(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2089_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2089_entry_name -> cluster2089_entry [arrowhead=none, color="black", style=dashed]
    cluster2089_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2089_entry -> node12174 [color="black"]
    cluster2089_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2089_exit_name -> cluster2089_exit [arrowhead=none, color="black", style=dashed]
    cluster2089_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node12174_name [shape=none, label=<<font color="black">Branch[12174]</font>>]
    node12174_name -> node12174 [arrowhead=none, color="black", style=dashed]
    node12174 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node12174 -> node12175 [label=<<font color="black">true</font>> color="black"]
    node12174 -> node12176 [label=<<font color="black">false</font>> color="black"]
    node12175_name [shape=none, label=<<font color="black">Block[12175]</font>>]
    node12175_name -> node12175 [arrowhead=none, color="black", style=dashed]
    node12175 [shape=box, label=<<font color="black">[0] let x = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12175 -> node12177 [color="black"]
    node12176_name [shape=none, label=<<font color="black">Block[12176]</font>>]
    node12176_name -> node12176 [arrowhead=none, color="black", style=dashed]
    node12176 [shape=box, label=<<font color="black">[0] let x = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12176 -> node12177 [color="black"]
    node12177_name [shape=none, label=<<font color="black">Call[12177]</font>>]
    node12177_name -> node12177 [arrowhead=none, color="black", style=dashed]
    node12177 [shape=cds, label=<<font color="black">%0 = clo&lt;ToNumber&gt;(x)</font>> color="black" fillcolor="white", style=filled]
    node12177 -> node12178 [color="black"]
    node12178_name [shape=none, label=<<font color="black">Block[12178]</font>>]
    node12178_name -> node12178 [arrowhead=none, color="black", style=dashed]
    node12178 [shape=box, label=<<font color="black">[0] let n = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12178 -> node12179 [color="black"]
    node12179_name [shape=none, label=<<font color="black">Branch[12179]</font>>]
    node12179_name -> node12179 [arrowhead=none, color="black", style=dashed]
    node12179 [shape=diamond, label=<<font color="black">(|| (= n NaN) (= n +INF))</font>> color="black" fillcolor="white", style=filled]
    node12179 -> node12180 [label=<<font color="black">true</font>> color="black"]
    node12179 -> node12181 [label=<<font color="black">false</font>> color="black"]
    node12180_name [shape=none, label=<<font color="black">Block[12180]</font>>]
    node12180_name -> node12180 [arrowhead=none, color="black", style=dashed]
    node12180 [shape=box, label=<<font color="black">[0] return n<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12180 -> cluster2089_exit [color="black"]
    node12181_name [shape=none, label=<<font color="black">Branch[12181]</font>>]
    node12181_name -> node12181 [arrowhead=none, color="black", style=dashed]
    node12181 [shape=diamond, label=<<font color="black">(|| (= n 0.0f) (= n -0.0f))</font>> color="black" fillcolor="white", style=filled]
    node12181 -> node12182 [label=<<font color="black">true</font>> color="black"]
    node12181 -> node12183 [label=<<font color="black">false</font>> color="black"]
    node12182_name [shape=none, label=<<font color="black">Block[12182]</font>>]
    node12182_name -> node12182 [arrowhead=none, color="black", style=dashed]
    node12182 [shape=box, label=<<font color="black">[0] return 1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12182 -> cluster2089_exit [color="black"]
    node12183_name [shape=none, label=<<font color="black">Branch[12183]</font>>]
    node12183_name -> node12183 [arrowhead=none, color="black", style=dashed]
    node12183 [shape=diamond, label=<<font color="black">(= n -INF)</font>> color="black" fillcolor="white", style=filled]
    node12183 -> node12184 [label=<<font color="black">true</font>> color="black"]
    node12183 -> node12185 [label=<<font color="black">false</font>> color="black"]
    node12184_name [shape=none, label=<<font color="black">Block[12184]</font>>]
    node12184_name -> node12184 [arrowhead=none, color="black", style=dashed]
    node12184 [shape=box, label=<<font color="black">[0] return 0.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12184 -> cluster2089_exit [color="black"]
    node12185_name [shape=none, label=<<font color="black">Block[12185]</font>>]
    node12185_name -> node12185 [arrowhead=none, color="black", style=dashed]
    node12185 [shape=box, label=<<font color="black">[0] return ([approx-number] ([math:exp] ([math] n)))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12185 -> cluster2089_exit [color="black"]
  }
}