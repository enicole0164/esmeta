digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1338 {
    label = "def <SYNTAX>:AssignmentExpression[4,0].Evaluation(this: Ast:AssignmentExpression[4,0]): Unknown"
    style = rounded
    cluster1338_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1338_entry_name -> cluster1338_entry [arrowhead=none, color="black", style=dashed]
    cluster1338_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1338_entry -> node6510 [color="black"]
    cluster1338_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1338_exit_name -> cluster1338_exit [arrowhead=none, color="black", style=dashed]
    cluster1338_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6510_name [shape=none, label=<<font color="black">Branch[6510]</font>>]
    node6510_name -> node6510 [arrowhead=none, color="black", style=dashed]
    node6510 [shape=diamond, label=<<font color="black">(! (|| (? this[0]: &quot;ObjectLiteral&quot;) (? this[0]: &quot;ArrayLiteral&quot;)))</font>> color="black" fillcolor="white", style=filled]
    node6510 -> node6511 [label=<<font color="black">true</font>> color="black"]
    node6510 -> node6524 [label=<<font color="black">false</font>> color="black"]
    node6511_name [shape=none, label=<<font color="black">Call[6511]</font>>]
    node6511_name -> node6511 [arrowhead=none, color="black", style=dashed]
    node6511 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6511 -> node6512 [color="black"]
    node6524_name [shape=none, label=<<font color="black">Block[6524]</font>>]
    node6524_name -> node6524 [arrowhead=none, color="black", style=dashed]
    node6524 [shape=box, label=<<font color="black">[0] let assignmentPattern = (parse this[0] (nt |AssignmentPattern|[]))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6524 -> node6525 [color="black"]
    node6512_name [shape=none, label=<<font color="black">Block[6512]</font>>]
    node6512_name -> node6512 [arrowhead=none, color="black", style=dashed]
    node6512 [shape=box, label=<<font color="black">[0] let lref = %0<BR ALIGN="LEFT"/>[1] [? lref]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6512 -> node6513 [color="black"]
    node6525_name [shape=none, label=<<font color="black">Call[6525]</font>>]
    node6525_name -> node6525 [arrowhead=none, color="black", style=dashed]
    node6525 [shape=cds, label=<<font color="black">%7 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6525 -> node6526 [color="black"]
    node6513_name [shape=none, label=<<font color="black">Call[6513]</font>>]
    node6513_name -> node6513 [arrowhead=none, color="black", style=dashed]
    node6513 [shape=cds, label=<<font color="black">%1 = clo&lt;IsAnonymousFunctionDefinition&gt;(this[1])</font>> color="black" fillcolor="white", style=filled]
    node6513 -> node6514 [color="black"]
    node6526_name [shape=none, label=<<font color="black">Block[6526]</font>>]
    node6526_name -> node6526 [arrowhead=none, color="black", style=dashed]
    node6526 [shape=box, label=<<font color="black">[0] let rref = %7<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6526 -> node6527 [color="black"]
    node6514_name [shape=none, label=<<font color="black">Call[6514]</font>>]
    node6514_name -> node6514 [arrowhead=none, color="black", style=dashed]
    node6514 [shape=cds, label=<<font color="black">%2 = this[0]-&gt;IsIdentifierRef()</font>> color="black" fillcolor="white", style=filled]
    node6514 -> node6515 [color="black"]
    node6527_name [shape=none, label=<<font color="black">Call[6527]</font>>]
    node6527_name -> node6527 [arrowhead=none, color="black", style=dashed]
    node6527 [shape=cds, label=<<font color="black">%8 = clo&lt;GetValue&gt;(rref)</font>> color="black" fillcolor="white", style=filled]
    node6527 -> node6528 [color="black"]
    node6515_name [shape=none, label=<<font color="black">Branch[6515]</font>>]
    node6515_name -> node6515 [arrowhead=none, color="black", style=dashed]
    node6515 [shape=diamond, label=<<font color="black">(&amp;&amp; (= %1 true) (= %2 true))</font>> color="black" fillcolor="white", style=filled]
    node6515 -> node6516 [label=<<font color="black">true</font>> color="black"]
    node6515 -> node6518 [label=<<font color="black">false</font>> color="black"]
    node6528_name [shape=none, label=<<font color="black">Block[6528]</font>>]
    node6528_name -> node6528 [arrowhead=none, color="black", style=dashed]
    node6528 [shape=box, label=<<font color="black">[0] let rval = [? %8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6528 -> node6529 [color="black"]
    node6516_name [shape=none, label=<<font color="black">Call[6516]</font>>]
    node6516_name -> node6516 [arrowhead=none, color="black", style=dashed]
    node6516 [shape=cds, label=<<font color="black">%3 = this[1]-&gt;NamedEvaluation(lref.ReferencedName)</font>> color="black" fillcolor="white", style=filled]
    node6516 -> node6517 [color="black"]
    node6518_name [shape=none, label=<<font color="black">Call[6518]</font>>]
    node6518_name -> node6518 [arrowhead=none, color="black", style=dashed]
    node6518 [shape=cds, label=<<font color="black">%4 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6518 -> node6519 [color="black"]
    node6529_name [shape=none, label=<<font color="black">Call[6529]</font>>]
    node6529_name -> node6529 [arrowhead=none, color="black", style=dashed]
    node6529 [shape=cds, label=<<font color="black">%9 = assignmentPattern-&gt;DestructuringAssignmentEvaluation(rval)</font>> color="black" fillcolor="white", style=filled]
    node6529 -> node6530 [color="black"]
    node6517_name [shape=none, label=<<font color="black">Block[6517]</font>>]
    node6517_name -> node6517 [arrowhead=none, color="black", style=dashed]
    node6517 [shape=box, label=<<font color="black">[0] let rval = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6517 -> node6522 [color="black"]
    node6519_name [shape=none, label=<<font color="black">Block[6519]</font>>]
    node6519_name -> node6519 [arrowhead=none, color="black", style=dashed]
    node6519 [shape=box, label=<<font color="black">[0] let rref = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6519 -> node6520 [color="black"]
    node6530_name [shape=none, label=<<font color="black">Block[6530]</font>>]
    node6530_name -> node6530 [arrowhead=none, color="black", style=dashed]
    node6530 [shape=box, label=<<font color="black">[0] [? %9]<BR ALIGN="LEFT"/>[1] return rval<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6530 -> cluster1338_exit [color="black"]
    node6522_name [shape=none, label=<<font color="black">Call[6522]</font>>]
    node6522_name -> node6522 [arrowhead=none, color="black", style=dashed]
    node6522 [shape=cds, label=<<font color="black">%6 = clo&lt;PutValue&gt;(lref, rval)</font>> color="black" fillcolor="white", style=filled]
    node6522 -> node6523 [color="black"]
    node6520_name [shape=none, label=<<font color="black">Call[6520]</font>>]
    node6520_name -> node6520 [arrowhead=none, color="black", style=dashed]
    node6520 [shape=cds, label=<<font color="black">%5 = clo&lt;GetValue&gt;(rref)</font>> color="black" fillcolor="white", style=filled]
    node6520 -> node6521 [color="black"]
    node6523_name [shape=none, label=<<font color="black">Block[6523]</font>>]
    node6523_name -> node6523 [arrowhead=none, color="black", style=dashed]
    node6523 [shape=box, label=<<font color="black">[0] [? %6]<BR ALIGN="LEFT"/>[1] return rval<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6523 -> cluster1338_exit [color="black"]
    node6521_name [shape=none, label=<<font color="black">Block[6521]</font>>]
    node6521_name -> node6521 [arrowhead=none, color="black", style=dashed]
    node6521 [shape=box, label=<<font color="black">[0] let rval = [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6521 -> node6522 [color="black"]
  }
}