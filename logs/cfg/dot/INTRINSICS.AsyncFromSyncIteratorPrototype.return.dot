digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2563 {
    label = "def <BUILTIN>:INTRINSICS.AsyncFromSyncIteratorPrototype.return(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2563_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2563_entry_name -> cluster2563_entry [arrowhead=none, color="black", style=dashed]
    cluster2563_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2563_entry -> node18585 [color="black"]
    cluster2563_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2563_exit_name -> cluster2563_exit [arrowhead=none, color="black", style=dashed]
    cluster2563_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node18585_name [shape=none, label=<<font color="black">Branch[18585]</font>>]
    node18585_name -> node18585 [arrowhead=none, color="black", style=dashed]
    node18585 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node18585 -> node18586 [label=<<font color="black">true</font>> color="black"]
    node18585 -> node18587 [label=<<font color="black">false</font>> color="black"]
    node18586_name [shape=none, label=<<font color="black">Block[18586]</font>>]
    node18586_name -> node18586 [arrowhead=none, color="black", style=dashed]
    node18586 [shape=box, label=<<font color="black">[0] let value = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18586 -> node18588 [color="black"]
    node18587_name [shape=none, label=<<font color="black">Block[18587]</font>>]
    node18587_name -> node18587 [arrowhead=none, color="black", style=dashed]
    node18587 [shape=box, label=<<font color="black">[0] let value = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18587 -> node18588 [color="black"]
    node18588_name [shape=none, label=<<font color="black">Block[18588]</font>>]
    node18588_name -> node18588 [arrowhead=none, color="black", style=dashed]
    node18588 [shape=box, label=<<font color="black">[0] let O = this<BR ALIGN="LEFT"/>[1] assert (&amp;&amp; (? O: &quot;Object&quot;) (! (= O.SyncIteratorRecord absent)))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18588 -> node18589 [color="black"]
    node18589_name [shape=none, label=<<font color="black">Call[18589]</font>>]
    node18589_name -> node18589 [arrowhead=none, color="black", style=dashed]
    node18589 [shape=cds, label=<<font color="black">%0 = clo&lt;NewPromiseCapability&gt;(@EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Promise%&quot;])</font>> color="black" fillcolor="white", style=filled]
    node18589 -> node18590 [color="black"]
    node18590_name [shape=none, label=<<font color="black">Block[18590]</font>>]
    node18590_name -> node18590 [arrowhead=none, color="black", style=dashed]
    node18590 [shape=box, label=<<font color="black">[0] let promiseCapability = [! %0]<BR ALIGN="LEFT"/>[1] let syncIterator = O.SyncIteratorRecord.Iterator<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18590 -> node18591 [color="black"]
    node18591_name [shape=none, label=<<font color="black">Call[18591]</font>>]
    node18591_name -> node18591 [arrowhead=none, color="black", style=dashed]
    node18591 [shape=cds, label=<<font color="black">%1 = clo&lt;GetMethod&gt;(syncIterator, &quot;return&quot;)</font>> color="black" fillcolor="white", style=filled]
    node18591 -> node18592 [color="black"]
    node18592_name [shape=none, label=<<font color="black">Call[18592]</font>>]
    node18592_name -> node18592 [arrowhead=none, color="black", style=dashed]
    node18592 [shape=cds, label=<<font color="black">%2 = clo&lt;Completion&gt;(%1)</font>> color="black" fillcolor="white", style=filled]
    node18592 -> node18593 [color="black"]
    node18593_name [shape=none, label=<<font color="black">Block[18593]</font>>]
    node18593_name -> node18593 [arrowhead=none, color="black", style=dashed]
    node18593 [shape=box, label=<<font color="black">[0] let return = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18593 -> node18594 [color="black"]
    node18594_name [shape=none, label=<<font color="black">Branch[18594]</font>>]
    node18594_name -> node18594 [arrowhead=none, color="black", style=dashed]
    node18594 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? return) (! (= return.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node18594 -> node18595 [label=<<font color="black">true</font>> color="black"]
    node18594 -> node18597 [label=<<font color="black">false</font>> color="black"]
    node18595_name [shape=none, label=<<font color="black">Call[18595]</font>>]
    node18595_name -> node18595 [arrowhead=none, color="black", style=dashed]
    node18595 [shape=cds, label=<<font color="black">%3 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [return.Value])[#1217])</font>> color="black" fillcolor="white", style=filled]
    node18595 -> node18596 [color="black"]
    node18597_name [shape=none, label=<<font color="black">Branch[18597]</font>>]
    node18597_name -> node18597 [arrowhead=none, color="black", style=dashed]
    node18597 [shape=diamond, label=<<font color="black">(? return: &quot;CompletionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node18597 -> node18598 [label=<<font color="black">true</font>> color="black"]
    node18597 -> node18599 [label=<<font color="black">false</font>> color="black"]
    node18596_name [shape=none, label=<<font color="black">Block[18596]</font>>]
    node18596_name -> node18596 [arrowhead=none, color="black", style=dashed]
    node18596 [shape=box, label=<<font color="black">[0] [? %3]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18596 -> cluster2563_exit [color="black"]
    node18598_name [shape=none, label=<<font color="black">Block[18598]</font>>]
    node18598_name -> node18598 [arrowhead=none, color="black", style=dashed]
    node18598 [shape=box, label=<<font color="black">[0] return = return.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18598 -> node18599 [color="black"]
    node18599_name [shape=none, label=<<font color="black">Branch[18599]</font>>]
    node18599_name -> node18599 [arrowhead=none, color="black", style=dashed]
    node18599 [shape=diamond, label=<<font color="black">(= return undefined)</font>> color="black" fillcolor="white", style=filled]
    node18599 -> node18600 [label=<<font color="black">true</font>> color="black"]
    node18599 -> node18604 [label=<<font color="black">false</font>> color="black"]
    node18600_name [shape=none, label=<<font color="black">Call[18600]</font>>]
    node18600_name -> node18600 [arrowhead=none, color="black", style=dashed]
    node18600 [shape=cds, label=<<font color="black">%4 = clo&lt;CreateIterResultObject&gt;(value, true)</font>> color="black" fillcolor="white", style=filled]
    node18600 -> node18601 [color="black"]
    node18604_name [shape=none, label=<<font color="black">Branch[18604]</font>>]
    node18604_name -> node18604 [arrowhead=none, color="black", style=dashed]
    node18604 [shape=diamond, label=<<font color="black">(! (= value absent))</font>> color="black" fillcolor="white", style=filled]
    node18604 -> node18605 [label=<<font color="black">true</font>> color="black"]
    node18604 -> node18608 [label=<<font color="black">false</font>> color="black"]
    node18601_name [shape=none, label=<<font color="black">Block[18601]</font>>]
    node18601_name -> node18601 [arrowhead=none, color="black", style=dashed]
    node18601 [shape=box, label=<<font color="black">[0] let iterResult = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18601 -> node18602 [color="black"]
    node18605_name [shape=none, label=<<font color="black">Call[18605]</font>>]
    node18605_name -> node18605 [arrowhead=none, color="black", style=dashed]
    node18605 [shape=cds, label=<<font color="black">%6 = clo&lt;Call&gt;(return, syncIterator, (new [value])[#1219])</font>> color="black" fillcolor="white", style=filled]
    node18605 -> node18606 [color="black"]
    node18608_name [shape=none, label=<<font color="black">Call[18608]</font>>]
    node18608_name -> node18608 [arrowhead=none, color="black", style=dashed]
    node18608 [shape=cds, label=<<font color="black">%8 = clo&lt;Call&gt;(return, syncIterator)</font>> color="black" fillcolor="white", style=filled]
    node18608 -> node18609 [color="black"]
    node18602_name [shape=none, label=<<font color="black">Call[18602]</font>>]
    node18602_name -> node18602 [arrowhead=none, color="black", style=dashed]
    node18602 [shape=cds, label=<<font color="black">%5 = clo&lt;Call&gt;(promiseCapability.Resolve, undefined, (new [iterResult])[#1218])</font>> color="black" fillcolor="white", style=filled]
    node18602 -> node18603 [color="black"]
    node18606_name [shape=none, label=<<font color="black">Call[18606]</font>>]
    node18606_name -> node18606 [arrowhead=none, color="black", style=dashed]
    node18606 [shape=cds, label=<<font color="black">%7 = clo&lt;Completion&gt;(%6)</font>> color="black" fillcolor="white", style=filled]
    node18606 -> node18607 [color="black"]
    node18609_name [shape=none, label=<<font color="black">Call[18609]</font>>]
    node18609_name -> node18609 [arrowhead=none, color="black", style=dashed]
    node18609 [shape=cds, label=<<font color="black">%9 = clo&lt;Completion&gt;(%8)</font>> color="black" fillcolor="white", style=filled]
    node18609 -> node18610 [color="black"]
    node18603_name [shape=none, label=<<font color="black">Block[18603]</font>>]
    node18603_name -> node18603 [arrowhead=none, color="black", style=dashed]
    node18603 [shape=box, label=<<font color="black">[0] [! %5]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18603 -> cluster2563_exit [color="black"]
    node18607_name [shape=none, label=<<font color="black">Block[18607]</font>>]
    node18607_name -> node18607 [arrowhead=none, color="black", style=dashed]
    node18607 [shape=box, label=<<font color="black">[0] let result = %7<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18607 -> node18611 [color="black"]
    node18610_name [shape=none, label=<<font color="black">Block[18610]</font>>]
    node18610_name -> node18610 [arrowhead=none, color="black", style=dashed]
    node18610 [shape=box, label=<<font color="black">[0] let result = %9<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18610 -> node18611 [color="black"]
    node18611_name [shape=none, label=<<font color="black">Branch[18611]</font>>]
    node18611_name -> node18611 [arrowhead=none, color="black", style=dashed]
    node18611 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? result) (! (= result.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node18611 -> node18612 [label=<<font color="black">true</font>> color="black"]
    node18611 -> node18614 [label=<<font color="black">false</font>> color="black"]
    node18612_name [shape=none, label=<<font color="black">Call[18612]</font>>]
    node18612_name -> node18612 [arrowhead=none, color="black", style=dashed]
    node18612 [shape=cds, label=<<font color="black">%10 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [result.Value])[#1220])</font>> color="black" fillcolor="white", style=filled]
    node18612 -> node18613 [color="black"]
    node18614_name [shape=none, label=<<font color="black">Branch[18614]</font>>]
    node18614_name -> node18614 [arrowhead=none, color="black", style=dashed]
    node18614 [shape=diamond, label=<<font color="black">(? result: &quot;CompletionRecord&quot;)</font>> color="black" fillcolor="white", style=filled]
    node18614 -> node18615 [label=<<font color="black">true</font>> color="black"]
    node18614 -> node18616 [label=<<font color="black">false</font>> color="black"]
    node18613_name [shape=none, label=<<font color="black">Block[18613]</font>>]
    node18613_name -> node18613 [arrowhead=none, color="black", style=dashed]
    node18613 [shape=box, label=<<font color="black">[0] [? %10]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18613 -> cluster2563_exit [color="black"]
    node18615_name [shape=none, label=<<font color="black">Block[18615]</font>>]
    node18615_name -> node18615 [arrowhead=none, color="black", style=dashed]
    node18615 [shape=box, label=<<font color="black">[0] result = result.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18615 -> node18616 [color="black"]
    node18616_name [shape=none, label=<<font color="black">Branch[18616]</font>>]
    node18616_name -> node18616 [arrowhead=none, color="black", style=dashed]
    node18616 [shape=diamond, label=<<font color="black">(! (= (typeof result) @Object))</font>> color="black" fillcolor="white", style=filled]
    node18616 -> node18617 [label=<<font color="black">true</font>> color="black"]
    node18616 -> node18619 [label=<<font color="black">false</font>> color="black"]
    node18617_name [shape=none, label=<<font color="black">Call[18617]</font>>]
    node18617_name -> node18617 [arrowhead=none, color="black", style=dashed]
    node18617 [shape=cds, label=<<font color="black">%11 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [(new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1222]])[#1221])</font>> color="black" fillcolor="white", style=filled]
    node18617 -> node18618 [color="black"]
    node18619_name [shape=none, label=<<font color="black">Call[18619]</font>>]
    node18619_name -> node18619 [arrowhead=none, color="black", style=dashed]
    node18619 [shape=cds, label=<<font color="black">%12 = clo&lt;AsyncFromSyncIteratorContinuation&gt;(result, promiseCapability)</font>> color="black" fillcolor="white", style=filled]
    node18619 -> node18620 [color="black"]
    node18618_name [shape=none, label=<<font color="black">Block[18618]</font>>]
    node18618_name -> node18618 [arrowhead=none, color="black", style=dashed]
    node18618 [shape=box, label=<<font color="black">[0] [! %11]<BR ALIGN="LEFT"/>[1] return promiseCapability.Promise<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18618 -> cluster2563_exit [color="black"]
    node18620_name [shape=none, label=<<font color="black">Block[18620]</font>>]
    node18620_name -> node18620 [arrowhead=none, color="black", style=dashed]
    node18620 [shape=box, label=<<font color="black">[0] return %12<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18620 -> cluster2563_exit [color="black"]
  }
}