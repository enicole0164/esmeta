digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2176 {
    label = "def <BUILTIN>:INTRINSICS.String.prototype.lastIndexOf(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2176_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2176_entry_name -> cluster2176_entry [arrowhead=none, color="black", style=dashed]
    cluster2176_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2176_entry -> node13406 [color="black"]
    cluster2176_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2176_exit_name -> cluster2176_exit [arrowhead=none, color="black", style=dashed]
    cluster2176_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node13406_name [shape=none, label=<<font color="black">Branch[13406]</font>>]
    node13406_name -> node13406 [arrowhead=none, color="black", style=dashed]
    node13406 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node13406 -> node13407 [label=<<font color="black">true</font>> color="black"]
    node13406 -> node13408 [label=<<font color="black">false</font>> color="black"]
    node13407_name [shape=none, label=<<font color="black">Block[13407]</font>>]
    node13407_name -> node13407 [arrowhead=none, color="black", style=dashed]
    node13407 [shape=box, label=<<font color="black">[0] let searchString = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13407 -> node13409 [color="black"]
    node13408_name [shape=none, label=<<font color="black">Block[13408]</font>>]
    node13408_name -> node13408 [arrowhead=none, color="black", style=dashed]
    node13408 [shape=box, label=<<font color="black">[0] let searchString = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13408 -> node13409 [color="black"]
    node13409_name [shape=none, label=<<font color="black">Branch[13409]</font>>]
    node13409_name -> node13409 [arrowhead=none, color="black", style=dashed]
    node13409 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node13409 -> node13410 [label=<<font color="black">true</font>> color="black"]
    node13409 -> node13411 [label=<<font color="black">false</font>> color="black"]
    node13410_name [shape=none, label=<<font color="black">Block[13410]</font>>]
    node13410_name -> node13410 [arrowhead=none, color="black", style=dashed]
    node13410 [shape=box, label=<<font color="black">[0] let position = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13410 -> node13412 [color="black"]
    node13411_name [shape=none, label=<<font color="black">Block[13411]</font>>]
    node13411_name -> node13411 [arrowhead=none, color="black", style=dashed]
    node13411 [shape=box, label=<<font color="black">[0] let position = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13411 -> node13412 [color="black"]
    node13412_name [shape=none, label=<<font color="black">Call[13412]</font>>]
    node13412_name -> node13412 [arrowhead=none, color="black", style=dashed]
    node13412 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireObjectCoercible&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node13412 -> node13413 [color="black"]
    node13413_name [shape=none, label=<<font color="black">Block[13413]</font>>]
    node13413_name -> node13413 [arrowhead=none, color="black", style=dashed]
    node13413 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13413 -> node13414 [color="black"]
    node13414_name [shape=none, label=<<font color="black">Call[13414]</font>>]
    node13414_name -> node13414 [arrowhead=none, color="black", style=dashed]
    node13414 [shape=cds, label=<<font color="black">%1 = clo&lt;ToString&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node13414 -> node13415 [color="black"]
    node13415_name [shape=none, label=<<font color="black">Block[13415]</font>>]
    node13415_name -> node13415 [arrowhead=none, color="black", style=dashed]
    node13415 [shape=box, label=<<font color="black">[0] let S = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13415 -> node13416 [color="black"]
    node13416_name [shape=none, label=<<font color="black">Call[13416]</font>>]
    node13416_name -> node13416 [arrowhead=none, color="black", style=dashed]
    node13416 [shape=cds, label=<<font color="black">%2 = clo&lt;ToString&gt;(searchString)</font>> color="black" fillcolor="white", style=filled]
    node13416 -> node13417 [color="black"]
    node13417_name [shape=none, label=<<font color="black">Block[13417]</font>>]
    node13417_name -> node13417 [arrowhead=none, color="black", style=dashed]
    node13417 [shape=box, label=<<font color="black">[0] let searchStr = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13417 -> node13418 [color="black"]
    node13418_name [shape=none, label=<<font color="black">Call[13418]</font>>]
    node13418_name -> node13418 [arrowhead=none, color="black", style=dashed]
    node13418 [shape=cds, label=<<font color="black">%3 = clo&lt;ToNumber&gt;(position)</font>> color="black" fillcolor="white", style=filled]
    node13418 -> node13419 [color="black"]
    node13419_name [shape=none, label=<<font color="black">Block[13419]</font>>]
    node13419_name -> node13419 [arrowhead=none, color="black", style=dashed]
    node13419 [shape=box, label=<<font color="black">[0] let numPos = [? %3]<BR ALIGN="LEFT"/>[1] assert (|| (! (= position undefined)) (= numPos NaN))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13419 -> node13420 [color="black"]
    node13420_name [shape=none, label=<<font color="black">Branch[13420]</font>>]
    node13420_name -> node13420 [arrowhead=none, color="black", style=dashed]
    node13420 [shape=diamond, label=<<font color="black">(= numPos NaN)</font>> color="black" fillcolor="white", style=filled]
    node13420 -> node13421 [label=<<font color="black">true</font>> color="black"]
    node13420 -> node13422 [label=<<font color="black">false</font>> color="black"]
    node13421_name [shape=none, label=<<font color="black">Block[13421]</font>>]
    node13421_name -> node13421 [arrowhead=none, color="black", style=dashed]
    node13421 [shape=box, label=<<font color="black">[0] let pos = +INF<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13421 -> node13424 [color="black"]
    node13422_name [shape=none, label=<<font color="black">Call[13422]</font>>]
    node13422_name -> node13422 [arrowhead=none, color="black", style=dashed]
    node13422 [shape=cds, label=<<font color="black">%4 = clo&lt;ToIntegerOrInfinity&gt;(numPos)</font>> color="black" fillcolor="white", style=filled]
    node13422 -> node13423 [color="black"]
    node13424_name [shape=none, label=<<font color="black">Block[13424]</font>>]
    node13424_name -> node13424 [arrowhead=none, color="black", style=dashed]
    node13424 [shape=box, label=<<font color="black">[0] let len = S.length<BR ALIGN="LEFT"/>[1] let start = (clamp pos 0 len)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13424 -> node13425 [color="black"]
    node13423_name [shape=none, label=<<font color="black">Block[13423]</font>>]
    node13423_name -> node13423 [arrowhead=none, color="black", style=dashed]
    node13423 [shape=box, label=<<font color="black">[0] let pos = [! %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13423 -> node13424 [color="black"]
    node13425_name [shape=none, label=<<font color="black">Branch[13425]</font>>]
    node13425_name -> node13425 [arrowhead=none, color="black", style=dashed]
    node13425 [shape=diamond, label=<<font color="black">(= searchStr &quot;&quot;)</font>> color="black" fillcolor="white", style=filled]
    node13425 -> node13426 [label=<<font color="black">true</font>> color="black"]
    node13425 -> node13427 [label=<<font color="black">false</font>> color="black"]
    node13426_name [shape=none, label=<<font color="black">Block[13426]</font>>]
    node13426_name -> node13426 [arrowhead=none, color="black", style=dashed]
    node13426 [shape=box, label=<<font color="black">[0] return ([number] start)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13426 -> cluster2176_exit [color="black"]
    node13427_name [shape=none, label=<<font color="black">Block[13427]</font>>]
    node13427_name -> node13427 [arrowhead=none, color="black", style=dashed]
    node13427 [shape=box, label=<<font color="black">[0] let searchLen = searchStr.length<BR ALIGN="LEFT"/>[1] let i = start<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13427 -> node13428 [color="black"]
    node13428_name [shape=none, label=<<font color="black">Branch[13428]</font>>]
    node13428_name -> node13428 [arrowhead=none, color="black", style=dashed]
    node13428 [shape=diamond, label=<<font color="black">(! (&lt; (- len searchLen) i))</font>> color="black" fillcolor="white", style=filled]
    node13428 -> node13429 [label=<<font color="black">true</font>> color="black"]
    node13428 -> node13433 [label=<<font color="black">false</font>> color="black"]
    node13429_name [shape=none, label=<<font color="black">Block[13429]</font>>]
    node13429_name -> node13429 [arrowhead=none, color="black", style=dashed]
    node13429 [shape=box, label=<<font color="black">[0] let candidate = (substring S i (+ i searchLen))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13429 -> node13430 [color="black"]
    node13433_name [shape=none, label=<<font color="black">Block[13433]</font>>]
    node13433_name -> node13433 [arrowhead=none, color="black", style=dashed]
    node13433 [shape=box, label=<<font color="black">[0] return -1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13433 -> cluster2176_exit [color="black"]
    node13430_name [shape=none, label=<<font color="black">Branch[13430]</font>>]
    node13430_name -> node13430 [arrowhead=none, color="black", style=dashed]
    node13430 [shape=diamond, label=<<font color="black">(= candidate searchStr)</font>> color="black" fillcolor="white", style=filled]
    node13430 -> node13431 [label=<<font color="black">true</font>> color="black"]
    node13430 -> node13432 [label=<<font color="black">false</font>> color="black"]
    node13431_name [shape=none, label=<<font color="black">Block[13431]</font>>]
    node13431_name -> node13431 [arrowhead=none, color="black", style=dashed]
    node13431 [shape=box, label=<<font color="black">[0] return ([number] i)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13431 -> cluster2176_exit [color="black"]
    node13432_name [shape=none, label=<<font color="black">Block[13432]</font>>]
    node13432_name -> node13432 [arrowhead=none, color="black", style=dashed]
    node13432 [shape=box, label=<<font color="black">[0] i = (- i 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13432 -> node13428 [color="black"]
  }
}