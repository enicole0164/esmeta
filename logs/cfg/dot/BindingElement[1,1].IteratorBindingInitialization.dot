digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster868 {
    label = "def <SYNTAX>:BindingElement[1,1].IteratorBindingInitialization(this: Ast:BindingElement[1,1], iteratorRecord: Unknown, environment: Unknown): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster868_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster868_entry_name -> cluster868_entry [arrowhead=none, color="black", style=dashed]
    cluster868_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster868_entry -> node3349 [color="black"]
    cluster868_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster868_exit_name -> cluster868_exit [arrowhead=none, color="black", style=dashed]
    cluster868_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3349_name [shape=none, label=<<font color="black">Block[3349]</font>>]
    node3349_name -> node3349 [arrowhead=none, color="black", style=dashed]
    node3349 [shape=box, label=<<font color="black">[0] let v = undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3349 -> node3350 [color="black"]
    node3350_name [shape=none, label=<<font color="black">Branch[3350]</font>>]
    node3350_name -> node3350 [arrowhead=none, color="black", style=dashed]
    node3350 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white", style=filled]
    node3350 -> node3351 [label=<<font color="black">true</font>> color="black"]
    node3350 -> node3365 [label=<<font color="black">false</font>> color="black"]
    node3351_name [shape=none, label=<<font color="black">Call[3351]</font>>]
    node3351_name -> node3351 [arrowhead=none, color="black", style=dashed]
    node3351 [shape=cds, label=<<font color="black">%0 = clo&lt;IteratorStep&gt;(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node3351 -> node3352 [color="black"]
    node3365_name [shape=none, label=<<font color="black">Branch[3365]</font>>]
    node3365_name -> node3365 [arrowhead=none, color="black", style=dashed]
    node3365 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= this[1] absent)) (= v undefined))</font>> color="black" fillcolor="white", style=filled]
    node3365 -> node3366 [label=<<font color="black">true</font>> color="black"]
    node3365 -> node3370 [label=<<font color="black">false</font>> color="black"]
    node3352_name [shape=none, label=<<font color="black">Call[3352]</font>>]
    node3352_name -> node3352 [arrowhead=none, color="black", style=dashed]
    node3352 [shape=cds, label=<<font color="black">%1 = clo&lt;Completion&gt;(%0)</font>> color="black" fillcolor="white", style=filled]
    node3352 -> node3353 [color="black"]
    node3366_name [shape=none, label=<<font color="black">Call[3366]</font>>]
    node3366_name -> node3366 [arrowhead=none, color="black", style=dashed]
    node3366 [shape=cds, label=<<font color="black">%4 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node3366 -> node3367 [color="black"]
    node3370_name [shape=none, label=<<font color="black">Call[3370]</font>>]
    node3370_name -> node3370 [arrowhead=none, color="black", style=dashed]
    node3370 [shape=cds, label=<<font color="black">%6 = this[0]-&gt;BindingInitialization(v, environment)</font>> color="black" fillcolor="white", style=filled]
    node3370 -> node3371 [color="black"]
    node3353_name [shape=none, label=<<font color="black">Block[3353]</font>>]
    node3353_name -> node3353 [arrowhead=none, color="black", style=dashed]
    node3353 [shape=box, label=<<font color="black">[0] let next = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3353 -> node3354 [color="black"]
    node3367_name [shape=none, label=<<font color="black">Block[3367]</font>>]
    node3367_name -> node3367 [arrowhead=none, color="black", style=dashed]
    node3367 [shape=box, label=<<font color="black">[0] let defaultValue = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3367 -> node3368 [color="black"]
    node3371_name [shape=none, label=<<font color="black">Block[3371]</font>>]
    node3371_name -> node3371 [arrowhead=none, color="black", style=dashed]
    node3371 [shape=box, label=<<font color="black">[0] return [? %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3371 -> cluster868_exit [color="black"]
    node3354_name [shape=none, label=<<font color="black">Branch[3354]</font>>]
    node3354_name -> node3354 [arrowhead=none, color="black", style=dashed]
    node3354 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? next) (! (= next.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node3354 -> node3355 [label=<<font color="black">true</font>> color="black"]
    node3354 -> node3356 [label=<<font color="black">false</font>> color="black"]
    node3368_name [shape=none, label=<<font color="black">Call[3368]</font>>]
    node3368_name -> node3368 [arrowhead=none, color="black", style=dashed]
    node3368 [shape=cds, label=<<font color="black">%5 = clo&lt;GetValue&gt;(defaultValue)</font>> color="black" fillcolor="white", style=filled]
    node3368 -> node3369 [color="black"]
    node3355_name [shape=none, label=<<font color="black">Block[3355]</font>>]
    node3355_name -> node3355 [arrowhead=none, color="black", style=dashed]
    node3355 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3355 -> node3356 [color="black"]
    node3356_name [shape=none, label=<<font color="black">Block[3356]</font>>]
    node3356_name -> node3356 [arrowhead=none, color="black", style=dashed]
    node3356 [shape=box, label=<<font color="black">[0] [? next]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3356 -> node3357 [color="black"]
    node3369_name [shape=none, label=<<font color="black">Block[3369]</font>>]
    node3369_name -> node3369 [arrowhead=none, color="black", style=dashed]
    node3369 [shape=box, label=<<font color="black">[0] v = [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3369 -> node3370 [color="black"]
    node3357_name [shape=none, label=<<font color="black">Branch[3357]</font>>]
    node3357_name -> node3357 [arrowhead=none, color="black", style=dashed]
    node3357 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white", style=filled]
    node3357 -> node3358 [label=<<font color="black">true</font>> color="black"]
    node3357 -> node3359 [label=<<font color="black">false</font>> color="black"]
    node3358_name [shape=none, label=<<font color="black">Block[3358]</font>>]
    node3358_name -> node3358 [arrowhead=none, color="black", style=dashed]
    node3358 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3358 -> node3365 [color="black"]
    node3359_name [shape=none, label=<<font color="black">Call[3359]</font>>]
    node3359_name -> node3359 [arrowhead=none, color="black", style=dashed]
    node3359 [shape=cds, label=<<font color="black">%2 = clo&lt;IteratorValue&gt;(next)</font>> color="black" fillcolor="white", style=filled]
    node3359 -> node3360 [color="black"]
    node3360_name [shape=none, label=<<font color="black">Call[3360]</font>>]
    node3360_name -> node3360 [arrowhead=none, color="black", style=dashed]
    node3360 [shape=cds, label=<<font color="black">%3 = clo&lt;Completion&gt;(%2)</font>> color="black" fillcolor="white", style=filled]
    node3360 -> node3361 [color="black"]
    node3361_name [shape=none, label=<<font color="black">Block[3361]</font>>]
    node3361_name -> node3361 [arrowhead=none, color="black", style=dashed]
    node3361 [shape=box, label=<<font color="black">[0] v = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3361 -> node3362 [color="black"]
    node3362_name [shape=none, label=<<font color="black">Branch[3362]</font>>]
    node3362_name -> node3362 [arrowhead=none, color="black", style=dashed]
    node3362 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? v) (! (= v.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node3362 -> node3363 [label=<<font color="black">true</font>> color="black"]
    node3362 -> node3364 [label=<<font color="black">false</font>> color="black"]
    node3363_name [shape=none, label=<<font color="black">Block[3363]</font>>]
    node3363_name -> node3363 [arrowhead=none, color="black", style=dashed]
    node3363 [shape=box, label=<<font color="black">[0] iteratorRecord.Done = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3363 -> node3364 [color="black"]
    node3364_name [shape=none, label=<<font color="black">Block[3364]</font>>]
    node3364_name -> node3364 [arrowhead=none, color="black", style=dashed]
    node3364 [shape=box, label=<<font color="black">[0] [? v]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3364 -> node3365 [color="black"]
  }
}