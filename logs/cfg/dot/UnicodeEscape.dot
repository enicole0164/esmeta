digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2550 {
    label = "def UnicodeEscape(C: Unknown["CodeUnit"]): String"
    style = rounded
    cluster2550_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2550_entry_name -> cluster2550_entry [arrowhead=none, color="black", style=dashed]
    cluster2550_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2550_entry -> node18441 [color="black"]
    cluster2550_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2550_exit_name -> cluster2550_exit [arrowhead=none, color="black", style=dashed]
    cluster2550_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node18441_name [shape=none, label=<<font color="black">Block[18441]</font>>]
    node18441_name -> node18441 [arrowhead=none, color="black", style=dashed]
    node18441 [shape=box, label=<<font color="black">[0] let n = ([math] C)<BR ALIGN="LEFT"/>[1] assert (! (&lt; 65535 n))<BR ALIGN="LEFT"/>[2] (yet &quot;Return the string-concatenation of:\n  * 0x005c (REVERSE SOLIDUS)\n  * *\&quot;u\&quot;*\n  * the String representation of _n_, formatted as a four-digit lowercase hexadecimal number, padded to the left with zeroes if necessary&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18441 -> cluster2550_exit [color="black"]
  }
}