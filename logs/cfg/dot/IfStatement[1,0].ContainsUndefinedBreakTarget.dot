digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster551 {
    label = "def <SYNTAX>:IfStatement[1,0].ContainsUndefinedBreakTarget(this: Ast:IfStatement[1,0], labelSet: Unknown): Boolean"
    style = rounded
    cluster551_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster551_entry_name -> cluster551_entry [arrowhead=none, color="black", style=dashed]
    cluster551_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster551_entry -> node2531 [color="black"]
    cluster551_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster551_exit_name -> cluster551_exit [arrowhead=none, color="black", style=dashed]
    cluster551_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2531_name [shape=none, label=<<font color="black">Call[2531]</font>>]
    node2531_name -> node2531 [arrowhead=none, color="black", style=dashed]
    node2531 [shape=cds, label=<<font color="black">%0 = this[1]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2531 -> node2532 [color="black"]
    node2532_name [shape=none, label=<<font color="black">Block[2532]</font>>]
    node2532_name -> node2532 [arrowhead=none, color="black", style=dashed]
    node2532 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2532 -> cluster551_exit [color="black"]
  }
}