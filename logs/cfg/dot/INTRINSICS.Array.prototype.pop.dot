digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2364 {
    label = "def <BUILTIN>:INTRINSICS.Array.prototype.pop(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2364_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2364_entry_name -> cluster2364_entry [arrowhead=none, color="black", style=dashed]
    cluster2364_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2364_entry -> node15341 [color="black"]
    cluster2364_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2364_exit_name -> cluster2364_exit [arrowhead=none, color="black", style=dashed]
    cluster2364_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node15341_name [shape=none, label=<<font color="black">Call[15341]</font>>]
    node15341_name -> node15341 [arrowhead=none, color="black", style=dashed]
    node15341 [shape=cds, label=<<font color="black">%0 = clo&lt;ToObject&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node15341 -> node15342 [color="black"]
    node15342_name [shape=none, label=<<font color="black">Block[15342]</font>>]
    node15342_name -> node15342 [arrowhead=none, color="black", style=dashed]
    node15342 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15342 -> node15343 [color="black"]
    node15343_name [shape=none, label=<<font color="black">Call[15343]</font>>]
    node15343_name -> node15343 [arrowhead=none, color="black", style=dashed]
    node15343 [shape=cds, label=<<font color="black">%1 = clo&lt;LengthOfArrayLike&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node15343 -> node15344 [color="black"]
    node15344_name [shape=none, label=<<font color="black">Block[15344]</font>>]
    node15344_name -> node15344 [arrowhead=none, color="black", style=dashed]
    node15344 [shape=box, label=<<font color="black">[0] let len = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15344 -> node15345 [color="black"]
    node15345_name [shape=none, label=<<font color="black">Branch[15345]</font>>]
    node15345_name -> node15345 [arrowhead=none, color="black", style=dashed]
    node15345 [shape=diamond, label=<<font color="black">(== len 0)</font>> color="black" fillcolor="white", style=filled]
    node15345 -> node15346 [label=<<font color="black">true</font>> color="black"]
    node15345 -> node15348 [label=<<font color="black">false</font>> color="black"]
    node15346_name [shape=none, label=<<font color="black">Call[15346]</font>>]
    node15346_name -> node15346 [arrowhead=none, color="black", style=dashed]
    node15346 [shape=cds, label=<<font color="black">%2 = clo&lt;Set&gt;(O, &quot;length&quot;, 0.0f, true)</font>> color="black" fillcolor="white", style=filled]
    node15346 -> node15347 [color="black"]
    node15348_name [shape=none, label=<<font color="black">Block[15348]</font>>]
    node15348_name -> node15348 [arrowhead=none, color="black", style=dashed]
    node15348 [shape=box, label=<<font color="black">[0] assert (&lt; 0 len)<BR ALIGN="LEFT"/>[1] let newLen = ([number] (- len 1))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15348 -> node15349 [color="black"]
    node15347_name [shape=none, label=<<font color="black">Block[15347]</font>>]
    node15347_name -> node15347 [arrowhead=none, color="black", style=dashed]
    node15347 [shape=box, label=<<font color="black">[0] [? %2]<BR ALIGN="LEFT"/>[1] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15347 -> cluster2364_exit [color="black"]
    node15349_name [shape=none, label=<<font color="black">Call[15349]</font>>]
    node15349_name -> node15349 [arrowhead=none, color="black", style=dashed]
    node15349 [shape=cds, label=<<font color="black">%3 = clo&lt;ToString&gt;(newLen)</font>> color="black" fillcolor="white", style=filled]
    node15349 -> node15350 [color="black"]
    node15350_name [shape=none, label=<<font color="black">Block[15350]</font>>]
    node15350_name -> node15350 [arrowhead=none, color="black", style=dashed]
    node15350 [shape=box, label=<<font color="black">[0] let index = [! %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15350 -> node15351 [color="black"]
    node15351_name [shape=none, label=<<font color="black">Call[15351]</font>>]
    node15351_name -> node15351 [arrowhead=none, color="black", style=dashed]
    node15351 [shape=cds, label=<<font color="black">%4 = clo&lt;Get&gt;(O, index)</font>> color="black" fillcolor="white", style=filled]
    node15351 -> node15352 [color="black"]
    node15352_name [shape=none, label=<<font color="black">Block[15352]</font>>]
    node15352_name -> node15352 [arrowhead=none, color="black", style=dashed]
    node15352 [shape=box, label=<<font color="black">[0] let element = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15352 -> node15353 [color="black"]
    node15353_name [shape=none, label=<<font color="black">Call[15353]</font>>]
    node15353_name -> node15353 [arrowhead=none, color="black", style=dashed]
    node15353 [shape=cds, label=<<font color="black">%5 = clo&lt;DeletePropertyOrThrow&gt;(O, index)</font>> color="black" fillcolor="white", style=filled]
    node15353 -> node15354 [color="black"]
    node15354_name [shape=none, label=<<font color="black">Block[15354]</font>>]
    node15354_name -> node15354 [arrowhead=none, color="black", style=dashed]
    node15354 [shape=box, label=<<font color="black">[0] [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15354 -> node15355 [color="black"]
    node15355_name [shape=none, label=<<font color="black">Call[15355]</font>>]
    node15355_name -> node15355 [arrowhead=none, color="black", style=dashed]
    node15355 [shape=cds, label=<<font color="black">%6 = clo&lt;Set&gt;(O, &quot;length&quot;, newLen, true)</font>> color="black" fillcolor="white", style=filled]
    node15355 -> node15356 [color="black"]
    node15356_name [shape=none, label=<<font color="black">Block[15356]</font>>]
    node15356_name -> node15356 [arrowhead=none, color="black", style=dashed]
    node15356 [shape=box, label=<<font color="black">[0] [? %6]<BR ALIGN="LEFT"/>[1] return element<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15356 -> cluster2364_exit [color="black"]
  }
}