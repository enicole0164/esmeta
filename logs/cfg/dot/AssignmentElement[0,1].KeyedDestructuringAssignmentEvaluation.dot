digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1374 {
    label = "def <SYNTAX>:AssignmentElement[0,1].KeyedDestructuringAssignmentEvaluation(this: Ast:AssignmentElement[0,1], value: Unknown, propertyName: Unknown): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster1374_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1374_entry_name -> cluster1374_entry [arrowhead=none, color="black", style=dashed]
    cluster1374_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1374_entry -> node7100 [color="black"]
    cluster1374_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1374_exit_name -> cluster1374_exit [arrowhead=none, color="black", style=dashed]
    cluster1374_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7100_name [shape=none, label=<<font color="black">Branch[7100]</font>>]
    node7100_name -> node7100 [arrowhead=none, color="black", style=dashed]
    node7100 [shape=diamond, label=<<font color="black">(! (|| (? this[0]: &quot;ObjectLiteral&quot;) (? this[0]: &quot;ArrayLiteral&quot;)))</font>> color="black" fillcolor="white", style=filled]
    node7100 -> node7101 [label=<<font color="black">true</font>> color="black"]
    node7100 -> node7103 [label=<<font color="black">false</font>> color="black"]
    node7101_name [shape=none, label=<<font color="black">Call[7101]</font>>]
    node7101_name -> node7101 [arrowhead=none, color="black", style=dashed]
    node7101 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7101 -> node7102 [color="black"]
    node7103_name [shape=none, label=<<font color="black">Call[7103]</font>>]
    node7103_name -> node7103 [arrowhead=none, color="black", style=dashed]
    node7103 [shape=cds, label=<<font color="black">%1 = clo&lt;GetV&gt;(value, propertyName)</font>> color="black" fillcolor="white", style=filled]
    node7103 -> node7104 [color="black"]
    node7102_name [shape=none, label=<<font color="black">Block[7102]</font>>]
    node7102_name -> node7102 [arrowhead=none, color="black", style=dashed]
    node7102 [shape=box, label=<<font color="black">[0] let lref = %0<BR ALIGN="LEFT"/>[1] [? lref]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7102 -> node7103 [color="black"]
    node7104_name [shape=none, label=<<font color="black">Block[7104]</font>>]
    node7104_name -> node7104 [arrowhead=none, color="black", style=dashed]
    node7104 [shape=box, label=<<font color="black">[0] let v = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7104 -> node7105 [color="black"]
    node7105_name [shape=none, label=<<font color="black">Branch[7105]</font>>]
    node7105_name -> node7105 [arrowhead=none, color="black", style=dashed]
    node7105 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= this[1] absent)) (= v undefined))</font>> color="black" fillcolor="white", style=filled]
    node7105 -> node7106 [label=<<font color="black">true</font>> color="black"]
    node7105 -> node7115 [label=<<font color="black">false</font>> color="black"]
    node7106_name [shape=none, label=<<font color="black">Call[7106]</font>>]
    node7106_name -> node7106 [arrowhead=none, color="black", style=dashed]
    node7106 [shape=cds, label=<<font color="black">%2 = clo&lt;IsAnonymousFunctionDefinition&gt;(this[1])</font>> color="black" fillcolor="white", style=filled]
    node7106 -> node7107 [color="black"]
    node7115_name [shape=none, label=<<font color="black">Block[7115]</font>>]
    node7115_name -> node7115 [arrowhead=none, color="black", style=dashed]
    node7115 [shape=box, label=<<font color="black">[0] let rhsValue = v<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7115 -> node7116 [color="black"]
    node7107_name [shape=none, label=<<font color="black">Call[7107]</font>>]
    node7107_name -> node7107 [arrowhead=none, color="black", style=dashed]
    node7107 [shape=cds, label=<<font color="black">%3 = this[0]-&gt;IsIdentifierRef()</font>> color="black" fillcolor="white", style=filled]
    node7107 -> node7108 [color="black"]
    node7116_name [shape=none, label=<<font color="black">Branch[7116]</font>>]
    node7116_name -> node7116 [arrowhead=none, color="black", style=dashed]
    node7116 [shape=diamond, label=<<font color="black">(|| (? this[0]: &quot;ObjectLiteral&quot;) (? this[0]: &quot;ArrayLiteral&quot;))</font>> color="black" fillcolor="white", style=filled]
    node7116 -> node7117 [label=<<font color="black">true</font>> color="black"]
    node7116 -> node7120 [label=<<font color="black">false</font>> color="black"]
    node7108_name [shape=none, label=<<font color="black">Branch[7108]</font>>]
    node7108_name -> node7108 [arrowhead=none, color="black", style=dashed]
    node7108 [shape=diamond, label=<<font color="black">(&amp;&amp; (= %2 true) (= %3 true))</font>> color="black" fillcolor="white", style=filled]
    node7108 -> node7109 [label=<<font color="black">true</font>> color="black"]
    node7108 -> node7111 [label=<<font color="black">false</font>> color="black"]
    node7117_name [shape=none, label=<<font color="black">Block[7117]</font>>]
    node7117_name -> node7117 [arrowhead=none, color="black", style=dashed]
    node7117 [shape=box, label=<<font color="black">[0] let assignmentPattern = (parse this[0] (nt |AssignmentPattern|[]))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7117 -> node7118 [color="black"]
    node7120_name [shape=none, label=<<font color="black">Call[7120]</font>>]
    node7120_name -> node7120 [arrowhead=none, color="black", style=dashed]
    node7120 [shape=cds, label=<<font color="black">%8 = clo&lt;PutValue&gt;(lref, rhsValue)</font>> color="black" fillcolor="white", style=filled]
    node7120 -> node7121 [color="black"]
    node7109_name [shape=none, label=<<font color="black">Call[7109]</font>>]
    node7109_name -> node7109 [arrowhead=none, color="black", style=dashed]
    node7109 [shape=cds, label=<<font color="black">%4 = this[1]-&gt;NamedEvaluation(lref.ReferencedName)</font>> color="black" fillcolor="white", style=filled]
    node7109 -> node7110 [color="black"]
    node7111_name [shape=none, label=<<font color="black">Call[7111]</font>>]
    node7111_name -> node7111 [arrowhead=none, color="black", style=dashed]
    node7111 [shape=cds, label=<<font color="black">%5 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7111 -> node7112 [color="black"]
    node7118_name [shape=none, label=<<font color="black">Call[7118]</font>>]
    node7118_name -> node7118 [arrowhead=none, color="black", style=dashed]
    node7118 [shape=cds, label=<<font color="black">%7 = assignmentPattern-&gt;DestructuringAssignmentEvaluation(rhsValue)</font>> color="black" fillcolor="white", style=filled]
    node7118 -> node7119 [color="black"]
    node7121_name [shape=none, label=<<font color="black">Block[7121]</font>>]
    node7121_name -> node7121 [arrowhead=none, color="black", style=dashed]
    node7121 [shape=box, label=<<font color="black">[0] return [? %8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7121 -> cluster1374_exit [color="black"]
    node7110_name [shape=none, label=<<font color="black">Block[7110]</font>>]
    node7110_name -> node7110 [arrowhead=none, color="black", style=dashed]
    node7110 [shape=box, label=<<font color="black">[0] let rhsValue = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7110 -> node7116 [color="black"]
    node7112_name [shape=none, label=<<font color="black">Block[7112]</font>>]
    node7112_name -> node7112 [arrowhead=none, color="black", style=dashed]
    node7112 [shape=box, label=<<font color="black">[0] let defaultValue = %5<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7112 -> node7113 [color="black"]
    node7119_name [shape=none, label=<<font color="black">Block[7119]</font>>]
    node7119_name -> node7119 [arrowhead=none, color="black", style=dashed]
    node7119 [shape=box, label=<<font color="black">[0] return [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7119 -> cluster1374_exit [color="black"]
    node7113_name [shape=none, label=<<font color="black">Call[7113]</font>>]
    node7113_name -> node7113 [arrowhead=none, color="black", style=dashed]
    node7113 [shape=cds, label=<<font color="black">%6 = clo&lt;GetValue&gt;(defaultValue)</font>> color="black" fillcolor="white", style=filled]
    node7113 -> node7114 [color="black"]
    node7114_name [shape=none, label=<<font color="black">Block[7114]</font>>]
    node7114_name -> node7114 [arrowhead=none, color="black", style=dashed]
    node7114 [shape=box, label=<<font color="black">[0] let rhsValue = [? %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7114 -> node7116 [color="black"]
  }
}