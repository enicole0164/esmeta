digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1395 {
    label = "def <SYNTAX>:VariableDeclaration[1,0].Evaluation(this: Ast:VariableDeclaration[1,0]): Unknown"
    style = rounded
    cluster1395_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1395_entry_name -> cluster1395_entry [arrowhead=none, color="black", style=dashed]
    cluster1395_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1395_entry -> node7233 [color="black"]
    cluster1395_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1395_exit_name -> cluster1395_exit [arrowhead=none, color="black", style=dashed]
    cluster1395_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7233_name [shape=none, label=<<font color="black">Call[7233]</font>>]
    node7233_name -> node7233 [arrowhead=none, color="black", style=dashed]
    node7233 [shape=cds, label=<<font color="black">%0 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7233 -> node7234 [color="black"]
    node7234_name [shape=none, label=<<font color="black">Block[7234]</font>>]
    node7234_name -> node7234 [arrowhead=none, color="black", style=dashed]
    node7234 [shape=box, label=<<font color="black">[0] let rhs = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7234 -> node7235 [color="black"]
    node7235_name [shape=none, label=<<font color="black">Call[7235]</font>>]
    node7235_name -> node7235 [arrowhead=none, color="black", style=dashed]
    node7235 [shape=cds, label=<<font color="black">%1 = clo&lt;GetValue&gt;(rhs)</font>> color="black" fillcolor="white", style=filled]
    node7235 -> node7236 [color="black"]
    node7236_name [shape=none, label=<<font color="black">Block[7236]</font>>]
    node7236_name -> node7236 [arrowhead=none, color="black", style=dashed]
    node7236 [shape=box, label=<<font color="black">[0] let rval = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7236 -> node7237 [color="black"]
    node7237_name [shape=none, label=<<font color="black">Call[7237]</font>>]
    node7237_name -> node7237 [arrowhead=none, color="black", style=dashed]
    node7237 [shape=cds, label=<<font color="black">%2 = this[0]-&gt;BindingInitialization(rval, undefined)</font>> color="black" fillcolor="white", style=filled]
    node7237 -> node7238 [color="black"]
    node7238_name [shape=none, label=<<font color="black">Block[7238]</font>>]
    node7238_name -> node7238 [arrowhead=none, color="black", style=dashed]
    node7238 [shape=box, label=<<font color="black">[0] return [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7238 -> cluster1395_exit [color="black"]
  }
}