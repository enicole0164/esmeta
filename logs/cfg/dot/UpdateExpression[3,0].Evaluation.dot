digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1303 {
    label = "def <SYNTAX>:UpdateExpression[3,0].Evaluation(this: Ast:UpdateExpression[3,0]): Unknown"
    style = rounded
    cluster1303_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1303_entry_name -> cluster1303_entry [arrowhead=none, color="black", style=dashed]
    cluster1303_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1303_entry -> node6177 [color="black"]
    cluster1303_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1303_exit_name -> cluster1303_exit [arrowhead=none, color="black", style=dashed]
    cluster1303_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6177_name [shape=none, label=<<font color="black">Call[6177]</font>>]
    node6177_name -> node6177 [arrowhead=none, color="black", style=dashed]
    node6177 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6177 -> node6178 [color="black"]
    node6178_name [shape=none, label=<<font color="black">Block[6178]</font>>]
    node6178_name -> node6178 [arrowhead=none, color="black", style=dashed]
    node6178 [shape=box, label=<<font color="black">[0] let expr = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6178 -> node6179 [color="black"]
    node6179_name [shape=none, label=<<font color="black">Call[6179]</font>>]
    node6179_name -> node6179 [arrowhead=none, color="black", style=dashed]
    node6179 [shape=cds, label=<<font color="black">%1 = clo&lt;GetValue&gt;(expr)</font>> color="black" fillcolor="white", style=filled]
    node6179 -> node6180 [color="black"]
    node6180_name [shape=none, label=<<font color="black">Call[6180]</font>>]
    node6180_name -> node6180 [arrowhead=none, color="black", style=dashed]
    node6180 [shape=cds, label=<<font color="black">%2 = clo&lt;ToNumeric&gt;([? %1])</font>> color="black" fillcolor="white", style=filled]
    node6180 -> node6181 [color="black"]
    node6181_name [shape=none, label=<<font color="black">Block[6181]</font>>]
    node6181_name -> node6181 [arrowhead=none, color="black", style=dashed]
    node6181 [shape=box, label=<<font color="black">[0] let oldValue = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6181 -> node6182 [color="black"]
    node6182_name [shape=none, label=<<font color="black">Branch[6182]</font>>]
    node6182_name -> node6182 [arrowhead=none, color="black", style=dashed]
    node6182 [shape=diamond, label=<<font color="black">(= (typeof oldValue) @Number)</font>> color="black" fillcolor="white", style=filled]
    node6182 -> node6183 [label=<<font color="black">true</font>> color="black"]
    node6182 -> node6185 [label=<<font color="black">false</font>> color="black"]
    node6183_name [shape=none, label=<<font color="black">Call[6183]</font>>]
    node6183_name -> node6183 [arrowhead=none, color="black", style=dashed]
    node6183 [shape=cds, label=<<font color="black">%3 = clo&lt;Number::add&gt;(oldValue, 1.0f)</font>> color="black" fillcolor="white", style=filled]
    node6183 -> node6184 [color="black"]
    node6185_name [shape=none, label=<<font color="black">Block[6185]</font>>]
    node6185_name -> node6185 [arrowhead=none, color="black", style=dashed]
    node6185 [shape=box, label=<<font color="black">[0] assert (= (typeof oldValue) @BigInt)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6185 -> node6186 [color="black"]
    node6184_name [shape=none, label=<<font color="black">Block[6184]</font>>]
    node6184_name -> node6184 [arrowhead=none, color="black", style=dashed]
    node6184 [shape=box, label=<<font color="black">[0] let newValue = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6184 -> node6188 [color="black"]
    node6186_name [shape=none, label=<<font color="black">Call[6186]</font>>]
    node6186_name -> node6186 [arrowhead=none, color="black", style=dashed]
    node6186 [shape=cds, label=<<font color="black">%4 = clo&lt;BigInt::add&gt;(oldValue, 1n)</font>> color="black" fillcolor="white", style=filled]
    node6186 -> node6187 [color="black"]
    node6188_name [shape=none, label=<<font color="black">Call[6188]</font>>]
    node6188_name -> node6188 [arrowhead=none, color="black", style=dashed]
    node6188 [shape=cds, label=<<font color="black">%5 = clo&lt;PutValue&gt;(expr, newValue)</font>> color="black" fillcolor="white", style=filled]
    node6188 -> node6189 [color="black"]
    node6187_name [shape=none, label=<<font color="black">Block[6187]</font>>]
    node6187_name -> node6187 [arrowhead=none, color="black", style=dashed]
    node6187 [shape=box, label=<<font color="black">[0] let newValue = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6187 -> node6188 [color="black"]
    node6189_name [shape=none, label=<<font color="black">Block[6189]</font>>]
    node6189_name -> node6189 [arrowhead=none, color="black", style=dashed]
    node6189 [shape=box, label=<<font color="black">[0] [? %5]<BR ALIGN="LEFT"/>[1] return newValue<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6189 -> cluster1303_exit [color="black"]
  }
}