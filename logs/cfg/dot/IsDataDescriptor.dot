digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster68 {
    label = "def IsDataDescriptor(Desc: PropertyDescriptor | Undefined): Boolean"
    style = rounded
    cluster68_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster68_entry_name -> cluster68_entry [arrowhead=none, color="black", style=dashed]
    cluster68_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster68_entry -> node468 [color="black"]
    cluster68_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster68_exit_name -> cluster68_exit [arrowhead=none, color="black", style=dashed]
    cluster68_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node468_name [shape=none, label=<<font color="black">Branch[468]</font>>]
    node468_name -> node468 [arrowhead=none, color="black", style=dashed]
    node468 [shape=diamond, label=<<font color="black">(= Desc undefined)</font>> color="black" fillcolor="white", style=filled]
    node468 -> node469 [label=<<font color="black">true</font>> color="black"]
    node468 -> node470 [label=<<font color="black">false</font>> color="black"]
    node469_name [shape=none, label=<<font color="black">Block[469]</font>>]
    node469_name -> node469 [arrowhead=none, color="black", style=dashed]
    node469 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node469 -> cluster68_exit [color="black"]
    node470_name [shape=none, label=<<font color="black">Branch[470]</font>>]
    node470_name -> node470 [arrowhead=none, color="black", style=dashed]
    node470 [shape=diamond, label=<<font color="black">(! (= Desc.Value absent))</font>> color="black" fillcolor="white", style=filled]
    node470 -> node471 [label=<<font color="black">true</font>> color="black"]
    node470 -> node472 [label=<<font color="black">false</font>> color="black"]
    node471_name [shape=none, label=<<font color="black">Block[471]</font>>]
    node471_name -> node471 [arrowhead=none, color="black", style=dashed]
    node471 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node471 -> cluster68_exit [color="black"]
    node472_name [shape=none, label=<<font color="black">Branch[472]</font>>]
    node472_name -> node472 [arrowhead=none, color="black", style=dashed]
    node472 [shape=diamond, label=<<font color="black">(! (= Desc.Writable absent))</font>> color="black" fillcolor="white", style=filled]
    node472 -> node473 [label=<<font color="black">true</font>> color="black"]
    node472 -> node474 [label=<<font color="black">false</font>> color="black"]
    node473_name [shape=none, label=<<font color="black">Block[473]</font>>]
    node473_name -> node473 [arrowhead=none, color="black", style=dashed]
    node473 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node473 -> cluster68_exit [color="black"]
    node474_name [shape=none, label=<<font color="black">Block[474]</font>>]
    node474_name -> node474 [arrowhead=none, color="black", style=dashed]
    node474 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node474 -> cluster68_exit [color="black"]
  }
}