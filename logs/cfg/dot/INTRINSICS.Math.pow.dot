digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2101 {
    label = "def <BUILTIN>:INTRINSICS.Math.pow(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2101_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2101_entry_name -> cluster2101_entry [arrowhead=none, color="black", style=dashed]
    cluster2101_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2101_entry -> node12339 [color="black"]
    cluster2101_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2101_exit_name -> cluster2101_exit [arrowhead=none, color="black", style=dashed]
    cluster2101_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node12339_name [shape=none, label=<<font color="black">Branch[12339]</font>>]
    node12339_name -> node12339 [arrowhead=none, color="black", style=dashed]
    node12339 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node12339 -> node12340 [label=<<font color="black">true</font>> color="black"]
    node12339 -> node12341 [label=<<font color="black">false</font>> color="black"]
    node12340_name [shape=none, label=<<font color="black">Block[12340]</font>>]
    node12340_name -> node12340 [arrowhead=none, color="black", style=dashed]
    node12340 [shape=box, label=<<font color="black">[0] let base = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12340 -> node12342 [color="black"]
    node12341_name [shape=none, label=<<font color="black">Block[12341]</font>>]
    node12341_name -> node12341 [arrowhead=none, color="black", style=dashed]
    node12341 [shape=box, label=<<font color="black">[0] let base = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12341 -> node12342 [color="black"]
    node12342_name [shape=none, label=<<font color="black">Branch[12342]</font>>]
    node12342_name -> node12342 [arrowhead=none, color="black", style=dashed]
    node12342 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node12342 -> node12343 [label=<<font color="black">true</font>> color="black"]
    node12342 -> node12344 [label=<<font color="black">false</font>> color="black"]
    node12343_name [shape=none, label=<<font color="black">Block[12343]</font>>]
    node12343_name -> node12343 [arrowhead=none, color="black", style=dashed]
    node12343 [shape=box, label=<<font color="black">[0] let exponent = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12343 -> node12345 [color="black"]
    node12344_name [shape=none, label=<<font color="black">Block[12344]</font>>]
    node12344_name -> node12344 [arrowhead=none, color="black", style=dashed]
    node12344 [shape=box, label=<<font color="black">[0] let exponent = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12344 -> node12345 [color="black"]
    node12345_name [shape=none, label=<<font color="black">Call[12345]</font>>]
    node12345_name -> node12345 [arrowhead=none, color="black", style=dashed]
    node12345 [shape=cds, label=<<font color="black">%0 = clo&lt;ToNumber&gt;(base)</font>> color="black" fillcolor="white", style=filled]
    node12345 -> node12346 [color="black"]
    node12346_name [shape=none, label=<<font color="black">Block[12346]</font>>]
    node12346_name -> node12346 [arrowhead=none, color="black", style=dashed]
    node12346 [shape=box, label=<<font color="black">[0] base = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12346 -> node12347 [color="black"]
    node12347_name [shape=none, label=<<font color="black">Call[12347]</font>>]
    node12347_name -> node12347 [arrowhead=none, color="black", style=dashed]
    node12347 [shape=cds, label=<<font color="black">%1 = clo&lt;ToNumber&gt;(exponent)</font>> color="black" fillcolor="white", style=filled]
    node12347 -> node12348 [color="black"]
    node12348_name [shape=none, label=<<font color="black">Block[12348]</font>>]
    node12348_name -> node12348 [arrowhead=none, color="black", style=dashed]
    node12348 [shape=box, label=<<font color="black">[0] exponent = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12348 -> node12349 [color="black"]
    node12349_name [shape=none, label=<<font color="black">Call[12349]</font>>]
    node12349_name -> node12349 [arrowhead=none, color="black", style=dashed]
    node12349 [shape=cds, label=<<font color="black">%2 = clo&lt;Number::exponentiate&gt;(base, exponent)</font>> color="black" fillcolor="white", style=filled]
    node12349 -> node12350 [color="black"]
    node12350_name [shape=none, label=<<font color="black">Block[12350]</font>>]
    node12350_name -> node12350 [arrowhead=none, color="black", style=dashed]
    node12350 [shape=box, label=<<font color="black">[0] return %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12350 -> cluster2101_exit [color="black"]
  }
}