digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster549 {
    label = "def <SYNTAX>:StatementList[1,0].ContainsUndefinedBreakTarget(this: Ast:StatementList[1,0], labelSet: Unknown): Boolean"
    style = rounded
    cluster549_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster549_entry_name -> cluster549_entry [arrowhead=none, color="black", style=dashed]
    cluster549_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster549_entry -> node2519 [color="black"]
    cluster549_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster549_exit_name -> cluster549_exit [arrowhead=none, color="black", style=dashed]
    cluster549_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2519_name [shape=none, label=<<font color="black">Call[2519]</font>>]
    node2519_name -> node2519 [arrowhead=none, color="black", style=dashed]
    node2519 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2519 -> node2520 [color="black"]
    node2520_name [shape=none, label=<<font color="black">Block[2520]</font>>]
    node2520_name -> node2520 [arrowhead=none, color="black", style=dashed]
    node2520 [shape=box, label=<<font color="black">[0] let hasUndefinedLabels = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2520 -> node2521 [color="black"]
    node2521_name [shape=none, label=<<font color="black">Branch[2521]</font>>]
    node2521_name -> node2521 [arrowhead=none, color="black", style=dashed]
    node2521 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white", style=filled]
    node2521 -> node2522 [label=<<font color="black">true</font>> color="black"]
    node2521 -> node2523 [label=<<font color="black">false</font>> color="black"]
    node2522_name [shape=none, label=<<font color="black">Block[2522]</font>>]
    node2522_name -> node2522 [arrowhead=none, color="black", style=dashed]
    node2522 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2522 -> cluster549_exit [color="black"]
    node2523_name [shape=none, label=<<font color="black">Call[2523]</font>>]
    node2523_name -> node2523 [arrowhead=none, color="black", style=dashed]
    node2523 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2523 -> node2524 [color="black"]
    node2524_name [shape=none, label=<<font color="black">Block[2524]</font>>]
    node2524_name -> node2524 [arrowhead=none, color="black", style=dashed]
    node2524 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2524 -> cluster549_exit [color="black"]
  }
}