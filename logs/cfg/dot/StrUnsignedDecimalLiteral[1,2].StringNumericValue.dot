digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster91 {
    label = "def <SYNTAX>:StrUnsignedDecimalLiteral[1,2].StringNumericValue(this: Ast:StrUnsignedDecimalLiteral[1,2]): Number"
    style = rounded
    cluster91_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster91_entry_name -> cluster91_entry [arrowhead=none, color="black", style=dashed]
    cluster91_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster91_entry -> node671 [color="black"]
    cluster91_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster91_exit_name -> cluster91_exit [arrowhead=none, color="black", style=dashed]
    cluster91_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node671_name [shape=none, label=<<font color="black">Call[671]</font>>]
    node671_name -> node671 [arrowhead=none, color="black", style=dashed]
    node671 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;MV()</font>> color="black" fillcolor="white", style=filled]
    node671 -> node672 [color="black"]
    node672_name [shape=none, label=<<font color="black">Block[672]</font>>]
    node672_name -> node672 [arrowhead=none, color="black", style=dashed]
    node672 [shape=box, label=<<font color="black">[0] let a = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node672 -> node673 [color="black"]
    node673_name [shape=none, label=<<font color="black">Branch[673]</font>>]
    node673_name -> node673 [arrowhead=none, color="black", style=dashed]
    node673 [shape=diamond, label=<<font color="black">(! (= this[1] absent))</font>> color="black" fillcolor="white", style=filled]
    node673 -> node674 [label=<<font color="black">true</font>> color="black"]
    node673 -> node676 [label=<<font color="black">false</font>> color="black"]
    node674_name [shape=none, label=<<font color="black">Call[674]</font>>]
    node674_name -> node674 [arrowhead=none, color="black", style=dashed]
    node674 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;MV()</font>> color="black" fillcolor="white", style=filled]
    node674 -> node675 [color="black"]
    node676_name [shape=none, label=<<font color="black">Block[676]</font>>]
    node676_name -> node676 [arrowhead=none, color="black", style=dashed]
    node676 [shape=box, label=<<font color="black">[0] let b = 0<BR ALIGN="LEFT"/>[1] let n = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node676 -> node677 [color="black"]
    node675_name [shape=none, label=<<font color="black">Block[675]</font>>]
    node675_name -> node675 [arrowhead=none, color="black", style=dashed]
    node675 [shape=box, label=<<font color="black">[0] let b = %1<BR ALIGN="LEFT"/>[1] (yet &quot;Let _n_ be the number of code points in the second |DecimalDigits|.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node675 -> node677 [color="black"]
    node677_name [shape=none, label=<<font color="black">Branch[677]</font>>]
    node677_name -> node677 [arrowhead=none, color="black", style=dashed]
    node677 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node677 -> node678 [label=<<font color="black">true</font>> color="black"]
    node677 -> node680 [label=<<font color="black">false</font>> color="black"]
    node678_name [shape=none, label=<<font color="black">Call[678]</font>>]
    node678_name -> node678 [arrowhead=none, color="black", style=dashed]
    node678 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;MV()</font>> color="black" fillcolor="white", style=filled]
    node678 -> node679 [color="black"]
    node680_name [shape=none, label=<<font color="black">Block[680]</font>>]
    node680_name -> node680 [arrowhead=none, color="black", style=dashed]
    node680 [shape=box, label=<<font color="black">[0] let e = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node680 -> node681 [color="black"]
    node679_name [shape=none, label=<<font color="black">Block[679]</font>>]
    node679_name -> node679 [arrowhead=none, color="black", style=dashed]
    node679 [shape=box, label=<<font color="black">[0] let e = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node679 -> node681 [color="black"]
    node681_name [shape=none, label=<<font color="black">Call[681]</font>>]
    node681_name -> node681 [arrowhead=none, color="black", style=dashed]
    node681 [shape=cds, label=<<font color="black">%3 = clo&lt;RoundMVResult&gt;((* (+ a (* b (** 10 (- n)))) (** 10 e)))</font>> color="black" fillcolor="white", style=filled]
    node681 -> node682 [color="black"]
    node682_name [shape=none, label=<<font color="black">Block[682]</font>>]
    node682_name -> node682 [arrowhead=none, color="black", style=dashed]
    node682 [shape=box, label=<<font color="black">[0] return %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node682 -> cluster91_exit [color="black"]
  }
}