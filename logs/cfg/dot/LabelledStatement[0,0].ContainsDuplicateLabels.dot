digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster529 {
    label = "def <SYNTAX>:LabelledStatement[0,0].ContainsDuplicateLabels(this: Ast:LabelledStatement[0,0], labelSet: Unknown): Boolean"
    style = rounded
    cluster529_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster529_entry_name -> cluster529_entry [arrowhead=none, color="black", style=dashed]
    cluster529_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster529_entry -> node2470 [color="black"]
    cluster529_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster529_exit_name -> cluster529_exit [arrowhead=none, color="black", style=dashed]
    cluster529_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2470_name [shape=none, label=<<font color="black">Call[2470]</font>>]
    node2470_name -> node2470 [arrowhead=none, color="black", style=dashed]
    node2470 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;StringValue()</font>> color="black" fillcolor="white", style=filled]
    node2470 -> node2471 [color="black"]
    node2471_name [shape=none, label=<<font color="black">Block[2471]</font>>]
    node2471_name -> node2471 [arrowhead=none, color="black", style=dashed]
    node2471 [shape=box, label=<<font color="black">[0] let label = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2471 -> node2472 [color="black"]
    node2472_name [shape=none, label=<<font color="black">Branch[2472]</font>>]
    node2472_name -> node2472 [arrowhead=none, color="black", style=dashed]
    node2472 [shape=diamond, label=<<font color="black">(contains labelSet label)</font>> color="black" fillcolor="white", style=filled]
    node2472 -> node2473 [label=<<font color="black">true</font>> color="black"]
    node2472 -> node2474 [label=<<font color="black">false</font>> color="black"]
    node2473_name [shape=none, label=<<font color="black">Block[2473]</font>>]
    node2473_name -> node2473 [arrowhead=none, color="black", style=dashed]
    node2473 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2473 -> cluster529_exit [color="black"]
    node2474_name [shape=none, label=<<font color="black">Block[2474]</font>>]
    node2474_name -> node2474 [arrowhead=none, color="black", style=dashed]
    node2474 [shape=box, label=<<font color="black">[0] let newLabelSet = (list-concat labelSet (new [label])[#294])[#293]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2474 -> node2475 [color="black"]
    node2475_name [shape=none, label=<<font color="black">Call[2475]</font>>]
    node2475_name -> node2475 [arrowhead=none, color="black", style=dashed]
    node2475 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;ContainsDuplicateLabels(newLabelSet)</font>> color="black" fillcolor="white", style=filled]
    node2475 -> node2476 [color="black"]
    node2476_name [shape=none, label=<<font color="black">Block[2476]</font>>]
    node2476_name -> node2476 [arrowhead=none, color="black", style=dashed]
    node2476 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2476 -> cluster529_exit [color="black"]
  }
}