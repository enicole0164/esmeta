digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1106 {
    label = "def ArrayCreate(length: Unknown["NonnegativeInteger"], proto?: Unknown): Normal[ArrayExoticObject] | Abrupt"
    style = rounded
    cluster1106_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1106_entry_name -> cluster1106_entry [arrowhead=none, color="black", style=dashed]
    cluster1106_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1106_entry -> node4566 [color="black"]
    cluster1106_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1106_exit_name -> cluster1106_exit [arrowhead=none, color="black", style=dashed]
    cluster1106_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4566_name [shape=none, label=<<font color="black">Branch[4566]</font>>]
    node4566_name -> node4566 [arrowhead=none, color="black", style=dashed]
    node4566 [shape=diamond, label=<<font color="black">(&lt; (- (** 2 32) 1) length)</font>> color="black" fillcolor="white", style=filled]
    node4566 -> node4567 [label=<<font color="black">true</font>> color="black"]
    node4566 -> node4568 [label=<<font color="black">false</font>> color="black"]
    node4567_name [shape=none, label=<<font color="black">Block[4567]</font>>]
    node4567_name -> node4567 [arrowhead=none, color="black", style=dashed]
    node4567 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%RangeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#448])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4567 -> cluster1106_exit [color="black"]
    node4568_name [shape=none, label=<<font color="black">Branch[4568]</font>>]
    node4568_name -> node4568 [arrowhead=none, color="black", style=dashed]
    node4568 [shape=diamond, label=<<font color="black">(= proto absent)</font>> color="black" fillcolor="white", style=filled]
    node4568 -> node4569 [label=<<font color="black">true</font>> color="black"]
    node4568 -> node4570 [label=<<font color="black">false</font>> color="black"]
    node4569_name [shape=none, label=<<font color="black">Block[4569]</font>>]
    node4569_name -> node4569 [arrowhead=none, color="black", style=dashed]
    node4569 [shape=box, label=<<font color="black">[0] proto = @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%Array.prototype%&quot;]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4569 -> node4570 [color="black"]
    node4570_name [shape=none, label=<<font color="black">Call[4570]</font>>]
    node4570_name -> node4570 [arrowhead=none, color="black", style=dashed]
    node4570 [shape=cds, label=<<font color="black">%0 = clo&lt;MakeBasicObject&gt;((new [&quot;Prototype&quot;, &quot;Extensible&quot;])[#449])</font>> color="black" fillcolor="white", style=filled]
    node4570 -> node4571 [color="black"]
    node4571_name [shape=none, label=<<font color="black">Block[4571]</font>>]
    node4571_name -> node4571 [arrowhead=none, color="black", style=dashed]
    node4571 [shape=box, label=<<font color="black">[0] let A = %0<BR ALIGN="LEFT"/>[1] A.Prototype = proto<BR ALIGN="LEFT"/>[2] A.DefineOwnProperty = clo&lt;ArrayExoticObject.DefineOwnProperty&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4571 -> node4572 [color="black"]
    node4572_name [shape=none, label=<<font color="black">Call[4572]</font>>]
    node4572_name -> node4572 [arrowhead=none, color="black", style=dashed]
    node4572 [shape=cds, label=<<font color="black">%1 = clo&lt;OrdinaryDefineOwnProperty&gt;(A, &quot;length&quot;, (new PropertyDescriptor(&quot;Value&quot; -&gt; ([number] length), &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; false))[#450])</font>> color="black" fillcolor="white", style=filled]
    node4572 -> node4573 [color="black"]
    node4573_name [shape=none, label=<<font color="black">Block[4573]</font>>]
    node4573_name -> node4573 [arrowhead=none, color="black", style=dashed]
    node4573 [shape=box, label=<<font color="black">[0] [! %1]<BR ALIGN="LEFT"/>[1] return A<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4573 -> cluster1106_exit [color="black"]
  }
}