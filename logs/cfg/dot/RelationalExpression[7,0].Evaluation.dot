digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1325 {
    label = "def <SYNTAX>:RelationalExpression[7,0].Evaluation(this: Ast:RelationalExpression[7,0]): Unknown"
    style = rounded
    cluster1325_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1325_entry_name -> cluster1325_entry [arrowhead=none, color="black", style=dashed]
    cluster1325_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1325_entry -> node6382 [color="black"]
    cluster1325_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1325_exit_name -> cluster1325_exit [arrowhead=none, color="black", style=dashed]
    cluster1325_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6382_name [shape=none, label=<<font color="black">Call[6382]</font>>]
    node6382_name -> node6382 [arrowhead=none, color="black", style=dashed]
    node6382 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;StringValue()</font>> color="black" fillcolor="white", style=filled]
    node6382 -> node6383 [color="black"]
    node6383_name [shape=none, label=<<font color="black">Block[6383]</font>>]
    node6383_name -> node6383 [arrowhead=none, color="black", style=dashed]
    node6383 [shape=box, label=<<font color="black">[0] let privateIdentifier = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6383 -> node6384 [color="black"]
    node6384_name [shape=none, label=<<font color="black">Call[6384]</font>>]
    node6384_name -> node6384 [arrowhead=none, color="black", style=dashed]
    node6384 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6384 -> node6385 [color="black"]
    node6385_name [shape=none, label=<<font color="black">Block[6385]</font>>]
    node6385_name -> node6385 [arrowhead=none, color="black", style=dashed]
    node6385 [shape=box, label=<<font color="black">[0] let rref = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6385 -> node6386 [color="black"]
    node6386_name [shape=none, label=<<font color="black">Call[6386]</font>>]
    node6386_name -> node6386 [arrowhead=none, color="black", style=dashed]
    node6386 [shape=cds, label=<<font color="black">%2 = clo&lt;GetValue&gt;(rref)</font>> color="black" fillcolor="white", style=filled]
    node6386 -> node6387 [color="black"]
    node6387_name [shape=none, label=<<font color="black">Block[6387]</font>>]
    node6387_name -> node6387 [arrowhead=none, color="black", style=dashed]
    node6387 [shape=box, label=<<font color="black">[0] let rval = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6387 -> node6388 [color="black"]
    node6388_name [shape=none, label=<<font color="black">Branch[6388]</font>>]
    node6388_name -> node6388 [arrowhead=none, color="black", style=dashed]
    node6388 [shape=diamond, label=<<font color="black">(! (= (typeof rval) @Object))</font>> color="black" fillcolor="white", style=filled]
    node6388 -> node6389 [label=<<font color="black">true</font>> color="black"]
    node6388 -> node6390 [label=<<font color="black">false</font>> color="black"]
    node6389_name [shape=none, label=<<font color="black">Block[6389]</font>>]
    node6389_name -> node6389 [arrowhead=none, color="black", style=dashed]
    node6389 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#589])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6389 -> cluster1325_exit [color="black"]
    node6390_name [shape=none, label=<<font color="black">Block[6390]</font>>]
    node6390_name -> node6390 [arrowhead=none, color="black", style=dashed]
    node6390 [shape=box, label=<<font color="black">[0] let privateEnv = @EXECUTION_STACK[0].PrivateEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6390 -> node6391 [color="black"]
    node6391_name [shape=none, label=<<font color="black">Call[6391]</font>>]
    node6391_name -> node6391 [arrowhead=none, color="black", style=dashed]
    node6391 [shape=cds, label=<<font color="black">%3 = clo&lt;ResolvePrivateIdentifier&gt;(privateEnv, privateIdentifier)</font>> color="black" fillcolor="white", style=filled]
    node6391 -> node6392 [color="black"]
    node6392_name [shape=none, label=<<font color="black">Block[6392]</font>>]
    node6392_name -> node6392 [arrowhead=none, color="black", style=dashed]
    node6392 [shape=box, label=<<font color="black">[0] let privateName = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6392 -> node6393 [color="black"]
    node6393_name [shape=none, label=<<font color="black">Call[6393]</font>>]
    node6393_name -> node6393 [arrowhead=none, color="black", style=dashed]
    node6393 [shape=cds, label=<<font color="black">%4 = clo&lt;PrivateElementFind&gt;(rval, privateName)</font>> color="black" fillcolor="white", style=filled]
    node6393 -> node6394 [color="black"]
    node6394_name [shape=none, label=<<font color="black">Branch[6394]</font>>]
    node6394_name -> node6394 [arrowhead=none, color="black", style=dashed]
    node6394 [shape=diamond, label=<<font color="black">(! (= %4 ~empty~))</font>> color="black" fillcolor="white", style=filled]
    node6394 -> node6395 [label=<<font color="black">true</font>> color="black"]
    node6394 -> node6396 [label=<<font color="black">false</font>> color="black"]
    node6395_name [shape=none, label=<<font color="black">Block[6395]</font>>]
    node6395_name -> node6395 [arrowhead=none, color="black", style=dashed]
    node6395 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6395 -> cluster1325_exit [color="black"]
    node6396_name [shape=none, label=<<font color="black">Block[6396]</font>>]
    node6396_name -> node6396 [arrowhead=none, color="black", style=dashed]
    node6396 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6396 -> cluster1325_exit [color="black"]
  }
}