digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2116 {
    label = "def <BUILTIN>:INTRINSICS.Date(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2116_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2116_entry_name -> cluster2116_entry [arrowhead=none, color="black", style=dashed]
    cluster2116_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2116_entry -> node12468 [color="black"]
    cluster2116_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2116_exit_name -> cluster2116_exit [arrowhead=none, color="black", style=dashed]
    cluster2116_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node12468_name [shape=none, label=<<font color="black">Block[12468]</font>>]
    node12468_name -> node12468 [arrowhead=none, color="black", style=dashed]
    node12468 [shape=box, label=<<font color="black">[0] let values = argumentsList<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12468 -> node12469 [color="black"]
    node12469_name [shape=none, label=<<font color="black">Branch[12469]</font>>]
    node12469_name -> node12469 [arrowhead=none, color="black", style=dashed]
    node12469 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white", style=filled]
    node12469 -> node12470 [label=<<font color="black">true</font>> color="black"]
    node12469 -> node12473 [label=<<font color="black">false</font>> color="black"]
    node12470_name [shape=none, label=<<font color="black">Block[12470]</font>>]
    node12470_name -> node12470 [arrowhead=none, color="black", style=dashed]
    node12470 [shape=box, label=<<font color="black">[0] (yet &quot;Let _now_ be the time value (UTC) identifying the current time.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12470 -> node12471 [color="black"]
    node12473_name [shape=none, label=<<font color="black">Block[12473]</font>>]
    node12473_name -> node12473 [arrowhead=none, color="black", style=dashed]
    node12473 [shape=box, label=<<font color="black">[0] let numberOfArgs = values.length<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12473 -> node12474 [color="black"]
    node12471_name [shape=none, label=<<font color="black">Call[12471]</font>>]
    node12471_name -> node12471 [arrowhead=none, color="black", style=dashed]
    node12471 [shape=cds, label=<<font color="black">%0 = clo&lt;ToDateString&gt;(now)</font>> color="black" fillcolor="white", style=filled]
    node12471 -> node12472 [color="black"]
    node12474_name [shape=none, label=<<font color="black">Branch[12474]</font>>]
    node12474_name -> node12474 [arrowhead=none, color="black", style=dashed]
    node12474 [shape=diamond, label=<<font color="black">(== numberOfArgs 0)</font>> color="black" fillcolor="white", style=filled]
    node12474 -> node12475 [label=<<font color="black">true</font>> color="black"]
    node12474 -> node12476 [label=<<font color="black">false</font>> color="black"]
    node12472_name [shape=none, label=<<font color="black">Block[12472]</font>>]
    node12472_name -> node12472 [arrowhead=none, color="black", style=dashed]
    node12472 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12472 -> cluster2116_exit [color="black"]
    node12475_name [shape=none, label=<<font color="black">Block[12475]</font>>]
    node12475_name -> node12475 [arrowhead=none, color="black", style=dashed]
    node12475 [shape=box, label=<<font color="black">[0] (yet &quot;Let _dv_ be the time value (UTC) identifying the current time.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12475 -> node12525 [color="black"]
    node12476_name [shape=none, label=<<font color="black">Branch[12476]</font>>]
    node12476_name -> node12476 [arrowhead=none, color="black", style=dashed]
    node12476 [shape=diamond, label=<<font color="black">(== numberOfArgs 1)</font>> color="black" fillcolor="white", style=filled]
    node12476 -> node12477 [label=<<font color="black">true</font>> color="black"]
    node12476 -> node12489 [label=<<font color="black">false</font>> color="black"]
    node12525_name [shape=none, label=<<font color="black">Call[12525]</font>>]
    node12525_name -> node12525 [arrowhead=none, color="black", style=dashed]
    node12525 [shape=cds, label=<<font color="black">%18 = clo&lt;OrdinaryCreateFromConstructor&gt;(NewTarget, &quot;%Date.prototype%&quot;, (new [&quot;DateValue&quot;])[#938])</font>> color="black" fillcolor="white", style=filled]
    node12525 -> node12526 [color="black"]
    node12477_name [shape=none, label=<<font color="black">Block[12477]</font>>]
    node12477_name -> node12477 [arrowhead=none, color="black", style=dashed]
    node12477 [shape=box, label=<<font color="black">[0] let value = values[0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12477 -> node12478 [color="black"]
    node12489_name [shape=none, label=<<font color="black">Block[12489]</font>>]
    node12489_name -> node12489 [arrowhead=none, color="black", style=dashed]
    node12489 [shape=box, label=<<font color="black">[0] assert (! (&lt; numberOfArgs 2))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12489 -> node12490 [color="black"]
    node12526_name [shape=none, label=<<font color="black">Block[12526]</font>>]
    node12526_name -> node12526 [arrowhead=none, color="black", style=dashed]
    node12526 [shape=box, label=<<font color="black">[0] let O = [? %18]<BR ALIGN="LEFT"/>[1] O.DateValue = dv<BR ALIGN="LEFT"/>[2] return O<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12526 -> cluster2116_exit [color="black"]
    node12478_name [shape=none, label=<<font color="black">Branch[12478]</font>>]
    node12478_name -> node12478 [arrowhead=none, color="black", style=dashed]
    node12478 [shape=diamond, label=<<font color="black">(&amp;&amp; (= (typeof value) @Object) (! (= value.DateValue absent)))</font>> color="black" fillcolor="white", style=filled]
    node12478 -> node12479 [label=<<font color="black">true</font>> color="black"]
    node12478 -> node12481 [label=<<font color="black">false</font>> color="black"]
    node12490_name [shape=none, label=<<font color="black">Call[12490]</font>>]
    node12490_name -> node12490 [arrowhead=none, color="black", style=dashed]
    node12490 [shape=cds, label=<<font color="black">%5 = clo&lt;ToNumber&gt;(values[0])</font>> color="black" fillcolor="white", style=filled]
    node12490 -> node12491 [color="black"]
    node12479_name [shape=none, label=<<font color="black">Call[12479]</font>>]
    node12479_name -> node12479 [arrowhead=none, color="black", style=dashed]
    node12479 [shape=cds, label=<<font color="black">%1 = clo&lt;thisTimeValue&gt;(value)</font>> color="black" fillcolor="white", style=filled]
    node12479 -> node12480 [color="black"]
    node12481_name [shape=none, label=<<font color="black">Call[12481]</font>>]
    node12481_name -> node12481 [arrowhead=none, color="black", style=dashed]
    node12481 [shape=cds, label=<<font color="black">%2 = clo&lt;ToPrimitive&gt;(value)</font>> color="black" fillcolor="white", style=filled]
    node12481 -> node12482 [color="black"]
    node12491_name [shape=none, label=<<font color="black">Block[12491]</font>>]
    node12491_name -> node12491 [arrowhead=none, color="black", style=dashed]
    node12491 [shape=box, label=<<font color="black">[0] let y = [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12491 -> node12492 [color="black"]
    node12480_name [shape=none, label=<<font color="black">Block[12480]</font>>]
    node12480_name -> node12480 [arrowhead=none, color="black", style=dashed]
    node12480 [shape=box, label=<<font color="black">[0] let tv = [! %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12480 -> node12487 [color="black"]
    node12482_name [shape=none, label=<<font color="black">Block[12482]</font>>]
    node12482_name -> node12482 [arrowhead=none, color="black", style=dashed]
    node12482 [shape=box, label=<<font color="black">[0] let v = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12482 -> node12483 [color="black"]
    node12492_name [shape=none, label=<<font color="black">Call[12492]</font>>]
    node12492_name -> node12492 [arrowhead=none, color="black", style=dashed]
    node12492 [shape=cds, label=<<font color="black">%6 = clo&lt;ToNumber&gt;(values[1])</font>> color="black" fillcolor="white", style=filled]
    node12492 -> node12493 [color="black"]
    node12487_name [shape=none, label=<<font color="black">Call[12487]</font>>]
    node12487_name -> node12487 [arrowhead=none, color="black", style=dashed]
    node12487 [shape=cds, label=<<font color="black">%4 = clo&lt;TimeClip&gt;(tv)</font>> color="black" fillcolor="white", style=filled]
    node12487 -> node12488 [color="black"]
    node12483_name [shape=none, label=<<font color="black">Branch[12483]</font>>]
    node12483_name -> node12483 [arrowhead=none, color="black", style=dashed]
    node12483 [shape=diamond, label=<<font color="black">(= (typeof v) @String)</font>> color="black" fillcolor="white", style=filled]
    node12483 -> node12484 [label=<<font color="black">true</font>> color="black"]
    node12483 -> node12485 [label=<<font color="black">false</font>> color="black"]
    node12493_name [shape=none, label=<<font color="black">Block[12493]</font>>]
    node12493_name -> node12493 [arrowhead=none, color="black", style=dashed]
    node12493 [shape=box, label=<<font color="black">[0] let m = [? %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12493 -> node12494 [color="black"]
    node12488_name [shape=none, label=<<font color="black">Block[12488]</font>>]
    node12488_name -> node12488 [arrowhead=none, color="black", style=dashed]
    node12488 [shape=box, label=<<font color="black">[0] let dv = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12488 -> node12525 [color="black"]
    node12484_name [shape=none, label=<<font color="black">Block[12484]</font>>]
    node12484_name -> node12484 [arrowhead=none, color="black", style=dashed]
    node12484 [shape=box, label=<<font color="black">[0] assert (yet &quot;The next step never returns an abrupt completion because Type(_v_) is String.&quot;)<BR ALIGN="LEFT"/>[1] (yet &quot;Let _tv_ be the result of parsing _v_ as a date, in exactly the same manner as for the `parse` method (&lt;emu-xref href=\&quot;#sec-date.parse\&quot;&gt;&lt;/emu-xref&gt;).&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12484 -> node12487 [color="black"]
    node12485_name [shape=none, label=<<font color="black">Call[12485]</font>>]
    node12485_name -> node12485 [arrowhead=none, color="black", style=dashed]
    node12485 [shape=cds, label=<<font color="black">%3 = clo&lt;ToNumber&gt;(v)</font>> color="black" fillcolor="white", style=filled]
    node12485 -> node12486 [color="black"]
    node12494_name [shape=none, label=<<font color="black">Branch[12494]</font>>]
    node12494_name -> node12494 [arrowhead=none, color="black", style=dashed]
    node12494 [shape=diamond, label=<<font color="black">(&lt; 2 numberOfArgs)</font>> color="black" fillcolor="white", style=filled]
    node12494 -> node12495 [label=<<font color="black">true</font>> color="black"]
    node12494 -> node12497 [label=<<font color="black">false</font>> color="black"]
    node12486_name [shape=none, label=<<font color="black">Block[12486]</font>>]
    node12486_name -> node12486 [arrowhead=none, color="black", style=dashed]
    node12486 [shape=box, label=<<font color="black">[0] let tv = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12486 -> node12487 [color="black"]
    node12495_name [shape=none, label=<<font color="black">Call[12495]</font>>]
    node12495_name -> node12495 [arrowhead=none, color="black", style=dashed]
    node12495 [shape=cds, label=<<font color="black">%7 = clo&lt;ToNumber&gt;(values[2])</font>> color="black" fillcolor="white", style=filled]
    node12495 -> node12496 [color="black"]
    node12497_name [shape=none, label=<<font color="black">Block[12497]</font>>]
    node12497_name -> node12497 [arrowhead=none, color="black", style=dashed]
    node12497 [shape=box, label=<<font color="black">[0] let dt = 1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12497 -> node12498 [color="black"]
    node12496_name [shape=none, label=<<font color="black">Block[12496]</font>>]
    node12496_name -> node12496 [arrowhead=none, color="black", style=dashed]
    node12496 [shape=box, label=<<font color="black">[0] let dt = [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12496 -> node12498 [color="black"]
    node12498_name [shape=none, label=<<font color="black">Branch[12498]</font>>]
    node12498_name -> node12498 [arrowhead=none, color="black", style=dashed]
    node12498 [shape=diamond, label=<<font color="black">(&lt; 3 numberOfArgs)</font>> color="black" fillcolor="white", style=filled]
    node12498 -> node12499 [label=<<font color="black">true</font>> color="black"]
    node12498 -> node12501 [label=<<font color="black">false</font>> color="black"]
    node12499_name [shape=none, label=<<font color="black">Call[12499]</font>>]
    node12499_name -> node12499 [arrowhead=none, color="black", style=dashed]
    node12499 [shape=cds, label=<<font color="black">%8 = clo&lt;ToNumber&gt;(values[3])</font>> color="black" fillcolor="white", style=filled]
    node12499 -> node12500 [color="black"]
    node12501_name [shape=none, label=<<font color="black">Block[12501]</font>>]
    node12501_name -> node12501 [arrowhead=none, color="black", style=dashed]
    node12501 [shape=box, label=<<font color="black">[0] let h = 0.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12501 -> node12502 [color="black"]
    node12500_name [shape=none, label=<<font color="black">Block[12500]</font>>]
    node12500_name -> node12500 [arrowhead=none, color="black", style=dashed]
    node12500 [shape=box, label=<<font color="black">[0] let h = [? %8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12500 -> node12502 [color="black"]
    node12502_name [shape=none, label=<<font color="black">Branch[12502]</font>>]
    node12502_name -> node12502 [arrowhead=none, color="black", style=dashed]
    node12502 [shape=diamond, label=<<font color="black">(&lt; 4 numberOfArgs)</font>> color="black" fillcolor="white", style=filled]
    node12502 -> node12503 [label=<<font color="black">true</font>> color="black"]
    node12502 -> node12505 [label=<<font color="black">false</font>> color="black"]
    node12503_name [shape=none, label=<<font color="black">Call[12503]</font>>]
    node12503_name -> node12503 [arrowhead=none, color="black", style=dashed]
    node12503 [shape=cds, label=<<font color="black">%9 = clo&lt;ToNumber&gt;(values[4])</font>> color="black" fillcolor="white", style=filled]
    node12503 -> node12504 [color="black"]
    node12505_name [shape=none, label=<<font color="black">Block[12505]</font>>]
    node12505_name -> node12505 [arrowhead=none, color="black", style=dashed]
    node12505 [shape=box, label=<<font color="black">[0] let min = 0.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12505 -> node12506 [color="black"]
    node12504_name [shape=none, label=<<font color="black">Block[12504]</font>>]
    node12504_name -> node12504 [arrowhead=none, color="black", style=dashed]
    node12504 [shape=box, label=<<font color="black">[0] let min = [? %9]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12504 -> node12506 [color="black"]
    node12506_name [shape=none, label=<<font color="black">Branch[12506]</font>>]
    node12506_name -> node12506 [arrowhead=none, color="black", style=dashed]
    node12506 [shape=diamond, label=<<font color="black">(&lt; 5 numberOfArgs)</font>> color="black" fillcolor="white", style=filled]
    node12506 -> node12507 [label=<<font color="black">true</font>> color="black"]
    node12506 -> node12509 [label=<<font color="black">false</font>> color="black"]
    node12507_name [shape=none, label=<<font color="black">Call[12507]</font>>]
    node12507_name -> node12507 [arrowhead=none, color="black", style=dashed]
    node12507 [shape=cds, label=<<font color="black">%10 = clo&lt;ToNumber&gt;(values[5])</font>> color="black" fillcolor="white", style=filled]
    node12507 -> node12508 [color="black"]
    node12509_name [shape=none, label=<<font color="black">Block[12509]</font>>]
    node12509_name -> node12509 [arrowhead=none, color="black", style=dashed]
    node12509 [shape=box, label=<<font color="black">[0] let s = 0.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12509 -> node12510 [color="black"]
    node12508_name [shape=none, label=<<font color="black">Block[12508]</font>>]
    node12508_name -> node12508 [arrowhead=none, color="black", style=dashed]
    node12508 [shape=box, label=<<font color="black">[0] let s = [? %10]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12508 -> node12510 [color="black"]
    node12510_name [shape=none, label=<<font color="black">Branch[12510]</font>>]
    node12510_name -> node12510 [arrowhead=none, color="black", style=dashed]
    node12510 [shape=diamond, label=<<font color="black">(&lt; 6 numberOfArgs)</font>> color="black" fillcolor="white", style=filled]
    node12510 -> node12511 [label=<<font color="black">true</font>> color="black"]
    node12510 -> node12513 [label=<<font color="black">false</font>> color="black"]
    node12511_name [shape=none, label=<<font color="black">Call[12511]</font>>]
    node12511_name -> node12511 [arrowhead=none, color="black", style=dashed]
    node12511 [shape=cds, label=<<font color="black">%11 = clo&lt;ToNumber&gt;(values[6])</font>> color="black" fillcolor="white", style=filled]
    node12511 -> node12512 [color="black"]
    node12513_name [shape=none, label=<<font color="black">Block[12513]</font>>]
    node12513_name -> node12513 [arrowhead=none, color="black", style=dashed]
    node12513 [shape=box, label=<<font color="black">[0] let milli = 0.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12513 -> node12514 [color="black"]
    node12512_name [shape=none, label=<<font color="black">Block[12512]</font>>]
    node12512_name -> node12512 [arrowhead=none, color="black", style=dashed]
    node12512 [shape=box, label=<<font color="black">[0] let milli = [? %11]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12512 -> node12514 [color="black"]
    node12514_name [shape=none, label=<<font color="black">Branch[12514]</font>>]
    node12514_name -> node12514 [arrowhead=none, color="black", style=dashed]
    node12514 [shape=diamond, label=<<font color="black">(= y NaN)</font>> color="black" fillcolor="white", style=filled]
    node12514 -> node12515 [label=<<font color="black">true</font>> color="black"]
    node12514 -> node12516 [label=<<font color="black">false</font>> color="black"]
    node12515_name [shape=none, label=<<font color="black">Block[12515]</font>>]
    node12515_name -> node12515 [arrowhead=none, color="black", style=dashed]
    node12515 [shape=box, label=<<font color="black">[0] let yr = NaN<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12515 -> node12518 [color="black"]
    node12516_name [shape=none, label=<<font color="black">Call[12516]</font>>]
    node12516_name -> node12516 [arrowhead=none, color="black", style=dashed]
    node12516 [shape=cds, label=<<font color="black">%12 = clo&lt;ToIntegerOrInfinity&gt;(y)</font>> color="black" fillcolor="white", style=filled]
    node12516 -> node12517 [color="black"]
    node12518_name [shape=none, label=<<font color="black">Call[12518]</font>>]
    node12518_name -> node12518 [arrowhead=none, color="black", style=dashed]
    node12518 [shape=cds, label=<<font color="black">%13 = clo&lt;MakeDay&gt;(yr, m, dt)</font>> color="black" fillcolor="white", style=filled]
    node12518 -> node12519 [color="black"]
    node12517_name [shape=none, label=<<font color="black">Block[12517]</font>>]
    node12517_name -> node12517 [arrowhead=none, color="black", style=dashed]
    node12517 [shape=box, label=<<font color="black">[0] let yi = [! %12]<BR ALIGN="LEFT"/>[1] (yet &quot;If 0 &le; _yi_ &le; 99, let _yr_ be *1900*&lt;sub&gt;𝔽&lt;/sub&gt; + 𝔽(_yi_); otherwise, let _yr_ be _y_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12517 -> node12518 [color="black"]
    node12519_name [shape=none, label=<<font color="black">Call[12519]</font>>]
    node12519_name -> node12519 [arrowhead=none, color="black", style=dashed]
    node12519 [shape=cds, label=<<font color="black">%14 = clo&lt;MakeTime&gt;(h, min, s, milli)</font>> color="black" fillcolor="white", style=filled]
    node12519 -> node12520 [color="black"]
    node12520_name [shape=none, label=<<font color="black">Call[12520]</font>>]
    node12520_name -> node12520 [arrowhead=none, color="black", style=dashed]
    node12520 [shape=cds, label=<<font color="black">%15 = clo&lt;MakeDate&gt;(%13, %14)</font>> color="black" fillcolor="white", style=filled]
    node12520 -> node12521 [color="black"]
    node12521_name [shape=none, label=<<font color="black">Block[12521]</font>>]
    node12521_name -> node12521 [arrowhead=none, color="black", style=dashed]
    node12521 [shape=box, label=<<font color="black">[0] let finalDate = %15<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12521 -> node12522 [color="black"]
    node12522_name [shape=none, label=<<font color="black">Call[12522]</font>>]
    node12522_name -> node12522 [arrowhead=none, color="black", style=dashed]
    node12522 [shape=cds, label=<<font color="black">%16 = clo&lt;UTC&gt;(finalDate)</font>> color="black" fillcolor="white", style=filled]
    node12522 -> node12523 [color="black"]
    node12523_name [shape=none, label=<<font color="black">Call[12523]</font>>]
    node12523_name -> node12523 [arrowhead=none, color="black", style=dashed]
    node12523 [shape=cds, label=<<font color="black">%17 = clo&lt;TimeClip&gt;(%16)</font>> color="black" fillcolor="white", style=filled]
    node12523 -> node12524 [color="black"]
    node12524_name [shape=none, label=<<font color="black">Block[12524]</font>>]
    node12524_name -> node12524 [arrowhead=none, color="black", style=dashed]
    node12524 [shape=box, label=<<font color="black">[0] let dv = %17<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12524 -> node12525 [color="black"]
  }
}