digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster309 {
    label = "def <SYNTAX>:Module[0,0].LexicallyScopedDeclarations(this: Ast:Module[0,0]): List[Ast]"
    style = rounded
    cluster309_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster309_entry_name -> cluster309_entry [arrowhead=none, color="black", style=dashed]
    cluster309_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster309_entry -> node1859 [color="black"]
    cluster309_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster309_exit_name -> cluster309_exit [arrowhead=none, color="black", style=dashed]
    cluster309_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1859_name [shape=none, label=<<font color="black">Block[1859]</font>>]
    node1859_name -> node1859 [arrowhead=none, color="black", style=dashed]
    node1859 [shape=box, label=<<font color="black">[0] return (new [])[#167]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1859 -> cluster309_exit [color="black"]
  }
}