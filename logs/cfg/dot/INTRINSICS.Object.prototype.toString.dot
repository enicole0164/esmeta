digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2025 {
    label = "def <BUILTIN>:INTRINSICS.Object.prototype.toString(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2025_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2025_entry_name -> cluster2025_entry [arrowhead=none, color="black", style=dashed]
    cluster2025_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2025_entry -> node11371 [color="black"]
    cluster2025_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2025_exit_name -> cluster2025_exit [arrowhead=none, color="black", style=dashed]
    cluster2025_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11371_name [shape=none, label=<<font color="black">Branch[11371]</font>>]
    node11371_name -> node11371 [arrowhead=none, color="black", style=dashed]
    node11371 [shape=diamond, label=<<font color="black">(= this undefined)</font>> color="black" fillcolor="white", style=filled]
    node11371 -> node11372 [label=<<font color="black">true</font>> color="black"]
    node11371 -> node11373 [label=<<font color="black">false</font>> color="black"]
    node11372_name [shape=none, label=<<font color="black">Block[11372]</font>>]
    node11372_name -> node11372 [arrowhead=none, color="black", style=dashed]
    node11372 [shape=box, label=<<font color="black">[0] return &quot;[object Undefined]&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11372 -> cluster2025_exit [color="black"]
    node11373_name [shape=none, label=<<font color="black">Branch[11373]</font>>]
    node11373_name -> node11373 [arrowhead=none, color="black", style=dashed]
    node11373 [shape=diamond, label=<<font color="black">(= this null)</font>> color="black" fillcolor="white", style=filled]
    node11373 -> node11374 [label=<<font color="black">true</font>> color="black"]
    node11373 -> node11375 [label=<<font color="black">false</font>> color="black"]
    node11374_name [shape=none, label=<<font color="black">Block[11374]</font>>]
    node11374_name -> node11374 [arrowhead=none, color="black", style=dashed]
    node11374 [shape=box, label=<<font color="black">[0] return &quot;[object Null]&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11374 -> cluster2025_exit [color="black"]
    node11375_name [shape=none, label=<<font color="black">Call[11375]</font>>]
    node11375_name -> node11375 [arrowhead=none, color="black", style=dashed]
    node11375 [shape=cds, label=<<font color="black">%0 = clo&lt;ToObject&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node11375 -> node11376 [color="black"]
    node11376_name [shape=none, label=<<font color="black">Block[11376]</font>>]
    node11376_name -> node11376 [arrowhead=none, color="black", style=dashed]
    node11376 [shape=box, label=<<font color="black">[0] let O = [! %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11376 -> node11377 [color="black"]
    node11377_name [shape=none, label=<<font color="black">Call[11377]</font>>]
    node11377_name -> node11377 [arrowhead=none, color="black", style=dashed]
    node11377 [shape=cds, label=<<font color="black">%1 = clo&lt;IsArray&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node11377 -> node11378 [color="black"]
    node11378_name [shape=none, label=<<font color="black">Block[11378]</font>>]
    node11378_name -> node11378 [arrowhead=none, color="black", style=dashed]
    node11378 [shape=box, label=<<font color="black">[0] let isArray = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11378 -> node11379 [color="black"]
    node11379_name [shape=none, label=<<font color="black">Branch[11379]</font>>]
    node11379_name -> node11379 [arrowhead=none, color="black", style=dashed]
    node11379 [shape=diamond, label=<<font color="black">(= isArray true)</font>> color="black" fillcolor="white", style=filled]
    node11379 -> node11380 [label=<<font color="black">true</font>> color="black"]
    node11379 -> node11381 [label=<<font color="black">false</font>> color="black"]
    node11380_name [shape=none, label=<<font color="black">Block[11380]</font>>]
    node11380_name -> node11380 [arrowhead=none, color="black", style=dashed]
    node11380 [shape=box, label=<<font color="black">[0] let builtinTag = &quot;Array&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11380 -> node11398 [color="black"]
    node11381_name [shape=none, label=<<font color="black">Branch[11381]</font>>]
    node11381_name -> node11381 [arrowhead=none, color="black", style=dashed]
    node11381 [shape=diamond, label=<<font color="black">(! (= O.ParameterMap absent))</font>> color="black" fillcolor="white", style=filled]
    node11381 -> node11382 [label=<<font color="black">true</font>> color="black"]
    node11381 -> node11383 [label=<<font color="black">false</font>> color="black"]
    node11398_name [shape=none, label=<<font color="black">Call[11398]</font>>]
    node11398_name -> node11398 [arrowhead=none, color="black", style=dashed]
    node11398 [shape=cds, label=<<font color="black">%2 = clo&lt;Get&gt;(O, @SYMBOL.toStringTag)</font>> color="black" fillcolor="white", style=filled]
    node11398 -> node11399 [color="black"]
    node11382_name [shape=none, label=<<font color="black">Block[11382]</font>>]
    node11382_name -> node11382 [arrowhead=none, color="black", style=dashed]
    node11382 [shape=box, label=<<font color="black">[0] let builtinTag = &quot;Arguments&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11382 -> node11398 [color="black"]
    node11383_name [shape=none, label=<<font color="black">Branch[11383]</font>>]
    node11383_name -> node11383 [arrowhead=none, color="black", style=dashed]
    node11383 [shape=diamond, label=<<font color="black">(! (= O.Call absent))</font>> color="black" fillcolor="white", style=filled]
    node11383 -> node11384 [label=<<font color="black">true</font>> color="black"]
    node11383 -> node11385 [label=<<font color="black">false</font>> color="black"]
    node11399_name [shape=none, label=<<font color="black">Block[11399]</font>>]
    node11399_name -> node11399 [arrowhead=none, color="black", style=dashed]
    node11399 [shape=box, label=<<font color="black">[0] let tag = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11399 -> node11400 [color="black"]
    node11384_name [shape=none, label=<<font color="black">Block[11384]</font>>]
    node11384_name -> node11384 [arrowhead=none, color="black", style=dashed]
    node11384 [shape=box, label=<<font color="black">[0] let builtinTag = &quot;Function&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11384 -> node11398 [color="black"]
    node11385_name [shape=none, label=<<font color="black">Branch[11385]</font>>]
    node11385_name -> node11385 [arrowhead=none, color="black", style=dashed]
    node11385 [shape=diamond, label=<<font color="black">(! (= O.ErrorData absent))</font>> color="black" fillcolor="white", style=filled]
    node11385 -> node11386 [label=<<font color="black">true</font>> color="black"]
    node11385 -> node11387 [label=<<font color="black">false</font>> color="black"]
    node11400_name [shape=none, label=<<font color="black">Branch[11400]</font>>]
    node11400_name -> node11400 [arrowhead=none, color="black", style=dashed]
    node11400 [shape=diamond, label=<<font color="black">(! (= (typeof tag) @String))</font>> color="black" fillcolor="white", style=filled]
    node11400 -> node11401 [label=<<font color="black">true</font>> color="black"]
    node11400 -> node11402 [label=<<font color="black">false</font>> color="black"]
    node11386_name [shape=none, label=<<font color="black">Block[11386]</font>>]
    node11386_name -> node11386 [arrowhead=none, color="black", style=dashed]
    node11386 [shape=box, label=<<font color="black">[0] let builtinTag = &quot;Error&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11386 -> node11398 [color="black"]
    node11387_name [shape=none, label=<<font color="black">Branch[11387]</font>>]
    node11387_name -> node11387 [arrowhead=none, color="black", style=dashed]
    node11387 [shape=diamond, label=<<font color="black">(! (= O.BooleanData absent))</font>> color="black" fillcolor="white", style=filled]
    node11387 -> node11388 [label=<<font color="black">true</font>> color="black"]
    node11387 -> node11389 [label=<<font color="black">false</font>> color="black"]
    node11401_name [shape=none, label=<<font color="black">Block[11401]</font>>]
    node11401_name -> node11401 [arrowhead=none, color="black", style=dashed]
    node11401 [shape=box, label=<<font color="black">[0] tag = builtinTag<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11401 -> node11402 [color="black"]
    node11402_name [shape=none, label=<<font color="black">Block[11402]</font>>]
    node11402_name -> node11402 [arrowhead=none, color="black", style=dashed]
    node11402 [shape=box, label=<<font color="black">[0] return (concat &quot;[object &quot; tag &quot;]&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11402 -> cluster2025_exit [color="black"]
    node11388_name [shape=none, label=<<font color="black">Block[11388]</font>>]
    node11388_name -> node11388 [arrowhead=none, color="black", style=dashed]
    node11388 [shape=box, label=<<font color="black">[0] let builtinTag = &quot;Boolean&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11388 -> node11398 [color="black"]
    node11389_name [shape=none, label=<<font color="black">Branch[11389]</font>>]
    node11389_name -> node11389 [arrowhead=none, color="black", style=dashed]
    node11389 [shape=diamond, label=<<font color="black">(! (= O.NumberData absent))</font>> color="black" fillcolor="white", style=filled]
    node11389 -> node11390 [label=<<font color="black">true</font>> color="black"]
    node11389 -> node11391 [label=<<font color="black">false</font>> color="black"]
    node11390_name [shape=none, label=<<font color="black">Block[11390]</font>>]
    node11390_name -> node11390 [arrowhead=none, color="black", style=dashed]
    node11390 [shape=box, label=<<font color="black">[0] let builtinTag = &quot;Number&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11390 -> node11398 [color="black"]
    node11391_name [shape=none, label=<<font color="black">Branch[11391]</font>>]
    node11391_name -> node11391 [arrowhead=none, color="black", style=dashed]
    node11391 [shape=diamond, label=<<font color="black">(! (= O.StringData absent))</font>> color="black" fillcolor="white", style=filled]
    node11391 -> node11392 [label=<<font color="black">true</font>> color="black"]
    node11391 -> node11393 [label=<<font color="black">false</font>> color="black"]
    node11392_name [shape=none, label=<<font color="black">Block[11392]</font>>]
    node11392_name -> node11392 [arrowhead=none, color="black", style=dashed]
    node11392 [shape=box, label=<<font color="black">[0] let builtinTag = &quot;String&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11392 -> node11398 [color="black"]
    node11393_name [shape=none, label=<<font color="black">Branch[11393]</font>>]
    node11393_name -> node11393 [arrowhead=none, color="black", style=dashed]
    node11393 [shape=diamond, label=<<font color="black">(! (= O.DateValue absent))</font>> color="black" fillcolor="white", style=filled]
    node11393 -> node11394 [label=<<font color="black">true</font>> color="black"]
    node11393 -> node11395 [label=<<font color="black">false</font>> color="black"]
    node11394_name [shape=none, label=<<font color="black">Block[11394]</font>>]
    node11394_name -> node11394 [arrowhead=none, color="black", style=dashed]
    node11394 [shape=box, label=<<font color="black">[0] let builtinTag = &quot;Date&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11394 -> node11398 [color="black"]
    node11395_name [shape=none, label=<<font color="black">Branch[11395]</font>>]
    node11395_name -> node11395 [arrowhead=none, color="black", style=dashed]
    node11395 [shape=diamond, label=<<font color="black">(! (= O.RegExpMatcher absent))</font>> color="black" fillcolor="white", style=filled]
    node11395 -> node11396 [label=<<font color="black">true</font>> color="black"]
    node11395 -> node11397 [label=<<font color="black">false</font>> color="black"]
    node11396_name [shape=none, label=<<font color="black">Block[11396]</font>>]
    node11396_name -> node11396 [arrowhead=none, color="black", style=dashed]
    node11396 [shape=box, label=<<font color="black">[0] let builtinTag = &quot;RegExp&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11396 -> node11398 [color="black"]
    node11397_name [shape=none, label=<<font color="black">Block[11397]</font>>]
    node11397_name -> node11397 [arrowhead=none, color="black", style=dashed]
    node11397 [shape=box, label=<<font color="black">[0] let builtinTag = &quot;Object&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11397 -> node11398 [color="black"]
  }
}