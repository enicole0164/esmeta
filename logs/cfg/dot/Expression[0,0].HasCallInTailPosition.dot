digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1841 {
    label = "def <SYNTAX>:Expression[0,0].HasCallInTailPosition(this: Ast:Expression[0,0], call: Unknown): Boolean"
    style = rounded
    cluster1841_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1841_entry_name -> cluster1841_entry [arrowhead=none, color="black", style=dashed]
    cluster1841_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1841_entry -> node9914 [color="black"]
    cluster1841_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1841_exit_name -> cluster1841_exit [arrowhead=none, color="black", style=dashed]
    cluster1841_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9914_name [shape=none, label=<<font color="black">Call[9914]</font>>]
    node9914_name -> node9914 [arrowhead=none, color="black", style=dashed]
    node9914 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;HasCallInTailPosition(call)</font>> color="black" fillcolor="white", style=filled]
    node9914 -> node9915 [color="black"]
    node9915_name [shape=none, label=<<font color="black">Block[9915]</font>>]
    node9915_name -> node9915 [arrowhead=none, color="black", style=dashed]
    node9915 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9915 -> cluster1841_exit [color="black"]
  }
}