digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster261 {
    label = "def <SYNTAX>:CaseBlock[1,0].LexicallyDeclaredNames(this: Ast:CaseBlock[1,0]): List[String]"
    style = rounded
    cluster261_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster261_entry_name -> cluster261_entry [arrowhead=none, color="black", style=dashed]
    cluster261_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster261_entry -> node1678 [color="black"]
    cluster261_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster261_exit_name -> cluster261_exit [arrowhead=none, color="black", style=dashed]
    cluster261_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1678_name [shape=none, label=<<font color="black">Branch[1678]</font>>]
    node1678_name -> node1678 [arrowhead=none, color="black", style=dashed]
    node1678 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node1678 -> node1679 [label=<<font color="black">true</font>> color="black"]
    node1678 -> node1681 [label=<<font color="black">false</font>> color="black"]
    node1679_name [shape=none, label=<<font color="black">Call[1679]</font>>]
    node1679_name -> node1679 [arrowhead=none, color="black", style=dashed]
    node1679 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1679 -> node1680 [color="black"]
    node1681_name [shape=none, label=<<font color="black">Block[1681]</font>>]
    node1681_name -> node1681 [arrowhead=none, color="black", style=dashed]
    node1681 [shape=box, label=<<font color="black">[0] let names1 = (new [])[#115]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1681 -> node1682 [color="black"]
    node1680_name [shape=none, label=<<font color="black">Block[1680]</font>>]
    node1680_name -> node1680 [arrowhead=none, color="black", style=dashed]
    node1680 [shape=box, label=<<font color="black">[0] let names1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1680 -> node1682 [color="black"]
    node1682_name [shape=none, label=<<font color="black">Call[1682]</font>>]
    node1682_name -> node1682 [arrowhead=none, color="black", style=dashed]
    node1682 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1682 -> node1683 [color="black"]
    node1683_name [shape=none, label=<<font color="black">Block[1683]</font>>]
    node1683_name -> node1683 [arrowhead=none, color="black", style=dashed]
    node1683 [shape=box, label=<<font color="black">[0] let names2 = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1683 -> node1684 [color="black"]
    node1684_name [shape=none, label=<<font color="black">Branch[1684]</font>>]
    node1684_name -> node1684 [arrowhead=none, color="black", style=dashed]
    node1684 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node1684 -> node1685 [label=<<font color="black">true</font>> color="black"]
    node1684 -> node1687 [label=<<font color="black">false</font>> color="black"]
    node1685_name [shape=none, label=<<font color="black">Call[1685]</font>>]
    node1685_name -> node1685 [arrowhead=none, color="black", style=dashed]
    node1685 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;LexicallyDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1685 -> node1686 [color="black"]
    node1687_name [shape=none, label=<<font color="black">Block[1687]</font>>]
    node1687_name -> node1687 [arrowhead=none, color="black", style=dashed]
    node1687 [shape=box, label=<<font color="black">[0] let names3 = (new [])[#116]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1687 -> node1688 [color="black"]
    node1686_name [shape=none, label=<<font color="black">Block[1686]</font>>]
    node1686_name -> node1686 [arrowhead=none, color="black", style=dashed]
    node1686 [shape=box, label=<<font color="black">[0] let names3 = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1686 -> node1688 [color="black"]
    node1688_name [shape=none, label=<<font color="black">Block[1688]</font>>]
    node1688_name -> node1688 [arrowhead=none, color="black", style=dashed]
    node1688 [shape=box, label=<<font color="black">[0] return (list-concat names1 names2 names3)[#117]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1688 -> cluster261_exit [color="black"]
  }
}