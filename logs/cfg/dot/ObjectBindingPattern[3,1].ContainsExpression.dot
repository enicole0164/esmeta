digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1512 {
    label = "def <SYNTAX>:ObjectBindingPattern[3,1].ContainsExpression(this: Ast:ObjectBindingPattern[3,1]): Boolean"
    style = rounded
    cluster1512_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1512_entry_name -> cluster1512_entry [arrowhead=none, color="black", style=dashed]
    cluster1512_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1512_entry -> node8281 [color="black"]
    cluster1512_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1512_exit_name -> cluster1512_exit [arrowhead=none, color="black", style=dashed]
    cluster1512_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8281_name [shape=none, label=<<font color="black">Call[8281]</font>>]
    node8281_name -> node8281 [arrowhead=none, color="black", style=dashed]
    node8281 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;ContainsExpression()</font>> color="black" fillcolor="white", style=filled]
    node8281 -> node8282 [color="black"]
    node8282_name [shape=none, label=<<font color="black">Block[8282]</font>>]
    node8282_name -> node8282 [arrowhead=none, color="black", style=dashed]
    node8282 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8282 -> cluster1512_exit [color="black"]
  }
}