digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1281 {
    label = "def <SYNTAX>:ArgumentList[3,0].ArgumentListEvaluation(this: Ast:ArgumentList[3,0]): Normal[List[ESValue]] | Abrupt"
    style = rounded
    cluster1281_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1281_entry_name -> cluster1281_entry [arrowhead=none, color="black", style=dashed]
    cluster1281_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1281_entry -> node5992 [color="black"]
    cluster1281_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1281_exit_name -> cluster1281_exit [arrowhead=none, color="black", style=dashed]
    cluster1281_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node5992_name [shape=none, label=<<font color="black">Call[5992]</font>>]
    node5992_name -> node5992 [arrowhead=none, color="black", style=dashed]
    node5992 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;ArgumentListEvaluation()</font>> color="black" fillcolor="white", style=filled]
    node5992 -> node5993 [color="black"]
    node5993_name [shape=none, label=<<font color="black">Block[5993]</font>>]
    node5993_name -> node5993 [arrowhead=none, color="black", style=dashed]
    node5993 [shape=box, label=<<font color="black">[0] let precedingArgs = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5993 -> node5994 [color="black"]
    node5994_name [shape=none, label=<<font color="black">Call[5994]</font>>]
    node5994_name -> node5994 [arrowhead=none, color="black", style=dashed]
    node5994 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node5994 -> node5995 [color="black"]
    node5995_name [shape=none, label=<<font color="black">Block[5995]</font>>]
    node5995_name -> node5995 [arrowhead=none, color="black", style=dashed]
    node5995 [shape=box, label=<<font color="black">[0] let spreadRef = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5995 -> node5996 [color="black"]
    node5996_name [shape=none, label=<<font color="black">Call[5996]</font>>]
    node5996_name -> node5996 [arrowhead=none, color="black", style=dashed]
    node5996 [shape=cds, label=<<font color="black">%2 = clo&lt;GetValue&gt;(spreadRef)</font>> color="black" fillcolor="white", style=filled]
    node5996 -> node5997 [color="black"]
    node5997_name [shape=none, label=<<font color="black">Call[5997]</font>>]
    node5997_name -> node5997 [arrowhead=none, color="black", style=dashed]
    node5997 [shape=cds, label=<<font color="black">%3 = clo&lt;GetIterator&gt;([? %2])</font>> color="black" fillcolor="white", style=filled]
    node5997 -> node5998 [color="black"]
    node5998_name [shape=none, label=<<font color="black">Block[5998]</font>>]
    node5998_name -> node5998 [arrowhead=none, color="black", style=dashed]
    node5998 [shape=box, label=<<font color="black">[0] let iteratorRecord = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node5998 -> node5999 [color="black"]
    node5999_name [shape=none, label=<<font color="black">Branch[5999]</font>>]
    node5999_name -> node5999 [arrowhead=none, color="black", style=dashed]
    node5999 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white", style=filled]
    node5999 -> node6000 [label=<<font color="black">true</font>> color="black"]
    node6000_name [shape=none, label=<<font color="black">Call[6000]</font>>]
    node6000_name -> node6000 [arrowhead=none, color="black", style=dashed]
    node6000 [shape=cds, label=<<font color="black">%4 = clo&lt;IteratorStep&gt;(iteratorRecord)</font>> color="black" fillcolor="white", style=filled]
    node6000 -> node6001 [color="black"]
    node6001_name [shape=none, label=<<font color="black">Block[6001]</font>>]
    node6001_name -> node6001 [arrowhead=none, color="black", style=dashed]
    node6001 [shape=box, label=<<font color="black">[0] let next = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6001 -> node6002 [color="black"]
    node6002_name [shape=none, label=<<font color="black">Branch[6002]</font>>]
    node6002_name -> node6002 [arrowhead=none, color="black", style=dashed]
    node6002 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white", style=filled]
    node6002 -> node6003 [label=<<font color="black">true</font>> color="black"]
    node6002 -> node6004 [label=<<font color="black">false</font>> color="black"]
    node6003_name [shape=none, label=<<font color="black">Block[6003]</font>>]
    node6003_name -> node6003 [arrowhead=none, color="black", style=dashed]
    node6003 [shape=box, label=<<font color="black">[0] return precedingArgs<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6003 -> cluster1281_exit [color="black"]
    node6004_name [shape=none, label=<<font color="black">Call[6004]</font>>]
    node6004_name -> node6004 [arrowhead=none, color="black", style=dashed]
    node6004 [shape=cds, label=<<font color="black">%5 = clo&lt;IteratorValue&gt;(next)</font>> color="black" fillcolor="white", style=filled]
    node6004 -> node6005 [color="black"]
    node6005_name [shape=none, label=<<font color="black">Block[6005]</font>>]
    node6005_name -> node6005 [arrowhead=none, color="black", style=dashed]
    node6005 [shape=box, label=<<font color="black">[0] let nextArg = [? %5]<BR ALIGN="LEFT"/>[1] push precedingArgs &lt; nextArg<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6005 -> node5999 [color="black"]
  }
}