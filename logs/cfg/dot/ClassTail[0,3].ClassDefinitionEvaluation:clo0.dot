digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1695 {
    label = "def <BUILTIN-CLO>:ClassTail[0,3].ClassDefinitionEvaluation:clo0(this: Unknown, argumentsList: Unknown, NewTarget: Unknown): Unknown"
    style = rounded
    cluster1695_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1695_entry_name -> cluster1695_entry [arrowhead=none, color="black", style=dashed]
    cluster1695_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1695_entry -> node9413 [color="black"]
    cluster1695_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1695_exit_name -> cluster1695_exit [arrowhead=none, color="black", style=dashed]
    cluster1695_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node9413_name [shape=none, label=<<font color="black">Block[9413]</font>>]
    node9413_name -> node9413 [arrowhead=none, color="black", style=dashed]
    node9413 [shape=box, label=<<font color="black">[0] let args = argumentsList<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9413 -> node9414 [color="black"]
    node9414_name [shape=none, label=<<font color="black">Branch[9414]</font>>]
    node9414_name -> node9414 [arrowhead=none, color="black", style=dashed]
    node9414 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white", style=filled]
    node9414 -> node9415 [label=<<font color="black">true</font>> color="black"]
    node9414 -> node9416 [label=<<font color="black">false</font>> color="black"]
    node9415_name [shape=none, label=<<font color="black">Block[9415]</font>>]
    node9415_name -> node9415 [arrowhead=none, color="black", style=dashed]
    node9415 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#733])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9415 -> cluster1695_exit [color="black"]
    node9416_name [shape=none, label=<<font color="black">Block[9416]</font>>]
    node9416_name -> node9416 [arrowhead=none, color="black", style=dashed]
    node9416 [shape=box, label=<<font color="black">[0] let F = @EXECUTION_STACK[0].Function<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9416 -> node9417 [color="black"]
    node9417_name [shape=none, label=<<font color="black">Branch[9417]</font>>]
    node9417_name -> node9417 [arrowhead=none, color="black", style=dashed]
    node9417 [shape=diamond, label=<<font color="black">(= F.ConstructorKind ~derived~)</font>> color="black" fillcolor="white", style=filled]
    node9417 -> node9418 [label=<<font color="black">true</font>> color="black"]
    node9417 -> node9426 [label=<<font color="black">false</font>> color="black"]
    node9418_name [shape=none, label=<<font color="black">Block[9418]</font>>]
    node9418_name -> node9418 [arrowhead=none, color="black", style=dashed]
    node9418 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9418 -> node9419 [color="black"]
    node9426_name [shape=none, label=<<font color="black">Block[9426]</font>>]
    node9426_name -> node9426 [arrowhead=none, color="black", style=dashed]
    node9426 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9426 -> node9427 [color="black"]
    node9419_name [shape=none, label=<<font color="black">Call[9419]</font>>]
    node9419_name -> node9419 [arrowhead=none, color="black", style=dashed]
    node9419 [shape=cds, label=<<font color="black">%0 = F-&gt;GetPrototypeOf()</font>> color="black" fillcolor="white", style=filled]
    node9419 -> node9420 [color="black"]
    node9427_name [shape=none, label=<<font color="black">Call[9427]</font>>]
    node9427_name -> node9427 [arrowhead=none, color="black", style=dashed]
    node9427 [shape=cds, label=<<font color="black">%3 = clo&lt;OrdinaryCreateFromConstructor&gt;(NewTarget, &quot;%Object.prototype%&quot;)</font>> color="black" fillcolor="white", style=filled]
    node9427 -> node9428 [color="black"]
    node9420_name [shape=none, label=<<font color="black">Block[9420]</font>>]
    node9420_name -> node9420 [arrowhead=none, color="black", style=dashed]
    node9420 [shape=box, label=<<font color="black">[0] let func = [! %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9420 -> node9421 [color="black"]
    node9428_name [shape=none, label=<<font color="black">Block[9428]</font>>]
    node9428_name -> node9428 [arrowhead=none, color="black", style=dashed]
    node9428 [shape=box, label=<<font color="black">[0] let result = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9428 -> node9429 [color="black"]
    node9421_name [shape=none, label=<<font color="black">Call[9421]</font>>]
    node9421_name -> node9421 [arrowhead=none, color="black", style=dashed]
    node9421 [shape=cds, label=<<font color="black">%1 = clo&lt;IsConstructor&gt;(func)</font>> color="black" fillcolor="white", style=filled]
    node9421 -> node9422 [color="black"]
    node9429_name [shape=none, label=<<font color="black">Call[9429]</font>>]
    node9429_name -> node9429 [arrowhead=none, color="black", style=dashed]
    node9429 [shape=cds, label=<<font color="black">%4 = clo&lt;InitializeInstanceElements&gt;(result, F)</font>> color="black" fillcolor="white", style=filled]
    node9429 -> node9430 [color="black"]
    node9422_name [shape=none, label=<<font color="black">Branch[9422]</font>>]
    node9422_name -> node9422 [arrowhead=none, color="black", style=dashed]
    node9422 [shape=diamond, label=<<font color="black">(= %1 false)</font>> color="black" fillcolor="white", style=filled]
    node9422 -> node9423 [label=<<font color="black">true</font>> color="black"]
    node9422 -> node9424 [label=<<font color="black">false</font>> color="black"]
    node9430_name [shape=none, label=<<font color="black">Block[9430]</font>>]
    node9430_name -> node9430 [arrowhead=none, color="black", style=dashed]
    node9430 [shape=box, label=<<font color="black">[0] [? %4]<BR ALIGN="LEFT"/>[1] return result<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9430 -> cluster1695_exit [color="black"]
    node9423_name [shape=none, label=<<font color="black">Block[9423]</font>>]
    node9423_name -> node9423 [arrowhead=none, color="black", style=dashed]
    node9423 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#734])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9423 -> cluster1695_exit [color="black"]
    node9424_name [shape=none, label=<<font color="black">Call[9424]</font>>]
    node9424_name -> node9424 [arrowhead=none, color="black", style=dashed]
    node9424 [shape=cds, label=<<font color="black">%2 = clo&lt;Construct&gt;(func, args, NewTarget)</font>> color="black" fillcolor="white", style=filled]
    node9424 -> node9425 [color="black"]
    node9425_name [shape=none, label=<<font color="black">Block[9425]</font>>]
    node9425_name -> node9425 [arrowhead=none, color="black", style=dashed]
    node9425 [shape=box, label=<<font color="black">[0] let result = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node9425 -> node9429 [color="black"]
  }
}