digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster555 {
    label = "def <SYNTAX>:ForStatement[0,1].ContainsUndefinedBreakTarget(this: Ast:ForStatement[0,1], labelSet: Unknown): Boolean"
    style = rounded
    cluster555_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster555_entry_name -> cluster555_entry [arrowhead=none, color="black", style=dashed]
    cluster555_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster555_entry -> node2539 [color="black"]
    cluster555_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster555_exit_name -> cluster555_exit [arrowhead=none, color="black", style=dashed]
    cluster555_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2539_name [shape=none, label=<<font color="black">Call[2539]</font>>]
    node2539_name -> node2539 [arrowhead=none, color="black", style=dashed]
    node2539 [shape=cds, label=<<font color="black">%0 = this[3]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2539 -> node2540 [color="black"]
    node2540_name [shape=none, label=<<font color="black">Block[2540]</font>>]
    node2540_name -> node2540 [arrowhead=none, color="black", style=dashed]
    node2540 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2540 -> cluster555_exit [color="black"]
  }
}