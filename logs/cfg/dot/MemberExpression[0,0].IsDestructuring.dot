digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1433 {
    label = "def <SYNTAX>:MemberExpression[0,0].IsDestructuring(this: Ast:MemberExpression[0,0]): Boolean"
    style = rounded
    cluster1433_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1433_entry_name -> cluster1433_entry [arrowhead=none, color="black", style=dashed]
    cluster1433_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1433_entry -> node7617 [color="black"]
    cluster1433_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1433_exit_name -> cluster1433_exit [arrowhead=none, color="black", style=dashed]
    cluster1433_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7617_name [shape=none, label=<<font color="black">Branch[7617]</font>>]
    node7617_name -> node7617 [arrowhead=none, color="black", style=dashed]
    node7617 [shape=diamond, label=<<font color="black">(|| (? this[0]: &quot;ObjectLiteral&quot;) (? this[0]: &quot;ArrayLiteral&quot;))</font>> color="black" fillcolor="white", style=filled]
    node7617 -> node7618 [label=<<font color="black">true</font>> color="black"]
    node7617 -> node7619 [label=<<font color="black">false</font>> color="black"]
    node7618_name [shape=none, label=<<font color="black">Block[7618]</font>>]
    node7618_name -> node7618 [arrowhead=none, color="black", style=dashed]
    node7618 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7618 -> cluster1433_exit [color="black"]
    node7619_name [shape=none, label=<<font color="black">Block[7619]</font>>]
    node7619_name -> node7619 [arrowhead=none, color="black", style=dashed]
    node7619 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7619 -> cluster1433_exit [color="black"]
  }
}