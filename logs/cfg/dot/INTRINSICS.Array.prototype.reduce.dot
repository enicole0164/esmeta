digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2366 {
    label = "def <BUILTIN>:INTRINSICS.Array.prototype.reduce(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2366_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2366_entry_name -> cluster2366_entry [arrowhead=none, color="black", style=dashed]
    cluster2366_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2366_entry -> node15372 [color="black"]
    cluster2366_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2366_exit_name -> cluster2366_exit [arrowhead=none, color="black", style=dashed]
    cluster2366_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node15372_name [shape=none, label=<<font color="black">Branch[15372]</font>>]
    node15372_name -> node15372 [arrowhead=none, color="black", style=dashed]
    node15372 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node15372 -> node15373 [label=<<font color="black">true</font>> color="black"]
    node15372 -> node15374 [label=<<font color="black">false</font>> color="black"]
    node15373_name [shape=none, label=<<font color="black">Block[15373]</font>>]
    node15373_name -> node15373 [arrowhead=none, color="black", style=dashed]
    node15373 [shape=box, label=<<font color="black">[0] let callbackfn = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15373 -> node15375 [color="black"]
    node15374_name [shape=none, label=<<font color="black">Block[15374]</font>>]
    node15374_name -> node15374 [arrowhead=none, color="black", style=dashed]
    node15374 [shape=box, label=<<font color="black">[0] let callbackfn = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15374 -> node15375 [color="black"]
    node15375_name [shape=none, label=<<font color="black">Branch[15375]</font>>]
    node15375_name -> node15375 [arrowhead=none, color="black", style=dashed]
    node15375 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node15375 -> node15376 [label=<<font color="black">true</font>> color="black"]
    node15375 -> node15377 [label=<<font color="black">false</font>> color="black"]
    node15376_name [shape=none, label=<<font color="black">Block[15376]</font>>]
    node15376_name -> node15376 [arrowhead=none, color="black", style=dashed]
    node15376 [shape=box, label=<<font color="black">[0] let initialValue = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15376 -> node15378 [color="black"]
    node15377_name [shape=none, label=<<font color="black">Block[15377]</font>>]
    node15377_name -> node15377 [arrowhead=none, color="black", style=dashed]
    node15377 [shape=box, label=<<font color="black">[0] let initialValue = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15377 -> node15378 [color="black"]
    node15378_name [shape=none, label=<<font color="black">Call[15378]</font>>]
    node15378_name -> node15378 [arrowhead=none, color="black", style=dashed]
    node15378 [shape=cds, label=<<font color="black">%0 = clo&lt;ToObject&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node15378 -> node15379 [color="black"]
    node15379_name [shape=none, label=<<font color="black">Block[15379]</font>>]
    node15379_name -> node15379 [arrowhead=none, color="black", style=dashed]
    node15379 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15379 -> node15380 [color="black"]
    node15380_name [shape=none, label=<<font color="black">Call[15380]</font>>]
    node15380_name -> node15380 [arrowhead=none, color="black", style=dashed]
    node15380 [shape=cds, label=<<font color="black">%1 = clo&lt;LengthOfArrayLike&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node15380 -> node15381 [color="black"]
    node15381_name [shape=none, label=<<font color="black">Block[15381]</font>>]
    node15381_name -> node15381 [arrowhead=none, color="black", style=dashed]
    node15381 [shape=box, label=<<font color="black">[0] let len = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15381 -> node15382 [color="black"]
    node15382_name [shape=none, label=<<font color="black">Call[15382]</font>>]
    node15382_name -> node15382 [arrowhead=none, color="black", style=dashed]
    node15382 [shape=cds, label=<<font color="black">%2 = clo&lt;IsCallable&gt;(callbackfn)</font>> color="black" fillcolor="white", style=filled]
    node15382 -> node15383 [color="black"]
    node15383_name [shape=none, label=<<font color="black">Branch[15383]</font>>]
    node15383_name -> node15383 [arrowhead=none, color="black", style=dashed]
    node15383 [shape=diamond, label=<<font color="black">(= %2 false)</font>> color="black" fillcolor="white", style=filled]
    node15383 -> node15384 [label=<<font color="black">true</font>> color="black"]
    node15383 -> node15385 [label=<<font color="black">false</font>> color="black"]
    node15384_name [shape=none, label=<<font color="black">Block[15384]</font>>]
    node15384_name -> node15384 [arrowhead=none, color="black", style=dashed]
    node15384 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1035])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15384 -> cluster2366_exit [color="black"]
    node15385_name [shape=none, label=<<font color="black">Branch[15385]</font>>]
    node15385_name -> node15385 [arrowhead=none, color="black", style=dashed]
    node15385 [shape=diamond, label=<<font color="black">(&amp;&amp; (== len 0) (= initialValue absent))</font>> color="black" fillcolor="white", style=filled]
    node15385 -> node15386 [label=<<font color="black">true</font>> color="black"]
    node15385 -> node15387 [label=<<font color="black">false</font>> color="black"]
    node15386_name [shape=none, label=<<font color="black">Block[15386]</font>>]
    node15386_name -> node15386 [arrowhead=none, color="black", style=dashed]
    node15386 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1036])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15386 -> cluster2366_exit [color="black"]
    node15387_name [shape=none, label=<<font color="black">Block[15387]</font>>]
    node15387_name -> node15387 [arrowhead=none, color="black", style=dashed]
    node15387 [shape=box, label=<<font color="black">[0] let k = 0<BR ALIGN="LEFT"/>[1] let accumulator = undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15387 -> node15388 [color="black"]
    node15388_name [shape=none, label=<<font color="black">Branch[15388]</font>>]
    node15388_name -> node15388 [arrowhead=none, color="black", style=dashed]
    node15388 [shape=diamond, label=<<font color="black">(! (= initialValue absent))</font>> color="black" fillcolor="white", style=filled]
    node15388 -> node15389 [label=<<font color="black">true</font>> color="black"]
    node15388 -> node15390 [label=<<font color="black">false</font>> color="black"]
    node15389_name [shape=none, label=<<font color="black">Block[15389]</font>>]
    node15389_name -> node15389 [arrowhead=none, color="black", style=dashed]
    node15389 [shape=box, label=<<font color="black">[0] accumulator = initialValue<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15389 -> node15402 [color="black"]
    node15390_name [shape=none, label=<<font color="black">Block[15390]</font>>]
    node15390_name -> node15390 [arrowhead=none, color="black", style=dashed]
    node15390 [shape=box, label=<<font color="black">[0] let kPresent = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15390 -> node15391 [color="black"]
    node15402_name [shape=none, label=<<font color="black">Branch[15402]</font>>]
    node15402_name -> node15402 [arrowhead=none, color="black", style=dashed]
    node15402 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white", style=filled]
    node15402 -> node15403 [label=<<font color="black">true</font>> color="black"]
    node15402 -> node15413 [label=<<font color="black">false</font>> color="black"]
    node15391_name [shape=none, label=<<font color="black">Branch[15391]</font>>]
    node15391_name -> node15391 [arrowhead=none, color="black", style=dashed]
    node15391 [shape=diamond, label=<<font color="black">(&amp;&amp; (= kPresent false) (&lt; k len))</font>> color="black" fillcolor="white", style=filled]
    node15391 -> node15392 [label=<<font color="black">true</font>> color="black"]
    node15391 -> node15400 [label=<<font color="black">false</font>> color="black"]
    node15403_name [shape=none, label=<<font color="black">Call[15403]</font>>]
    node15403_name -> node15403 [arrowhead=none, color="black", style=dashed]
    node15403 [shape=cds, label=<<font color="black">%6 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node15403 -> node15404 [color="black"]
    node15413_name [shape=none, label=<<font color="black">Block[15413]</font>>]
    node15413_name -> node15413 [arrowhead=none, color="black", style=dashed]
    node15413 [shape=box, label=<<font color="black">[0] return accumulator<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15413 -> cluster2366_exit [color="black"]
    node15392_name [shape=none, label=<<font color="black">Call[15392]</font>>]
    node15392_name -> node15392 [arrowhead=none, color="black", style=dashed]
    node15392 [shape=cds, label=<<font color="black">%3 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node15392 -> node15393 [color="black"]
    node15400_name [shape=none, label=<<font color="black">Branch[15400]</font>>]
    node15400_name -> node15400 [arrowhead=none, color="black", style=dashed]
    node15400 [shape=diamond, label=<<font color="black">(= kPresent false)</font>> color="black" fillcolor="white", style=filled]
    node15400 -> node15401 [label=<<font color="black">true</font>> color="black"]
    node15400 -> node15402 [label=<<font color="black">false</font>> color="black"]
    node15404_name [shape=none, label=<<font color="black">Block[15404]</font>>]
    node15404_name -> node15404 [arrowhead=none, color="black", style=dashed]
    node15404 [shape=box, label=<<font color="black">[0] let Pk = [! %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15404 -> node15405 [color="black"]
    node15393_name [shape=none, label=<<font color="black">Block[15393]</font>>]
    node15393_name -> node15393 [arrowhead=none, color="black", style=dashed]
    node15393 [shape=box, label=<<font color="black">[0] let Pk = [! %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15393 -> node15394 [color="black"]
    node15401_name [shape=none, label=<<font color="black">Block[15401]</font>>]
    node15401_name -> node15401 [arrowhead=none, color="black", style=dashed]
    node15401 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#1037])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15401 -> cluster2366_exit [color="black"]
    node15405_name [shape=none, label=<<font color="black">Call[15405]</font>>]
    node15405_name -> node15405 [arrowhead=none, color="black", style=dashed]
    node15405 [shape=cds, label=<<font color="black">%7 = clo&lt;HasProperty&gt;(O, Pk)</font>> color="black" fillcolor="white", style=filled]
    node15405 -> node15406 [color="black"]
    node15394_name [shape=none, label=<<font color="black">Call[15394]</font>>]
    node15394_name -> node15394 [arrowhead=none, color="black", style=dashed]
    node15394 [shape=cds, label=<<font color="black">%4 = clo&lt;HasProperty&gt;(O, Pk)</font>> color="black" fillcolor="white", style=filled]
    node15394 -> node15395 [color="black"]
    node15406_name [shape=none, label=<<font color="black">Block[15406]</font>>]
    node15406_name -> node15406 [arrowhead=none, color="black", style=dashed]
    node15406 [shape=box, label=<<font color="black">[0] let kPresent = [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15406 -> node15407 [color="black"]
    node15395_name [shape=none, label=<<font color="black">Block[15395]</font>>]
    node15395_name -> node15395 [arrowhead=none, color="black", style=dashed]
    node15395 [shape=box, label=<<font color="black">[0] kPresent = [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15395 -> node15396 [color="black"]
    node15407_name [shape=none, label=<<font color="black">Branch[15407]</font>>]
    node15407_name -> node15407 [arrowhead=none, color="black", style=dashed]
    node15407 [shape=diamond, label=<<font color="black">(= kPresent true)</font>> color="black" fillcolor="white", style=filled]
    node15407 -> node15408 [label=<<font color="black">true</font>> color="black"]
    node15407 -> node15412 [label=<<font color="black">false</font>> color="black"]
    node15396_name [shape=none, label=<<font color="black">Branch[15396]</font>>]
    node15396_name -> node15396 [arrowhead=none, color="black", style=dashed]
    node15396 [shape=diamond, label=<<font color="black">(= kPresent true)</font>> color="black" fillcolor="white", style=filled]
    node15396 -> node15397 [label=<<font color="black">true</font>> color="black"]
    node15396 -> node15399 [label=<<font color="black">false</font>> color="black"]
    node15408_name [shape=none, label=<<font color="black">Call[15408]</font>>]
    node15408_name -> node15408 [arrowhead=none, color="black", style=dashed]
    node15408 [shape=cds, label=<<font color="black">%8 = clo&lt;Get&gt;(O, Pk)</font>> color="black" fillcolor="white", style=filled]
    node15408 -> node15409 [color="black"]
    node15412_name [shape=none, label=<<font color="black">Block[15412]</font>>]
    node15412_name -> node15412 [arrowhead=none, color="black", style=dashed]
    node15412 [shape=box, label=<<font color="black">[0] k = (+ k 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15412 -> node15402 [color="black"]
    node15397_name [shape=none, label=<<font color="black">Call[15397]</font>>]
    node15397_name -> node15397 [arrowhead=none, color="black", style=dashed]
    node15397 [shape=cds, label=<<font color="black">%5 = clo&lt;Get&gt;(O, Pk)</font>> color="black" fillcolor="white", style=filled]
    node15397 -> node15398 [color="black"]
    node15399_name [shape=none, label=<<font color="black">Block[15399]</font>>]
    node15399_name -> node15399 [arrowhead=none, color="black", style=dashed]
    node15399 [shape=box, label=<<font color="black">[0] k = (+ k 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15399 -> node15391 [color="black"]
    node15409_name [shape=none, label=<<font color="black">Block[15409]</font>>]
    node15409_name -> node15409 [arrowhead=none, color="black", style=dashed]
    node15409 [shape=box, label=<<font color="black">[0] let kValue = [? %8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15409 -> node15410 [color="black"]
    node15398_name [shape=none, label=<<font color="black">Block[15398]</font>>]
    node15398_name -> node15398 [arrowhead=none, color="black", style=dashed]
    node15398 [shape=box, label=<<font color="black">[0] accumulator = [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15398 -> node15399 [color="black"]
    node15410_name [shape=none, label=<<font color="black">Call[15410]</font>>]
    node15410_name -> node15410 [arrowhead=none, color="black", style=dashed]
    node15410 [shape=cds, label=<<font color="black">%9 = clo&lt;Call&gt;(callbackfn, undefined, (new [accumulator, kValue, ([number] k), O])[#1038])</font>> color="black" fillcolor="white", style=filled]
    node15410 -> node15411 [color="black"]
    node15411_name [shape=none, label=<<font color="black">Block[15411]</font>>]
    node15411_name -> node15411 [arrowhead=none, color="black", style=dashed]
    node15411 [shape=box, label=<<font color="black">[0] accumulator = [? %9]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15411 -> node15412 [color="black"]
  }
}