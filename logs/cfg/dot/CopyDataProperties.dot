digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster154 {
    label = "def CopyDataProperties(target: Object, source: ESValue, excludedItems: List[Symbol | String]): Normal[Const[~unused~]] | Abrupt"
    style = rounded
    cluster154_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster154_entry_name -> cluster154_entry [arrowhead=none, color="black", style=dashed]
    cluster154_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster154_entry -> node1305 [color="black"]
    cluster154_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster154_exit_name -> cluster154_exit [arrowhead=none, color="black", style=dashed]
    cluster154_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1305_name [shape=none, label=<<font color="black">Branch[1305]</font>>]
    node1305_name -> node1305 [arrowhead=none, color="black", style=dashed]
    node1305 [shape=diamond, label=<<font color="black">(|| (= source undefined) (= source null))</font>> color="black" fillcolor="white", style=filled]
    node1305 -> node1306 [label=<<font color="black">true</font>> color="black"]
    node1305 -> node1307 [label=<<font color="black">false</font>> color="black"]
    node1306_name [shape=none, label=<<font color="black">Block[1306]</font>>]
    node1306_name -> node1306 [arrowhead=none, color="black", style=dashed]
    node1306 [shape=box, label=<<font color="black">[0] return ~unused~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1306 -> cluster154_exit [color="black"]
    node1307_name [shape=none, label=<<font color="black">Call[1307]</font>>]
    node1307_name -> node1307 [arrowhead=none, color="black", style=dashed]
    node1307 [shape=cds, label=<<font color="black">%0 = clo&lt;ToObject&gt;(source)</font>> color="black" fillcolor="white", style=filled]
    node1307 -> node1308 [color="black"]
    node1308_name [shape=none, label=<<font color="black">Block[1308]</font>>]
    node1308_name -> node1308 [arrowhead=none, color="black", style=dashed]
    node1308 [shape=box, label=<<font color="black">[0] let from = [! %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1308 -> node1309 [color="black"]
    node1309_name [shape=none, label=<<font color="black">Call[1309]</font>>]
    node1309_name -> node1309 [arrowhead=none, color="black", style=dashed]
    node1309 [shape=cds, label=<<font color="black">%1 = from-&gt;OwnPropertyKeys()</font>> color="black" fillcolor="white", style=filled]
    node1309 -> node1310 [color="black"]
    node1310_name [shape=none, label=<<font color="black">Block[1310]</font>>]
    node1310_name -> node1310 [arrowhead=none, color="black", style=dashed]
    node1310 [shape=box, label=<<font color="black">[0] let keys = [? %1]<BR ALIGN="LEFT"/>[1] %3 = keys<BR ALIGN="LEFT"/>[2] %2 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1310 -> node1311 [color="black"]
    node1311_name [shape=none, label=<<font color="black">Branch[1311]</font>>]
    node1311_name -> node1311 [arrowhead=none, color="black", style=dashed]
    node1311 [shape=diamond, label=<<font color="black">(&lt; %2 %3.length)</font>> color="black" fillcolor="white", style=filled]
    node1311 -> node1312 [label=<<font color="black">true</font>> color="black"]
    node1311 -> node1328 [label=<<font color="black">false</font>> color="black"]
    node1312_name [shape=none, label=<<font color="black">Block[1312]</font>>]
    node1312_name -> node1312 [arrowhead=none, color="black", style=dashed]
    node1312 [shape=box, label=<<font color="black">[0] let nextKey = %3[%2]<BR ALIGN="LEFT"/>[1] let excluded = false<BR ALIGN="LEFT"/>[2] %5 = excludedItems<BR ALIGN="LEFT"/>[3] %4 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1312 -> node1313 [color="black"]
    node1328_name [shape=none, label=<<font color="black">Block[1328]</font>>]
    node1328_name -> node1328 [arrowhead=none, color="black", style=dashed]
    node1328 [shape=box, label=<<font color="black">[0] return ~unused~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1328 -> cluster154_exit [color="black"]
    node1313_name [shape=none, label=<<font color="black">Branch[1313]</font>>]
    node1313_name -> node1313 [arrowhead=none, color="black", style=dashed]
    node1313 [shape=diamond, label=<<font color="black">(&lt; %4 %5.length)</font>> color="black" fillcolor="white", style=filled]
    node1313 -> node1314 [label=<<font color="black">true</font>> color="black"]
    node1313 -> node1319 [label=<<font color="black">false</font>> color="black"]
    node1314_name [shape=none, label=<<font color="black">Block[1314]</font>>]
    node1314_name -> node1314 [arrowhead=none, color="black", style=dashed]
    node1314 [shape=box, label=<<font color="black">[0] let e = %5[%4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1314 -> node1315 [color="black"]
    node1319_name [shape=none, label=<<font color="black">Branch[1319]</font>>]
    node1319_name -> node1319 [arrowhead=none, color="black", style=dashed]
    node1319 [shape=diamond, label=<<font color="black">(= excluded false)</font>> color="black" fillcolor="white", style=filled]
    node1319 -> node1320 [label=<<font color="black">true</font>> color="black"]
    node1319 -> node1327 [label=<<font color="black">false</font>> color="black"]
    node1315_name [shape=none, label=<<font color="black">Call[1315]</font>>]
    node1315_name -> node1315 [arrowhead=none, color="black", style=dashed]
    node1315 [shape=cds, label=<<font color="black">%6 = clo&lt;SameValue&gt;(e, nextKey)</font>> color="black" fillcolor="white", style=filled]
    node1315 -> node1316 [color="black"]
    node1320_name [shape=none, label=<<font color="black">Call[1320]</font>>]
    node1320_name -> node1320 [arrowhead=none, color="black", style=dashed]
    node1320 [shape=cds, label=<<font color="black">%7 = from-&gt;GetOwnProperty(nextKey)</font>> color="black" fillcolor="white", style=filled]
    node1320 -> node1321 [color="black"]
    node1327_name [shape=none, label=<<font color="black">Block[1327]</font>>]
    node1327_name -> node1327 [arrowhead=none, color="black", style=dashed]
    node1327 [shape=box, label=<<font color="black">[0] %2 = (+ %2 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1327 -> node1311 [color="black"]
    node1316_name [shape=none, label=<<font color="black">Branch[1316]</font>>]
    node1316_name -> node1316 [arrowhead=none, color="black", style=dashed]
    node1316 [shape=diamond, label=<<font color="black">(= %6 true)</font>> color="black" fillcolor="white", style=filled]
    node1316 -> node1317 [label=<<font color="black">true</font>> color="black"]
    node1316 -> node1318 [label=<<font color="black">false</font>> color="black"]
    node1321_name [shape=none, label=<<font color="black">Block[1321]</font>>]
    node1321_name -> node1321 [arrowhead=none, color="black", style=dashed]
    node1321 [shape=box, label=<<font color="black">[0] let desc = [? %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1321 -> node1322 [color="black"]
    node1317_name [shape=none, label=<<font color="black">Block[1317]</font>>]
    node1317_name -> node1317 [arrowhead=none, color="black", style=dashed]
    node1317 [shape=box, label=<<font color="black">[0] excluded = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1317 -> node1318 [color="black"]
    node1318_name [shape=none, label=<<font color="black">Block[1318]</font>>]
    node1318_name -> node1318 [arrowhead=none, color="black", style=dashed]
    node1318 [shape=box, label=<<font color="black">[0] %4 = (+ %4 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1318 -> node1313 [color="black"]
    node1322_name [shape=none, label=<<font color="black">Branch[1322]</font>>]
    node1322_name -> node1322 [arrowhead=none, color="black", style=dashed]
    node1322 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= desc undefined)) (= desc.Enumerable true))</font>> color="black" fillcolor="white", style=filled]
    node1322 -> node1323 [label=<<font color="black">true</font>> color="black"]
    node1322 -> node1327 [label=<<font color="black">false</font>> color="black"]
    node1323_name [shape=none, label=<<font color="black">Call[1323]</font>>]
    node1323_name -> node1323 [arrowhead=none, color="black", style=dashed]
    node1323 [shape=cds, label=<<font color="black">%8 = clo&lt;Get&gt;(from, nextKey)</font>> color="black" fillcolor="white", style=filled]
    node1323 -> node1324 [color="black"]
    node1324_name [shape=none, label=<<font color="black">Block[1324]</font>>]
    node1324_name -> node1324 [arrowhead=none, color="black", style=dashed]
    node1324 [shape=box, label=<<font color="black">[0] let propValue = [? %8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1324 -> node1325 [color="black"]
    node1325_name [shape=none, label=<<font color="black">Call[1325]</font>>]
    node1325_name -> node1325 [arrowhead=none, color="black", style=dashed]
    node1325 [shape=cds, label=<<font color="black">%9 = clo&lt;CreateDataPropertyOrThrow&gt;(target, nextKey, propValue)</font>> color="black" fillcolor="white", style=filled]
    node1325 -> node1326 [color="black"]
    node1326_name [shape=none, label=<<font color="black">Block[1326]</font>>]
    node1326_name -> node1326 [arrowhead=none, color="black", style=dashed]
    node1326 [shape=box, label=<<font color="black">[0] [! %9]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1326 -> node1327 [color="black"]
  }
}