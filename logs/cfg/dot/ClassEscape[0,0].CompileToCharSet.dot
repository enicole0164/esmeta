digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2288 {
    label = "def <SYNTAX>:ClassEscape[0,0].CompileToCharSet(this: Ast:ClassEscape[0,0]): Unknown["CharSet"]"
    style = rounded
    cluster2288_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2288_entry_name -> cluster2288_entry [arrowhead=none, color="black", style=dashed]
    cluster2288_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2288_entry -> node14056 [color="black"]
    cluster2288_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2288_exit_name -> cluster2288_exit [arrowhead=none, color="black", style=dashed]
    cluster2288_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node14056_name [shape=none, label=<<font color="black">Call[14056]</font>>]
    node14056_name -> node14056 [arrowhead=none, color="black", style=dashed]
    node14056 [shape=cds, label=<<font color="black">%0 = this-&gt;CharacterValue()</font>> color="black" fillcolor="white", style=filled]
    node14056 -> node14057 [color="black"]
    node14057_name [shape=none, label=<<font color="black">Block[14057]</font>>]
    node14057_name -> node14057 [arrowhead=none, color="black", style=dashed]
    node14057 [shape=box, label=<<font color="black">[0] let cv = %0<BR ALIGN="LEFT"/>[1] (yet &quot;Let _c_ be the character whose character value is _cv_.&quot;)<BR ALIGN="LEFT"/>[2] (yet &quot;Return the CharSet containing the single character _c_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14057 -> cluster2288_exit [color="black"]
  }
}