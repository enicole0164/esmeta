digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1498 {
    label = "def <SYNTAX>:Statement[8,0].LabelledEvaluation(this: Ast:Statement[8,0], labelSet: Unknown): Normal[ESValue] | Abrupt"
    style = rounded
    cluster1498_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1498_entry_name -> cluster1498_entry [arrowhead=none, color="black", style=dashed]
    cluster1498_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1498_entry -> node8213 [color="black"]
    cluster1498_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1498_exit_name -> cluster1498_exit [arrowhead=none, color="black", style=dashed]
    cluster1498_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8213_name [shape=none, label=<<font color="black">Call[8213]</font>>]
    node8213_name -> node8213 [arrowhead=none, color="black", style=dashed]
    node8213 [shape=cds, label=<<font color="black">%0 = this-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node8213 -> node8214 [color="black"]
    node8214_name [shape=none, label=<<font color="black">Block[8214]</font>>]
    node8214_name -> node8214 [arrowhead=none, color="black", style=dashed]
    node8214 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8214 -> cluster1498_exit [color="black"]
  }
}