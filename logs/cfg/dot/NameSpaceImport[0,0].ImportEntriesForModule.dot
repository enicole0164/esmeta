digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1917 {
    label = "def <SYNTAX>:NameSpaceImport[0,0].ImportEntriesForModule(this: Ast:NameSpaceImport[0,0], module: Unknown): Unknown["ListOfImportEntryRecords"]"
    style = rounded
    cluster1917_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1917_entry_name -> cluster1917_entry [arrowhead=none, color="black", style=dashed]
    cluster1917_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1917_entry -> node10550 [color="black"]
    cluster1917_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1917_exit_name -> cluster1917_exit [arrowhead=none, color="black", style=dashed]
    cluster1917_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node10550_name [shape=none, label=<<font color="black">Call[10550]</font>>]
    node10550_name -> node10550 [arrowhead=none, color="black", style=dashed]
    node10550 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;StringValue()</font>> color="black" fillcolor="white", style=filled]
    node10550 -> node10551 [color="black"]
    node10551_name [shape=none, label=<<font color="black">Block[10551]</font>>]
    node10551_name -> node10551 [arrowhead=none, color="black", style=dashed]
    node10551 [shape=box, label=<<font color="black">[0] let localName = %0<BR ALIGN="LEFT"/>[1] let entry = (new ImportEntryRecord(&quot;ModuleRequest&quot; -&gt; module, &quot;ImportName&quot; -&gt; ~namespace-object~, &quot;LocalName&quot; -&gt; localName))[#812]<BR ALIGN="LEFT"/>[2] return (new [entry])[#813]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10551 -> cluster1917_exit [color="black"]
  }
}