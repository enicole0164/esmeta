digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2096 {
    label = "def <BUILTIN>:INTRINSICS.Math.log1p(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2096_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2096_entry_name -> cluster2096_entry [arrowhead=none, color="black", style=dashed]
    cluster2096_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2096_entry -> node12267 [color="black"]
    cluster2096_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2096_exit_name -> cluster2096_exit [arrowhead=none, color="black", style=dashed]
    cluster2096_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node12267_name [shape=none, label=<<font color="black">Branch[12267]</font>>]
    node12267_name -> node12267 [arrowhead=none, color="black", style=dashed]
    node12267 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node12267 -> node12268 [label=<<font color="black">true</font>> color="black"]
    node12267 -> node12269 [label=<<font color="black">false</font>> color="black"]
    node12268_name [shape=none, label=<<font color="black">Block[12268]</font>>]
    node12268_name -> node12268 [arrowhead=none, color="black", style=dashed]
    node12268 [shape=box, label=<<font color="black">[0] let x = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12268 -> node12270 [color="black"]
    node12269_name [shape=none, label=<<font color="black">Block[12269]</font>>]
    node12269_name -> node12269 [arrowhead=none, color="black", style=dashed]
    node12269 [shape=box, label=<<font color="black">[0] let x = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12269 -> node12270 [color="black"]
    node12270_name [shape=none, label=<<font color="black">Call[12270]</font>>]
    node12270_name -> node12270 [arrowhead=none, color="black", style=dashed]
    node12270 [shape=cds, label=<<font color="black">%0 = clo&lt;ToNumber&gt;(x)</font>> color="black" fillcolor="white", style=filled]
    node12270 -> node12271 [color="black"]
    node12271_name [shape=none, label=<<font color="black">Block[12271]</font>>]
    node12271_name -> node12271 [arrowhead=none, color="black", style=dashed]
    node12271 [shape=box, label=<<font color="black">[0] let n = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12271 -> node12272 [color="black"]
    node12272_name [shape=none, label=<<font color="black">Branch[12272]</font>>]
    node12272_name -> node12272 [arrowhead=none, color="black", style=dashed]
    node12272 [shape=diamond, label=<<font color="black">(|| (= n NaN) (|| (= n 0.0f) (|| (= n -0.0f) (= n +INF))))</font>> color="black" fillcolor="white", style=filled]
    node12272 -> node12273 [label=<<font color="black">true</font>> color="black"]
    node12272 -> node12274 [label=<<font color="black">false</font>> color="black"]
    node12273_name [shape=none, label=<<font color="black">Block[12273]</font>>]
    node12273_name -> node12273 [arrowhead=none, color="black", style=dashed]
    node12273 [shape=box, label=<<font color="black">[0] return n<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12273 -> cluster2096_exit [color="black"]
    node12274_name [shape=none, label=<<font color="black">Branch[12274]</font>>]
    node12274_name -> node12274 [arrowhead=none, color="black", style=dashed]
    node12274 [shape=diamond, label=<<font color="black">(= n -1.0f)</font>> color="black" fillcolor="white", style=filled]
    node12274 -> node12275 [label=<<font color="black">true</font>> color="black"]
    node12274 -> node12276 [label=<<font color="black">false</font>> color="black"]
    node12275_name [shape=none, label=<<font color="black">Block[12275]</font>>]
    node12275_name -> node12275 [arrowhead=none, color="black", style=dashed]
    node12275 [shape=box, label=<<font color="black">[0] return -INF<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12275 -> cluster2096_exit [color="black"]
    node12276_name [shape=none, label=<<font color="black">Branch[12276]</font>>]
    node12276_name -> node12276 [arrowhead=none, color="black", style=dashed]
    node12276 [shape=diamond, label=<<font color="black">(&lt; n -1.0f)</font>> color="black" fillcolor="white", style=filled]
    node12276 -> node12277 [label=<<font color="black">true</font>> color="black"]
    node12276 -> node12278 [label=<<font color="black">false</font>> color="black"]
    node12277_name [shape=none, label=<<font color="black">Block[12277]</font>>]
    node12277_name -> node12277 [arrowhead=none, color="black", style=dashed]
    node12277 [shape=box, label=<<font color="black">[0] return NaN<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12277 -> cluster2096_exit [color="black"]
    node12278_name [shape=none, label=<<font color="black">Block[12278]</font>>]
    node12278_name -> node12278 [arrowhead=none, color="black", style=dashed]
    node12278 [shape=box, label=<<font color="black">[0] return ([approx-number] ([math:log1p] ([math] n)))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12278 -> cluster2096_exit [color="black"]
  }
}