digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2505 {
    label = "def <BUILTIN>:INTRINSICS.DataView.prototype.getInt16(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2505_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2505_entry_name -> cluster2505_entry [arrowhead=none, color="black", style=dashed]
    cluster2505_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2505_entry -> node17754 [color="black"]
    cluster2505_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2505_exit_name -> cluster2505_exit [arrowhead=none, color="black", style=dashed]
    cluster2505_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17754_name [shape=none, label=<<font color="black">Branch[17754]</font>>]
    node17754_name -> node17754 [arrowhead=none, color="black", style=dashed]
    node17754 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node17754 -> node17755 [label=<<font color="black">true</font>> color="black"]
    node17754 -> node17756 [label=<<font color="black">false</font>> color="black"]
    node17755_name [shape=none, label=<<font color="black">Block[17755]</font>>]
    node17755_name -> node17755 [arrowhead=none, color="black", style=dashed]
    node17755 [shape=box, label=<<font color="black">[0] let byteOffset = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17755 -> node17757 [color="black"]
    node17756_name [shape=none, label=<<font color="black">Block[17756]</font>>]
    node17756_name -> node17756 [arrowhead=none, color="black", style=dashed]
    node17756 [shape=box, label=<<font color="black">[0] let byteOffset = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17756 -> node17757 [color="black"]
    node17757_name [shape=none, label=<<font color="black">Branch[17757]</font>>]
    node17757_name -> node17757 [arrowhead=none, color="black", style=dashed]
    node17757 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node17757 -> node17758 [label=<<font color="black">true</font>> color="black"]
    node17757 -> node17759 [label=<<font color="black">false</font>> color="black"]
    node17758_name [shape=none, label=<<font color="black">Block[17758]</font>>]
    node17758_name -> node17758 [arrowhead=none, color="black", style=dashed]
    node17758 [shape=box, label=<<font color="black">[0] let littleEndian = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17758 -> node17760 [color="black"]
    node17759_name [shape=none, label=<<font color="black">Block[17759]</font>>]
    node17759_name -> node17759 [arrowhead=none, color="black", style=dashed]
    node17759 [shape=box, label=<<font color="black">[0] let littleEndian = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17759 -> node17760 [color="black"]
    node17760_name [shape=none, label=<<font color="black">Block[17760]</font>>]
    node17760_name -> node17760 [arrowhead=none, color="black", style=dashed]
    node17760 [shape=box, label=<<font color="black">[0] let v = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17760 -> node17761 [color="black"]
    node17761_name [shape=none, label=<<font color="black">Branch[17761]</font>>]
    node17761_name -> node17761 [arrowhead=none, color="black", style=dashed]
    node17761 [shape=diamond, label=<<font color="black">(= littleEndian absent)</font>> color="black" fillcolor="white", style=filled]
    node17761 -> node17762 [label=<<font color="black">true</font>> color="black"]
    node17761 -> node17763 [label=<<font color="black">false</font>> color="black"]
    node17762_name [shape=none, label=<<font color="black">Block[17762]</font>>]
    node17762_name -> node17762 [arrowhead=none, color="black", style=dashed]
    node17762 [shape=box, label=<<font color="black">[0] littleEndian = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17762 -> node17763 [color="black"]
    node17763_name [shape=none, label=<<font color="black">Call[17763]</font>>]
    node17763_name -> node17763 [arrowhead=none, color="black", style=dashed]
    node17763 [shape=cds, label=<<font color="black">%0 = clo&lt;GetViewValue&gt;(v, byteOffset, littleEndian, ~Int16~)</font>> color="black" fillcolor="white", style=filled]
    node17763 -> node17764 [color="black"]
    node17764_name [shape=none, label=<<font color="black">Block[17764]</font>>]
    node17764_name -> node17764 [arrowhead=none, color="black", style=dashed]
    node17764 [shape=box, label=<<font color="black">[0] return [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17764 -> cluster2505_exit [color="black"]
  }
}