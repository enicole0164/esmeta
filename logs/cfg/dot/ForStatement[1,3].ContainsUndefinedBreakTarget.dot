digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster565 {
    label = "def <SYNTAX>:ForStatement[1,3].ContainsUndefinedBreakTarget(this: Ast:ForStatement[1,3], labelSet: Unknown): Boolean"
    style = rounded
    cluster565_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster565_entry_name -> cluster565_entry [arrowhead=none, color="black", style=dashed]
    cluster565_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster565_entry -> node2559 [color="black"]
    cluster565_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster565_exit_name -> cluster565_exit [arrowhead=none, color="black", style=dashed]
    cluster565_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2559_name [shape=none, label=<<font color="black">Call[2559]</font>>]
    node2559_name -> node2559 [arrowhead=none, color="black", style=dashed]
    node2559 [shape=cds, label=<<font color="black">%0 = this[3]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2559 -> node2560 [color="black"]
    node2560_name [shape=none, label=<<font color="black">Block[2560]</font>>]
    node2560_name -> node2560 [arrowhead=none, color="black", style=dashed]
    node2560 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2560 -> cluster565_exit [color="black"]
  }
}