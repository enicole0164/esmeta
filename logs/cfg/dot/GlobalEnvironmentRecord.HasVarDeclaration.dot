digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1009 {
    label = "def <CONC>:GlobalEnvironmentRecord.HasVarDeclaration(envRec: GlobalEnvironmentRecord, N: String): Boolean"
    style = rounded
    cluster1009_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1009_entry_name -> cluster1009_entry [arrowhead=none, color="black", style=dashed]
    cluster1009_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1009_entry -> node3757 [color="black"]
    cluster1009_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1009_exit_name -> cluster1009_exit [arrowhead=none, color="black", style=dashed]
    cluster1009_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3757_name [shape=none, label=<<font color="black">Block[3757]</font>>]
    node3757_name -> node3757 [arrowhead=none, color="black", style=dashed]
    node3757 [shape=box, label=<<font color="black">[0] let varDeclaredNames = envRec.VarNames<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3757 -> node3758 [color="black"]
    node3758_name [shape=none, label=<<font color="black">Branch[3758]</font>>]
    node3758_name -> node3758 [arrowhead=none, color="black", style=dashed]
    node3758 [shape=diamond, label=<<font color="black">(contains varDeclaredNames N)</font>> color="black" fillcolor="white", style=filled]
    node3758 -> node3759 [label=<<font color="black">true</font>> color="black"]
    node3758 -> node3760 [label=<<font color="black">false</font>> color="black"]
    node3759_name [shape=none, label=<<font color="black">Block[3759]</font>>]
    node3759_name -> node3759 [arrowhead=none, color="black", style=dashed]
    node3759 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3759 -> cluster1009_exit [color="black"]
    node3760_name [shape=none, label=<<font color="black">Block[3760]</font>>]
    node3760_name -> node3760 [arrowhead=none, color="black", style=dashed]
    node3760 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3760 -> cluster1009_exit [color="black"]
  }
}