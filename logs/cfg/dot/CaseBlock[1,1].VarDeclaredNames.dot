digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster363 {
    label = "def <SYNTAX>:CaseBlock[1,1].VarDeclaredNames(this: Ast:CaseBlock[1,1]): List[String]"
    style = rounded
    cluster363_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster363_entry_name -> cluster363_entry [arrowhead=none, color="black", style=dashed]
    cluster363_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster363_entry -> node1979 [color="black"]
    cluster363_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster363_exit_name -> cluster363_exit [arrowhead=none, color="black", style=dashed]
    cluster363_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1979_name [shape=none, label=<<font color="black">Branch[1979]</font>>]
    node1979_name -> node1979 [arrowhead=none, color="black", style=dashed]
    node1979 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node1979 -> node1980 [label=<<font color="black">true</font>> color="black"]
    node1979 -> node1982 [label=<<font color="black">false</font>> color="black"]
    node1980_name [shape=none, label=<<font color="black">Call[1980]</font>>]
    node1980_name -> node1980 [arrowhead=none, color="black", style=dashed]
    node1980 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;VarDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1980 -> node1981 [color="black"]
    node1982_name [shape=none, label=<<font color="black">Block[1982]</font>>]
    node1982_name -> node1982 [arrowhead=none, color="black", style=dashed]
    node1982 [shape=box, label=<<font color="black">[0] let names1 = (new [])[#199]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1982 -> node1983 [color="black"]
    node1981_name [shape=none, label=<<font color="black">Block[1981]</font>>]
    node1981_name -> node1981 [arrowhead=none, color="black", style=dashed]
    node1981 [shape=box, label=<<font color="black">[0] let names1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1981 -> node1983 [color="black"]
    node1983_name [shape=none, label=<<font color="black">Call[1983]</font>>]
    node1983_name -> node1983 [arrowhead=none, color="black", style=dashed]
    node1983 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;VarDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1983 -> node1984 [color="black"]
    node1984_name [shape=none, label=<<font color="black">Block[1984]</font>>]
    node1984_name -> node1984 [arrowhead=none, color="black", style=dashed]
    node1984 [shape=box, label=<<font color="black">[0] let names2 = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1984 -> node1985 [color="black"]
    node1985_name [shape=none, label=<<font color="black">Branch[1985]</font>>]
    node1985_name -> node1985 [arrowhead=none, color="black", style=dashed]
    node1985 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node1985 -> node1986 [label=<<font color="black">true</font>> color="black"]
    node1985 -> node1988 [label=<<font color="black">false</font>> color="black"]
    node1986_name [shape=none, label=<<font color="black">Call[1986]</font>>]
    node1986_name -> node1986 [arrowhead=none, color="black", style=dashed]
    node1986 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;VarDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1986 -> node1987 [color="black"]
    node1988_name [shape=none, label=<<font color="black">Block[1988]</font>>]
    node1988_name -> node1988 [arrowhead=none, color="black", style=dashed]
    node1988 [shape=box, label=<<font color="black">[0] let names3 = (new [])[#200]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1988 -> node1989 [color="black"]
    node1987_name [shape=none, label=<<font color="black">Block[1987]</font>>]
    node1987_name -> node1987 [arrowhead=none, color="black", style=dashed]
    node1987 [shape=box, label=<<font color="black">[0] let names3 = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1987 -> node1989 [color="black"]
    node1989_name [shape=none, label=<<font color="black">Block[1989]</font>>]
    node1989_name -> node1989 [arrowhead=none, color="black", style=dashed]
    node1989 [shape=box, label=<<font color="black">[0] return (list-concat names1 names2 names3)[#201]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1989 -> cluster363_exit [color="black"]
  }
}