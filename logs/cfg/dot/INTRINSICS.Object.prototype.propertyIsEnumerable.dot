digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2023 {
    label = "def <BUILTIN>:INTRINSICS.Object.prototype.propertyIsEnumerable(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2023_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2023_entry_name -> cluster2023_entry [arrowhead=none, color="black", style=dashed]
    cluster2023_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2023_entry -> node11350 [color="black"]
    cluster2023_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2023_exit_name -> cluster2023_exit [arrowhead=none, color="black", style=dashed]
    cluster2023_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11350_name [shape=none, label=<<font color="black">Branch[11350]</font>>]
    node11350_name -> node11350 [arrowhead=none, color="black", style=dashed]
    node11350 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11350 -> node11351 [label=<<font color="black">true</font>> color="black"]
    node11350 -> node11352 [label=<<font color="black">false</font>> color="black"]
    node11351_name [shape=none, label=<<font color="black">Block[11351]</font>>]
    node11351_name -> node11351 [arrowhead=none, color="black", style=dashed]
    node11351 [shape=box, label=<<font color="black">[0] let V = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11351 -> node11353 [color="black"]
    node11352_name [shape=none, label=<<font color="black">Block[11352]</font>>]
    node11352_name -> node11352 [arrowhead=none, color="black", style=dashed]
    node11352 [shape=box, label=<<font color="black">[0] let V = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11352 -> node11353 [color="black"]
    node11353_name [shape=none, label=<<font color="black">Call[11353]</font>>]
    node11353_name -> node11353 [arrowhead=none, color="black", style=dashed]
    node11353 [shape=cds, label=<<font color="black">%0 = clo&lt;ToPropertyKey&gt;(V)</font>> color="black" fillcolor="white", style=filled]
    node11353 -> node11354 [color="black"]
    node11354_name [shape=none, label=<<font color="black">Block[11354]</font>>]
    node11354_name -> node11354 [arrowhead=none, color="black", style=dashed]
    node11354 [shape=box, label=<<font color="black">[0] let P = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11354 -> node11355 [color="black"]
    node11355_name [shape=none, label=<<font color="black">Call[11355]</font>>]
    node11355_name -> node11355 [arrowhead=none, color="black", style=dashed]
    node11355 [shape=cds, label=<<font color="black">%1 = clo&lt;ToObject&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node11355 -> node11356 [color="black"]
    node11356_name [shape=none, label=<<font color="black">Block[11356]</font>>]
    node11356_name -> node11356 [arrowhead=none, color="black", style=dashed]
    node11356 [shape=box, label=<<font color="black">[0] let O = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11356 -> node11357 [color="black"]
    node11357_name [shape=none, label=<<font color="black">Call[11357]</font>>]
    node11357_name -> node11357 [arrowhead=none, color="black", style=dashed]
    node11357 [shape=cds, label=<<font color="black">%2 = O-&gt;GetOwnProperty(P)</font>> color="black" fillcolor="white", style=filled]
    node11357 -> node11358 [color="black"]
    node11358_name [shape=none, label=<<font color="black">Block[11358]</font>>]
    node11358_name -> node11358 [arrowhead=none, color="black", style=dashed]
    node11358 [shape=box, label=<<font color="black">[0] let desc = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11358 -> node11359 [color="black"]
    node11359_name [shape=none, label=<<font color="black">Branch[11359]</font>>]
    node11359_name -> node11359 [arrowhead=none, color="black", style=dashed]
    node11359 [shape=diamond, label=<<font color="black">(= desc undefined)</font>> color="black" fillcolor="white", style=filled]
    node11359 -> node11360 [label=<<font color="black">true</font>> color="black"]
    node11359 -> node11361 [label=<<font color="black">false</font>> color="black"]
    node11360_name [shape=none, label=<<font color="black">Block[11360]</font>>]
    node11360_name -> node11360 [arrowhead=none, color="black", style=dashed]
    node11360 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11360 -> cluster2023_exit [color="black"]
    node11361_name [shape=none, label=<<font color="black">Block[11361]</font>>]
    node11361_name -> node11361 [arrowhead=none, color="black", style=dashed]
    node11361 [shape=box, label=<<font color="black">[0] return desc.Enumerable<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11361 -> cluster2023_exit [color="black"]
  }
}