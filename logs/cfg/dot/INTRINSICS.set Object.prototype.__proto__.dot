digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2028 {
    label = "def <BUILTIN>:INTRINSICS.set Object.prototype.__proto__(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2028_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2028_entry_name -> cluster2028_entry [arrowhead=none, color="black", style=dashed]
    cluster2028_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2028_entry -> node11409 [color="black"]
    cluster2028_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2028_exit_name -> cluster2028_exit [arrowhead=none, color="black", style=dashed]
    cluster2028_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node11409_name [shape=none, label=<<font color="black">Branch[11409]</font>>]
    node11409_name -> node11409 [arrowhead=none, color="black", style=dashed]
    node11409 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node11409 -> node11410 [label=<<font color="black">true</font>> color="black"]
    node11409 -> node11411 [label=<<font color="black">false</font>> color="black"]
    node11410_name [shape=none, label=<<font color="black">Block[11410]</font>>]
    node11410_name -> node11410 [arrowhead=none, color="black", style=dashed]
    node11410 [shape=box, label=<<font color="black">[0] let proto = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11410 -> node11412 [color="black"]
    node11411_name [shape=none, label=<<font color="black">Block[11411]</font>>]
    node11411_name -> node11411 [arrowhead=none, color="black", style=dashed]
    node11411 [shape=box, label=<<font color="black">[0] let proto = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11411 -> node11412 [color="black"]
    node11412_name [shape=none, label=<<font color="black">Call[11412]</font>>]
    node11412_name -> node11412 [arrowhead=none, color="black", style=dashed]
    node11412 [shape=cds, label=<<font color="black">%0 = clo&lt;RequireObjectCoercible&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node11412 -> node11413 [color="black"]
    node11413_name [shape=none, label=<<font color="black">Block[11413]</font>>]
    node11413_name -> node11413 [arrowhead=none, color="black", style=dashed]
    node11413 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11413 -> node11414 [color="black"]
    node11414_name [shape=none, label=<<font color="black">Branch[11414]</font>>]
    node11414_name -> node11414 [arrowhead=none, color="black", style=dashed]
    node11414 [shape=diamond, label=<<font color="black">(! (|| (= (typeof proto) @Object) (= (typeof proto) @Null)))</font>> color="black" fillcolor="white", style=filled]
    node11414 -> node11415 [label=<<font color="black">true</font>> color="black"]
    node11414 -> node11416 [label=<<font color="black">false</font>> color="black"]
    node11415_name [shape=none, label=<<font color="black">Block[11415]</font>>]
    node11415_name -> node11415 [arrowhead=none, color="black", style=dashed]
    node11415 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11415 -> cluster2028_exit [color="black"]
    node11416_name [shape=none, label=<<font color="black">Branch[11416]</font>>]
    node11416_name -> node11416 [arrowhead=none, color="black", style=dashed]
    node11416 [shape=diamond, label=<<font color="black">(! (= (typeof O) @Object))</font>> color="black" fillcolor="white", style=filled]
    node11416 -> node11417 [label=<<font color="black">true</font>> color="black"]
    node11416 -> node11418 [label=<<font color="black">false</font>> color="black"]
    node11417_name [shape=none, label=<<font color="black">Block[11417]</font>>]
    node11417_name -> node11417 [arrowhead=none, color="black", style=dashed]
    node11417 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11417 -> cluster2028_exit [color="black"]
    node11418_name [shape=none, label=<<font color="black">Call[11418]</font>>]
    node11418_name -> node11418 [arrowhead=none, color="black", style=dashed]
    node11418 [shape=cds, label=<<font color="black">%1 = O-&gt;SetPrototypeOf(proto)</font>> color="black" fillcolor="white", style=filled]
    node11418 -> node11419 [color="black"]
    node11419_name [shape=none, label=<<font color="black">Block[11419]</font>>]
    node11419_name -> node11419 [arrowhead=none, color="black", style=dashed]
    node11419 [shape=box, label=<<font color="black">[0] let status = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11419 -> node11420 [color="black"]
    node11420_name [shape=none, label=<<font color="black">Branch[11420]</font>>]
    node11420_name -> node11420 [arrowhead=none, color="black", style=dashed]
    node11420 [shape=diamond, label=<<font color="black">(= status false)</font>> color="black" fillcolor="white", style=filled]
    node11420 -> node11421 [label=<<font color="black">true</font>> color="black"]
    node11420 -> node11422 [label=<<font color="black">false</font>> color="black"]
    node11421_name [shape=none, label=<<font color="black">Block[11421]</font>>]
    node11421_name -> node11421 [arrowhead=none, color="black", style=dashed]
    node11421 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#900])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11421 -> cluster2028_exit [color="black"]
    node11422_name [shape=none, label=<<font color="black">Block[11422]</font>>]
    node11422_name -> node11422 [arrowhead=none, color="black", style=dashed]
    node11422 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node11422 -> cluster2028_exit [color="black"]
  }
}