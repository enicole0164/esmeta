digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1499 {
    label = "def <SYNTAX>:Statement[9,0].LabelledEvaluation(this: Ast:Statement[9,0], labelSet: Unknown): Normal[ESValue] | Abrupt"
    style = rounded
    cluster1499_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1499_entry_name -> cluster1499_entry [arrowhead=none, color="black", style=dashed]
    cluster1499_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1499_entry -> node8215 [color="black"]
    cluster1499_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1499_exit_name -> cluster1499_exit [arrowhead=none, color="black", style=dashed]
    cluster1499_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8215_name [shape=none, label=<<font color="black">Call[8215]</font>>]
    node8215_name -> node8215 [arrowhead=none, color="black", style=dashed]
    node8215 [shape=cds, label=<<font color="black">%0 = this-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node8215 -> node8216 [color="black"]
    node8216_name [shape=none, label=<<font color="black">Block[8216]</font>>]
    node8216_name -> node8216 [arrowhead=none, color="black", style=dashed]
    node8216 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8216 -> cluster1499_exit [color="black"]
  }
}