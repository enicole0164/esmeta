digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1614 {
    label = "def <SYNTAX>:AsyncGeneratorExpression[0,1].InstantiateAsyncGeneratorFunctionExpression(this: Ast:AsyncGeneratorExpression[0,1], name?: Unknown): FunctionObject"
    style = rounded
    cluster1614_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1614_entry_name -> cluster1614_entry [arrowhead=none, color="black", style=dashed]
    cluster1614_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1614_entry -> node8760 [color="black"]
    cluster1614_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1614_exit_name -> cluster1614_exit [arrowhead=none, color="black", style=dashed]
    cluster1614_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8760_name [shape=none, label=<<font color="black">Block[8760]</font>>]
    node8760_name -> node8760 [arrowhead=none, color="black", style=dashed]
    node8760 [shape=box, label=<<font color="black">[0] assert (= name absent)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8760 -> node8761 [color="black"]
    node8761_name [shape=none, label=<<font color="black">Call[8761]</font>>]
    node8761_name -> node8761 [arrowhead=none, color="black", style=dashed]
    node8761 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;StringValue()</font>> color="black" fillcolor="white", style=filled]
    node8761 -> node8762 [color="black"]
    node8762_name [shape=none, label=<<font color="black">Block[8762]</font>>]
    node8762_name -> node8762 [arrowhead=none, color="black", style=dashed]
    node8762 [shape=box, label=<<font color="black">[0] name = %0<BR ALIGN="LEFT"/>[1] let outerEnv = @EXECUTION_STACK[0].LexicalEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8762 -> node8763 [color="black"]
    node8763_name [shape=none, label=<<font color="black">Call[8763]</font>>]
    node8763_name -> node8763 [arrowhead=none, color="black", style=dashed]
    node8763 [shape=cds, label=<<font color="black">%1 = clo&lt;NewDeclarativeEnvironment&gt;(outerEnv)</font>> color="black" fillcolor="white", style=filled]
    node8763 -> node8764 [color="black"]
    node8764_name [shape=none, label=<<font color="black">Block[8764]</font>>]
    node8764_name -> node8764 [arrowhead=none, color="black", style=dashed]
    node8764 [shape=box, label=<<font color="black">[0] let funcEnv = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8764 -> node8765 [color="black"]
    node8765_name [shape=none, label=<<font color="black">Call[8765]</font>>]
    node8765_name -> node8765 [arrowhead=none, color="black", style=dashed]
    node8765 [shape=cds, label=<<font color="black">%2 = funcEnv-&gt;CreateImmutableBinding(name, false)</font>> color="black" fillcolor="white", style=filled]
    node8765 -> node8766 [color="black"]
    node8766_name [shape=none, label=<<font color="black">Block[8766]</font>>]
    node8766_name -> node8766 [arrowhead=none, color="black", style=dashed]
    node8766 [shape=box, label=<<font color="black">[0] [! %2]<BR ALIGN="LEFT"/>[1] let privateEnv = @EXECUTION_STACK[0].PrivateEnvironment<BR ALIGN="LEFT"/>[2] let sourceText = (source-text this)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8766 -> node8767 [color="black"]
    node8767_name [shape=none, label=<<font color="black">Call[8767]</font>>]
    node8767_name -> node8767 [arrowhead=none, color="black", style=dashed]
    node8767 [shape=cds, label=<<font color="black">%3 = clo&lt;OrdinaryFunctionCreate&gt;(@EXECUTION_STACK[0].Realm.Intrinsics[&quot;%AsyncGeneratorFunction.prototype%&quot;], sourceText, this[1], this[2], ~non-lexical-this~, funcEnv, privateEnv)</font>> color="black" fillcolor="white", style=filled]
    node8767 -> node8768 [color="black"]
    node8768_name [shape=none, label=<<font color="black">Block[8768]</font>>]
    node8768_name -> node8768 [arrowhead=none, color="black", style=dashed]
    node8768 [shape=box, label=<<font color="black">[0] let closure = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8768 -> node8769 [color="black"]
    node8769_name [shape=none, label=<<font color="black">Call[8769]</font>>]
    node8769_name -> node8769 [arrowhead=none, color="black", style=dashed]
    node8769 [shape=cds, label=<<font color="black">%4 = clo&lt;SetFunctionName&gt;(closure, name)</font>> color="black" fillcolor="white", style=filled]
    node8769 -> node8770 [color="black"]
    node8770_name [shape=none, label=<<font color="black">Call[8770]</font>>]
    node8770_name -> node8770 [arrowhead=none, color="black", style=dashed]
    node8770 [shape=cds, label=<<font color="black">%5 = clo&lt;OrdinaryObjectCreate&gt;(@EXECUTION_STACK[0].Realm.Intrinsics[&quot;%AsyncGeneratorFunction.prototype.prototype%&quot;])</font>> color="black" fillcolor="white", style=filled]
    node8770 -> node8771 [color="black"]
    node8771_name [shape=none, label=<<font color="black">Block[8771]</font>>]
    node8771_name -> node8771 [arrowhead=none, color="black", style=dashed]
    node8771 [shape=box, label=<<font color="black">[0] let prototype = %5<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8771 -> node8772 [color="black"]
    node8772_name [shape=none, label=<<font color="black">Call[8772]</font>>]
    node8772_name -> node8772 [arrowhead=none, color="black", style=dashed]
    node8772 [shape=cds, label=<<font color="black">%6 = clo&lt;DefinePropertyOrThrow&gt;(closure, &quot;prototype&quot;, (new PropertyDescriptor(&quot;Value&quot; -&gt; prototype, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; false))[#674])</font>> color="black" fillcolor="white", style=filled]
    node8772 -> node8773 [color="black"]
    node8773_name [shape=none, label=<<font color="black">Block[8773]</font>>]
    node8773_name -> node8773 [arrowhead=none, color="black", style=dashed]
    node8773 [shape=box, label=<<font color="black">[0] [! %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8773 -> node8774 [color="black"]
    node8774_name [shape=none, label=<<font color="black">Call[8774]</font>>]
    node8774_name -> node8774 [arrowhead=none, color="black", style=dashed]
    node8774 [shape=cds, label=<<font color="black">%7 = funcEnv-&gt;InitializeBinding(name, closure)</font>> color="black" fillcolor="white", style=filled]
    node8774 -> node8775 [color="black"]
    node8775_name [shape=none, label=<<font color="black">Block[8775]</font>>]
    node8775_name -> node8775 [arrowhead=none, color="black", style=dashed]
    node8775 [shape=box, label=<<font color="black">[0] [! %7]<BR ALIGN="LEFT"/>[1] return closure<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8775 -> cluster1614_exit [color="black"]
  }
}