digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1134 {
    label = "def IntegerIndexedElementGet(O: IntegerIndexedExoticObject, index: Number): Number | BigInt | Undefined"
    style = rounded
    cluster1134_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1134_entry_name -> cluster1134_entry [arrowhead=none, color="black", style=dashed]
    cluster1134_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1134_entry -> node4900 [color="black"]
    cluster1134_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1134_exit_name -> cluster1134_exit [arrowhead=none, color="black", style=dashed]
    cluster1134_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4900_name [shape=none, label=<<font color="black">Call[4900]</font>>]
    node4900_name -> node4900 [arrowhead=none, color="black", style=dashed]
    node4900 [shape=cds, label=<<font color="black">%0 = clo&lt;IsValidIntegerIndex&gt;(O, index)</font>> color="black" fillcolor="white", style=filled]
    node4900 -> node4901 [color="black"]
    node4901_name [shape=none, label=<<font color="black">Branch[4901]</font>>]
    node4901_name -> node4901 [arrowhead=none, color="black", style=dashed]
    node4901 [shape=diamond, label=<<font color="black">(= %0 false)</font>> color="black" fillcolor="white", style=filled]
    node4901 -> node4902 [label=<<font color="black">true</font>> color="black"]
    node4901 -> node4903 [label=<<font color="black">false</font>> color="black"]
    node4902_name [shape=none, label=<<font color="black">Block[4902]</font>>]
    node4902_name -> node4902 [arrowhead=none, color="black", style=dashed]
    node4902 [shape=box, label=<<font color="black">[0] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4902 -> cluster1134_exit [color="black"]
    node4903_name [shape=none, label=<<font color="black">Block[4903]</font>>]
    node4903_name -> node4903 [arrowhead=none, color="black", style=dashed]
    node4903 [shape=box, label=<<font color="black">[0] let offset = O.ByteOffset<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4903 -> node4904 [color="black"]
    node4904_name [shape=none, label=<<font color="black">Call[4904]</font>>]
    node4904_name -> node4904 [arrowhead=none, color="black", style=dashed]
    node4904 [shape=cds, label=<<font color="black">%1 = clo&lt;TypedArrayElementSize&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node4904 -> node4905 [color="black"]
    node4905_name [shape=none, label=<<font color="black">Block[4905]</font>>]
    node4905_name -> node4905 [arrowhead=none, color="black", style=dashed]
    node4905 [shape=box, label=<<font color="black">[0] let elementSize = %1<BR ALIGN="LEFT"/>[1] let indexedPosition = (+ (* ([math] index) elementSize) offset)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4905 -> node4906 [color="black"]
    node4906_name [shape=none, label=<<font color="black">Call[4906]</font>>]
    node4906_name -> node4906 [arrowhead=none, color="black", style=dashed]
    node4906 [shape=cds, label=<<font color="black">%2 = clo&lt;TypedArrayElementType&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node4906 -> node4907 [color="black"]
    node4907_name [shape=none, label=<<font color="black">Block[4907]</font>>]
    node4907_name -> node4907 [arrowhead=none, color="black", style=dashed]
    node4907 [shape=box, label=<<font color="black">[0] let elementType = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4907 -> node4908 [color="black"]
    node4908_name [shape=none, label=<<font color="black">Call[4908]</font>>]
    node4908_name -> node4908 [arrowhead=none, color="black", style=dashed]
    node4908 [shape=cds, label=<<font color="black">%3 = clo&lt;GetValueFromBuffer&gt;(O.ViewedArrayBuffer, indexedPosition, elementType, true, ~Unordered~)</font>> color="black" fillcolor="white", style=filled]
    node4908 -> node4909 [color="black"]
    node4909_name [shape=none, label=<<font color="black">Block[4909]</font>>]
    node4909_name -> node4909 [arrowhead=none, color="black", style=dashed]
    node4909 [shape=box, label=<<font color="black">[0] return %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4909 -> cluster1134_exit [color="black"]
  }
}