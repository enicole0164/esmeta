digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2478 {
    label = "def RawBytesToNumeric(type: Unknown["TypedArrayElementType"], rawBytes: Unknown["List"], isLittleEndian: Boolean): Number | BigInt"
    style = rounded
    cluster2478_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2478_entry_name -> cluster2478_entry [arrowhead=none, color="black", style=dashed]
    cluster2478_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2478_entry -> node17389 [color="black"]
    cluster2478_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2478_exit_name -> cluster2478_exit [arrowhead=none, color="black", style=dashed]
    cluster2478_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17389_name [shape=none, label=<<font color="black">Block[17389]</font>>]
    node17389_name -> node17389 [arrowhead=none, color="black", style=dashed]
    node17389 [shape=box, label=<<font color="black">[0] (yet &quot;Let _elementSize_ be the Element Size value specified in &lt;emu-xref href=\&quot;#table-the-typedarray-constructors\&quot;&gt;&lt;/emu-xref&gt; for Element Type _type_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17389 -> node17390 [color="black"]
    node17390_name [shape=none, label=<<font color="black">Branch[17390]</font>>]
    node17390_name -> node17390 [arrowhead=none, color="black", style=dashed]
    node17390 [shape=diamond, label=<<font color="black">(= isLittleEndian false)</font>> color="black" fillcolor="white", style=filled]
    node17390 -> node17391 [label=<<font color="black">true</font>> color="black"]
    node17390 -> node17392 [label=<<font color="black">false</font>> color="black"]
    node17391_name [shape=none, label=<<font color="black">Block[17391]</font>>]
    node17391_name -> node17391 [arrowhead=none, color="black", style=dashed]
    node17391 [shape=box, label=<<font color="black">[0] (yet &quot;reverse the order of the elements of _rawBytes_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17391 -> node17392 [color="black"]
    node17392_name [shape=none, label=<<font color="black">Branch[17392]</font>>]
    node17392_name -> node17392 [arrowhead=none, color="black", style=dashed]
    node17392 [shape=diamond, label=<<font color="black">(= type ~Float32~)</font>> color="black" fillcolor="white", style=filled]
    node17392 -> node17393 [label=<<font color="black">true</font>> color="black"]
    node17392 -> node17394 [label=<<font color="black">false</font>> color="black"]
    node17393_name [shape=none, label=<<font color="black">Block[17393]</font>>]
    node17393_name -> node17393 [arrowhead=none, color="black", style=dashed]
    node17393 [shape=box, label=<<font color="black">[0] (yet &quot;Let _value_ be the byte elements of _rawBytes_ concatenated and interpreted as a little-endian bit string encoding of an IEEE 754-2019 binary32 value.&quot;)<BR ALIGN="LEFT"/>[1] (yet &quot;If _value_ is an IEEE 754-2019 binary32 NaN value, return the *NaN* Number value.&quot;)<BR ALIGN="LEFT"/>[2] (yet &quot;Return the Number value that corresponds to _value_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17393 -> node17394 [color="black"]
    node17394_name [shape=none, label=<<font color="black">Branch[17394]</font>>]
    node17394_name -> node17394 [arrowhead=none, color="black", style=dashed]
    node17394 [shape=diamond, label=<<font color="black">(= type ~Float64~)</font>> color="black" fillcolor="white", style=filled]
    node17394 -> node17395 [label=<<font color="black">true</font>> color="black"]
    node17394 -> node17396 [label=<<font color="black">false</font>> color="black"]
    node17395_name [shape=none, label=<<font color="black">Block[17395]</font>>]
    node17395_name -> node17395 [arrowhead=none, color="black", style=dashed]
    node17395 [shape=box, label=<<font color="black">[0] (yet &quot;Let _value_ be the byte elements of _rawBytes_ concatenated and interpreted as a little-endian bit string encoding of an IEEE 754-2019 binary64 value.&quot;)<BR ALIGN="LEFT"/>[1] (yet &quot;If _value_ is an IEEE 754-2019 binary64 NaN value, return the *NaN* Number value.&quot;)<BR ALIGN="LEFT"/>[2] (yet &quot;Return the Number value that corresponds to _value_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17395 -> node17396 [color="black"]
    node17396_name [shape=none, label=<<font color="black">Call[17396]</font>>]
    node17396_name -> node17396 [arrowhead=none, color="black", style=dashed]
    node17396 [shape=cds, label=<<font color="black">%0 = clo&lt;IsUnsignedElementType&gt;(type)</font>> color="black" fillcolor="white", style=filled]
    node17396 -> node17397 [color="black"]
    node17397_name [shape=none, label=<<font color="black">Branch[17397]</font>>]
    node17397_name -> node17397 [arrowhead=none, color="black", style=dashed]
    node17397 [shape=diamond, label=<<font color="black">(= %0 true)</font>> color="black" fillcolor="white", style=filled]
    node17397 -> node17398 [label=<<font color="black">true</font>> color="black"]
    node17397 -> node17399 [label=<<font color="black">false</font>> color="black"]
    node17398_name [shape=none, label=<<font color="black">Block[17398]</font>>]
    node17398_name -> node17398 [arrowhead=none, color="black", style=dashed]
    node17398 [shape=box, label=<<font color="black">[0] (yet &quot;Let _intValue_ be the byte elements of _rawBytes_ concatenated and interpreted as a bit string encoding of an unsigned little-endian binary number.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17398 -> node17400 [color="black"]
    node17399_name [shape=none, label=<<font color="black">Block[17399]</font>>]
    node17399_name -> node17399 [arrowhead=none, color="black", style=dashed]
    node17399 [shape=box, label=<<font color="black">[0] (yet &quot;Let _intValue_ be the byte elements of _rawBytes_ concatenated and interpreted as a bit string encoding of a binary little-endian two's complement number of bit length _elementSize_ &times; 8.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17399 -> node17400 [color="black"]
    node17400_name [shape=none, label=<<font color="black">Call[17400]</font>>]
    node17400_name -> node17400 [arrowhead=none, color="black", style=dashed]
    node17400 [shape=cds, label=<<font color="black">%1 = clo&lt;IsBigIntElementType&gt;(type)</font>> color="black" fillcolor="white", style=filled]
    node17400 -> node17401 [color="black"]
    node17401_name [shape=none, label=<<font color="black">Branch[17401]</font>>]
    node17401_name -> node17401 [arrowhead=none, color="black", style=dashed]
    node17401 [shape=diamond, label=<<font color="black">(= %1 true)</font>> color="black" fillcolor="white", style=filled]
    node17401 -> node17402 [label=<<font color="black">true</font>> color="black"]
    node17401 -> node17403 [label=<<font color="black">false</font>> color="black"]
    node17402_name [shape=none, label=<<font color="black">Block[17402]</font>>]
    node17402_name -> node17402 [arrowhead=none, color="black", style=dashed]
    node17402 [shape=box, label=<<font color="black">[0] (yet &quot;return the BigInt value that corresponds to _intValue_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17402 -> cluster2478_exit [color="black"]
    node17403_name [shape=none, label=<<font color="black">Block[17403]</font>>]
    node17403_name -> node17403 [arrowhead=none, color="black", style=dashed]
    node17403 [shape=box, label=<<font color="black">[0] (yet &quot;return the Number value that corresponds to _intValue_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17403 -> cluster2478_exit [color="black"]
  }
}