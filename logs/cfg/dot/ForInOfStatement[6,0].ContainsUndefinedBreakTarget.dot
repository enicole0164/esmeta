digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster576 {
    label = "def <SYNTAX>:ForInOfStatement[6,0].ContainsUndefinedBreakTarget(this: Ast:ForInOfStatement[6,0], labelSet: Unknown): Boolean"
    style = rounded
    cluster576_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster576_entry_name -> cluster576_entry [arrowhead=none, color="black", style=dashed]
    cluster576_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster576_entry -> node2581 [color="black"]
    cluster576_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster576_exit_name -> cluster576_exit [arrowhead=none, color="black", style=dashed]
    cluster576_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2581_name [shape=none, label=<<font color="black">Call[2581]</font>>]
    node2581_name -> node2581 [arrowhead=none, color="black", style=dashed]
    node2581 [shape=cds, label=<<font color="black">%0 = this[2]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2581 -> node2582 [color="black"]
    node2582_name [shape=none, label=<<font color="black">Block[2582]</font>>]
    node2582_name -> node2582 [arrowhead=none, color="black", style=dashed]
    node2582 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2582 -> cluster576_exit [color="black"]
  }
}