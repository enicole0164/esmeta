digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1427 {
    label = "def <SYNTAX>:ForStatement[2,0].ForLoopEvaluation(this: Ast:ForStatement[2,0], labelSet: Unknown): Normal[ESValue] | Abrupt"
    style = rounded
    cluster1427_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1427_entry_name -> cluster1427_entry [arrowhead=none, color="black", style=dashed]
    cluster1427_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1427_entry -> node7472 [color="black"]
    cluster1427_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1427_exit_name -> cluster1427_exit [arrowhead=none, color="black", style=dashed]
    cluster1427_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7472_name [shape=none, label=<<font color="black">Block[7472]</font>>]
    node7472_name -> node7472 [arrowhead=none, color="black", style=dashed]
    node7472 [shape=box, label=<<font color="black">[0] let oldEnv = @EXECUTION_STACK[0].LexicalEnvironment<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7472 -> node7473 [color="black"]
    node7473_name [shape=none, label=<<font color="black">Call[7473]</font>>]
    node7473_name -> node7473 [arrowhead=none, color="black", style=dashed]
    node7473 [shape=cds, label=<<font color="black">%0 = clo&lt;NewDeclarativeEnvironment&gt;(oldEnv)</font>> color="black" fillcolor="white", style=filled]
    node7473 -> node7474 [color="black"]
    node7474_name [shape=none, label=<<font color="black">Block[7474]</font>>]
    node7474_name -> node7474 [arrowhead=none, color="black", style=dashed]
    node7474 [shape=box, label=<<font color="black">[0] let loopEnv = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7474 -> node7475 [color="black"]
    node7475_name [shape=none, label=<<font color="black">Call[7475]</font>>]
    node7475_name -> node7475 [arrowhead=none, color="black", style=dashed]
    node7475 [shape=cds, label=<<font color="black">%1 = this[0]-&gt;IsConstantDeclaration()</font>> color="black" fillcolor="white", style=filled]
    node7475 -> node7476 [color="black"]
    node7476_name [shape=none, label=<<font color="black">Block[7476]</font>>]
    node7476_name -> node7476 [arrowhead=none, color="black", style=dashed]
    node7476 [shape=box, label=<<font color="black">[0] let isConst = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7476 -> node7477 [color="black"]
    node7477_name [shape=none, label=<<font color="black">Call[7477]</font>>]
    node7477_name -> node7477 [arrowhead=none, color="black", style=dashed]
    node7477 [shape=cds, label=<<font color="black">%2 = this[0]-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node7477 -> node7478 [color="black"]
    node7478_name [shape=none, label=<<font color="black">Block[7478]</font>>]
    node7478_name -> node7478 [arrowhead=none, color="black", style=dashed]
    node7478 [shape=box, label=<<font color="black">[0] let boundNames = %2<BR ALIGN="LEFT"/>[1] %4 = boundNames<BR ALIGN="LEFT"/>[2] %3 = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7478 -> node7479 [color="black"]
    node7479_name [shape=none, label=<<font color="black">Branch[7479]</font>>]
    node7479_name -> node7479 [arrowhead=none, color="black", style=dashed]
    node7479 [shape=diamond, label=<<font color="black">(&lt; %3 %4.length)</font>> color="black" fillcolor="white", style=filled]
    node7479 -> node7480 [label=<<font color="black">true</font>> color="black"]
    node7479 -> node7487 [label=<<font color="black">false</font>> color="black"]
    node7480_name [shape=none, label=<<font color="black">Block[7480]</font>>]
    node7480_name -> node7480 [arrowhead=none, color="black", style=dashed]
    node7480 [shape=box, label=<<font color="black">[0] let dn = %4[%3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7480 -> node7481 [color="black"]
    node7487_name [shape=none, label=<<font color="black">Block[7487]</font>>]
    node7487_name -> node7487 [arrowhead=none, color="black", style=dashed]
    node7487 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = loopEnv<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7487 -> node7488 [color="black"]
    node7481_name [shape=none, label=<<font color="black">Branch[7481]</font>>]
    node7481_name -> node7481 [arrowhead=none, color="black", style=dashed]
    node7481 [shape=diamond, label=<<font color="black">(= isConst true)</font>> color="black" fillcolor="white", style=filled]
    node7481 -> node7482 [label=<<font color="black">true</font>> color="black"]
    node7481 -> node7484 [label=<<font color="black">false</font>> color="black"]
    node7488_name [shape=none, label=<<font color="black">Call[7488]</font>>]
    node7488_name -> node7488 [arrowhead=none, color="black", style=dashed]
    node7488 [shape=cds, label=<<font color="black">%7 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7488 -> node7489 [color="black"]
    node7482_name [shape=none, label=<<font color="black">Call[7482]</font>>]
    node7482_name -> node7482 [arrowhead=none, color="black", style=dashed]
    node7482 [shape=cds, label=<<font color="black">%5 = loopEnv-&gt;CreateImmutableBinding(dn, true)</font>> color="black" fillcolor="white", style=filled]
    node7482 -> node7483 [color="black"]
    node7484_name [shape=none, label=<<font color="black">Call[7484]</font>>]
    node7484_name -> node7484 [arrowhead=none, color="black", style=dashed]
    node7484 [shape=cds, label=<<font color="black">%6 = loopEnv-&gt;CreateMutableBinding(dn, false)</font>> color="black" fillcolor="white", style=filled]
    node7484 -> node7485 [color="black"]
    node7489_name [shape=none, label=<<font color="black">Block[7489]</font>>]
    node7489_name -> node7489 [arrowhead=none, color="black", style=dashed]
    node7489 [shape=box, label=<<font color="black">[0] let forDcl = %7<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7489 -> node7490 [color="black"]
    node7483_name [shape=none, label=<<font color="black">Block[7483]</font>>]
    node7483_name -> node7483 [arrowhead=none, color="black", style=dashed]
    node7483 [shape=box, label=<<font color="black">[0] [! %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7483 -> node7486 [color="black"]
    node7485_name [shape=none, label=<<font color="black">Block[7485]</font>>]
    node7485_name -> node7485 [arrowhead=none, color="black", style=dashed]
    node7485 [shape=box, label=<<font color="black">[0] [! %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7485 -> node7486 [color="black"]
    node7490_name [shape=none, label=<<font color="black">Branch[7490]</font>>]
    node7490_name -> node7490 [arrowhead=none, color="black", style=dashed]
    node7490 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? forDcl) (! (= forDcl.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node7490 -> node7491 [label=<<font color="black">true</font>> color="black"]
    node7490 -> node7492 [label=<<font color="black">false</font>> color="black"]
    node7486_name [shape=none, label=<<font color="black">Block[7486]</font>>]
    node7486_name -> node7486 [arrowhead=none, color="black", style=dashed]
    node7486 [shape=box, label=<<font color="black">[0] %3 = (+ %3 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7486 -> node7479 [color="black"]
    node7491_name [shape=none, label=<<font color="black">Block[7491]</font>>]
    node7491_name -> node7491 [arrowhead=none, color="black", style=dashed]
    node7491 [shape=box, label=<<font color="black">[0] @EXECUTION_STACK[0].LexicalEnvironment = oldEnv<BR ALIGN="LEFT"/>[1] return [? forDcl]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7491 -> cluster1427_exit [color="black"]
    node7492_name [shape=none, label=<<font color="black">Branch[7492]</font>>]
    node7492_name -> node7492 [arrowhead=none, color="black", style=dashed]
    node7492 [shape=diamond, label=<<font color="black">(= isConst false)</font>> color="black" fillcolor="white", style=filled]
    node7492 -> node7493 [label=<<font color="black">true</font>> color="black"]
    node7492 -> node7494 [label=<<font color="black">false</font>> color="black"]
    node7493_name [shape=none, label=<<font color="black">Block[7493]</font>>]
    node7493_name -> node7493 [arrowhead=none, color="black", style=dashed]
    node7493 [shape=box, label=<<font color="black">[0] let perIterationLets = boundNames<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7493 -> node7495 [color="black"]
    node7494_name [shape=none, label=<<font color="black">Block[7494]</font>>]
    node7494_name -> node7494 [arrowhead=none, color="black", style=dashed]
    node7494 [shape=box, label=<<font color="black">[0] let perIterationLets = (new [])[#616]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7494 -> node7495 [color="black"]
    node7495_name [shape=none, label=<<font color="black">Call[7495]</font>>]
    node7495_name -> node7495 [arrowhead=none, color="black", style=dashed]
    node7495 [shape=cds, label=<<font color="black">%8 = clo&lt;ForBodyEvaluation&gt;(this[1], this[2], this[3], perIterationLets, labelSet)</font>> color="black" fillcolor="white", style=filled]
    node7495 -> node7496 [color="black"]
    node7496_name [shape=none, label=<<font color="black">Call[7496]</font>>]
    node7496_name -> node7496 [arrowhead=none, color="black", style=dashed]
    node7496 [shape=cds, label=<<font color="black">%9 = clo&lt;Completion&gt;(%8)</font>> color="black" fillcolor="white", style=filled]
    node7496 -> node7497 [color="black"]
    node7497_name [shape=none, label=<<font color="black">Block[7497]</font>>]
    node7497_name -> node7497 [arrowhead=none, color="black", style=dashed]
    node7497 [shape=box, label=<<font color="black">[0] let bodyResult = %9<BR ALIGN="LEFT"/>[1] @EXECUTION_STACK[0].LexicalEnvironment = oldEnv<BR ALIGN="LEFT"/>[2] return [? bodyResult]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7497 -> cluster1427_exit [color="black"]
  }
}