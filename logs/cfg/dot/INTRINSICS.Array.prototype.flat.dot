digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2354 {
    label = "def <BUILTIN>:INTRINSICS.Array.prototype.flat(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2354_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2354_entry_name -> cluster2354_entry [arrowhead=none, color="black", style=dashed]
    cluster2354_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2354_entry -> node15090 [color="black"]
    cluster2354_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2354_exit_name -> cluster2354_exit [arrowhead=none, color="black", style=dashed]
    cluster2354_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node15090_name [shape=none, label=<<font color="black">Branch[15090]</font>>]
    node15090_name -> node15090 [arrowhead=none, color="black", style=dashed]
    node15090 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node15090 -> node15091 [label=<<font color="black">true</font>> color="black"]
    node15090 -> node15092 [label=<<font color="black">false</font>> color="black"]
    node15091_name [shape=none, label=<<font color="black">Block[15091]</font>>]
    node15091_name -> node15091 [arrowhead=none, color="black", style=dashed]
    node15091 [shape=box, label=<<font color="black">[0] let depth = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15091 -> node15093 [color="black"]
    node15092_name [shape=none, label=<<font color="black">Block[15092]</font>>]
    node15092_name -> node15092 [arrowhead=none, color="black", style=dashed]
    node15092 [shape=box, label=<<font color="black">[0] let depth = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15092 -> node15093 [color="black"]
    node15093_name [shape=none, label=<<font color="black">Call[15093]</font>>]
    node15093_name -> node15093 [arrowhead=none, color="black", style=dashed]
    node15093 [shape=cds, label=<<font color="black">%0 = clo&lt;ToObject&gt;(this)</font>> color="black" fillcolor="white", style=filled]
    node15093 -> node15094 [color="black"]
    node15094_name [shape=none, label=<<font color="black">Block[15094]</font>>]
    node15094_name -> node15094 [arrowhead=none, color="black", style=dashed]
    node15094 [shape=box, label=<<font color="black">[0] let O = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15094 -> node15095 [color="black"]
    node15095_name [shape=none, label=<<font color="black">Call[15095]</font>>]
    node15095_name -> node15095 [arrowhead=none, color="black", style=dashed]
    node15095 [shape=cds, label=<<font color="black">%1 = clo&lt;LengthOfArrayLike&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node15095 -> node15096 [color="black"]
    node15096_name [shape=none, label=<<font color="black">Block[15096]</font>>]
    node15096_name -> node15096 [arrowhead=none, color="black", style=dashed]
    node15096 [shape=box, label=<<font color="black">[0] let sourceLen = [? %1]<BR ALIGN="LEFT"/>[1] let depthNum = 1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15096 -> node15097 [color="black"]
    node15097_name [shape=none, label=<<font color="black">Branch[15097]</font>>]
    node15097_name -> node15097 [arrowhead=none, color="black", style=dashed]
    node15097 [shape=diamond, label=<<font color="black">(! (= depth undefined))</font>> color="black" fillcolor="white", style=filled]
    node15097 -> node15098 [label=<<font color="black">true</font>> color="black"]
    node15097 -> node15102 [label=<<font color="black">false</font>> color="black"]
    node15098_name [shape=none, label=<<font color="black">Call[15098]</font>>]
    node15098_name -> node15098 [arrowhead=none, color="black", style=dashed]
    node15098 [shape=cds, label=<<font color="black">%2 = clo&lt;ToIntegerOrInfinity&gt;(depth)</font>> color="black" fillcolor="white", style=filled]
    node15098 -> node15099 [color="black"]
    node15102_name [shape=none, label=<<font color="black">Call[15102]</font>>]
    node15102_name -> node15102 [arrowhead=none, color="black", style=dashed]
    node15102 [shape=cds, label=<<font color="black">%3 = clo&lt;ArraySpeciesCreate&gt;(O, 0)</font>> color="black" fillcolor="white", style=filled]
    node15102 -> node15103 [color="black"]
    node15099_name [shape=none, label=<<font color="black">Block[15099]</font>>]
    node15099_name -> node15099 [arrowhead=none, color="black", style=dashed]
    node15099 [shape=box, label=<<font color="black">[0] depthNum = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15099 -> node15100 [color="black"]
    node15103_name [shape=none, label=<<font color="black">Block[15103]</font>>]
    node15103_name -> node15103 [arrowhead=none, color="black", style=dashed]
    node15103 [shape=box, label=<<font color="black">[0] let A = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15103 -> node15104 [color="black"]
    node15100_name [shape=none, label=<<font color="black">Branch[15100]</font>>]
    node15100_name -> node15100 [arrowhead=none, color="black", style=dashed]
    node15100 [shape=diamond, label=<<font color="black">(&lt; depthNum 0)</font>> color="black" fillcolor="white", style=filled]
    node15100 -> node15101 [label=<<font color="black">true</font>> color="black"]
    node15100 -> node15102 [label=<<font color="black">false</font>> color="black"]
    node15104_name [shape=none, label=<<font color="black">Call[15104]</font>>]
    node15104_name -> node15104 [arrowhead=none, color="black", style=dashed]
    node15104 [shape=cds, label=<<font color="black">%4 = clo&lt;FlattenIntoArray&gt;(A, O, sourceLen, 0, depthNum)</font>> color="black" fillcolor="white", style=filled]
    node15104 -> node15105 [color="black"]
    node15101_name [shape=none, label=<<font color="black">Block[15101]</font>>]
    node15101_name -> node15101 [arrowhead=none, color="black", style=dashed]
    node15101 [shape=box, label=<<font color="black">[0] depthNum = 0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15101 -> node15102 [color="black"]
    node15105_name [shape=none, label=<<font color="black">Block[15105]</font>>]
    node15105_name -> node15105 [arrowhead=none, color="black", style=dashed]
    node15105 [shape=box, label=<<font color="black">[0] [? %4]<BR ALIGN="LEFT"/>[1] return A<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node15105 -> cluster2354_exit [color="black"]
  }
}