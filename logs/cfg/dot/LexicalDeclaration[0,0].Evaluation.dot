digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1386 {
    label = "def <SYNTAX>:LexicalDeclaration[0,0].Evaluation(this: Ast:LexicalDeclaration[0,0]): Unknown"
    style = rounded
    cluster1386_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1386_entry_name -> cluster1386_entry [arrowhead=none, color="black", style=dashed]
    cluster1386_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1386_entry -> node7179 [color="black"]
    cluster1386_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1386_exit_name -> cluster1386_exit [arrowhead=none, color="black", style=dashed]
    cluster1386_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7179_name [shape=none, label=<<font color="black">Call[7179]</font>>]
    node7179_name -> node7179 [arrowhead=none, color="black", style=dashed]
    node7179 [shape=cds, label=<<font color="black">%0 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7179 -> node7180 [color="black"]
    node7180_name [shape=none, label=<<font color="black">Block[7180]</font>>]
    node7180_name -> node7180 [arrowhead=none, color="black", style=dashed]
    node7180 [shape=box, label=<<font color="black">[0] let next = %0<BR ALIGN="LEFT"/>[1] [? next]<BR ALIGN="LEFT"/>[2] return ~empty~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7180 -> cluster1386_exit [color="black"]
  }
}