digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster399 {
    label = "def <SYNTAX>:VariableDeclarationList[1,0].VarScopedDeclarations(this: Ast:VariableDeclarationList[1,0]): List[Ast]"
    style = rounded
    cluster399_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster399_entry_name -> cluster399_entry [arrowhead=none, color="black", style=dashed]
    cluster399_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster399_entry -> node2082 [color="black"]
    cluster399_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster399_exit_name -> cluster399_exit [arrowhead=none, color="black", style=dashed]
    cluster399_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2082_name [shape=none, label=<<font color="black">Call[2082]</font>>]
    node2082_name -> node2082 [arrowhead=none, color="black", style=dashed]
    node2082 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;VarScopedDeclarations()</font>> color="black" fillcolor="white", style=filled]
    node2082 -> node2083 [color="black"]
    node2083_name [shape=none, label=<<font color="black">Block[2083]</font>>]
    node2083_name -> node2083 [arrowhead=none, color="black", style=dashed]
    node2083 [shape=box, label=<<font color="black">[0] let declarations1 = %0<BR ALIGN="LEFT"/>[1] return (list-concat declarations1 (new [this[1]])[#237])[#236]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2083 -> cluster399_exit [color="black"]
  }
}