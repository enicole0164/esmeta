digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster164 {
    label = "def IteratorComplete(iterResult: Object): Normal[Boolean] | Abrupt"
    style = rounded
    cluster164_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster164_entry_name -> cluster164_entry [arrowhead=none, color="black", style=dashed]
    cluster164_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster164_entry -> node1429 [color="black"]
    cluster164_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster164_exit_name -> cluster164_exit [arrowhead=none, color="black", style=dashed]
    cluster164_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1429_name [shape=none, label=<<font color="black">Call[1429]</font>>]
    node1429_name -> node1429 [arrowhead=none, color="black", style=dashed]
    node1429 [shape=cds, label=<<font color="black">%0 = clo&lt;Get&gt;(iterResult, &quot;done&quot;)</font>> color="black" fillcolor="white", style=filled]
    node1429 -> node1430 [color="black"]
    node1430_name [shape=none, label=<<font color="black">Call[1430]</font>>]
    node1430_name -> node1430 [arrowhead=none, color="black", style=dashed]
    node1430 [shape=cds, label=<<font color="black">%1 = clo&lt;ToBoolean&gt;([? %0])</font>> color="black" fillcolor="white", style=filled]
    node1430 -> node1431 [color="black"]
    node1431_name [shape=none, label=<<font color="black">Block[1431]</font>>]
    node1431_name -> node1431 [arrowhead=none, color="black", style=dashed]
    node1431 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1431 -> cluster164_exit [color="black"]
  }
}