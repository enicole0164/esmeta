digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster588 {
    label = "def <SYNTAX>:CaseClauses[1,0].ContainsUndefinedBreakTarget(this: Ast:CaseClauses[1,0], labelSet: Unknown): Boolean"
    style = rounded
    cluster588_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster588_entry_name -> cluster588_entry [arrowhead=none, color="black", style=dashed]
    cluster588_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster588_entry -> node2641 [color="black"]
    cluster588_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster588_exit_name -> cluster588_exit [arrowhead=none, color="black", style=dashed]
    cluster588_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2641_name [shape=none, label=<<font color="black">Call[2641]</font>>]
    node2641_name -> node2641 [arrowhead=none, color="black", style=dashed]
    node2641 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2641 -> node2642 [color="black"]
    node2642_name [shape=none, label=<<font color="black">Block[2642]</font>>]
    node2642_name -> node2642 [arrowhead=none, color="black", style=dashed]
    node2642 [shape=box, label=<<font color="black">[0] let hasUndefinedLabels = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2642 -> node2643 [color="black"]
    node2643_name [shape=none, label=<<font color="black">Branch[2643]</font>>]
    node2643_name -> node2643 [arrowhead=none, color="black", style=dashed]
    node2643 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white", style=filled]
    node2643 -> node2644 [label=<<font color="black">true</font>> color="black"]
    node2643 -> node2645 [label=<<font color="black">false</font>> color="black"]
    node2644_name [shape=none, label=<<font color="black">Block[2644]</font>>]
    node2644_name -> node2644 [arrowhead=none, color="black", style=dashed]
    node2644 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2644 -> cluster588_exit [color="black"]
    node2645_name [shape=none, label=<<font color="black">Call[2645]</font>>]
    node2645_name -> node2645 [arrowhead=none, color="black", style=dashed]
    node2645 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2645 -> node2646 [color="black"]
    node2646_name [shape=none, label=<<font color="black">Block[2646]</font>>]
    node2646_name -> node2646 [arrowhead=none, color="black", style=dashed]
    node2646 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2646 -> cluster588_exit [color="black"]
  }
}