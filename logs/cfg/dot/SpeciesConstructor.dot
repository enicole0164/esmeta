digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster151 {
    label = "def SpeciesConstructor(O: Object, defaultConstructor: Unknown["Constructor"]): Unknown["EitherANormalCompletionContainingAConstructorOrAnAbruptCompletion"]"
    style = rounded
    cluster151_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster151_entry_name -> cluster151_entry [arrowhead=none, color="black", style=dashed]
    cluster151_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster151_entry -> node1259 [color="black"]
    cluster151_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster151_exit_name -> cluster151_exit [arrowhead=none, color="black", style=dashed]
    cluster151_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1259_name [shape=none, label=<<font color="black">Call[1259]</font>>]
    node1259_name -> node1259 [arrowhead=none, color="black", style=dashed]
    node1259 [shape=cds, label=<<font color="black">%0 = clo&lt;Get&gt;(O, &quot;constructor&quot;)</font>> color="black" fillcolor="white", style=filled]
    node1259 -> node1260 [color="black"]
    node1260_name [shape=none, label=<<font color="black">Block[1260]</font>>]
    node1260_name -> node1260 [arrowhead=none, color="black", style=dashed]
    node1260 [shape=box, label=<<font color="black">[0] let C = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1260 -> node1261 [color="black"]
    node1261_name [shape=none, label=<<font color="black">Branch[1261]</font>>]
    node1261_name -> node1261 [arrowhead=none, color="black", style=dashed]
    node1261 [shape=diamond, label=<<font color="black">(= C undefined)</font>> color="black" fillcolor="white", style=filled]
    node1261 -> node1262 [label=<<font color="black">true</font>> color="black"]
    node1261 -> node1263 [label=<<font color="black">false</font>> color="black"]
    node1262_name [shape=none, label=<<font color="black">Block[1262]</font>>]
    node1262_name -> node1262 [arrowhead=none, color="black", style=dashed]
    node1262 [shape=box, label=<<font color="black">[0] return defaultConstructor<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1262 -> cluster151_exit [color="black"]
    node1263_name [shape=none, label=<<font color="black">Branch[1263]</font>>]
    node1263_name -> node1263 [arrowhead=none, color="black", style=dashed]
    node1263 [shape=diamond, label=<<font color="black">(! (= (typeof C) @Object))</font>> color="black" fillcolor="white", style=filled]
    node1263 -> node1264 [label=<<font color="black">true</font>> color="black"]
    node1263 -> node1265 [label=<<font color="black">false</font>> color="black"]
    node1264_name [shape=none, label=<<font color="black">Block[1264]</font>>]
    node1264_name -> node1264 [arrowhead=none, color="black", style=dashed]
    node1264 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#60])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1264 -> cluster151_exit [color="black"]
    node1265_name [shape=none, label=<<font color="black">Call[1265]</font>>]
    node1265_name -> node1265 [arrowhead=none, color="black", style=dashed]
    node1265 [shape=cds, label=<<font color="black">%1 = clo&lt;Get&gt;(C, @SYMBOL.species)</font>> color="black" fillcolor="white", style=filled]
    node1265 -> node1266 [color="black"]
    node1266_name [shape=none, label=<<font color="black">Block[1266]</font>>]
    node1266_name -> node1266 [arrowhead=none, color="black", style=dashed]
    node1266 [shape=box, label=<<font color="black">[0] let S = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1266 -> node1267 [color="black"]
    node1267_name [shape=none, label=<<font color="black">Branch[1267]</font>>]
    node1267_name -> node1267 [arrowhead=none, color="black", style=dashed]
    node1267 [shape=diamond, label=<<font color="black">(|| (= S undefined) (= S null))</font>> color="black" fillcolor="white", style=filled]
    node1267 -> node1268 [label=<<font color="black">true</font>> color="black"]
    node1267 -> node1269 [label=<<font color="black">false</font>> color="black"]
    node1268_name [shape=none, label=<<font color="black">Block[1268]</font>>]
    node1268_name -> node1268 [arrowhead=none, color="black", style=dashed]
    node1268 [shape=box, label=<<font color="black">[0] return defaultConstructor<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1268 -> cluster151_exit [color="black"]
    node1269_name [shape=none, label=<<font color="black">Call[1269]</font>>]
    node1269_name -> node1269 [arrowhead=none, color="black", style=dashed]
    node1269 [shape=cds, label=<<font color="black">%2 = clo&lt;IsConstructor&gt;(S)</font>> color="black" fillcolor="white", style=filled]
    node1269 -> node1270 [color="black"]
    node1270_name [shape=none, label=<<font color="black">Branch[1270]</font>>]
    node1270_name -> node1270 [arrowhead=none, color="black", style=dashed]
    node1270 [shape=diamond, label=<<font color="black">(= %2 true)</font>> color="black" fillcolor="white", style=filled]
    node1270 -> node1271 [label=<<font color="black">true</font>> color="black"]
    node1270 -> node1272 [label=<<font color="black">false</font>> color="black"]
    node1271_name [shape=none, label=<<font color="black">Block[1271]</font>>]
    node1271_name -> node1271 [arrowhead=none, color="black", style=dashed]
    node1271 [shape=box, label=<<font color="black">[0] return S<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1271 -> cluster151_exit [color="black"]
    node1272_name [shape=none, label=<<font color="black">Block[1272]</font>>]
    node1272_name -> node1272 [arrowhead=none, color="black", style=dashed]
    node1272 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#61])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1272 -> cluster151_exit [color="black"]
  }
}