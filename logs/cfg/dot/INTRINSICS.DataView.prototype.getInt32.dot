digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2506 {
    label = "def <BUILTIN>:INTRINSICS.DataView.prototype.getInt32(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2506_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2506_entry_name -> cluster2506_entry [arrowhead=none, color="black", style=dashed]
    cluster2506_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2506_entry -> node17765 [color="black"]
    cluster2506_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2506_exit_name -> cluster2506_exit [arrowhead=none, color="black", style=dashed]
    cluster2506_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node17765_name [shape=none, label=<<font color="black">Branch[17765]</font>>]
    node17765_name -> node17765 [arrowhead=none, color="black", style=dashed]
    node17765 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node17765 -> node17766 [label=<<font color="black">true</font>> color="black"]
    node17765 -> node17767 [label=<<font color="black">false</font>> color="black"]
    node17766_name [shape=none, label=<<font color="black">Block[17766]</font>>]
    node17766_name -> node17766 [arrowhead=none, color="black", style=dashed]
    node17766 [shape=box, label=<<font color="black">[0] let byteOffset = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17766 -> node17768 [color="black"]
    node17767_name [shape=none, label=<<font color="black">Block[17767]</font>>]
    node17767_name -> node17767 [arrowhead=none, color="black", style=dashed]
    node17767 [shape=box, label=<<font color="black">[0] let byteOffset = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17767 -> node17768 [color="black"]
    node17768_name [shape=none, label=<<font color="black">Branch[17768]</font>>]
    node17768_name -> node17768 [arrowhead=none, color="black", style=dashed]
    node17768 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node17768 -> node17769 [label=<<font color="black">true</font>> color="black"]
    node17768 -> node17770 [label=<<font color="black">false</font>> color="black"]
    node17769_name [shape=none, label=<<font color="black">Block[17769]</font>>]
    node17769_name -> node17769 [arrowhead=none, color="black", style=dashed]
    node17769 [shape=box, label=<<font color="black">[0] let littleEndian = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17769 -> node17771 [color="black"]
    node17770_name [shape=none, label=<<font color="black">Block[17770]</font>>]
    node17770_name -> node17770 [arrowhead=none, color="black", style=dashed]
    node17770 [shape=box, label=<<font color="black">[0] let littleEndian = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17770 -> node17771 [color="black"]
    node17771_name [shape=none, label=<<font color="black">Block[17771]</font>>]
    node17771_name -> node17771 [arrowhead=none, color="black", style=dashed]
    node17771 [shape=box, label=<<font color="black">[0] let v = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17771 -> node17772 [color="black"]
    node17772_name [shape=none, label=<<font color="black">Branch[17772]</font>>]
    node17772_name -> node17772 [arrowhead=none, color="black", style=dashed]
    node17772 [shape=diamond, label=<<font color="black">(= littleEndian absent)</font>> color="black" fillcolor="white", style=filled]
    node17772 -> node17773 [label=<<font color="black">true</font>> color="black"]
    node17772 -> node17774 [label=<<font color="black">false</font>> color="black"]
    node17773_name [shape=none, label=<<font color="black">Block[17773]</font>>]
    node17773_name -> node17773 [arrowhead=none, color="black", style=dashed]
    node17773 [shape=box, label=<<font color="black">[0] littleEndian = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17773 -> node17774 [color="black"]
    node17774_name [shape=none, label=<<font color="black">Call[17774]</font>>]
    node17774_name -> node17774 [arrowhead=none, color="black", style=dashed]
    node17774 [shape=cds, label=<<font color="black">%0 = clo&lt;GetViewValue&gt;(v, byteOffset, littleEndian, ~Int32~)</font>> color="black" fillcolor="white", style=filled]
    node17774 -> node17775 [color="black"]
    node17775_name [shape=none, label=<<font color="black">Block[17775]</font>>]
    node17775_name -> node17775 [arrowhead=none, color="black", style=dashed]
    node17775 [shape=box, label=<<font color="black">[0] return [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node17775 -> cluster2506_exit [color="black"]
  }
}