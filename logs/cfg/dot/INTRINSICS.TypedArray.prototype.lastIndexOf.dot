digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2404 {
    label = "def <BUILTIN>:INTRINSICS.TypedArray.prototype.lastIndexOf(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2404_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2404_entry_name -> cluster2404_entry [arrowhead=none, color="black", style=dashed]
    cluster2404_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2404_entry -> node16297 [color="black"]
    cluster2404_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2404_exit_name -> cluster2404_exit [arrowhead=none, color="black", style=dashed]
    cluster2404_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node16297_name [shape=none, label=<<font color="black">Branch[16297]</font>>]
    node16297_name -> node16297 [arrowhead=none, color="black", style=dashed]
    node16297 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node16297 -> node16298 [label=<<font color="black">true</font>> color="black"]
    node16297 -> node16299 [label=<<font color="black">false</font>> color="black"]
    node16298_name [shape=none, label=<<font color="black">Block[16298]</font>>]
    node16298_name -> node16298 [arrowhead=none, color="black", style=dashed]
    node16298 [shape=box, label=<<font color="black">[0] let searchElement = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16298 -> node16300 [color="black"]
    node16299_name [shape=none, label=<<font color="black">Block[16299]</font>>]
    node16299_name -> node16299 [arrowhead=none, color="black", style=dashed]
    node16299 [shape=box, label=<<font color="black">[0] let searchElement = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16299 -> node16300 [color="black"]
    node16300_name [shape=none, label=<<font color="black">Branch[16300]</font>>]
    node16300_name -> node16300 [arrowhead=none, color="black", style=dashed]
    node16300 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node16300 -> node16301 [label=<<font color="black">true</font>> color="black"]
    node16300 -> node16302 [label=<<font color="black">false</font>> color="black"]
    node16301_name [shape=none, label=<<font color="black">Block[16301]</font>>]
    node16301_name -> node16301 [arrowhead=none, color="black", style=dashed]
    node16301 [shape=box, label=<<font color="black">[0] let fromIndex = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16301 -> node16303 [color="black"]
    node16302_name [shape=none, label=<<font color="black">Block[16302]</font>>]
    node16302_name -> node16302 [arrowhead=none, color="black", style=dashed]
    node16302 [shape=box, label=<<font color="black">[0] let fromIndex = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16302 -> node16303 [color="black"]
    node16303_name [shape=none, label=<<font color="black">Block[16303]</font>>]
    node16303_name -> node16303 [arrowhead=none, color="black", style=dashed]
    node16303 [shape=box, label=<<font color="black">[0] let O = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16303 -> node16304 [color="black"]
    node16304_name [shape=none, label=<<font color="black">Call[16304]</font>>]
    node16304_name -> node16304 [arrowhead=none, color="black", style=dashed]
    node16304 [shape=cds, label=<<font color="black">%0 = clo&lt;ValidateTypedArray&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node16304 -> node16305 [color="black"]
    node16305_name [shape=none, label=<<font color="black">Block[16305]</font>>]
    node16305_name -> node16305 [arrowhead=none, color="black", style=dashed]
    node16305 [shape=box, label=<<font color="black">[0] [? %0]<BR ALIGN="LEFT"/>[1] let len = O.ArrayLength<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16305 -> node16306 [color="black"]
    node16306_name [shape=none, label=<<font color="black">Branch[16306]</font>>]
    node16306_name -> node16306 [arrowhead=none, color="black", style=dashed]
    node16306 [shape=diamond, label=<<font color="black">(= len 0)</font>> color="black" fillcolor="white", style=filled]
    node16306 -> node16307 [label=<<font color="black">true</font>> color="black"]
    node16306 -> node16308 [label=<<font color="black">false</font>> color="black"]
    node16307_name [shape=none, label=<<font color="black">Block[16307]</font>>]
    node16307_name -> node16307 [arrowhead=none, color="black", style=dashed]
    node16307 [shape=box, label=<<font color="black">[0] return -1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16307 -> cluster2404_exit [color="black"]
    node16308_name [shape=none, label=<<font color="black">Branch[16308]</font>>]
    node16308_name -> node16308 [arrowhead=none, color="black", style=dashed]
    node16308 [shape=diamond, label=<<font color="black">(! (= fromIndex absent))</font>> color="black" fillcolor="white", style=filled]
    node16308 -> node16309 [label=<<font color="black">true</font>> color="black"]
    node16308 -> node16311 [label=<<font color="black">false</font>> color="black"]
    node16309_name [shape=none, label=<<font color="black">Call[16309]</font>>]
    node16309_name -> node16309 [arrowhead=none, color="black", style=dashed]
    node16309 [shape=cds, label=<<font color="black">%1 = clo&lt;ToIntegerOrInfinity&gt;(fromIndex)</font>> color="black" fillcolor="white", style=filled]
    node16309 -> node16310 [color="black"]
    node16311_name [shape=none, label=<<font color="black">Block[16311]</font>>]
    node16311_name -> node16311 [arrowhead=none, color="black", style=dashed]
    node16311 [shape=box, label=<<font color="black">[0] let n = (- len 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16311 -> node16312 [color="black"]
    node16310_name [shape=none, label=<<font color="black">Block[16310]</font>>]
    node16310_name -> node16310 [arrowhead=none, color="black", style=dashed]
    node16310 [shape=box, label=<<font color="black">[0] let n = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16310 -> node16312 [color="black"]
    node16312_name [shape=none, label=<<font color="black">Branch[16312]</font>>]
    node16312_name -> node16312 [arrowhead=none, color="black", style=dashed]
    node16312 [shape=diamond, label=<<font color="black">(= n -INF)</font>> color="black" fillcolor="white", style=filled]
    node16312 -> node16313 [label=<<font color="black">true</font>> color="black"]
    node16312 -> node16314 [label=<<font color="black">false</font>> color="black"]
    node16313_name [shape=none, label=<<font color="black">Block[16313]</font>>]
    node16313_name -> node16313 [arrowhead=none, color="black", style=dashed]
    node16313 [shape=box, label=<<font color="black">[0] return -1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16313 -> cluster2404_exit [color="black"]
    node16314_name [shape=none, label=<<font color="black">Branch[16314]</font>>]
    node16314_name -> node16314 [arrowhead=none, color="black", style=dashed]
    node16314 [shape=diamond, label=<<font color="black">(! (&lt; n 0))</font>> color="black" fillcolor="white", style=filled]
    node16314 -> node16315 [label=<<font color="black">true</font>> color="black"]
    node16314 -> node16316 [label=<<font color="black">false</font>> color="black"]
    node16315_name [shape=none, label=<<font color="black">Block[16315]</font>>]
    node16315_name -> node16315 [arrowhead=none, color="black", style=dashed]
    node16315 [shape=box, label=<<font color="black">[0] let k = (min n (- len 1))<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16315 -> node16317 [color="black"]
    node16316_name [shape=none, label=<<font color="black">Block[16316]</font>>]
    node16316_name -> node16316 [arrowhead=none, color="black", style=dashed]
    node16316 [shape=box, label=<<font color="black">[0] let k = (+ len n)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16316 -> node16317 [color="black"]
    node16317_name [shape=none, label=<<font color="black">Branch[16317]</font>>]
    node16317_name -> node16317 [arrowhead=none, color="black", style=dashed]
    node16317 [shape=diamond, label=<<font color="black">(! (&lt; k 0))</font>> color="black" fillcolor="white", style=filled]
    node16317 -> node16318 [label=<<font color="black">true</font>> color="black"]
    node16317 -> node16330 [label=<<font color="black">false</font>> color="black"]
    node16318_name [shape=none, label=<<font color="black">Call[16318]</font>>]
    node16318_name -> node16318 [arrowhead=none, color="black", style=dashed]
    node16318 [shape=cds, label=<<font color="black">%2 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node16318 -> node16319 [color="black"]
    node16330_name [shape=none, label=<<font color="black">Block[16330]</font>>]
    node16330_name -> node16330 [arrowhead=none, color="black", style=dashed]
    node16330 [shape=box, label=<<font color="black">[0] return -1.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16330 -> cluster2404_exit [color="black"]
    node16319_name [shape=none, label=<<font color="black">Call[16319]</font>>]
    node16319_name -> node16319 [arrowhead=none, color="black", style=dashed]
    node16319 [shape=cds, label=<<font color="black">%3 = clo&lt;HasProperty&gt;(O, [! %2])</font>> color="black" fillcolor="white", style=filled]
    node16319 -> node16320 [color="black"]
    node16320_name [shape=none, label=<<font color="black">Block[16320]</font>>]
    node16320_name -> node16320 [arrowhead=none, color="black", style=dashed]
    node16320 [shape=box, label=<<font color="black">[0] let kPresent = [! %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16320 -> node16321 [color="black"]
    node16321_name [shape=none, label=<<font color="black">Branch[16321]</font>>]
    node16321_name -> node16321 [arrowhead=none, color="black", style=dashed]
    node16321 [shape=diamond, label=<<font color="black">(= kPresent true)</font>> color="black" fillcolor="white", style=filled]
    node16321 -> node16322 [label=<<font color="black">true</font>> color="black"]
    node16321 -> node16329 [label=<<font color="black">false</font>> color="black"]
    node16322_name [shape=none, label=<<font color="black">Call[16322]</font>>]
    node16322_name -> node16322 [arrowhead=none, color="black", style=dashed]
    node16322 [shape=cds, label=<<font color="black">%4 = clo&lt;ToString&gt;(([number] k))</font>> color="black" fillcolor="white", style=filled]
    node16322 -> node16323 [color="black"]
    node16329_name [shape=none, label=<<font color="black">Block[16329]</font>>]
    node16329_name -> node16329 [arrowhead=none, color="black", style=dashed]
    node16329 [shape=box, label=<<font color="black">[0] k = (- k 1)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16329 -> node16317 [color="black"]
    node16323_name [shape=none, label=<<font color="black">Call[16323]</font>>]
    node16323_name -> node16323 [arrowhead=none, color="black", style=dashed]
    node16323 [shape=cds, label=<<font color="black">%5 = clo&lt;Get&gt;(O, [! %4])</font>> color="black" fillcolor="white", style=filled]
    node16323 -> node16324 [color="black"]
    node16324_name [shape=none, label=<<font color="black">Block[16324]</font>>]
    node16324_name -> node16324 [arrowhead=none, color="black", style=dashed]
    node16324 [shape=box, label=<<font color="black">[0] let elementK = [! %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16324 -> node16325 [color="black"]
    node16325_name [shape=none, label=<<font color="black">Call[16325]</font>>]
    node16325_name -> node16325 [arrowhead=none, color="black", style=dashed]
    node16325 [shape=cds, label=<<font color="black">%6 = clo&lt;IsStrictlyEqual&gt;(searchElement, elementK)</font>> color="black" fillcolor="white", style=filled]
    node16325 -> node16326 [color="black"]
    node16326_name [shape=none, label=<<font color="black">Block[16326]</font>>]
    node16326_name -> node16326 [arrowhead=none, color="black", style=dashed]
    node16326 [shape=box, label=<<font color="black">[0] let same = %6<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16326 -> node16327 [color="black"]
    node16327_name [shape=none, label=<<font color="black">Branch[16327]</font>>]
    node16327_name -> node16327 [arrowhead=none, color="black", style=dashed]
    node16327 [shape=diamond, label=<<font color="black">(= same true)</font>> color="black" fillcolor="white", style=filled]
    node16327 -> node16328 [label=<<font color="black">true</font>> color="black"]
    node16327 -> node16329 [label=<<font color="black">false</font>> color="black"]
    node16328_name [shape=none, label=<<font color="black">Block[16328]</font>>]
    node16328_name -> node16328 [arrowhead=none, color="black", style=dashed]
    node16328 [shape=box, label=<<font color="black">[0] return ([number] k)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16328 -> cluster2404_exit [color="black"]
  }
}