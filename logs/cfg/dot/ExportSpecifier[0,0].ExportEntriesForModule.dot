digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1968 {
    label = "def <SYNTAX>:ExportSpecifier[0,0].ExportEntriesForModule(this: Ast:ExportSpecifier[0,0], module: Unknown): Unknown["ListOfExportEntryRecords"]"
    style = rounded
    cluster1968_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1968_entry_name -> cluster1968_entry [arrowhead=none, color="black", style=dashed]
    cluster1968_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1968_entry -> node10660 [color="black"]
    cluster1968_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1968_exit_name -> cluster1968_exit [arrowhead=none, color="black", style=dashed]
    cluster1968_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node10660_name [shape=none, label=<<font color="black">Call[10660]</font>>]
    node10660_name -> node10660 [arrowhead=none, color="black", style=dashed]
    node10660 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;StringValue()</font>> color="black" fillcolor="white", style=filled]
    node10660 -> node10661 [color="black"]
    node10661_name [shape=none, label=<<font color="black">Block[10661]</font>>]
    node10661_name -> node10661 [arrowhead=none, color="black", style=dashed]
    node10661 [shape=box, label=<<font color="black">[0] let sourceName = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10661 -> node10662 [color="black"]
    node10662_name [shape=none, label=<<font color="black">Branch[10662]</font>>]
    node10662_name -> node10662 [arrowhead=none, color="black", style=dashed]
    node10662 [shape=diamond, label=<<font color="black">(= module null)</font>> color="black" fillcolor="white", style=filled]
    node10662 -> node10663 [label=<<font color="black">true</font>> color="black"]
    node10662 -> node10664 [label=<<font color="black">false</font>> color="black"]
    node10663_name [shape=none, label=<<font color="black">Block[10663]</font>>]
    node10663_name -> node10663 [arrowhead=none, color="black", style=dashed]
    node10663 [shape=box, label=<<font color="black">[0] let localName = sourceName<BR ALIGN="LEFT"/>[1] let importName = null<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10663 -> node10665 [color="black"]
    node10664_name [shape=none, label=<<font color="black">Block[10664]</font>>]
    node10664_name -> node10664 [arrowhead=none, color="black", style=dashed]
    node10664 [shape=box, label=<<font color="black">[0] let localName = null<BR ALIGN="LEFT"/>[1] let importName = sourceName<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10664 -> node10665 [color="black"]
    node10665_name [shape=none, label=<<font color="black">Block[10665]</font>>]
    node10665_name -> node10665 [arrowhead=none, color="black", style=dashed]
    node10665 [shape=box, label=<<font color="black">[0] return (new [(new ExportEntryRecord(&quot;ModuleRequest&quot; -&gt; module, &quot;ImportName&quot; -&gt; importName, &quot;LocalName&quot; -&gt; localName, &quot;ExportName&quot; -&gt; sourceName))[#861]])[#860]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10665 -> cluster1968_exit [color="black"]
  }
}