digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1058 {
    label = "def OrdinaryDefineOwnProperty(O: Object, P: Symbol | String, Desc: PropertyDescriptor): Normal[Boolean] | Abrupt"
    style = rounded
    cluster1058_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1058_entry_name -> cluster1058_entry [arrowhead=none, color="black", style=dashed]
    cluster1058_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1058_entry -> node3969 [color="black"]
    cluster1058_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1058_exit_name -> cluster1058_exit [arrowhead=none, color="black", style=dashed]
    cluster1058_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3969_name [shape=none, label=<<font color="black">Call[3969]</font>>]
    node3969_name -> node3969 [arrowhead=none, color="black", style=dashed]
    node3969 [shape=cds, label=<<font color="black">%0 = O-&gt;GetOwnProperty(P)</font>> color="black" fillcolor="white", style=filled]
    node3969 -> node3970 [color="black"]
    node3970_name [shape=none, label=<<font color="black">Block[3970]</font>>]
    node3970_name -> node3970 [arrowhead=none, color="black", style=dashed]
    node3970 [shape=box, label=<<font color="black">[0] let current = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3970 -> node3971 [color="black"]
    node3971_name [shape=none, label=<<font color="black">Call[3971]</font>>]
    node3971_name -> node3971 [arrowhead=none, color="black", style=dashed]
    node3971 [shape=cds, label=<<font color="black">%1 = clo&lt;IsExtensible&gt;(O)</font>> color="black" fillcolor="white", style=filled]
    node3971 -> node3972 [color="black"]
    node3972_name [shape=none, label=<<font color="black">Block[3972]</font>>]
    node3972_name -> node3972 [arrowhead=none, color="black", style=dashed]
    node3972 [shape=box, label=<<font color="black">[0] let extensible = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3972 -> node3973 [color="black"]
    node3973_name [shape=none, label=<<font color="black">Call[3973]</font>>]
    node3973_name -> node3973 [arrowhead=none, color="black", style=dashed]
    node3973 [shape=cds, label=<<font color="black">%2 = clo&lt;ValidateAndApplyPropertyDescriptor&gt;(O, P, extensible, Desc, current)</font>> color="black" fillcolor="white", style=filled]
    node3973 -> node3974 [color="black"]
    node3974_name [shape=none, label=<<font color="black">Block[3974]</font>>]
    node3974_name -> node3974 [arrowhead=none, color="black", style=dashed]
    node3974 [shape=box, label=<<font color="black">[0] return %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3974 -> cluster1058_exit [color="black"]
  }
}