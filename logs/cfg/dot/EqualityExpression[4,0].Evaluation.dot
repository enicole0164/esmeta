digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1330 {
    label = "def <SYNTAX>:EqualityExpression[4,0].Evaluation(this: Ast:EqualityExpression[4,0]): Unknown"
    style = rounded
    cluster1330_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1330_entry_name -> cluster1330_entry [arrowhead=none, color="black", style=dashed]
    cluster1330_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1330_entry -> node6443 [color="black"]
    cluster1330_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1330_exit_name -> cluster1330_exit [arrowhead=none, color="black", style=dashed]
    cluster1330_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node6443_name [shape=none, label=<<font color="black">Call[6443]</font>>]
    node6443_name -> node6443 [arrowhead=none, color="black", style=dashed]
    node6443 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6443 -> node6444 [color="black"]
    node6444_name [shape=none, label=<<font color="black">Block[6444]</font>>]
    node6444_name -> node6444 [arrowhead=none, color="black", style=dashed]
    node6444 [shape=box, label=<<font color="black">[0] let lref = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6444 -> node6445 [color="black"]
    node6445_name [shape=none, label=<<font color="black">Call[6445]</font>>]
    node6445_name -> node6445 [arrowhead=none, color="black", style=dashed]
    node6445 [shape=cds, label=<<font color="black">%1 = clo&lt;GetValue&gt;(lref)</font>> color="black" fillcolor="white", style=filled]
    node6445 -> node6446 [color="black"]
    node6446_name [shape=none, label=<<font color="black">Block[6446]</font>>]
    node6446_name -> node6446 [arrowhead=none, color="black", style=dashed]
    node6446 [shape=box, label=<<font color="black">[0] let lval = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6446 -> node6447 [color="black"]
    node6447_name [shape=none, label=<<font color="black">Call[6447]</font>>]
    node6447_name -> node6447 [arrowhead=none, color="black", style=dashed]
    node6447 [shape=cds, label=<<font color="black">%2 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node6447 -> node6448 [color="black"]
    node6448_name [shape=none, label=<<font color="black">Block[6448]</font>>]
    node6448_name -> node6448 [arrowhead=none, color="black", style=dashed]
    node6448 [shape=box, label=<<font color="black">[0] let rref = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6448 -> node6449 [color="black"]
    node6449_name [shape=none, label=<<font color="black">Call[6449]</font>>]
    node6449_name -> node6449 [arrowhead=none, color="black", style=dashed]
    node6449 [shape=cds, label=<<font color="black">%3 = clo&lt;GetValue&gt;(rref)</font>> color="black" fillcolor="white", style=filled]
    node6449 -> node6450 [color="black"]
    node6450_name [shape=none, label=<<font color="black">Block[6450]</font>>]
    node6450_name -> node6450 [arrowhead=none, color="black", style=dashed]
    node6450 [shape=box, label=<<font color="black">[0] let rval = [? %3]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6450 -> node6451 [color="black"]
    node6451_name [shape=none, label=<<font color="black">Call[6451]</font>>]
    node6451_name -> node6451 [arrowhead=none, color="black", style=dashed]
    node6451 [shape=cds, label=<<font color="black">%4 = clo&lt;IsStrictlyEqual&gt;(rval, lval)</font>> color="black" fillcolor="white", style=filled]
    node6451 -> node6452 [color="black"]
    node6452_name [shape=none, label=<<font color="black">Block[6452]</font>>]
    node6452_name -> node6452 [arrowhead=none, color="black", style=dashed]
    node6452 [shape=box, label=<<font color="black">[0] let r = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6452 -> node6453 [color="black"]
    node6453_name [shape=none, label=<<font color="black">Branch[6453]</font>>]
    node6453_name -> node6453 [arrowhead=none, color="black", style=dashed]
    node6453 [shape=diamond, label=<<font color="black">(= r true)</font>> color="black" fillcolor="white", style=filled]
    node6453 -> node6454 [label=<<font color="black">true</font>> color="black"]
    node6453 -> node6455 [label=<<font color="black">false</font>> color="black"]
    node6454_name [shape=none, label=<<font color="black">Block[6454]</font>>]
    node6454_name -> node6454 [arrowhead=none, color="black", style=dashed]
    node6454 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6454 -> cluster1330_exit [color="black"]
    node6455_name [shape=none, label=<<font color="black">Block[6455]</font>>]
    node6455_name -> node6455 [arrowhead=none, color="black", style=dashed]
    node6455 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node6455 -> cluster1330_exit [color="black"]
  }
}