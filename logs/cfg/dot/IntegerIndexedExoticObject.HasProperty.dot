digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1126 {
    label = "def <INTERNAL>:IntegerIndexedExoticObject.HasProperty(O: IntegerIndexedExoticObject, P: Symbol | String): Normal[Boolean] | Abrupt"
    style = rounded
    cluster1126_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1126_entry_name -> cluster1126_entry [arrowhead=none, color="black", style=dashed]
    cluster1126_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1126_entry -> node4822 [color="black"]
    cluster1126_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1126_exit_name -> cluster1126_exit [arrowhead=none, color="black", style=dashed]
    cluster1126_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4822_name [shape=none, label=<<font color="black">Branch[4822]</font>>]
    node4822_name -> node4822 [arrowhead=none, color="black", style=dashed]
    node4822 [shape=diamond, label=<<font color="black">(= (typeof P) @String)</font>> color="black" fillcolor="white", style=filled]
    node4822 -> node4823 [label=<<font color="black">true</font>> color="black"]
    node4822 -> node4828 [label=<<font color="black">false</font>> color="black"]
    node4823_name [shape=none, label=<<font color="black">Call[4823]</font>>]
    node4823_name -> node4823 [arrowhead=none, color="black", style=dashed]
    node4823 [shape=cds, label=<<font color="black">%0 = clo&lt;CanonicalNumericIndexString&gt;(P)</font>> color="black" fillcolor="white", style=filled]
    node4823 -> node4824 [color="black"]
    node4828_name [shape=none, label=<<font color="black">Call[4828]</font>>]
    node4828_name -> node4828 [arrowhead=none, color="black", style=dashed]
    node4828 [shape=cds, label=<<font color="black">%2 = clo&lt;OrdinaryHasProperty&gt;(O, P)</font>> color="black" fillcolor="white", style=filled]
    node4828 -> node4829 [color="black"]
    node4824_name [shape=none, label=<<font color="black">Block[4824]</font>>]
    node4824_name -> node4824 [arrowhead=none, color="black", style=dashed]
    node4824 [shape=box, label=<<font color="black">[0] let numericIndex = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4824 -> node4825 [color="black"]
    node4829_name [shape=none, label=<<font color="black">Block[4829]</font>>]
    node4829_name -> node4829 [arrowhead=none, color="black", style=dashed]
    node4829 [shape=box, label=<<font color="black">[0] return [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4829 -> cluster1126_exit [color="black"]
    node4825_name [shape=none, label=<<font color="black">Branch[4825]</font>>]
    node4825_name -> node4825 [arrowhead=none, color="black", style=dashed]
    node4825 [shape=diamond, label=<<font color="black">(! (= numericIndex undefined))</font>> color="black" fillcolor="white", style=filled]
    node4825 -> node4826 [label=<<font color="black">true</font>> color="black"]
    node4825 -> node4828 [label=<<font color="black">false</font>> color="black"]
    node4826_name [shape=none, label=<<font color="black">Call[4826]</font>>]
    node4826_name -> node4826 [arrowhead=none, color="black", style=dashed]
    node4826 [shape=cds, label=<<font color="black">%1 = clo&lt;IsValidIntegerIndex&gt;(O, numericIndex)</font>> color="black" fillcolor="white", style=filled]
    node4826 -> node4827 [color="black"]
    node4827_name [shape=none, label=<<font color="black">Block[4827]</font>>]
    node4827_name -> node4827 [arrowhead=none, color="black", style=dashed]
    node4827 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4827 -> cluster1126_exit [color="black"]
  }
}