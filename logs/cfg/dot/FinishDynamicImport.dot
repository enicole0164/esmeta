digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1902 {
    label = "def FinishDynamicImport(referencingScriptOrModule: Unknown, specifier: Unknown, promiseCapability: PromiseCapabilityRecord, innerPromise: Unknown): Const[~unused~]"
    style = rounded
    cluster1902_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1902_entry_name -> cluster1902_entry [arrowhead=none, color="black", style=dashed]
    cluster1902_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1902_entry -> node10494 [color="black"]
    cluster1902_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1902_exit_name -> cluster1902_exit [arrowhead=none, color="black", style=dashed]
    cluster1902_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node10494_name [shape=none, label=<<font color="black">Block[10494]</font>>]
    node10494_name -> node10494 [arrowhead=none, color="black", style=dashed]
    node10494 [shape=box, label=<<font color="black">[0] let fulfilledClosure = clo&lt;FinishDynamicImport:clo0, [referencingScriptOrModule, specifier, promiseCapability]&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10494 -> node10495 [color="black"]
    node10495_name [shape=none, label=<<font color="black">Call[10495]</font>>]
    node10495_name -> node10495 [arrowhead=none, color="black", style=dashed]
    node10495 [shape=cds, label=<<font color="black">%0 = clo&lt;CreateBuiltinFunction&gt;(fulfilledClosure, 0, &quot;&quot;, (new [])[#800])</font>> color="black" fillcolor="white", style=filled]
    node10495 -> node10496 [color="black"]
    node10496_name [shape=none, label=<<font color="black">Block[10496]</font>>]
    node10496_name -> node10496 [arrowhead=none, color="black", style=dashed]
    node10496 [shape=box, label=<<font color="black">[0] let onFulfilled = %0<BR ALIGN="LEFT"/>[1] let rejectedClosure = clo&lt;FinishDynamicImport:clo1, [promiseCapability]&gt;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10496 -> node10497 [color="black"]
    node10497_name [shape=none, label=<<font color="black">Call[10497]</font>>]
    node10497_name -> node10497 [arrowhead=none, color="black", style=dashed]
    node10497 [shape=cds, label=<<font color="black">%1 = clo&lt;CreateBuiltinFunction&gt;(rejectedClosure, 0, &quot;&quot;, (new [])[#801])</font>> color="black" fillcolor="white", style=filled]
    node10497 -> node10498 [color="black"]
    node10498_name [shape=none, label=<<font color="black">Block[10498]</font>>]
    node10498_name -> node10498 [arrowhead=none, color="black", style=dashed]
    node10498 [shape=box, label=<<font color="black">[0] let onRejected = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10498 -> node10499 [color="black"]
    node10499_name [shape=none, label=<<font color="black">Call[10499]</font>>]
    node10499_name -> node10499 [arrowhead=none, color="black", style=dashed]
    node10499 [shape=cds, label=<<font color="black">%2 = clo&lt;PerformPromiseThen&gt;(innerPromise, onFulfilled, onRejected)</font>> color="black" fillcolor="white", style=filled]
    node10499 -> node10500 [color="black"]
    node10500_name [shape=none, label=<<font color="black">Block[10500]</font>>]
    node10500_name -> node10500 [arrowhead=none, color="black", style=dashed]
    node10500 [shape=box, label=<<font color="black">[0] return ~unused~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node10500 -> cluster1902_exit [color="black"]
  }
}