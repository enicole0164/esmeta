digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster615 {
    label = "def <SYNTAX>:StatementList[1,0].ContainsUndefinedContinueTarget(this: Ast:StatementList[1,0], iterationSet: Unknown, labelSet: Unknown): Boolean"
    style = rounded
    cluster615_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster615_entry_name -> cluster615_entry [arrowhead=none, color="black", style=dashed]
    cluster615_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster615_entry -> node2714 [color="black"]
    cluster615_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster615_exit_name -> cluster615_exit [arrowhead=none, color="black", style=dashed]
    cluster615_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2714_name [shape=none, label=<<font color="black">Call[2714]</font>>]
    node2714_name -> node2714 [arrowhead=none, color="black", style=dashed]
    node2714 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;ContainsUndefinedContinueTarget(iterationSet, (new [])[#300])</font>> color="black" fillcolor="white", style=filled]
    node2714 -> node2715 [color="black"]
    node2715_name [shape=none, label=<<font color="black">Block[2715]</font>>]
    node2715_name -> node2715 [arrowhead=none, color="black", style=dashed]
    node2715 [shape=box, label=<<font color="black">[0] let hasUndefinedLabels = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2715 -> node2716 [color="black"]
    node2716_name [shape=none, label=<<font color="black">Branch[2716]</font>>]
    node2716_name -> node2716 [arrowhead=none, color="black", style=dashed]
    node2716 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white", style=filled]
    node2716 -> node2717 [label=<<font color="black">true</font>> color="black"]
    node2716 -> node2718 [label=<<font color="black">false</font>> color="black"]
    node2717_name [shape=none, label=<<font color="black">Block[2717]</font>>]
    node2717_name -> node2717 [arrowhead=none, color="black", style=dashed]
    node2717 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2717 -> cluster615_exit [color="black"]
    node2718_name [shape=none, label=<<font color="black">Call[2718]</font>>]
    node2718_name -> node2718 [arrowhead=none, color="black", style=dashed]
    node2718 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;ContainsUndefinedContinueTarget(iterationSet, (new [])[#301])</font>> color="black" fillcolor="white", style=filled]
    node2718 -> node2719 [color="black"]
    node2719_name [shape=none, label=<<font color="black">Block[2719]</font>>]
    node2719_name -> node2719 [arrowhead=none, color="black", style=dashed]
    node2719 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2719 -> cluster615_exit [color="black"]
  }
}