digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2421 {
    label = "def TypedArrayCreate(constructor: Unknown, argumentList: Unknown): Unknown["EitherANormalCompletionContainingATypedArrayOrAnAbruptCompletion"]"
    style = rounded
    cluster2421_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2421_entry_name -> cluster2421_entry [arrowhead=none, color="black", style=dashed]
    cluster2421_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2421_entry -> node16702 [color="black"]
    cluster2421_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2421_exit_name -> cluster2421_exit [arrowhead=none, color="black", style=dashed]
    cluster2421_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node16702_name [shape=none, label=<<font color="black">Call[16702]</font>>]
    node16702_name -> node16702 [arrowhead=none, color="black", style=dashed]
    node16702 [shape=cds, label=<<font color="black">%0 = clo&lt;Construct&gt;(constructor, argumentList)</font>> color="black" fillcolor="white", style=filled]
    node16702 -> node16703 [color="black"]
    node16703_name [shape=none, label=<<font color="black">Block[16703]</font>>]
    node16703_name -> node16703 [arrowhead=none, color="black", style=dashed]
    node16703 [shape=box, label=<<font color="black">[0] let newTypedArray = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16703 -> node16704 [color="black"]
    node16704_name [shape=none, label=<<font color="black">Call[16704]</font>>]
    node16704_name -> node16704 [arrowhead=none, color="black", style=dashed]
    node16704 [shape=cds, label=<<font color="black">%1 = clo&lt;ValidateTypedArray&gt;(newTypedArray)</font>> color="black" fillcolor="white", style=filled]
    node16704 -> node16705 [color="black"]
    node16705_name [shape=none, label=<<font color="black">Block[16705]</font>>]
    node16705_name -> node16705 [arrowhead=none, color="black", style=dashed]
    node16705 [shape=box, label=<<font color="black">[0] [? %1]<BR ALIGN="LEFT"/>[1] (yet &quot;If _argumentList_ is a List of a single Number, then\n  1. If _newTypedArray_.[[ArrayLength]] &lt; ‚Ñù(_argumentList_[0]), throw a newly created *TypeError* object.&quot;)<BR ALIGN="LEFT"/>[2] return newTypedArray<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node16705 -> cluster2421_exit [color="black"]
  }
}