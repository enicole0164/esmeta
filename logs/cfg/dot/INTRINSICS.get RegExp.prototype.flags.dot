digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2321 {
    label = "def <BUILTIN>:INTRINSICS.get RegExp.prototype.flags(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2321_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2321_entry_name -> cluster2321_entry [arrowhead=none, color="black", style=dashed]
    cluster2321_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2321_entry -> node14299 [color="black"]
    cluster2321_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2321_exit_name -> cluster2321_exit [arrowhead=none, color="black", style=dashed]
    cluster2321_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node14299_name [shape=none, label=<<font color="black">Block[14299]</font>>]
    node14299_name -> node14299 [arrowhead=none, color="black", style=dashed]
    node14299 [shape=box, label=<<font color="black">[0] let R = this<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14299 -> node14300 [color="black"]
    node14300_name [shape=none, label=<<font color="black">Branch[14300]</font>>]
    node14300_name -> node14300 [arrowhead=none, color="black", style=dashed]
    node14300 [shape=diamond, label=<<font color="black">(! (= (typeof R) @Object))</font>> color="black" fillcolor="white", style=filled]
    node14300 -> node14301 [label=<<font color="black">true</font>> color="black"]
    node14300 -> node14302 [label=<<font color="black">false</font>> color="black"]
    node14301_name [shape=none, label=<<font color="black">Block[14301]</font>>]
    node14301_name -> node14301 [arrowhead=none, color="black", style=dashed]
    node14301 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#995])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14301 -> cluster2321_exit [color="black"]
    node14302_name [shape=none, label=<<font color="black">Block[14302]</font>>]
    node14302_name -> node14302 [arrowhead=none, color="black", style=dashed]
    node14302 [shape=box, label=<<font color="black">[0] let result = &quot;&quot;<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14302 -> node14303 [color="black"]
    node14303_name [shape=none, label=<<font color="black">Call[14303]</font>>]
    node14303_name -> node14303 [arrowhead=none, color="black", style=dashed]
    node14303 [shape=cds, label=<<font color="black">%0 = clo&lt;Get&gt;(R, &quot;hasIndices&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14303 -> node14304 [color="black"]
    node14304_name [shape=none, label=<<font color="black">Call[14304]</font>>]
    node14304_name -> node14304 [arrowhead=none, color="black", style=dashed]
    node14304 [shape=cds, label=<<font color="black">%1 = clo&lt;ToBoolean&gt;([? %0])</font>> color="black" fillcolor="white", style=filled]
    node14304 -> node14305 [color="black"]
    node14305_name [shape=none, label=<<font color="black">Block[14305]</font>>]
    node14305_name -> node14305 [arrowhead=none, color="black", style=dashed]
    node14305 [shape=box, label=<<font color="black">[0] let hasIndices = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14305 -> node14306 [color="black"]
    node14306_name [shape=none, label=<<font color="black">Branch[14306]</font>>]
    node14306_name -> node14306 [arrowhead=none, color="black", style=dashed]
    node14306 [shape=diamond, label=<<font color="black">(= hasIndices true)</font>> color="black" fillcolor="white", style=filled]
    node14306 -> node14307 [label=<<font color="black">true</font>> color="black"]
    node14306 -> node14308 [label=<<font color="black">false</font>> color="black"]
    node14307_name [shape=none, label=<<font color="black">Block[14307]</font>>]
    node14307_name -> node14307 [arrowhead=none, color="black", style=dashed]
    node14307 [shape=box, label=<<font color="black">[0] (yet &quot;append the code unit 0x0064 (LATIN SMALL LETTER D) as the last code unit of _result_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14307 -> node14308 [color="black"]
    node14308_name [shape=none, label=<<font color="black">Call[14308]</font>>]
    node14308_name -> node14308 [arrowhead=none, color="black", style=dashed]
    node14308 [shape=cds, label=<<font color="black">%2 = clo&lt;Get&gt;(R, &quot;global&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14308 -> node14309 [color="black"]
    node14309_name [shape=none, label=<<font color="black">Call[14309]</font>>]
    node14309_name -> node14309 [arrowhead=none, color="black", style=dashed]
    node14309 [shape=cds, label=<<font color="black">%3 = clo&lt;ToBoolean&gt;([? %2])</font>> color="black" fillcolor="white", style=filled]
    node14309 -> node14310 [color="black"]
    node14310_name [shape=none, label=<<font color="black">Block[14310]</font>>]
    node14310_name -> node14310 [arrowhead=none, color="black", style=dashed]
    node14310 [shape=box, label=<<font color="black">[0] let global = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14310 -> node14311 [color="black"]
    node14311_name [shape=none, label=<<font color="black">Branch[14311]</font>>]
    node14311_name -> node14311 [arrowhead=none, color="black", style=dashed]
    node14311 [shape=diamond, label=<<font color="black">(= global true)</font>> color="black" fillcolor="white", style=filled]
    node14311 -> node14312 [label=<<font color="black">true</font>> color="black"]
    node14311 -> node14313 [label=<<font color="black">false</font>> color="black"]
    node14312_name [shape=none, label=<<font color="black">Block[14312]</font>>]
    node14312_name -> node14312 [arrowhead=none, color="black", style=dashed]
    node14312 [shape=box, label=<<font color="black">[0] (yet &quot;append the code unit 0x0067 (LATIN SMALL LETTER G) as the last code unit of _result_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14312 -> node14313 [color="black"]
    node14313_name [shape=none, label=<<font color="black">Call[14313]</font>>]
    node14313_name -> node14313 [arrowhead=none, color="black", style=dashed]
    node14313 [shape=cds, label=<<font color="black">%4 = clo&lt;Get&gt;(R, &quot;ignoreCase&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14313 -> node14314 [color="black"]
    node14314_name [shape=none, label=<<font color="black">Call[14314]</font>>]
    node14314_name -> node14314 [arrowhead=none, color="black", style=dashed]
    node14314 [shape=cds, label=<<font color="black">%5 = clo&lt;ToBoolean&gt;([? %4])</font>> color="black" fillcolor="white", style=filled]
    node14314 -> node14315 [color="black"]
    node14315_name [shape=none, label=<<font color="black">Block[14315]</font>>]
    node14315_name -> node14315 [arrowhead=none, color="black", style=dashed]
    node14315 [shape=box, label=<<font color="black">[0] let ignoreCase = %5<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14315 -> node14316 [color="black"]
    node14316_name [shape=none, label=<<font color="black">Branch[14316]</font>>]
    node14316_name -> node14316 [arrowhead=none, color="black", style=dashed]
    node14316 [shape=diamond, label=<<font color="black">(= ignoreCase true)</font>> color="black" fillcolor="white", style=filled]
    node14316 -> node14317 [label=<<font color="black">true</font>> color="black"]
    node14316 -> node14318 [label=<<font color="black">false</font>> color="black"]
    node14317_name [shape=none, label=<<font color="black">Block[14317]</font>>]
    node14317_name -> node14317 [arrowhead=none, color="black", style=dashed]
    node14317 [shape=box, label=<<font color="black">[0] (yet &quot;append the code unit 0x0069 (LATIN SMALL LETTER I) as the last code unit of _result_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14317 -> node14318 [color="black"]
    node14318_name [shape=none, label=<<font color="black">Call[14318]</font>>]
    node14318_name -> node14318 [arrowhead=none, color="black", style=dashed]
    node14318 [shape=cds, label=<<font color="black">%6 = clo&lt;Get&gt;(R, &quot;multiline&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14318 -> node14319 [color="black"]
    node14319_name [shape=none, label=<<font color="black">Call[14319]</font>>]
    node14319_name -> node14319 [arrowhead=none, color="black", style=dashed]
    node14319 [shape=cds, label=<<font color="black">%7 = clo&lt;ToBoolean&gt;([? %6])</font>> color="black" fillcolor="white", style=filled]
    node14319 -> node14320 [color="black"]
    node14320_name [shape=none, label=<<font color="black">Block[14320]</font>>]
    node14320_name -> node14320 [arrowhead=none, color="black", style=dashed]
    node14320 [shape=box, label=<<font color="black">[0] let multiline = %7<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14320 -> node14321 [color="black"]
    node14321_name [shape=none, label=<<font color="black">Branch[14321]</font>>]
    node14321_name -> node14321 [arrowhead=none, color="black", style=dashed]
    node14321 [shape=diamond, label=<<font color="black">(= multiline true)</font>> color="black" fillcolor="white", style=filled]
    node14321 -> node14322 [label=<<font color="black">true</font>> color="black"]
    node14321 -> node14323 [label=<<font color="black">false</font>> color="black"]
    node14322_name [shape=none, label=<<font color="black">Block[14322]</font>>]
    node14322_name -> node14322 [arrowhead=none, color="black", style=dashed]
    node14322 [shape=box, label=<<font color="black">[0] (yet &quot;append the code unit 0x006D (LATIN SMALL LETTER M) as the last code unit of _result_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14322 -> node14323 [color="black"]
    node14323_name [shape=none, label=<<font color="black">Call[14323]</font>>]
    node14323_name -> node14323 [arrowhead=none, color="black", style=dashed]
    node14323 [shape=cds, label=<<font color="black">%8 = clo&lt;Get&gt;(R, &quot;dotAll&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14323 -> node14324 [color="black"]
    node14324_name [shape=none, label=<<font color="black">Call[14324]</font>>]
    node14324_name -> node14324 [arrowhead=none, color="black", style=dashed]
    node14324 [shape=cds, label=<<font color="black">%9 = clo&lt;ToBoolean&gt;([? %8])</font>> color="black" fillcolor="white", style=filled]
    node14324 -> node14325 [color="black"]
    node14325_name [shape=none, label=<<font color="black">Block[14325]</font>>]
    node14325_name -> node14325 [arrowhead=none, color="black", style=dashed]
    node14325 [shape=box, label=<<font color="black">[0] let dotAll = %9<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14325 -> node14326 [color="black"]
    node14326_name [shape=none, label=<<font color="black">Branch[14326]</font>>]
    node14326_name -> node14326 [arrowhead=none, color="black", style=dashed]
    node14326 [shape=diamond, label=<<font color="black">(= dotAll true)</font>> color="black" fillcolor="white", style=filled]
    node14326 -> node14327 [label=<<font color="black">true</font>> color="black"]
    node14326 -> node14328 [label=<<font color="black">false</font>> color="black"]
    node14327_name [shape=none, label=<<font color="black">Block[14327]</font>>]
    node14327_name -> node14327 [arrowhead=none, color="black", style=dashed]
    node14327 [shape=box, label=<<font color="black">[0] (yet &quot;append the code unit 0x0073 (LATIN SMALL LETTER S) as the last code unit of _result_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14327 -> node14328 [color="black"]
    node14328_name [shape=none, label=<<font color="black">Call[14328]</font>>]
    node14328_name -> node14328 [arrowhead=none, color="black", style=dashed]
    node14328 [shape=cds, label=<<font color="black">%10 = clo&lt;Get&gt;(R, &quot;unicode&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14328 -> node14329 [color="black"]
    node14329_name [shape=none, label=<<font color="black">Call[14329]</font>>]
    node14329_name -> node14329 [arrowhead=none, color="black", style=dashed]
    node14329 [shape=cds, label=<<font color="black">%11 = clo&lt;ToBoolean&gt;([? %10])</font>> color="black" fillcolor="white", style=filled]
    node14329 -> node14330 [color="black"]
    node14330_name [shape=none, label=<<font color="black">Block[14330]</font>>]
    node14330_name -> node14330 [arrowhead=none, color="black", style=dashed]
    node14330 [shape=box, label=<<font color="black">[0] let unicode = %11<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14330 -> node14331 [color="black"]
    node14331_name [shape=none, label=<<font color="black">Branch[14331]</font>>]
    node14331_name -> node14331 [arrowhead=none, color="black", style=dashed]
    node14331 [shape=diamond, label=<<font color="black">(= unicode true)</font>> color="black" fillcolor="white", style=filled]
    node14331 -> node14332 [label=<<font color="black">true</font>> color="black"]
    node14331 -> node14333 [label=<<font color="black">false</font>> color="black"]
    node14332_name [shape=none, label=<<font color="black">Block[14332]</font>>]
    node14332_name -> node14332 [arrowhead=none, color="black", style=dashed]
    node14332 [shape=box, label=<<font color="black">[0] (yet &quot;append the code unit 0x0075 (LATIN SMALL LETTER U) as the last code unit of _result_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14332 -> node14333 [color="black"]
    node14333_name [shape=none, label=<<font color="black">Call[14333]</font>>]
    node14333_name -> node14333 [arrowhead=none, color="black", style=dashed]
    node14333 [shape=cds, label=<<font color="black">%12 = clo&lt;Get&gt;(R, &quot;sticky&quot;)</font>> color="black" fillcolor="white", style=filled]
    node14333 -> node14334 [color="black"]
    node14334_name [shape=none, label=<<font color="black">Call[14334]</font>>]
    node14334_name -> node14334 [arrowhead=none, color="black", style=dashed]
    node14334 [shape=cds, label=<<font color="black">%13 = clo&lt;ToBoolean&gt;([? %12])</font>> color="black" fillcolor="white", style=filled]
    node14334 -> node14335 [color="black"]
    node14335_name [shape=none, label=<<font color="black">Block[14335]</font>>]
    node14335_name -> node14335 [arrowhead=none, color="black", style=dashed]
    node14335 [shape=box, label=<<font color="black">[0] let sticky = %13<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14335 -> node14336 [color="black"]
    node14336_name [shape=none, label=<<font color="black">Branch[14336]</font>>]
    node14336_name -> node14336 [arrowhead=none, color="black", style=dashed]
    node14336 [shape=diamond, label=<<font color="black">(= sticky true)</font>> color="black" fillcolor="white", style=filled]
    node14336 -> node14337 [label=<<font color="black">true</font>> color="black"]
    node14336 -> node14338 [label=<<font color="black">false</font>> color="black"]
    node14337_name [shape=none, label=<<font color="black">Block[14337]</font>>]
    node14337_name -> node14337 [arrowhead=none, color="black", style=dashed]
    node14337 [shape=box, label=<<font color="black">[0] (yet &quot;append the code unit 0x0079 (LATIN SMALL LETTER Y) as the last code unit of _result_.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14337 -> node14338 [color="black"]
    node14338_name [shape=none, label=<<font color="black">Block[14338]</font>>]
    node14338_name -> node14338 [arrowhead=none, color="black", style=dashed]
    node14338 [shape=box, label=<<font color="black">[0] return result<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node14338 -> cluster2321_exit [color="black"]
  }
}