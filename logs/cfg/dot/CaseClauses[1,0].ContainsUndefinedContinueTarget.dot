digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster654 {
    label = "def <SYNTAX>:CaseClauses[1,0].ContainsUndefinedContinueTarget(this: Ast:CaseClauses[1,0], iterationSet: Unknown, labelSet: Unknown): Boolean"
    style = rounded
    cluster654_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster654_entry_name -> cluster654_entry [arrowhead=none, color="black", style=dashed]
    cluster654_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster654_entry -> node2836 [color="black"]
    cluster654_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster654_exit_name -> cluster654_exit [arrowhead=none, color="black", style=dashed]
    cluster654_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2836_name [shape=none, label=<<font color="black">Call[2836]</font>>]
    node2836_name -> node2836 [arrowhead=none, color="black", style=dashed]
    node2836 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;ContainsUndefinedContinueTarget(iterationSet, (new [])[#346])</font>> color="black" fillcolor="white", style=filled]
    node2836 -> node2837 [color="black"]
    node2837_name [shape=none, label=<<font color="black">Block[2837]</font>>]
    node2837_name -> node2837 [arrowhead=none, color="black", style=dashed]
    node2837 [shape=box, label=<<font color="black">[0] let hasUndefinedLabels = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2837 -> node2838 [color="black"]
    node2838_name [shape=none, label=<<font color="black">Branch[2838]</font>>]
    node2838_name -> node2838 [arrowhead=none, color="black", style=dashed]
    node2838 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white", style=filled]
    node2838 -> node2839 [label=<<font color="black">true</font>> color="black"]
    node2838 -> node2840 [label=<<font color="black">false</font>> color="black"]
    node2839_name [shape=none, label=<<font color="black">Block[2839]</font>>]
    node2839_name -> node2839 [arrowhead=none, color="black", style=dashed]
    node2839 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2839 -> cluster654_exit [color="black"]
    node2840_name [shape=none, label=<<font color="black">Call[2840]</font>>]
    node2840_name -> node2840 [arrowhead=none, color="black", style=dashed]
    node2840 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;ContainsUndefinedContinueTarget(iterationSet, (new [])[#347])</font>> color="black" fillcolor="white", style=filled]
    node2840 -> node2841 [color="black"]
    node2841_name [shape=none, label=<<font color="black">Block[2841]</font>>]
    node2841_name -> node2841 [arrowhead=none, color="black", style=dashed]
    node2841 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2841 -> cluster654_exit [color="black"]
  }
}