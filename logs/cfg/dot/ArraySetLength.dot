digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1108 {
    label = "def ArraySetLength(A: Unknown["Array"], Desc: PropertyDescriptor): Normal[Boolean] | Abrupt"
    style = rounded
    cluster1108_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1108_entry_name -> cluster1108_entry [arrowhead=none, color="black", style=dashed]
    cluster1108_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1108_entry -> node4603 [color="black"]
    cluster1108_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1108_exit_name -> cluster1108_exit [arrowhead=none, color="black", style=dashed]
    cluster1108_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4603_name [shape=none, label=<<font color="black">Branch[4603]</font>>]
    node4603_name -> node4603 [arrowhead=none, color="black", style=dashed]
    node4603 [shape=diamond, label=<<font color="black">(= Desc.Value absent)</font>> color="black" fillcolor="white", style=filled]
    node4603 -> node4604 [label=<<font color="black">true</font>> color="black"]
    node4603 -> node4606 [label=<<font color="black">false</font>> color="black"]
    node4604_name [shape=none, label=<<font color="black">Call[4604]</font>>]
    node4604_name -> node4604 [arrowhead=none, color="black", style=dashed]
    node4604 [shape=cds, label=<<font color="black">%0 = clo&lt;OrdinaryDefineOwnProperty&gt;(A, &quot;length&quot;, Desc)</font>> color="black" fillcolor="white", style=filled]
    node4604 -> node4605 [color="black"]
    node4606_name [shape=none, label=<<font color="black">Block[4606]</font>>]
    node4606_name -> node4606 [arrowhead=none, color="black", style=dashed]
    node4606 [shape=box, label=<<font color="black">[0] let newLenDesc = (copy Desc)[#453]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4606 -> node4607 [color="black"]
    node4605_name [shape=none, label=<<font color="black">Block[4605]</font>>]
    node4605_name -> node4605 [arrowhead=none, color="black", style=dashed]
    node4605 [shape=box, label=<<font color="black">[0] return [! %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4605 -> cluster1108_exit [color="black"]
    node4607_name [shape=none, label=<<font color="black">Call[4607]</font>>]
    node4607_name -> node4607 [arrowhead=none, color="black", style=dashed]
    node4607 [shape=cds, label=<<font color="black">%1 = clo&lt;ToUint32&gt;(Desc.Value)</font>> color="black" fillcolor="white", style=filled]
    node4607 -> node4608 [color="black"]
    node4608_name [shape=none, label=<<font color="black">Block[4608]</font>>]
    node4608_name -> node4608 [arrowhead=none, color="black", style=dashed]
    node4608 [shape=box, label=<<font color="black">[0] let newLen = [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4608 -> node4609 [color="black"]
    node4609_name [shape=none, label=<<font color="black">Call[4609]</font>>]
    node4609_name -> node4609 [arrowhead=none, color="black", style=dashed]
    node4609 [shape=cds, label=<<font color="black">%2 = clo&lt;ToNumber&gt;(Desc.Value)</font>> color="black" fillcolor="white", style=filled]
    node4609 -> node4610 [color="black"]
    node4610_name [shape=none, label=<<font color="black">Block[4610]</font>>]
    node4610_name -> node4610 [arrowhead=none, color="black", style=dashed]
    node4610 [shape=box, label=<<font color="black">[0] let numberLen = [? %2]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4610 -> node4611 [color="black"]
    node4611_name [shape=none, label=<<font color="black">Call[4611]</font>>]
    node4611_name -> node4611 [arrowhead=none, color="black", style=dashed]
    node4611 [shape=cds, label=<<font color="black">%3 = clo&lt;SameValueZero&gt;(newLen, numberLen)</font>> color="black" fillcolor="white", style=filled]
    node4611 -> node4612 [color="black"]
    node4612_name [shape=none, label=<<font color="black">Branch[4612]</font>>]
    node4612_name -> node4612 [arrowhead=none, color="black", style=dashed]
    node4612 [shape=diamond, label=<<font color="black">(= %3 false)</font>> color="black" fillcolor="white", style=filled]
    node4612 -> node4613 [label=<<font color="black">true</font>> color="black"]
    node4612 -> node4614 [label=<<font color="black">false</font>> color="black"]
    node4613_name [shape=none, label=<<font color="black">Block[4613]</font>>]
    node4613_name -> node4613 [arrowhead=none, color="black", style=dashed]
    node4613 [shape=box, label=<<font color="black">[0] return comp[~throw~/~empty~]((new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%RangeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#454])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4613 -> cluster1108_exit [color="black"]
    node4614_name [shape=none, label=<<font color="black">Block[4614]</font>>]
    node4614_name -> node4614 [arrowhead=none, color="black", style=dashed]
    node4614 [shape=box, label=<<font color="black">[0] newLenDesc.Value = newLen<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4614 -> node4615 [color="black"]
    node4615_name [shape=none, label=<<font color="black">Call[4615]</font>>]
    node4615_name -> node4615 [arrowhead=none, color="black", style=dashed]
    node4615 [shape=cds, label=<<font color="black">%4 = clo&lt;OrdinaryGetOwnProperty&gt;(A, &quot;length&quot;)</font>> color="black" fillcolor="white", style=filled]
    node4615 -> node4616 [color="black"]
    node4616_name [shape=none, label=<<font color="black">Block[4616]</font>>]
    node4616_name -> node4616 [arrowhead=none, color="black", style=dashed]
    node4616 [shape=box, label=<<font color="black">[0] let oldLenDesc = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4616 -> node4617 [color="black"]
    node4617_name [shape=none, label=<<font color="black">Call[4617]</font>>]
    node4617_name -> node4617 [arrowhead=none, color="black", style=dashed]
    node4617 [shape=cds, label=<<font color="black">%5 = clo&lt;IsDataDescriptor&gt;(oldLenDesc)</font>> color="black" fillcolor="white", style=filled]
    node4617 -> node4618 [color="black"]
    node4618_name [shape=none, label=<<font color="black">Block[4618]</font>>]
    node4618_name -> node4618 [arrowhead=none, color="black", style=dashed]
    node4618 [shape=box, label=<<font color="black">[0] assert (= %5 true)<BR ALIGN="LEFT"/>[1] assert (= oldLenDesc.Configurable false)<BR ALIGN="LEFT"/>[2] let oldLen = oldLenDesc.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4618 -> node4619 [color="black"]
    node4619_name [shape=none, label=<<font color="black">Branch[4619]</font>>]
    node4619_name -> node4619 [arrowhead=none, color="black", style=dashed]
    node4619 [shape=diamond, label=<<font color="black">(! (&lt; newLen oldLen))</font>> color="black" fillcolor="white", style=filled]
    node4619 -> node4620 [label=<<font color="black">true</font>> color="black"]
    node4619 -> node4622 [label=<<font color="black">false</font>> color="black"]
    node4620_name [shape=none, label=<<font color="black">Call[4620]</font>>]
    node4620_name -> node4620 [arrowhead=none, color="black", style=dashed]
    node4620 [shape=cds, label=<<font color="black">%6 = clo&lt;OrdinaryDefineOwnProperty&gt;(A, &quot;length&quot;, newLenDesc)</font>> color="black" fillcolor="white", style=filled]
    node4620 -> node4621 [color="black"]
    node4622_name [shape=none, label=<<font color="black">Branch[4622]</font>>]
    node4622_name -> node4622 [arrowhead=none, color="black", style=dashed]
    node4622 [shape=diamond, label=<<font color="black">(= oldLenDesc.Writable false)</font>> color="black" fillcolor="white", style=filled]
    node4622 -> node4623 [label=<<font color="black">true</font>> color="black"]
    node4622 -> node4624 [label=<<font color="black">false</font>> color="black"]
    node4621_name [shape=none, label=<<font color="black">Block[4621]</font>>]
    node4621_name -> node4621 [arrowhead=none, color="black", style=dashed]
    node4621 [shape=box, label=<<font color="black">[0] return [! %6]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4621 -> cluster1108_exit [color="black"]
    node4623_name [shape=none, label=<<font color="black">Block[4623]</font>>]
    node4623_name -> node4623 [arrowhead=none, color="black", style=dashed]
    node4623 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4623 -> cluster1108_exit [color="black"]
    node4624_name [shape=none, label=<<font color="black">Branch[4624]</font>>]
    node4624_name -> node4624 [arrowhead=none, color="black", style=dashed]
    node4624 [shape=diamond, label=<<font color="black">(|| (= newLenDesc.Writable absent) (= newLenDesc.Writable true))</font>> color="black" fillcolor="white", style=filled]
    node4624 -> node4625 [label=<<font color="black">true</font>> color="black"]
    node4624 -> node4626 [label=<<font color="black">false</font>> color="black"]
    node4625_name [shape=none, label=<<font color="black">Block[4625]</font>>]
    node4625_name -> node4625 [arrowhead=none, color="black", style=dashed]
    node4625 [shape=box, label=<<font color="black">[0] let newWritable = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4625 -> node4627 [color="black"]
    node4626_name [shape=none, label=<<font color="black">Block[4626]</font>>]
    node4626_name -> node4626 [arrowhead=none, color="black", style=dashed]
    node4626 [shape=box, label=<<font color="black">[0] nop<BR ALIGN="LEFT"/>[1] let newWritable = false<BR ALIGN="LEFT"/>[2] newLenDesc.Writable = true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4626 -> node4627 [color="black"]
    node4627_name [shape=none, label=<<font color="black">Call[4627]</font>>]
    node4627_name -> node4627 [arrowhead=none, color="black", style=dashed]
    node4627 [shape=cds, label=<<font color="black">%7 = clo&lt;OrdinaryDefineOwnProperty&gt;(A, &quot;length&quot;, newLenDesc)</font>> color="black" fillcolor="white", style=filled]
    node4627 -> node4628 [color="black"]
    node4628_name [shape=none, label=<<font color="black">Block[4628]</font>>]
    node4628_name -> node4628 [arrowhead=none, color="black", style=dashed]
    node4628 [shape=box, label=<<font color="black">[0] let succeeded = [! %7]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4628 -> node4629 [color="black"]
    node4629_name [shape=none, label=<<font color="black">Branch[4629]</font>>]
    node4629_name -> node4629 [arrowhead=none, color="black", style=dashed]
    node4629 [shape=diamond, label=<<font color="black">(= succeeded false)</font>> color="black" fillcolor="white", style=filled]
    node4629 -> node4630 [label=<<font color="black">true</font>> color="black"]
    node4629 -> node4631 [label=<<font color="black">false</font>> color="black"]
    node4630_name [shape=none, label=<<font color="black">Block[4630]</font>>]
    node4630_name -> node4630 [arrowhead=none, color="black", style=dashed]
    node4630 [shape=box, label=<<font color="black">[0] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4630 -> cluster1108_exit [color="black"]
    node4631_name [shape=none, label=<<font color="black">Block[4631]</font>>]
    node4631_name -> node4631 [arrowhead=none, color="black", style=dashed]
    node4631 [shape=box, label=<<font color="black">[0] %9 = (keys-int A.SubMap)[#455]<BR ALIGN="LEFT"/>[1] %8 = %9.length<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4631 -> node4632 [color="black"]
    node4632_name [shape=none, label=<<font color="black">Branch[4632]</font>>]
    node4632_name -> node4632 [arrowhead=none, color="black", style=dashed]
    node4632 [shape=diamond, label=<<font color="black">(&lt; 0 %8)</font>> color="black" fillcolor="white", style=filled]
    node4632 -> node4633 [label=<<font color="black">true</font>> color="black"]
    node4632 -> node4644 [label=<<font color="black">false</font>> color="black"]
    node4633_name [shape=none, label=<<font color="black">Block[4633]</font>>]
    node4633_name -> node4633 [arrowhead=none, color="black", style=dashed]
    node4633 [shape=box, label=<<font color="black">[0] %8 = (- %8 1)<BR ALIGN="LEFT"/>[1] let P = %9[%8]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4633 -> node4634 [color="black"]
    node4644_name [shape=none, label=<<font color="black">Branch[4644]</font>>]
    node4644_name -> node4644 [arrowhead=none, color="black", style=dashed]
    node4644 [shape=diamond, label=<<font color="black">(= newWritable false)</font>> color="black" fillcolor="white", style=filled]
    node4644 -> node4645 [label=<<font color="black">true</font>> color="black"]
    node4644 -> node4647 [label=<<font color="black">false</font>> color="black"]
    node4634_name [shape=none, label=<<font color="black">Branch[4634]</font>>]
    node4634_name -> node4634 [arrowhead=none, color="black", style=dashed]
    node4634 [shape=diamond, label=<<font color="black">(&amp;&amp; (array-index P) (! (&lt; ([number] P) newLen)))</font>> color="black" fillcolor="white", style=filled]
    node4634 -> node4635 [label=<<font color="black">true</font>> color="black"]
    node4634 -> node4632 [label=<<font color="black">false</font>> color="black"]
    node4645_name [shape=none, label=<<font color="black">Call[4645]</font>>]
    node4645_name -> node4645 [arrowhead=none, color="black", style=dashed]
    node4645 [shape=cds, label=<<font color="black">%13 = clo&lt;OrdinaryDefineOwnProperty&gt;(A, &quot;length&quot;, (new PropertyDescriptor(&quot;Writable&quot; -&gt; false))[#456])</font>> color="black" fillcolor="white", style=filled]
    node4645 -> node4646 [color="black"]
    node4647_name [shape=none, label=<<font color="black">Block[4647]</font>>]
    node4647_name -> node4647 [arrowhead=none, color="black", style=dashed]
    node4647 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4647 -> cluster1108_exit [color="black"]
    node4635_name [shape=none, label=<<font color="black">Call[4635]</font>>]
    node4635_name -> node4635 [arrowhead=none, color="black", style=dashed]
    node4635 [shape=cds, label=<<font color="black">%10 = A-&gt;Delete(P)</font>> color="black" fillcolor="white", style=filled]
    node4635 -> node4636 [color="black"]
    node4646_name [shape=none, label=<<font color="black">Block[4646]</font>>]
    node4646_name -> node4646 [arrowhead=none, color="black", style=dashed]
    node4646 [shape=box, label=<<font color="black">[0] succeeded = [! %13]<BR ALIGN="LEFT"/>[1] assert (= succeeded true)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4646 -> node4647 [color="black"]
    node4636_name [shape=none, label=<<font color="black">Block[4636]</font>>]
    node4636_name -> node4636 [arrowhead=none, color="black", style=dashed]
    node4636 [shape=box, label=<<font color="black">[0] let deleteSucceeded = [! %10]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4636 -> node4637 [color="black"]
    node4637_name [shape=none, label=<<font color="black">Branch[4637]</font>>]
    node4637_name -> node4637 [arrowhead=none, color="black", style=dashed]
    node4637 [shape=diamond, label=<<font color="black">(= deleteSucceeded false)</font>> color="black" fillcolor="white", style=filled]
    node4637 -> node4638 [label=<<font color="black">true</font>> color="black"]
    node4637 -> node4632 [label=<<font color="black">false</font>> color="black"]
    node4638_name [shape=none, label=<<font color="black">Call[4638]</font>>]
    node4638_name -> node4638 [arrowhead=none, color="black", style=dashed]
    node4638 [shape=cds, label=<<font color="black">%11 = clo&lt;ToUint32&gt;(P)</font>> color="black" fillcolor="white", style=filled]
    node4638 -> node4639 [color="black"]
    node4639_name [shape=none, label=<<font color="black">Block[4639]</font>>]
    node4639_name -> node4639 [arrowhead=none, color="black", style=dashed]
    node4639 [shape=box, label=<<font color="black">[0] newLenDesc.Value = (+ [! %11] 1.0f)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4639 -> node4640 [color="black"]
    node4640_name [shape=none, label=<<font color="black">Branch[4640]</font>>]
    node4640_name -> node4640 [arrowhead=none, color="black", style=dashed]
    node4640 [shape=diamond, label=<<font color="black">(= newWritable false)</font>> color="black" fillcolor="white", style=filled]
    node4640 -> node4641 [label=<<font color="black">true</font>> color="black"]
    node4640 -> node4642 [label=<<font color="black">false</font>> color="black"]
    node4641_name [shape=none, label=<<font color="black">Block[4641]</font>>]
    node4641_name -> node4641 [arrowhead=none, color="black", style=dashed]
    node4641 [shape=box, label=<<font color="black">[0] newLenDesc.Writable = false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4641 -> node4642 [color="black"]
    node4642_name [shape=none, label=<<font color="black">Call[4642]</font>>]
    node4642_name -> node4642 [arrowhead=none, color="black", style=dashed]
    node4642 [shape=cds, label=<<font color="black">%12 = clo&lt;OrdinaryDefineOwnProperty&gt;(A, &quot;length&quot;, newLenDesc)</font>> color="black" fillcolor="white", style=filled]
    node4642 -> node4643 [color="black"]
    node4643_name [shape=none, label=<<font color="black">Block[4643]</font>>]
    node4643_name -> node4643 [arrowhead=none, color="black", style=dashed]
    node4643 [shape=box, label=<<font color="black">[0] [! %12]<BR ALIGN="LEFT"/>[1] return false<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4643 -> cluster1108_exit [color="black"]
  }
}