digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1406 {
    label = "def <SYNTAX>:IfStatement[0,0].Evaluation(this: Ast:IfStatement[0,0]): Unknown"
    style = rounded
    cluster1406_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1406_entry_name -> cluster1406_entry [arrowhead=none, color="black", style=dashed]
    cluster1406_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1406_entry -> node7326 [color="black"]
    cluster1406_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1406_exit_name -> cluster1406_exit [arrowhead=none, color="black", style=dashed]
    cluster1406_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node7326_name [shape=none, label=<<font color="black">Call[7326]</font>>]
    node7326_name -> node7326 [arrowhead=none, color="black", style=dashed]
    node7326 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7326 -> node7327 [color="black"]
    node7327_name [shape=none, label=<<font color="black">Block[7327]</font>>]
    node7327_name -> node7327 [arrowhead=none, color="black", style=dashed]
    node7327 [shape=box, label=<<font color="black">[0] let exprRef = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7327 -> node7328 [color="black"]
    node7328_name [shape=none, label=<<font color="black">Call[7328]</font>>]
    node7328_name -> node7328 [arrowhead=none, color="black", style=dashed]
    node7328 [shape=cds, label=<<font color="black">%1 = clo&lt;GetValue&gt;(exprRef)</font>> color="black" fillcolor="white", style=filled]
    node7328 -> node7329 [color="black"]
    node7329_name [shape=none, label=<<font color="black">Call[7329]</font>>]
    node7329_name -> node7329 [arrowhead=none, color="black", style=dashed]
    node7329 [shape=cds, label=<<font color="black">%2 = clo&lt;ToBoolean&gt;([? %1])</font>> color="black" fillcolor="white", style=filled]
    node7329 -> node7330 [color="black"]
    node7330_name [shape=none, label=<<font color="black">Block[7330]</font>>]
    node7330_name -> node7330 [arrowhead=none, color="black", style=dashed]
    node7330 [shape=box, label=<<font color="black">[0] let exprValue = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7330 -> node7331 [color="black"]
    node7331_name [shape=none, label=<<font color="black">Branch[7331]</font>>]
    node7331_name -> node7331 [arrowhead=none, color="black", style=dashed]
    node7331 [shape=diamond, label=<<font color="black">(= exprValue true)</font>> color="black" fillcolor="white", style=filled]
    node7331 -> node7332 [label=<<font color="black">true</font>> color="black"]
    node7331 -> node7334 [label=<<font color="black">false</font>> color="black"]
    node7332_name [shape=none, label=<<font color="black">Call[7332]</font>>]
    node7332_name -> node7332 [arrowhead=none, color="black", style=dashed]
    node7332 [shape=cds, label=<<font color="black">%3 = this[1]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7332 -> node7333 [color="black"]
    node7334_name [shape=none, label=<<font color="black">Call[7334]</font>>]
    node7334_name -> node7334 [arrowhead=none, color="black", style=dashed]
    node7334 [shape=cds, label=<<font color="black">%4 = this[2]-&gt;Evaluation()</font>> color="black" fillcolor="white", style=filled]
    node7334 -> node7335 [color="black"]
    node7333_name [shape=none, label=<<font color="black">Block[7333]</font>>]
    node7333_name -> node7333 [arrowhead=none, color="black", style=dashed]
    node7333 [shape=box, label=<<font color="black">[0] let stmtCompletion = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7333 -> node7336 [color="black"]
    node7335_name [shape=none, label=<<font color="black">Block[7335]</font>>]
    node7335_name -> node7335 [arrowhead=none, color="black", style=dashed]
    node7335 [shape=box, label=<<font color="black">[0] let stmtCompletion = %4<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7335 -> node7336 [color="black"]
    node7336_name [shape=none, label=<<font color="black">Call[7336]</font>>]
    node7336_name -> node7336 [arrowhead=none, color="black", style=dashed]
    node7336 [shape=cds, label=<<font color="black">%5 = clo&lt;UpdateEmpty&gt;(stmtCompletion, undefined)</font>> color="black" fillcolor="white", style=filled]
    node7336 -> node7337 [color="black"]
    node7337_name [shape=none, label=<<font color="black">Block[7337]</font>>]
    node7337_name -> node7337 [arrowhead=none, color="black", style=dashed]
    node7337 [shape=box, label=<<font color="black">[0] return [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node7337 -> cluster1406_exit [color="black"]
  }
}