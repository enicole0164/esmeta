digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster998 {
    label = "def <CONC>:GlobalEnvironmentRecord.HasBinding(envRec: GlobalEnvironmentRecord, N: String): Normal[Boolean] | Abrupt"
    style = rounded
    cluster998_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster998_entry_name -> cluster998_entry [arrowhead=none, color="black", style=dashed]
    cluster998_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster998_entry -> node3693 [color="black"]
    cluster998_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster998_exit_name -> cluster998_exit [arrowhead=none, color="black", style=dashed]
    cluster998_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node3693_name [shape=none, label=<<font color="black">Block[3693]</font>>]
    node3693_name -> node3693 [arrowhead=none, color="black", style=dashed]
    node3693 [shape=box, label=<<font color="black">[0] let DclRec = envRec.DeclarativeRecord<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3693 -> node3694 [color="black"]
    node3694_name [shape=none, label=<<font color="black">Call[3694]</font>>]
    node3694_name -> node3694 [arrowhead=none, color="black", style=dashed]
    node3694 [shape=cds, label=<<font color="black">%0 = DclRec-&gt;HasBinding(N)</font>> color="black" fillcolor="white", style=filled]
    node3694 -> node3695 [color="black"]
    node3695_name [shape=none, label=<<font color="black">Branch[3695]</font>>]
    node3695_name -> node3695 [arrowhead=none, color="black", style=dashed]
    node3695 [shape=diamond, label=<<font color="black">(= [! %0] true)</font>> color="black" fillcolor="white", style=filled]
    node3695 -> node3696 [label=<<font color="black">true</font>> color="black"]
    node3695 -> node3697 [label=<<font color="black">false</font>> color="black"]
    node3696_name [shape=none, label=<<font color="black">Block[3696]</font>>]
    node3696_name -> node3696 [arrowhead=none, color="black", style=dashed]
    node3696 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3696 -> cluster998_exit [color="black"]
    node3697_name [shape=none, label=<<font color="black">Block[3697]</font>>]
    node3697_name -> node3697 [arrowhead=none, color="black", style=dashed]
    node3697 [shape=box, label=<<font color="black">[0] let ObjRec = envRec.ObjectRecord<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3697 -> node3698 [color="black"]
    node3698_name [shape=none, label=<<font color="black">Call[3698]</font>>]
    node3698_name -> node3698 [arrowhead=none, color="black", style=dashed]
    node3698 [shape=cds, label=<<font color="black">%1 = ObjRec-&gt;HasBinding(N)</font>> color="black" fillcolor="white", style=filled]
    node3698 -> node3699 [color="black"]
    node3699_name [shape=none, label=<<font color="black">Block[3699]</font>>]
    node3699_name -> node3699 [arrowhead=none, color="black", style=dashed]
    node3699 [shape=box, label=<<font color="black">[0] return [? %1]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node3699 -> cluster998_exit [color="black"]
  }
}