digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster558 {
    label = "def <SYNTAX>:ForStatement[0,4].ContainsUndefinedBreakTarget(this: Ast:ForStatement[0,4], labelSet: Unknown): Boolean"
    style = rounded
    cluster558_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster558_entry_name -> cluster558_entry [arrowhead=none, color="black", style=dashed]
    cluster558_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster558_entry -> node2545 [color="black"]
    cluster558_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster558_exit_name -> cluster558_exit [arrowhead=none, color="black", style=dashed]
    cluster558_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2545_name [shape=none, label=<<font color="black">Call[2545]</font>>]
    node2545_name -> node2545 [arrowhead=none, color="black", style=dashed]
    node2545 [shape=cds, label=<<font color="black">%0 = this[3]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2545 -> node2546 [color="black"]
    node2546_name [shape=none, label=<<font color="black">Block[2546]</font>>]
    node2546_name -> node2546 [arrowhead=none, color="black", style=dashed]
    node2546 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2546 -> cluster558_exit [color="black"]
  }
}