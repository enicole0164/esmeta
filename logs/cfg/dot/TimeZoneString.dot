digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2157 {
    label = "def TimeZoneString(tv: Unknown["Number,ButNot*NaN*"]): String"
    style = rounded
    cluster2157_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2157_entry_name -> cluster2157_entry [arrowhead=none, color="black", style=dashed]
    cluster2157_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2157_entry -> node13148 [color="black"]
    cluster2157_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2157_exit_name -> cluster2157_exit [arrowhead=none, color="black", style=dashed]
    cluster2157_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node13148_name [shape=none, label=<<font color="black">Call[13148]</font>>]
    node13148_name -> node13148 [arrowhead=none, color="black", style=dashed]
    node13148 [shape=cds, label=<<font color="black">%0 = clo&lt;LocalTZA&gt;(tv, true)</font>> color="black" fillcolor="white", style=filled]
    node13148 -> node13149 [color="black"]
    node13149_name [shape=none, label=<<font color="black">Block[13149]</font>>]
    node13149_name -> node13149 [arrowhead=none, color="black", style=dashed]
    node13149 [shape=box, label=<<font color="black">[0] let offset = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13149 -> node13150 [color="black"]
    node13150_name [shape=none, label=<<font color="black">Branch[13150]</font>>]
    node13150_name -> node13150 [arrowhead=none, color="black", style=dashed]
    node13150 [shape=diamond, label=<<font color="black">(|| (= offset 0.0f) (&lt; 0.0f offset))</font>> color="black" fillcolor="white", style=filled]
    node13150 -> node13151 [label=<<font color="black">true</font>> color="black"]
    node13150 -> node13152 [label=<<font color="black">false</font>> color="black"]
    node13151_name [shape=none, label=<<font color="black">Block[13151]</font>>]
    node13151_name -> node13151 [arrowhead=none, color="black", style=dashed]
    node13151 [shape=box, label=<<font color="black">[0] let offsetSign = &quot;+&quot;<BR ALIGN="LEFT"/>[1] let absOffset = offset<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13151 -> node13153 [color="black"]
    node13152_name [shape=none, label=<<font color="black">Block[13152]</font>>]
    node13152_name -> node13152 [arrowhead=none, color="black", style=dashed]
    node13152 [shape=box, label=<<font color="black">[0] let offsetSign = &quot;-&quot;<BR ALIGN="LEFT"/>[1] let absOffset = (- offset)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13152 -> node13153 [color="black"]
    node13153_name [shape=none, label=<<font color="black">Call[13153]</font>>]
    node13153_name -> node13153 [arrowhead=none, color="black", style=dashed]
    node13153 [shape=cds, label=<<font color="black">%1 = clo&lt;MinFromTime&gt;(absOffset)</font>> color="black" fillcolor="white", style=filled]
    node13153 -> node13154 [color="black"]
    node13154_name [shape=none, label=<<font color="black">Call[13154]</font>>]
    node13154_name -> node13154 [arrowhead=none, color="black", style=dashed]
    node13154 [shape=cds, label=<<font color="black">%2 = clo&lt;ToZeroPaddedDecimalString&gt;(([math] %1), 2)</font>> color="black" fillcolor="white", style=filled]
    node13154 -> node13155 [color="black"]
    node13155_name [shape=none, label=<<font color="black">Block[13155]</font>>]
    node13155_name -> node13155 [arrowhead=none, color="black", style=dashed]
    node13155 [shape=box, label=<<font color="black">[0] let offsetMin = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13155 -> node13156 [color="black"]
    node13156_name [shape=none, label=<<font color="black">Call[13156]</font>>]
    node13156_name -> node13156 [arrowhead=none, color="black", style=dashed]
    node13156 [shape=cds, label=<<font color="black">%3 = clo&lt;HourFromTime&gt;(absOffset)</font>> color="black" fillcolor="white", style=filled]
    node13156 -> node13157 [color="black"]
    node13157_name [shape=none, label=<<font color="black">Call[13157]</font>>]
    node13157_name -> node13157 [arrowhead=none, color="black", style=dashed]
    node13157 [shape=cds, label=<<font color="black">%4 = clo&lt;ToZeroPaddedDecimalString&gt;(([math] %3), 2)</font>> color="black" fillcolor="white", style=filled]
    node13157 -> node13158 [color="black"]
    node13158_name [shape=none, label=<<font color="black">Block[13158]</font>>]
    node13158_name -> node13158 [arrowhead=none, color="black", style=dashed]
    node13158 [shape=box, label=<<font color="black">[0] let offsetHour = %4<BR ALIGN="LEFT"/>[1] (yet &quot;Let _tzName_ be an implementation-defined string that is either the empty String or the string-concatenation of the code unit 0x0020 (SPACE), the code unit 0x0028 (LEFT PARENTHESIS), an implementation-defined timezone name, and the code unit 0x0029 (RIGHT PARENTHESIS).&quot;)<BR ALIGN="LEFT"/>[2] return (concat offsetSign offsetHour offsetMin tzName)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node13158 -> cluster2157_exit [color="black"]
  }
}