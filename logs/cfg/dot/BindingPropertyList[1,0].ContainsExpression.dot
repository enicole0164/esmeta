digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1521 {
    label = "def <SYNTAX>:BindingPropertyList[1,0].ContainsExpression(this: Ast:BindingPropertyList[1,0]): Boolean"
    style = rounded
    cluster1521_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1521_entry_name -> cluster1521_entry [arrowhead=none, color="black", style=dashed]
    cluster1521_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1521_entry -> node8305 [color="black"]
    cluster1521_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1521_exit_name -> cluster1521_exit [arrowhead=none, color="black", style=dashed]
    cluster1521_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node8305_name [shape=none, label=<<font color="black">Call[8305]</font>>]
    node8305_name -> node8305 [arrowhead=none, color="black", style=dashed]
    node8305 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;ContainsExpression()</font>> color="black" fillcolor="white", style=filled]
    node8305 -> node8306 [color="black"]
    node8306_name [shape=none, label=<<font color="black">Block[8306]</font>>]
    node8306_name -> node8306 [arrowhead=none, color="black", style=dashed]
    node8306 [shape=box, label=<<font color="black">[0] let has = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8306 -> node8307 [color="black"]
    node8307_name [shape=none, label=<<font color="black">Branch[8307]</font>>]
    node8307_name -> node8307 [arrowhead=none, color="black", style=dashed]
    node8307 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white", style=filled]
    node8307 -> node8308 [label=<<font color="black">true</font>> color="black"]
    node8307 -> node8309 [label=<<font color="black">false</font>> color="black"]
    node8308_name [shape=none, label=<<font color="black">Block[8308]</font>>]
    node8308_name -> node8308 [arrowhead=none, color="black", style=dashed]
    node8308 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8308 -> cluster1521_exit [color="black"]
    node8309_name [shape=none, label=<<font color="black">Call[8309]</font>>]
    node8309_name -> node8309 [arrowhead=none, color="black", style=dashed]
    node8309 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;ContainsExpression()</font>> color="black" fillcolor="white", style=filled]
    node8309 -> node8310 [color="black"]
    node8310_name [shape=none, label=<<font color="black">Block[8310]</font>>]
    node8310_name -> node8310 [arrowhead=none, color="black", style=dashed]
    node8310 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node8310 -> cluster1521_exit [color="black"]
  }
}