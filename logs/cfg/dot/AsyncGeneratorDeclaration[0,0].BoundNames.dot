digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster213 {
    label = "def <SYNTAX>:AsyncGeneratorDeclaration[0,0].BoundNames(this: Ast:AsyncGeneratorDeclaration[0,0]): List[String]"
    style = rounded
    cluster213_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster213_entry_name -> cluster213_entry [arrowhead=none, color="black", style=dashed]
    cluster213_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster213_entry -> node1602 [color="black"]
    cluster213_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster213_exit_name -> cluster213_exit [arrowhead=none, color="black", style=dashed]
    cluster213_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1602_name [shape=none, label=<<font color="black">Call[1602]</font>>]
    node1602_name -> node1602 [arrowhead=none, color="black", style=dashed]
    node1602 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;BoundNames()</font>> color="black" fillcolor="white", style=filled]
    node1602 -> node1603 [color="black"]
    node1603_name [shape=none, label=<<font color="black">Block[1603]</font>>]
    node1603_name -> node1603 [arrowhead=none, color="black", style=dashed]
    node1603 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1603 -> cluster213_exit [color="black"]
  }
}