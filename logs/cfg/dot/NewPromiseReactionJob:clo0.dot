digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2576 {
    label = "def <CLO>:NewPromiseReactionJob:clo0(): Unknown"
    style = rounded
    cluster2576_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2576_entry_name -> cluster2576_entry [arrowhead=none, color="black", style=dashed]
    cluster2576_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2576_entry -> node18783 [color="black"]
    cluster2576_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2576_exit_name -> cluster2576_exit [arrowhead=none, color="black", style=dashed]
    cluster2576_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node18783_name [shape=none, label=<<font color="black">Block[18783]</font>>]
    node18783_name -> node18783 [arrowhead=none, color="black", style=dashed]
    node18783 [shape=box, label=<<font color="black">[0] let promiseCapability = reaction.Capability<BR ALIGN="LEFT"/>[1] let type = reaction.Type<BR ALIGN="LEFT"/>[2] let handler = reaction.Handler<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18783 -> node18784 [color="black"]
    node18784_name [shape=none, label=<<font color="black">Branch[18784]</font>>]
    node18784_name -> node18784 [arrowhead=none, color="black", style=dashed]
    node18784 [shape=diamond, label=<<font color="black">(= handler ~empty~)</font>> color="black" fillcolor="white", style=filled]
    node18784 -> node18785 [label=<<font color="black">true</font>> color="black"]
    node18784 -> node18791 [label=<<font color="black">false</font>> color="black"]
    node18785_name [shape=none, label=<<font color="black">Branch[18785]</font>>]
    node18785_name -> node18785 [arrowhead=none, color="black", style=dashed]
    node18785 [shape=diamond, label=<<font color="black">(= type ~Fulfill~)</font>> color="black" fillcolor="white", style=filled]
    node18785 -> node18786 [label=<<font color="black">true</font>> color="black"]
    node18785 -> node18788 [label=<<font color="black">false</font>> color="black"]
    node18791_name [shape=none, label=<<font color="black">Call[18791]</font>>]
    node18791_name -> node18791 [arrowhead=none, color="black", style=dashed]
    node18791 [shape=cds, label=<<font color="black">%2 = clo&lt;HostCallJobCallback&gt;(handler, undefined, (new [argument])[#1246])</font>> color="black" fillcolor="white", style=filled]
    node18791 -> node18792 [color="black"]
    node18786_name [shape=none, label=<<font color="black">Call[18786]</font>>]
    node18786_name -> node18786 [arrowhead=none, color="black", style=dashed]
    node18786 [shape=cds, label=<<font color="black">%0 = clo&lt;NormalCompletion&gt;(argument)</font>> color="black" fillcolor="white", style=filled]
    node18786 -> node18787 [color="black"]
    node18788_name [shape=none, label=<<font color="black">Block[18788]</font>>]
    node18788_name -> node18788 [arrowhead=none, color="black", style=dashed]
    node18788 [shape=box, label=<<font color="black">[0] assert (= type ~Reject~)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18788 -> node18789 [color="black"]
    node18792_name [shape=none, label=<<font color="black">Call[18792]</font>>]
    node18792_name -> node18792 [arrowhead=none, color="black", style=dashed]
    node18792 [shape=cds, label=<<font color="black">%3 = clo&lt;Completion&gt;(%2)</font>> color="black" fillcolor="white", style=filled]
    node18792 -> node18793 [color="black"]
    node18787_name [shape=none, label=<<font color="black">Block[18787]</font>>]
    node18787_name -> node18787 [arrowhead=none, color="black", style=dashed]
    node18787 [shape=box, label=<<font color="black">[0] let handlerResult = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18787 -> node18794 [color="black"]
    node18789_name [shape=none, label=<<font color="black">Call[18789]</font>>]
    node18789_name -> node18789 [arrowhead=none, color="black", style=dashed]
    node18789 [shape=cds, label=<<font color="black">%1 = clo&lt;ThrowCompletion&gt;(argument)</font>> color="black" fillcolor="white", style=filled]
    node18789 -> node18790 [color="black"]
    node18793_name [shape=none, label=<<font color="black">Block[18793]</font>>]
    node18793_name -> node18793 [arrowhead=none, color="black", style=dashed]
    node18793 [shape=box, label=<<font color="black">[0] let handlerResult = %3<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18793 -> node18794 [color="black"]
    node18794_name [shape=none, label=<<font color="black">Branch[18794]</font>>]
    node18794_name -> node18794 [arrowhead=none, color="black", style=dashed]
    node18794 [shape=diamond, label=<<font color="black">(= promiseCapability undefined)</font>> color="black" fillcolor="white", style=filled]
    node18794 -> node18795 [label=<<font color="black">true</font>> color="black"]
    node18794 -> node18796 [label=<<font color="black">false</font>> color="black"]
    node18790_name [shape=none, label=<<font color="black">Block[18790]</font>>]
    node18790_name -> node18790 [arrowhead=none, color="black", style=dashed]
    node18790 [shape=box, label=<<font color="black">[0] let handlerResult = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18790 -> node18794 [color="black"]
    node18795_name [shape=none, label=<<font color="black">Block[18795]</font>>]
    node18795_name -> node18795 [arrowhead=none, color="black", style=dashed]
    node18795 [shape=box, label=<<font color="black">[0] assert (! (&amp;&amp; (comp? handlerResult) (! (= handlerResult.Type ~normal~))))<BR ALIGN="LEFT"/>[1] return ~empty~<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18795 -> cluster2576_exit [color="black"]
    node18796_name [shape=none, label=<<font color="black">Block[18796]</font>>]
    node18796_name -> node18796 [arrowhead=none, color="black", style=dashed]
    node18796 [shape=box, label=<<font color="black">[0] assert (? promiseCapability: &quot;PromiseCapabilityRecord&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18796 -> node18797 [color="black"]
    node18797_name [shape=none, label=<<font color="black">Branch[18797]</font>>]
    node18797_name -> node18797 [arrowhead=none, color="black", style=dashed]
    node18797 [shape=diamond, label=<<font color="black">(&amp;&amp; (comp? handlerResult) (! (= handlerResult.Type ~normal~)))</font>> color="black" fillcolor="white", style=filled]
    node18797 -> node18798 [label=<<font color="black">true</font>> color="black"]
    node18797 -> node18800 [label=<<font color="black">false</font>> color="black"]
    node18798_name [shape=none, label=<<font color="black">Call[18798]</font>>]
    node18798_name -> node18798 [arrowhead=none, color="black", style=dashed]
    node18798 [shape=cds, label=<<font color="black">%4 = clo&lt;Call&gt;(promiseCapability.Reject, undefined, (new [handlerResult.Value])[#1247])</font>> color="black" fillcolor="white", style=filled]
    node18798 -> node18799 [color="black"]
    node18800_name [shape=none, label=<<font color="black">Call[18800]</font>>]
    node18800_name -> node18800 [arrowhead=none, color="black", style=dashed]
    node18800 [shape=cds, label=<<font color="black">%5 = clo&lt;Call&gt;(promiseCapability.Resolve, undefined, (new [handlerResult.Value])[#1248])</font>> color="black" fillcolor="white", style=filled]
    node18800 -> node18801 [color="black"]
    node18799_name [shape=none, label=<<font color="black">Block[18799]</font>>]
    node18799_name -> node18799 [arrowhead=none, color="black", style=dashed]
    node18799 [shape=box, label=<<font color="black">[0] return [? %4]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18799 -> cluster2576_exit [color="black"]
    node18801_name [shape=none, label=<<font color="black">Block[18801]</font>>]
    node18801_name -> node18801 [arrowhead=none, color="black", style=dashed]
    node18801 [shape=box, label=<<font color="black">[0] return [? %5]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node18801 -> cluster2576_exit [color="black"]
  }
}