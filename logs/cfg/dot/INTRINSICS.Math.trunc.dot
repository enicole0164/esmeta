digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster2109 {
    label = "def <BUILTIN>:INTRINSICS.Math.trunc(this: ESValue, argumentsList: List[ESValue], NewTarget: Object | Undefined): Unknown"
    style = rounded
    cluster2109_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster2109_entry_name -> cluster2109_entry [arrowhead=none, color="black", style=dashed]
    cluster2109_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster2109_entry -> node12423 [color="black"]
    cluster2109_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster2109_exit_name -> cluster2109_exit [arrowhead=none, color="black", style=dashed]
    cluster2109_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node12423_name [shape=none, label=<<font color="black">Branch[12423]</font>>]
    node12423_name -> node12423 [arrowhead=none, color="black", style=dashed]
    node12423 [shape=diamond, label=<<font color="black">(&lt; 0 argumentsList.length)</font>> color="black" fillcolor="white", style=filled]
    node12423 -> node12424 [label=<<font color="black">true</font>> color="black"]
    node12423 -> node12425 [label=<<font color="black">false</font>> color="black"]
    node12424_name [shape=none, label=<<font color="black">Block[12424]</font>>]
    node12424_name -> node12424 [arrowhead=none, color="black", style=dashed]
    node12424 [shape=box, label=<<font color="black">[0] let x = (pop &lt; argumentsList)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12424 -> node12426 [color="black"]
    node12425_name [shape=none, label=<<font color="black">Block[12425]</font>>]
    node12425_name -> node12425 [arrowhead=none, color="black", style=dashed]
    node12425 [shape=box, label=<<font color="black">[0] let x = absent<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12425 -> node12426 [color="black"]
    node12426_name [shape=none, label=<<font color="black">Call[12426]</font>>]
    node12426_name -> node12426 [arrowhead=none, color="black", style=dashed]
    node12426 [shape=cds, label=<<font color="black">%0 = clo&lt;ToNumber&gt;(x)</font>> color="black" fillcolor="white", style=filled]
    node12426 -> node12427 [color="black"]
    node12427_name [shape=none, label=<<font color="black">Block[12427]</font>>]
    node12427_name -> node12427 [arrowhead=none, color="black", style=dashed]
    node12427 [shape=box, label=<<font color="black">[0] let n = [? %0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12427 -> node12428 [color="black"]
    node12428_name [shape=none, label=<<font color="black">Branch[12428]</font>>]
    node12428_name -> node12428 [arrowhead=none, color="black", style=dashed]
    node12428 [shape=diamond, label=<<font color="black">(|| (= n NaN) (|| (= n 0.0f) (|| (= n -0.0f) (|| (= n +INF) (= n -INF)))))</font>> color="black" fillcolor="white", style=filled]
    node12428 -> node12429 [label=<<font color="black">true</font>> color="black"]
    node12428 -> node12430 [label=<<font color="black">false</font>> color="black"]
    node12429_name [shape=none, label=<<font color="black">Block[12429]</font>>]
    node12429_name -> node12429 [arrowhead=none, color="black", style=dashed]
    node12429 [shape=box, label=<<font color="black">[0] return n<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12429 -> cluster2109_exit [color="black"]
    node12430_name [shape=none, label=<<font color="black">Branch[12430]</font>>]
    node12430_name -> node12430 [arrowhead=none, color="black", style=dashed]
    node12430 [shape=diamond, label=<<font color="black">(&amp;&amp; (&lt; n 1.0f) (&lt; 0.0f n))</font>> color="black" fillcolor="white", style=filled]
    node12430 -> node12431 [label=<<font color="black">true</font>> color="black"]
    node12430 -> node12432 [label=<<font color="black">false</font>> color="black"]
    node12431_name [shape=none, label=<<font color="black">Block[12431]</font>>]
    node12431_name -> node12431 [arrowhead=none, color="black", style=dashed]
    node12431 [shape=box, label=<<font color="black">[0] return 0.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12431 -> cluster2109_exit [color="black"]
    node12432_name [shape=none, label=<<font color="black">Branch[12432]</font>>]
    node12432_name -> node12432 [arrowhead=none, color="black", style=dashed]
    node12432 [shape=diamond, label=<<font color="black">(&amp;&amp; (&lt; n -0.0f) (&lt; -1.0f n))</font>> color="black" fillcolor="white", style=filled]
    node12432 -> node12433 [label=<<font color="black">true</font>> color="black"]
    node12432 -> node12434 [label=<<font color="black">false</font>> color="black"]
    node12433_name [shape=none, label=<<font color="black">Block[12433]</font>>]
    node12433_name -> node12433 [arrowhead=none, color="black", style=dashed]
    node12433 [shape=box, label=<<font color="black">[0] return -0.0f<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12433 -> cluster2109_exit [color="black"]
    node12434_name [shape=none, label=<<font color="black">Block[12434]</font>>]
    node12434_name -> node12434 [arrowhead=none, color="black", style=dashed]
    node12434 [shape=box, label=<<font color="black">[0] (yet &quot;Return the integral Number nearest _n_ in the direction of *+0*&lt;sub&gt;ùîΩ&lt;/sub&gt;.&quot;)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node12434 -> cluster2109_exit [color="black"]
  }
}