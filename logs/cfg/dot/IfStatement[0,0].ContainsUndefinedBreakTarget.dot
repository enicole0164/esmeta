digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster550 {
    label = "def <SYNTAX>:IfStatement[0,0].ContainsUndefinedBreakTarget(this: Ast:IfStatement[0,0], labelSet: Unknown): Boolean"
    style = rounded
    cluster550_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster550_entry_name -> cluster550_entry [arrowhead=none, color="black", style=dashed]
    cluster550_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster550_entry -> node2525 [color="black"]
    cluster550_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster550_exit_name -> cluster550_exit [arrowhead=none, color="black", style=dashed]
    cluster550_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2525_name [shape=none, label=<<font color="black">Call[2525]</font>>]
    node2525_name -> node2525 [arrowhead=none, color="black", style=dashed]
    node2525 [shape=cds, label=<<font color="black">%0 = this[1]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2525 -> node2526 [color="black"]
    node2526_name [shape=none, label=<<font color="black">Block[2526]</font>>]
    node2526_name -> node2526 [arrowhead=none, color="black", style=dashed]
    node2526 [shape=box, label=<<font color="black">[0] let hasUndefinedLabels = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2526 -> node2527 [color="black"]
    node2527_name [shape=none, label=<<font color="black">Branch[2527]</font>>]
    node2527_name -> node2527 [arrowhead=none, color="black", style=dashed]
    node2527 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white", style=filled]
    node2527 -> node2528 [label=<<font color="black">true</font>> color="black"]
    node2527 -> node2529 [label=<<font color="black">false</font>> color="black"]
    node2528_name [shape=none, label=<<font color="black">Block[2528]</font>>]
    node2528_name -> node2528 [arrowhead=none, color="black", style=dashed]
    node2528 [shape=box, label=<<font color="black">[0] return true<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2528 -> cluster550_exit [color="black"]
    node2529_name [shape=none, label=<<font color="black">Call[2529]</font>>]
    node2529_name -> node2529 [arrowhead=none, color="black", style=dashed]
    node2529 [shape=cds, label=<<font color="black">%1 = this[2]-&gt;ContainsUndefinedBreakTarget(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2529 -> node2530 [color="black"]
    node2530_name [shape=none, label=<<font color="black">Block[2530]</font>>]
    node2530_name -> node2530 [arrowhead=none, color="black", style=dashed]
    node2530 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2530 -> cluster550_exit [color="black"]
  }
}