digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster362 {
    label = "def <SYNTAX>:CaseBlock[1,0].VarDeclaredNames(this: Ast:CaseBlock[1,0]): List[String]"
    style = rounded
    cluster362_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster362_entry_name -> cluster362_entry [arrowhead=none, color="black", style=dashed]
    cluster362_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster362_entry -> node1968 [color="black"]
    cluster362_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster362_exit_name -> cluster362_exit [arrowhead=none, color="black", style=dashed]
    cluster362_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node1968_name [shape=none, label=<<font color="black">Branch[1968]</font>>]
    node1968_name -> node1968 [arrowhead=none, color="black", style=dashed]
    node1968 [shape=diamond, label=<<font color="black">(! (= this[0] absent))</font>> color="black" fillcolor="white", style=filled]
    node1968 -> node1969 [label=<<font color="black">true</font>> color="black"]
    node1968 -> node1971 [label=<<font color="black">false</font>> color="black"]
    node1969_name [shape=none, label=<<font color="black">Call[1969]</font>>]
    node1969_name -> node1969 [arrowhead=none, color="black", style=dashed]
    node1969 [shape=cds, label=<<font color="black">%0 = this[0]-&gt;VarDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1969 -> node1970 [color="black"]
    node1971_name [shape=none, label=<<font color="black">Block[1971]</font>>]
    node1971_name -> node1971 [arrowhead=none, color="black", style=dashed]
    node1971 [shape=box, label=<<font color="black">[0] let names1 = (new [])[#196]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1971 -> node1972 [color="black"]
    node1970_name [shape=none, label=<<font color="black">Block[1970]</font>>]
    node1970_name -> node1970 [arrowhead=none, color="black", style=dashed]
    node1970 [shape=box, label=<<font color="black">[0] let names1 = %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1970 -> node1972 [color="black"]
    node1972_name [shape=none, label=<<font color="black">Call[1972]</font>>]
    node1972_name -> node1972 [arrowhead=none, color="black", style=dashed]
    node1972 [shape=cds, label=<<font color="black">%1 = this[1]-&gt;VarDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1972 -> node1973 [color="black"]
    node1973_name [shape=none, label=<<font color="black">Block[1973]</font>>]
    node1973_name -> node1973 [arrowhead=none, color="black", style=dashed]
    node1973 [shape=box, label=<<font color="black">[0] let names2 = %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1973 -> node1974 [color="black"]
    node1974_name [shape=none, label=<<font color="black">Branch[1974]</font>>]
    node1974_name -> node1974 [arrowhead=none, color="black", style=dashed]
    node1974 [shape=diamond, label=<<font color="black">(! (= this[2] absent))</font>> color="black" fillcolor="white", style=filled]
    node1974 -> node1975 [label=<<font color="black">true</font>> color="black"]
    node1974 -> node1977 [label=<<font color="black">false</font>> color="black"]
    node1975_name [shape=none, label=<<font color="black">Call[1975]</font>>]
    node1975_name -> node1975 [arrowhead=none, color="black", style=dashed]
    node1975 [shape=cds, label=<<font color="black">%2 = this[2]-&gt;VarDeclaredNames()</font>> color="black" fillcolor="white", style=filled]
    node1975 -> node1976 [color="black"]
    node1977_name [shape=none, label=<<font color="black">Block[1977]</font>>]
    node1977_name -> node1977 [arrowhead=none, color="black", style=dashed]
    node1977 [shape=box, label=<<font color="black">[0] let names3 = (new [])[#197]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1977 -> node1978 [color="black"]
    node1976_name [shape=none, label=<<font color="black">Block[1976]</font>>]
    node1976_name -> node1976 [arrowhead=none, color="black", style=dashed]
    node1976 [shape=box, label=<<font color="black">[0] let names3 = %2<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1976 -> node1978 [color="black"]
    node1978_name [shape=none, label=<<font color="black">Block[1978]</font>>]
    node1978_name -> node1978 [arrowhead=none, color="black", style=dashed]
    node1978 [shape=box, label=<<font color="black">[0] return (list-concat names1 names2 names3)[#198]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node1978 -> cluster362_exit [color="black"]
  }
}