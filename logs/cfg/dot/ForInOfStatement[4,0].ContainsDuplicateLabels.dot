digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster512 {
    label = "def <SYNTAX>:ForInOfStatement[4,0].ContainsDuplicateLabels(this: Ast:ForInOfStatement[4,0], labelSet: Unknown): Boolean"
    style = rounded
    cluster512_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster512_entry_name -> cluster512_entry [arrowhead=none, color="black", style=dashed]
    cluster512_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster512_entry -> node2389 [color="black"]
    cluster512_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster512_exit_name -> cluster512_exit [arrowhead=none, color="black", style=dashed]
    cluster512_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node2389_name [shape=none, label=<<font color="black">Call[2389]</font>>]
    node2389_name -> node2389 [arrowhead=none, color="black", style=dashed]
    node2389 [shape=cds, label=<<font color="black">%0 = this[2]-&gt;ContainsDuplicateLabels(labelSet)</font>> color="black" fillcolor="white", style=filled]
    node2389 -> node2390 [color="black"]
    node2390_name [shape=none, label=<<font color="black">Block[2390]</font>>]
    node2390_name -> node2390 [arrowhead=none, color="black", style=dashed]
    node2390 [shape=box, label=<<font color="black">[0] return %0<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node2390 -> cluster512_exit [color="black"]
  }
}