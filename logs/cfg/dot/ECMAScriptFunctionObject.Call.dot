digraph {
  graph [fontname = "Consolas"]
  node [fontname = "Consolas"]
  edge [fontname = "Consolas"]
  subgraph cluster1076 {
    label = "def <INTERNAL>:ECMAScriptFunctionObject.Call(F: ECMAScriptFunctionObject, thisArgument: ESValue, argumentsList: List[ESValue]): Normal[ESValue] | Abrupt"
    style = rounded
    cluster1076_entry_name [shape=none, label=<<font color="black">Entry</font>>]
    cluster1076_entry_name -> cluster1076_entry [arrowhead=none, color="black", style=dashed]
    cluster1076_entry [shape=circle label=" " color="black" fillcolor="white" style=filled]
    cluster1076_entry -> node4227 [color="black"]
    cluster1076_exit_name [shape=none, label=<<font color="black">Exit</font>>]
    cluster1076_exit_name -> cluster1076_exit [arrowhead=none, color="black", style=dashed]
    cluster1076_exit [shape=circle label=" " color="black" fillcolor="white" style=filled]
    node4227_name [shape=none, label=<<font color="black">Block[4227]</font>>]
    node4227_name -> node4227 [arrowhead=none, color="black", style=dashed]
    node4227 [shape=box, label=<<font color="black">[0] let callerContext = @EXECUTION_STACK[0]<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4227 -> node4228 [color="black"]
    node4228_name [shape=none, label=<<font color="black">Call[4228]</font>>]
    node4228_name -> node4228 [arrowhead=none, color="black", style=dashed]
    node4228 [shape=cds, label=<<font color="black">%0 = clo&lt;PrepareForOrdinaryCall&gt;(F, undefined)</font>> color="black" fillcolor="white", style=filled]
    node4228 -> node4229 [color="black"]
    node4229_name [shape=none, label=<<font color="black">Block[4229]</font>>]
    node4229_name -> node4229 [arrowhead=none, color="black", style=dashed]
    node4229 [shape=box, label=<<font color="black">[0] let calleeContext = %0<BR ALIGN="LEFT"/>[1] assert (= calleeContext @EXECUTION_STACK[0])<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4229 -> node4230 [color="black"]
    node4230_name [shape=none, label=<<font color="black">Branch[4230]</font>>]
    node4230_name -> node4230 [arrowhead=none, color="black", style=dashed]
    node4230 [shape=diamond, label=<<font color="black">(= F.IsClassConstructor true)</font>> color="black" fillcolor="white", style=filled]
    node4230 -> node4231 [label=<<font color="black">true</font>> color="black"]
    node4230 -> node4234 [label=<<font color="black">false</font>> color="black"]
    node4231_name [shape=none, label=<<font color="black">Block[4231]</font>>]
    node4231_name -> node4231 [arrowhead=none, color="black", style=dashed]
    node4231 [shape=box, label=<<font color="black">[0] let error = (new OrdinaryObject(&quot;Prototype&quot; -&gt; @EXECUTION_STACK[0].Realm.Intrinsics[&quot;%TypeError.prototype%&quot;], &quot;ErrorData&quot; -&gt; undefined))[#417]<BR ALIGN="LEFT"/>[1] nop<BR ALIGN="LEFT"/>[2] (pop &lt; @EXECUTION_STACK)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4231 -> node4232 [color="black"]
    node4234_name [shape=none, label=<<font color="black">Call[4234]</font>>]
    node4234_name -> node4234 [arrowhead=none, color="black", style=dashed]
    node4234 [shape=cds, label=<<font color="black">%2 = clo&lt;OrdinaryCallBindThis&gt;(F, calleeContext, thisArgument)</font>> color="black" fillcolor="white", style=filled]
    node4234 -> node4235 [color="black"]
    node4232_name [shape=none, label=<<font color="black">Call[4232]</font>>]
    node4232_name -> node4232 [arrowhead=none, color="black", style=dashed]
    node4232 [shape=cds, label=<<font color="black">%1 = clo&lt;ThrowCompletion&gt;(error)</font>> color="black" fillcolor="white", style=filled]
    node4232 -> node4233 [color="black"]
    node4235_name [shape=none, label=<<font color="black">Call[4235]</font>>]
    node4235_name -> node4235 [arrowhead=none, color="black", style=dashed]
    node4235 [shape=cds, label=<<font color="black">%3 = clo&lt;OrdinaryCallEvaluateBody&gt;(F, argumentsList)</font>> color="black" fillcolor="white", style=filled]
    node4235 -> node4236 [color="black"]
    node4233_name [shape=none, label=<<font color="black">Block[4233]</font>>]
    node4233_name -> node4233 [arrowhead=none, color="black", style=dashed]
    node4233 [shape=box, label=<<font color="black">[0] return %1<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4233 -> cluster1076_exit [color="black"]
    node4236_name [shape=none, label=<<font color="black">Call[4236]</font>>]
    node4236_name -> node4236 [arrowhead=none, color="black", style=dashed]
    node4236 [shape=cds, label=<<font color="black">%4 = clo&lt;Completion&gt;(%3)</font>> color="black" fillcolor="white", style=filled]
    node4236 -> node4237 [color="black"]
    node4237_name [shape=none, label=<<font color="black">Block[4237]</font>>]
    node4237_name -> node4237 [arrowhead=none, color="black", style=dashed]
    node4237 [shape=box, label=<<font color="black">[0] let result = %4<BR ALIGN="LEFT"/>[1] (pop &lt; @EXECUTION_STACK)<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4237 -> node4238 [color="black"]
    node4238_name [shape=none, label=<<font color="black">Branch[4238]</font>>]
    node4238_name -> node4238 [arrowhead=none, color="black", style=dashed]
    node4238 [shape=diamond, label=<<font color="black">(= result.Type ~return~)</font>> color="black" fillcolor="white", style=filled]
    node4238 -> node4239 [label=<<font color="black">true</font>> color="black"]
    node4238 -> node4240 [label=<<font color="black">false</font>> color="black"]
    node4239_name [shape=none, label=<<font color="black">Block[4239]</font>>]
    node4239_name -> node4239 [arrowhead=none, color="black", style=dashed]
    node4239 [shape=box, label=<<font color="black">[0] return result.Value<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4239 -> cluster1076_exit [color="black"]
    node4240_name [shape=none, label=<<font color="black">Block[4240]</font>>]
    node4240_name -> node4240 [arrowhead=none, color="black", style=dashed]
    node4240 [shape=box, label=<<font color="black">[0] [? result]<BR ALIGN="LEFT"/>[1] return undefined<BR ALIGN="LEFT"/></font>> color="black" fillcolor="white", style=filled]
    node4240 -> cluster1076_exit [color="black"]
  }
}