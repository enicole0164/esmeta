"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } try { } finally { } throw new Test262Error ( message ) ; } var x ; assert . sameValue = async function ( ) { ; { } } ; ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) { x : throw 0 ; return ; } if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { 0 , 0 ; return ; } 0 ; throw new Test262Error ( message ) ; } ; assert . _toString = { unicode : 0 } ; function Test262Error ( message ) { this . message = message || "" ; } x => 0 ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function * x ( ) { } var arr = new Array ( 10 ) ; assert . throws ( TypeError , function ( ) { arr . reduce ( ) ; } ) ; 
