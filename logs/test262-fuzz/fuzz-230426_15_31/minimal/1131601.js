"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message ) { ; } throw new Test262Error ( message ) ; } x : ; assert . sameValue = async x => 0 ; assert . notSameValue = `` ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) debugger ; if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { ; } { } throw new Test262Error ( message ) ; } ; assert . _toString = class { } ; function Test262Error ( message ) { this . message = message || "" ; } ( message ) => { throw new Test262Error ( message ) ; } ; class x { } var s = Symbol ( 'foo' ) ; assert . throws ( TypeError , function ( ) { 'foo' . normalize ( s ) ; } ) ; 
