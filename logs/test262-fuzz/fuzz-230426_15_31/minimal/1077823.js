"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } try { } catch { } finally { } throw Test262Error ; } assert . _isSameValue = this ; assert . sameValue = class { } ; { } assert . throws = 0 ?? 0 ?? 0 ; assert . _toString = function ( value ) { ; } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = { index : false } ; 0 ; class x { } var s = new WeakSet ( ) ; assert . sameValue ( s . has ( { x , } ) , false ) ; assert . sameValue ( s . has ( '' ) , false ) ; assert ( s . has ( null ) , false ) ; x : ; assert . sameValue ( s . has ( true ) , false ) ; assert . sameValue ( s . has ( Symbol ( ) ) ) ; 
