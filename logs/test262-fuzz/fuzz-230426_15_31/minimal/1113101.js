"use strict";
function assert ( mustBeTrue ) { if ( mustBeTrue ) { return ; } if ( message === undefined ) { 'Expected true but got ' ; } throw Test262Error ; } 0 ? 0 : 0 ; ; assert . notSameValue = class { } ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; var x ; if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { if ( typeof thrown !== 'object' || thrown === null ) return ; else return 0 ; return ; } x : ; throw new Test262Error ( message ) ; } ; assert . _toString = function ( value ) { throw 0 ; } ; function Test262Error ( message ) { this . message = message || "" ; } try { } catch { } finally { } ( message ) => { throw new Test262Error ( message ) ; } ; let x ; assert . throws ( TypeError , function ( ) { Promise . all . call ( eval ) ; } ) ; 
