"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = function ( a , b ) { if ( a === b ) { return a !== 0 || 1 / a === 1 / b ; } return a !== a && b ; } ; 0 | 0 ; assert . notSameValue = function * ( ) { } ; assert . throws = { 1 : null } ; assert . _toString = function * ( ) { } ; function Test262Error ( message ) { this . message = message ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var __obj = { toString : function ( ) { } } ; if ( String ( __obj ) . slice ( - 4 , void 0 ) ) { throw async x => 0 ; } 
