"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = null ; { function await ( ... x ) { } } x => 0 ; assert . throws = function ( ) { } ; assert . _toString = function ( value ) { { ; } } ; function Test262Error ( message ) { this . message = message || "" ; } var x ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } assert . sameValue ( Object . is ( NaN , NaN ) , true , "`Object.is(NaN, NaN)` returns `true`" ) ; assert . sameValue ( Object . is ( - 0 , - 0 ) , true , "`Object.is(-0, -0)` returns `true`" ) ; throw 0 ; assert . sameValue ( Object . is ( 0 , 0 ) , true , "`Object.is(0, 0)` returns `true`" ) ; 
