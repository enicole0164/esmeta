"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } ; throw new Test262Error ( message ) ; } assert . _isSameValue = 0 ? 0 : async x => 0 ; assert . sameValue = function ( actual , expected , message ) { try { if ( assert . _isSameValue ( actual , expected ) ) { return ; } } catch ( error ) { throw new Test262Error ( message + ' (_isSameValue operation threw) ' + error ) ; return ; } if ( message === undefined ) { message = '' ; } else { message += ' ' ; } throw 0 ; throw new Test262Error ( message ) ; } ; { } ; switch ( 0 ) { } function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; switch ( 0 ) { default : } function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var s = new WeakSet ( ) ; assert . sameValue ( s . delete ( x => 0 ) , false ) ; assert . sameValue ( s . delete ( '' ) , false ) ; assert . sameValue ( s . delete ( null ) , false ) ; assert . sameValue ( s . delete ( undefined ) , false ) ; assert . sameValue ( s . delete ( true ) , false ) ; assert . sameValue ( s . delete ( Symbol ( ) ) , false ) ; 
