"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } debugger ; throw new Test262Error ( message ) ; } assert . _isSameValue = { get : true } ; assert . sameValue = 0 || 0 && 0 | 0 ; assert . notSameValue = { has : async function ( x ) { } } ; { } function Test262Error ( message ) { this . message = message || "" ; } Test262Error . toString = function ( ) { return "Test262Error: " + this ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; let x ; var errObj = new Error ( "ErrorMessage" ) ; errObj . name = "" ; assert . sameValue ( errObj . toString ( ) , "ErrorMessage" , 'errObj.toString()' ) ; 
