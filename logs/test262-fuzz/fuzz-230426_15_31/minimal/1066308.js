"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { { } } throw Test262Error ; } ; assert . sameValue = async x => 0 ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; throw 0 ; if ( message ) { '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { if ( typeof thrown !== 'object' || thrown === null ) { message += 'Thrown value was not an object!' ; throw new Test262Error ( message ) ; } else var x ; } ; throw new Test262Error ( message ) ; } ; assert . _toString = function ( value ) { ; } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . toString = { sticky : function * ( x ) { } } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var i = 0 ; var bits = { valueOf ( ) { assert . sameValue ( i , 0 ) ; i ++ ; return 0 ; } } ; var bigint = { valueOf ( ) { assert . sameValue ( i , 1 ) ; i ++ ; 0 ; } } ; BigInt . asIntN ( bits ) ; 
