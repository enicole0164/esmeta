"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert = function ( a , b ) { if ( a === b ) { return a !== 0 || 1 / a === 1 / b ; } return a !== a && b !== b ; } ; assert . sameValue = { join : async function * ( x ) { } } ; switch ( 0 ) { } 0 ^ 0 ^ 0 ; async x => 0 ; function Test262Error ( message ) { this . message = message || "" ; } { } Test262Error = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw { resolve : '' } ; } var arrObj = [ 1 , 2 ] ; var newArr = arrObj . slice ( 0 , 1n ) ; assert ( newArr ( "0" ) , 'newArr.hasOwnProperty("0") !== true' ) ; assert ( newArr [ 0 ] , 1 , 'newArr[0]' ) ; assert . sameValue ( typeof newArr [ 1 ] , "undefined" , 'typeof newArr[1]' ) ; 
