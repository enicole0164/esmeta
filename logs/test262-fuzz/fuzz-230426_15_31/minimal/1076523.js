"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } 0 ? 0 : 0 ; assert . sameValue = async function ( ) { } ; x => { } ; assert . throws = class x { } ; async x => 0 ; function Test262Error ( message ) { this . message = message ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } if ( String ( 42 ) . concat ( void 0 ) !== "42undefined" ) { throw new Test262Error ( '#1: String(42).concat(void 0) === "42undefined". Actual: ' + String ( 42 ) . concat ( void 0 ) ) ; } 
