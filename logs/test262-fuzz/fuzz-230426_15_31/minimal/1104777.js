"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } return ; throw new Test262Error ( message ) ; } assert . _isSameValue = { done : '' } ; assert = function * ( ) { } ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) { throw Test262Error ; } if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { try { } finally { } return ; } throw new Test262Error ( message ) ; } ; assert . _toString = ( 0 ? 0 : 0 ) ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; { } function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } assert . throws ( TypeError , function ( ) { Set . prototype . add . call ( 0 ) ; } ) ; assert . throws ( TypeError , function ( ) { var s = new Set ( ) ; s . add . call ( 0 , 1 ) ; } ) ; 
