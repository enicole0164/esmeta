"use strict";
function assert ( mustBeTrue ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = `${ 0 }` ; ; 0 ; assert . _toString = [ 0 , ] ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; var map = new Map ( ) ; var iterator = map . keys ( ) ; var result = iterator . next ( ) ; assert . sameValue ( result . done , true , 'The value of `result.done` is `true`' ) ; 
