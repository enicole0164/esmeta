"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } if ( 0 ) ; assert . sameValue = function * ( ) { } ; x => 0 ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( message === undefined ) { message = '' ; } else { ' ' ; } try { func ( ) ; } catch ( thrown ) { if ( thrown !== 'object' || thrown === null ) { message += 'Thrown value was not an object!' ; } else try { } catch { } return ; } return 0 ; throw new Test262Error ( message ) ; } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } assert . throws ( TypeError , function ( ) { for ( const i = 0 ; i < 1 ; i ++ ) { } } ) ; 
