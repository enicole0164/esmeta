"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } try { } catch { } finally { } ; assert . notSameValue = this ; assert . throws = function ( ) { } ; assert . _toString = function * ( ) { } ; function Test262Error ( message ) { this . message = message || "" ; } { } Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var __obj = { toString : [ 0 , ] } ; var __obj2 = { valueOf : function ( ) { throw "intointeger" ; } } ; var __str = "ABB\u0041BABAB" ; try { var x = __str . lastIndexOf ( __obj , __obj2 ) ; throw new Test262Error ( '#1: var x = __str.lastIndexOf(__obj, __obj2) lead to throwing exception' ) ; } catch ( e ) { if ( e !== "intointeger" ) { throw new Test262Error ( '#1.1: Exception === "intointeger". Actual: ' + e ) ; } } 
