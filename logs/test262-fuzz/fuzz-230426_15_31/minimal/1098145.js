"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } { } throw new Test262Error ( message ) ; } x => 0 ; assert . sameValue = function ( ) { } ; assert . notSameValue = 0 ? 0 : 0 ; assert . throws = { message : async function ( x ) { } } ; ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var sym = Symbol ( ) ; assert . sameValue ( Boolean ( sym ) . valueOf ( ) , true , "`Boolean(sym).valueOf()` returns `true`" ) ; 
