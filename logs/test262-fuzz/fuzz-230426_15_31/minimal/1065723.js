"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } ; throw new Test262Error ( message ) ; } x => { } ; assert . sameValue = `${ 0 }` ; { } assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; { } if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { return ; return ; } throw 0 ; throw new Test262Error ( message ) ; } ; async x => 0 ; function Test262Error ( message ) { this . message = message || "" ; } ; Test262Error . thrower = ( message ) => { if ( 0 ) ; } ; let x ; var A = class { } ; var arr = [ 1 ] ; arr . constructor = { } ; switch ( 0 ) { } assert . throws ( TypeError , function ( ) { arr . flat ( `${ 0 }` ) ; } ) ; 
