"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue ) { return ; } ; throw new Test262Error ( message ) ; } assert . _isSameValue = { add : function ( x ) { } } ; assert . sameValue = x => 0 ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName ; { } if ( message === undefined ) { '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { if ( typeof thrown !== 'object' || thrown === null ) { message += 'Thrown value was not an object!' ; throw new Test262Error ( message ) ; } else if ( thrown . constructor !== expectedErrorConstructor ) return 0 ; return ; } 0 ; throw new Test262Error ( message ) ; } ; function Test262Error ( message ) { this . message = message ; } Test262Error . prototype . toString = function ( ) { ; } ; function callbackfn ( prevVal , curVal , idx , obj ) { } var arr = new Array ( 10 ) ; assert . throws ( TypeError , function ( ) { arr . reduceRight ( callbackfn ) ; } ) ; 
