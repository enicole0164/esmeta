"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } 0 ; throw new Test262Error ( message ) ; } try { } catch { } finally { } assert . sameValue = function * ( ) { } ; 0 ; assert . throws = { 1 : null } ; assert . _toString = async function * ( ) { } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var valueOf = String . prototype . valueOf ; assert . sameValue ( 'str' . valueOf ( ) , 'str' ) ; assert . sameValue ( valueOf . call ( this ) , '' ) ; 
