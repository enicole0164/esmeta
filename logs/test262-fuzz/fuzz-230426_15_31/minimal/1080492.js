"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { async x => 0 ; } throw new Test262Error ( message ) ; } assert . _isSameValue = { get : async function * ( x ) { } } ; x => 0 ; assert . notSameValue = 0 ; assert . throws = async function * x ( ) { } ; assert . _toString = async function ( ) { } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; if ( 0 ) ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var m = new Map ( [ [ 1 , 1 ] , [ 1 , 2 ] , [ 3 , 3 ] ] ) ; var e = m . entries ( ) ; e . next ( ) ; m . clear ( ) ; var n = e . next ( ) ; assert . sameValue ( n . value , undefined ) ; assert . sameValue ( n . done , true ) ; 
