"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } ; assert . notSameValue = function * ( ) { } ; assert . _toString = function ( value ) { ; } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; try { new Array ( - 1 ) ; } catch ( e ) { assert . sameValue ( e , true , '' ) ; } try { new Array ( 4294967296 ) ; throw new Test262Error ( '#2.1: new Array(4294967296) throw RangeError. Actual: ' + ( new Array ( 4294967296 ) ) ) ; } catch ( e ) { debugger ; } throw 0 ; 
