"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } var x , x ; throw new Test262Error ( message ) ; } assert . _isSameValue = { enumerable : '' } ; 0 ? 0 ?? 0 : 0 ; assert . notSameValue = { sticky : 0 } ; assert . throws = { enumerable : true } ; do ; while ( 0 ) ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = x => 0 ; 0 , 0 ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } const a = { b ( ) { return this . _b ; } , _b : { c : 42 } } ; assert . sameValue ( a ?. b ( ) . c , 42 ) ; assert . sameValue ( ( a ?. b ) ( ) . c , 42 ) ; assert . sameValue ( a . b ?. ( ) . c , 42 ) ; assert . sameValue ( ( a . b ) ?. ( ) . c , 42 ) ; assert . sameValue ( a ?. b ?. ( ) . c , 42 ) ; assert . sameValue ( ( a ?. b ) ?. ( ) . c , 42 ) ; 
