"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } throw new Test262Error ( message ) ; } assert . _isSameValue = `${ 0 }` ; assert . sameValue = { preventExtensions : async function * ( x ) { } } ; 0 ; try { } finally { } assert . _toString = this ; function Test262Error ( message ) { this . message = message || "" ; } var x , x ; function $DONOTEVALUATE ( ) { throw this ; } var descriptor = Object . getOwnPropertyDescriptor ( this . prototype , 'size' ) ; var map = new Map ( ) ; descriptor . get . call ( map ) ; assert . throws ( TypeError , function ( ) { descriptor . get . call ( [ ] ) ; } ) ; 
