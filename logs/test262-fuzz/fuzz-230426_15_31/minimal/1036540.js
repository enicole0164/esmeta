"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } throw new Test262Error ( message ) ; } assert = function ( a , b ) { if ( a === b ) { } return a !== a && b !== b ; } ; 0 ; var x , x ; assert . _toString = function ( value ) { x : ; } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var base = + Infinity ; var exponents = [ ] ; exponents [ 0 ] = - Infinity ; exponents [ 1 ] = - 1.7976931348623157E308 ; exponents [ 2 ] = - 1 ; exponents [ 3 ] = - 0.000000000000001 ; for ( var i = 0 ; i < exponents . length ; i ++ ) { if ( ( base ** exponents [ i ] ) !== + 0 ) { ; } } 
