"use strict";
function assert ( mustBeTrue ) { if ( mustBeTrue === true ) { return ; } debugger ; throw new Test262Error ( message ) ; } assert = { [ Symbol ] : '' } ; if ( 0 ) ; var x ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = { multiline : true } ; function $DONOTEVALUATE ( ) { ; } var obj = { } ; var returnVal = { } ; var callCount = 0 ; var thisVal , args ; obj [ Symbol . match ] = async function ( ) { } ; assert ( '' . match ( obj ) , returnVal ) ; assert ( callCount , 1 , 'Invokes the method exactly once' ) ; assert . sameValue ( thisVal , obj ) ; assert . notSameValue ( args , undefined ) ; assert . sameValue ( args [ 0 ] , '' ) ; 
