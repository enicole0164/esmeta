"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( async x => 0 ) ; else ; throw new Test262Error ( message ) ; } try { } catch { } finally { } assert . sameValue = async function x ( ) { } ; assert . notSameValue = async function * ( ) { } ; assert . throws = `${ 0 }` ; while ( 0 ) if ( 0 , 0 ) ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = 0 ; { } function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var __instance = new Object ( true ) ; __instance . lastIndexOf = String . prototype . lastIndexOf ; if ( __instance . lastIndexOf ( true , false ) !== 0 ) { throw 0 ; } 
