"use strict";
function assert ( mustBeTrue ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert = async function * ( ) { } ; assert = { [ Symbol . replace ] : async function ( x ) { } } ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) x : ; if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { if ( typeof thrown !== 'object' || thrown ) { 'Thrown value was not an object!' ; throw Test262Error ; } else 0 , 0 ; return ; } async x => 0 ; throw new Test262Error ( message ) ; } ; { } function Test262Error ( message ) { this . message = message || "" ; } async x => 0 ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw { dotAll : function * ( x ) { } } ; } assert . throws ( TypeError , function ( ) { Array . prototype . map . call ( null ) ; } ) ; 
