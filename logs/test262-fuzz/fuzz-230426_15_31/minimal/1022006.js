"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) 0 ; throw new Test262Error ( message ) ; } assert . _isSameValue = 0 ; assert . sameValue = '' ; assert . notSameValue = `` ; assert . throws = { flags : 0 } ; assert . _toString = this ; function Test262Error ( message ) { this . message = message || "" ; } { } Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { { } } class await { } class x { } var createBadPromise = false ; var object = { } ; class P extends Promise { constructor ( executor ) { { } return super ( super . x &&= 0 ) ; } } var p = P . resolve ( object ) ; createBadPromise = true ; var q = p . then ( ) ; createBadPromise = false ; for ( let x of 0 ) ; 
