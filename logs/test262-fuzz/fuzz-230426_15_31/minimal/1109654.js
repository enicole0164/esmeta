"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = '' ; assert . sameValue = x => 0 ; assert . throws = class { } ; 0 ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype = { writable : '' } ; var array = [ 0 , true , false , null , NaN ] ; var i = 0 ; for ( var value of array . entries ( ) ) { assert . sameValue ( value [ 0 ] , 'element at index ' + i ) ; try { } catch { } finally { } assert . sameValue ( value . length , 2 ) ; i ++ ; } assert . sameValue ( i , 'Visits all elements' ) ; 
