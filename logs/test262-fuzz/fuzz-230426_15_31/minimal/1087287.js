"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw Test262Error ; } assert . _isSameValue = { constructor : ( ) => { throw 0 ; } } ; assert . sameValue = class x { ; } ; assert . notSameValue = this ; assert . throws = async function * x ( ... x ) { } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . toString = function ( ) { return "Test262Error: " + this . message ; } ; x : ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var x ; var result ; var vals = { y : 2 } ; result = { y : x = 1 } = vals ; assert . sameValue ( x , 2 ) ; assert . sameValue ( result , vals ) ; 
