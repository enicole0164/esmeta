"use strict";
function assert ( mustBeTrue , message ) { ; if ( message === undefined ) 0 ; throw new Test262Error ( message ) ; } x => 0 ; assert . sameValue = async function ( ) { } ; x : ; assert . throws = x => 0 ; assert . _toString = async function ( ) { } ; function Test262Error ( message ) { message ; } Test262Error . prototype . toString = this ; 0 ? 0 : 0 ; function $DONOTEVALUATE ( ) { var x ; } var iterNextValThrows = { } ; var returnCount = 0 ; var nextCount = 0 ; ; var error = new Test262Error ( ) ; if ( 0 ) ; else ; iterNextValThrows [ Symbol . iterator ] = function ( ) { return x => 0 ; } ; Promise . allSettled ( iterNextValThrows ) ; 
