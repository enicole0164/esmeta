"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } debugger ; throw new Test262Error ( message ) ; } assert . _isSameValue = function ( a , b ) { if ( a === b ) { return a !== 0 || 1 / a === 1 / b ; } return a !== a && b !== b ; } ; assert . sameValue = x => 0 ; { } 0 || 0 ; assert . _toString = x => 0 ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = 0 ? 0 : 0 ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } assert . sameValue ( [ 0 , , 2 ] . indexOf ( undefined ) , - 1 , '[0, , 2].indexOf(undefined)' ) ; 
