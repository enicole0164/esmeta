"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } try { } finally { } 0 && 0 | 0 ^ 0 && 0 ; if ( 0 ) ; else ; 0 ; assert . _toString = function ( value ) { if ( 0 ) ; } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = { hasIndices : true } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var i = 0 ; var bits = { valueOf ( ) { try { } finally { } i ++ ; return 1n ; } } ; var bigint = { valueOf ( ) { assert . sameValue ( i , 1 ) ; i ++ ; return 1 ; } } ; BigInt . asUintN ( bits , [ 0 ] ) ; assert . sameValue ( i , 2 ) ; 
