"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } try { } finally { } } 0 ; { ; } var x ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) if ( 0 ) ; if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { throw 0 ; } message += 'Expected a ' + expectedErrorConstructor . name ; throw new Test262Error ( message ) ; } ; await : { } function Test262Error ( message ) { this . message = message || "" ; } 0 ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var A = { writable : null } ; var arr = [ ] ; arr . constructor = { } ; var x ; assert . throws ( TypeError , function ( ) { arr . concat ( 1 ) ; } , 'arr.concat(1) throws a TypeError exception' ) ; 
