"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = this ; ; assert . notSameValue = 0 ? 0 : 0 ; assert . throws = this ; assert . _toString = function ( value ) { await : ; } ; function Test262Error ( message ) { this . message = message || "" ; } var x ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } class C { #f = 'Test262' ; method ( o ) { return o ?. ( ) . #f ; } } let c = new C ( ) ; let o = { c : c } ; assert . sameValue ( c . method ( o ) , 'Test262' ) ; assert . sameValue ( c . method ( null ) , undefined ) ; assert . sameValue ( c . method ( undefined ) , undefined ) ; o = { c : new Object ( ) } ; 0 ?? 0 ; 
