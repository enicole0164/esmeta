"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) throw 0 ; throw new Test262Error ( message ) ; } ; try { } catch { } assert . notSameValue = { name : function ( x ) { } } ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) debugger ; if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { ; return 0 , 0 ? delete 0 : 0 ; } 0 ; } ; assert . _toString = function * ( ) { } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = { exec : '' } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var Base = function ( ) { } . bind ( ) ; assert . throws ( TypeError , function ( ) { class C extends Base { } } ) ; 
