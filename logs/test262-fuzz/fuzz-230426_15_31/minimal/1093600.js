"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } throw 0 ; throw new Test262Error ( message ) ; } 0 ; assert . sameValue = function * ( ) { } ; var x ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) ; var x ; try { func ( ) ; } catch ( thrown ) { try { } finally { } return ; } await => 0 ; throw new Test262Error ( message ) ; } ; 0 ; function Test262Error ( message ) { this . message = message || "" ; } if ( 0 ) ; for ( var x in 0 ) ; function $DONOTEVALUATE ( ) { x : ; } 0 ; 0 , 0 , 0 ; x : ; assert . throws ( TypeError , function ( ) { [ ] . flat . call ( void 0 ) ; } , 'undefined' ) ; 
