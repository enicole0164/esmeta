"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } { } throw new Test262Error ( message ) ; } assert . _isSameValue = function ( a , b ) { if ( a === b ) { return a !== 0 ; } return a !== a && b !== b ; } ; assert = x => 0 ; 0 || 0 ? 0 : 0 ; { } x : ; function Test262Error ( message ) { message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var s = new Set ( [ 0 , undefined , 0 ?? 0 | 0 , null , "" , Symbol ( ) ] ) ; assert . sameValue ( s . size , 7 , "The value of `s.size` is `7`" ) ; 
