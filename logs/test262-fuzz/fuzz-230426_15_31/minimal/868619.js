"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } var x ; throw new Test262Error ( message ) ; } assert . _isSameValue = '' ; assert . sameValue = this ; assert . notSameValue = async x => 0 ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) { throw new Test262Error ( 'assert.throws requires two arguments: the error constructor ' + 'and a function to run' ) ; return ; } if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { { } return ; } message += 0 ? 0 : 0 ; throw new Test262Error ( message ) ; } ; assert . _toString = function ( value ) { var x ; } ; function Test262Error ( message ) { this . message = message || "" ; } x => 0 ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var arr = new Array ( 10 ) ; assert . throws ( TypeError , function ( ) { arr . map ( ) ; } ) ; 
