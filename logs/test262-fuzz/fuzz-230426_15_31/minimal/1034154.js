"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = function ( a , b ) { if ( a === b ) { return a !== 0 ; } return a !== a && b !== b ; } ; 0 ? 0 : 0 ; x => { } ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; x : ; try { func ( ) ; } catch ( thrown ) { { } return ; } message += 'Expected a ' + expectedErrorConstructor . name + ' to be thrown but no exception was thrown at all' ; } ; x => 0 ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } assert . throws ( TypeError , function ( ) { String . prototype . startsWith . call ( null , '' ) ; } ) ; 
