"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } x : ; throw new Test262Error ( message ) ; } x => 0 ; assert . sameValue = 0 ? 0 : 0 ; { } assert . throws = async function * x ( ) { } ; assert . _toString = { } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = { sticky : '' } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var expectedThis = { } ; if ( 0 ) ; else ; var map = new Map ( ) ; map . set ( 0 , 0 ) ; map . set ( 1 , 1 ) ; map . set ( 2 , 2 ) ; var callback = function ( ) { _this . push ( this ) ; } ; map . forEach ( callback , expectedThis ) ; assert . sameValue ( _this [ 0 ] , expectedThis ) ; assert . sameValue ( _this [ 1 ] , expectedThis ) ; assert . sameValue ( _this [ 2 ] , expectedThis ) ; 
