"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } x => 0 ; assert . sameValue = `${ 0 }` ; x => 0 ; { } assert . _toString = function ( value ) { throw 0 , 0 ; } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var thisVal = { } ; var accessor = Object . getOwnPropertyDescriptor ( Set , Symbol . species ) . get ; assert . sameValue ( accessor . call ( thisVal ) , thisVal ) ; 
