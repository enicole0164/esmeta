"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } var x ; throw new Test262Error ( message ) ; } { } { } x : ; try { } catch { } assert . _toString = function ( value ) { return ; } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var base = + Infinity ; var exponents = [ ] ; exponents [ 3 ] = Infinity ; exponents [ 2 ] = 1.7976931348623157E308 ; exponents [ 1 ] = 1 ; exponents [ 0 ] = 0.000000000000001 ; for ( var i = 0 ; i < exponents . length ; i ++ ) { if ( base ** exponents [ i ] !== + Infinity ) { throw new Test262Error ( "(" + base + " ** " + exponents [ i ] + ") !== +Infinity" ) ; } } 
