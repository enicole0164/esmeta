"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) ; throw new Test262Error ( message ) ; } assert . _isSameValue = async x => 0 ; assert . sameValue = [ 0 , ] ; { ; } assert . throws = [ 0 , 0 , ] ; assert . _toString = true ; function Test262Error ( message ) { this . message = message || "" ; } x => 0 ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; let x ; assert . sameValue ( Object ( Symbol . toPrimitive ) [ Symbol . toPrimitive ] ( ) , Symbol . toPrimitive ) ; 
