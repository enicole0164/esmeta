"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = class { } ; 0 ? 0 : 0 ; 0 ? x => 0 : 0 ; { } assert . _toString = function ( value ) { x : ; } ; function Test262Error ( message ) { this . message = message || "" ; } try { } finally { } Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var s = new Set ( ) ; assert . sameValue ( s . delete ( 1 ) , false , "`s.delete(1)` returns `false`" ) ; 
