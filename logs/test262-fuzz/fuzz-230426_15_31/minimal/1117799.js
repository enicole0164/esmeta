"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } { } throw new Test262Error ( message ) ; } 0 > 0 >>> 0 ; { ; } assert . notSameValue = this ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) debugger ; if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { x : ; return ; } debugger ; throw new Test262Error ( message ) ; } ; assert . _toString = function ( value ) { x : ; } ; function Test262Error ( message ) { this . message = message || "" ; } 0 | 0 ; if ( 0 ) ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var poisonedPrototypeLength = function ( ) { } ; var items = { } ; Object . defineProperty ( poisonedPrototypeLength . prototype , 'length' , { set : function ( _ ) { throw new Test262Error ( ) ; } } ) ; items [ Symbol . iterator ] = function ( ) { return this ; } ; assert . throws ( Test262Error , function ( ) { Array . from . call ( poisonedPrototypeLength , items ) ; } , 'Array.from.call(poisonedPrototypeLength, items) throws a Test262Error exception' ) ; 
