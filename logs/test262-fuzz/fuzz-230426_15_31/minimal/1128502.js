"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } var x ; throw Test262Error ; } assert = function ( a , b ) { if ( a === b ) { return a !== 0 ; } return a !== a ; } ; 0 ; assert . notSameValue = async function * ( ) { } ; assert . throws = function ( expectedErrorConstructor , func ) { var expectedName ; if ( typeof func !== "function" ) { while ( 0 ) ; return ; } try { func ( ) ; } catch ( thrown ) { do ; while ( 0 ) ; return ; } if ( 0 ) ; else ; throw new Test262Error ( message ) ; } ; 0 ? 0 : 0 ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . toString = function ( ) { return "Test262Error: " + this ; } ; 0 ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var s = Symbol ( 1 ) ; assert . throws ( TypeError , function ( ) { isFinite ( s ) ; } ) ; 
