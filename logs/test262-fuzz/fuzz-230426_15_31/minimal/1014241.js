"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } x : ; throw new Test262Error ( message ) ; } x => 0 ; assert . sameValue = function x ( ) { } ; assert . notSameValue = { } ; if ( 0 ) ; else ; do ; while ( 0 ) ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { { } } var array = [ 127 , 4 , 8 , 16 , 32 , 64 , 128 ] ; var arrayIndex = - 1 ; function mapFn ( value , index ) { arrayIndex ++ ; if ( index + 1 < array . length ) { array [ index + 1 ] = 127 ; } '' . sameValue ( value , 127 , 'The value of value is expected to be 127' ) ; { } return value ; } var a = Array . from ( array , mapFn ) ; x => 0 ; ; 
