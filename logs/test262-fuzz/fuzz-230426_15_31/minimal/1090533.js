"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } { } throw new Test262Error ( message ) ; } assert . _isSameValue = 0 && 0 ; assert . sameValue = function ( ) { } ; assert . notSameValue = [ 0 , , ] ; ; assert . _toString = true ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; let x ; function fakeObjectGetOwnPropertyDescriptor ( ) { throw new Test262Error ( 'The overriden version of Object.getOwnPropertyDescriptor was called!' ) ; } Object . getOwnPropertyDescriptor = fakeObjectGetOwnPropertyDescriptor ; assert . sameValue ( Object . getOwnPropertyDescriptor , fakeObjectGetOwnPropertyDescriptor , null ) ; assert . sameValue ( Object . keys ( Object . getOwnPropertyDescriptors ( { a : 1 } ) ) . length , 1 , 'Expected object with 1 key to have 1 descriptor' ) ; 
