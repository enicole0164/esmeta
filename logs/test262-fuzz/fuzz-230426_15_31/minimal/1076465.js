"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } 0 || 0 ? 0 : 0 ; assert . sameValue = this ; var x ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) return 0 ; if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { throw 0 ; return ; } x : ; throw new Test262Error ( message ) ; } ; switch ( 0 ) { } function Test262Error ( message ) { this . message = message || "" ; } x : ; try { } catch { } function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var count = 0 ; var iterable = { } ; function MyError ( ) { } iterable [ Symbol . iterator ] = function ( ) { return { ownKeys : false } ; } ; assert . throws ( MyError , function ( ) { new Set ( iterable ) ; } ) ; 
