"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } 0 ; assert . sameValue = { } ; assert . notSameValue = { sticky : ( ) => { throw 0 ; } } ; assert . throws = x => 0 ; ; function Test262Error ( message ) { this . message = message || "" ; } { } Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var foo = { } ; var map = new WeakMap ( [ [ foo , 42 ] ] ) ; var result = map . delete ( 0 ?? 0 ) ; assert . sameValue ( map . has ( foo ) , false ) ; assert . sameValue ( result , true , 'WeakMap#delete returns true' ) ; 
