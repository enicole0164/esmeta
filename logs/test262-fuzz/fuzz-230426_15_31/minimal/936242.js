"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } x : ; 0 ; assert . notSameValue = { defineProperty : async function * ( x ) { } } ; ; ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var arr = [ , , , ] ; try { Array . prototype [ 1 ] = "prototype" ; arr . reduceRight ( function ( ) { } ) ; } finally { delete Array . prototype [ 1 ] ; } 
