"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw Test262Error ; } 0 ; assert = class { } ; assert . notSameValue = function * ( ) { } ; 0 && 0 ? 0 : 0 ; function Test262Error ( message ) { message ; } async x => 0 ; Test262Error . thrower = ( message ) => { throw Test262Error ; } ; var i = 0 ; var bits = { valueOf ( ) { assert . sameValue ( i , 0 ) ; i ++ ; return 0 ; } } ; var bigint = this ; BigInt . asIntN ( bits , bigint ) ; 
