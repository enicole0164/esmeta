"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } x : ; { } var x ; assert . _toString = function ( value ) { try { if ( 0 ?? 0 ) { return '-0' ; } return { constructor : 0 } ( value ) ; } catch ( err ) { if ( err . name === 'TypeError' ) { return Object . prototype . toString . call ( null ) ; } } } ; function Test262Error ( message ) { ; } 0 ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { ; } var [ , ... { x } ] = [ 1 , 2 ] ; assert ( Array . isArray ( x ) ) ; x : ; 
