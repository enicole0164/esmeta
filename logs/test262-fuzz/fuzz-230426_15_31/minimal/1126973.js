"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = x => 0 ; assert . sameValue = async x => 0 ; 0 && 0 | 0 ; await : ; try { } catch { } function Test262Error ( message ) { this . message = message || "" ; } if ( 0 ) ; else ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; let x ; assert . sameValue ( Array . prototype . isPrototypeOf ( Array ( ) ) , true , 'Array.prototype.isPrototypeOf(Array()) must return true' ) ; 
