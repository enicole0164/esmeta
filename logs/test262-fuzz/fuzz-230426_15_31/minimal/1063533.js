"use strict";
function assert ( mustBeTrue ) { if ( mustBeTrue === true ) { return ; } { } } assert . _isSameValue = 0 ? 0 : 0 ; assert = { ignoreCase : async function * ( x ) { } } ; assert . notSameValue = { then : 0 } ; { } assert . _toString = function ( value ) { { } } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = { 0 : true } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var BadCtor = function ( ) { throw new Test262Error ( ) ; } ; Object . defineProperty ( Promise , Symbol , { value : BadCtor } ) ; try { var p = new Promise ( function ( resolve ) { new x ( ) ; resolve ( ) ; } ) ; assert . throws ( Test262Error , function ( ) { p . then ( ) ; } ) ; } finally { Object . defineProperty ( Promise , Symbol . species , originalSpecies ) ; } 
