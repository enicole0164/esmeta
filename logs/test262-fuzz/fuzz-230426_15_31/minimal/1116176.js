"use strict";
function assert ( mustBeTrue ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' ; } throw new Test262Error ( message ) ; } 0 ?? 0 ?? 0 ; 0 ; assert . throws = async function * ( ) { } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error = ( message ) => { throw Test262Error ; } ; function $DONOTEVALUATE ( ) { throw { global : 0 } ; } var first = 0 ; var second = 0 ; function * g ( ) { first += 1 ; yield ; 1 ; } ; let [ ... [ , ] ] = g ( ) ; assert ( first , 1 ) ; 
