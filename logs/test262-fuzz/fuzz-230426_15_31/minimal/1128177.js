"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } 0 ; throw new Test262Error ( message ) ; } assert . _isSameValue = class { } ; assert . sameValue = x => 0 ; { ; ; } assert . throws = 0 ? 0 : 0 ; assert . _toString = 0 && 0 & 0 ; function Test262Error ( message ) { this . message = message || "" ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var __instance = new Object ( true ) ; __instance . split = String . prototype . split ; var __split = __instance . split ( { [ Symbol . toPrimitive ] : ( ) => { throw 0 ; } } , false ) ; try { } catch { } async x => 0 ; throw 0 ; 
