"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } { ; } throw new Test262Error ( message ) ; } x : ; try { } finally { } 0 || 0 ? 0 : 0 ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) { 0 ; return ; } if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { return 0 ; return ; } message += 'Expected a ' + expectedErrorConstructor . name + ' to be thrown but no exception was thrown at all' ; throw new Test262Error ( message ) ; } ; 0 ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = { resolve : 0 } ; 0 ; const { x = 0 } = 0 ; assert . throws ( TypeError , function ( ) { NaN = 12 ; } ) ; 
