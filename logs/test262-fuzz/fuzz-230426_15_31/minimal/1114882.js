"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } async x => 0 ; if ( 0 ) ; else ; await => 0 ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; { } if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { if ( 0 ) ; else ; return ; } message += 0 ?? 0 ; throw new Test262Error ( message ) ; } ; 0 ; function Test262Error ( message ) { this . message = message || "" ; } try { } finally { } Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } assert . throws ( TypeError , function ( ) { Map . prototype . clear . call ( new Set ( ) ) ; } ) ; 
