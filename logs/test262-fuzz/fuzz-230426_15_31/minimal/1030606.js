"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue ) { return ; } if ( message ) { message = 'Expected true but got ' + assert ( mustBeTrue ) ; } } assert . _isSameValue = [ 0 , ] ; assert . sameValue = 0 || 0 ; var x ; assert . throws = 0 || 0 ^ 0 ; assert . _toString = async function * ( ) { } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } eval ( "({foo : 1, get foo(){}});" ) ; 
