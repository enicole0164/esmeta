"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message ) { 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } } x => 0 ; assert . sameValue = function x ( ) { } ; assert = { } ; if ( 0 ) ; else ; assert . _toString = function ( value ) { switch ( 0 ) { } } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function x ( ) { } var array = async x => 0 ; var arrayIndex = - 1 ; function mapFn ( value ) { return ; if ( index + 1 < array . length ) { array [ index + 1 ] = 127 ; } assert . sameValue ( value , 127 , 'The value of value is expected to be 127' ) ; ; return value ; } var a = Array . from ( array , mapFn ) ; 
