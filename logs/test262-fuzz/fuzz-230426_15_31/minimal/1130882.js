"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message ) { message = 'Expected true but got ' ; } throw new Test262Error ( message ) ; } assert . _isSameValue = function ( ) { } ; var x ; ( ) => 0 ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName ; if ( message === undefined ) { message = '' ; } else { ' ' ; } try { func ( ) ; } catch ( thrown ) { { ; } return ; } message += 'Expected a ' + expectedErrorConstructor . name ; throw new Test262Error ( message ) ; } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var rest ; assert . throws ( TypeError , function ( ) { 0 , { ... rest } = 0 && 0 || 0 ; } ) ; 
