"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = x => 0 ; x => { } ; try { } catch { } finally { } assert . throws = function * ( ) { } ; ( ) => 0 ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var __obj = `` ; var __obj2 = { valueOf : function ( ) { throw "inend" ; } } ; var __str = "ABB\u0041BABAB" ; try { var x = __str . substring ( __obj , __obj2 ) ; throw new Test262Error ( '#1: "var x = __str.substring(__obj,__obj2)" lead to throw exception' ) ; } catch ( e ) { if ( e !== "instart" ) { throw new Test262Error ( '#1.1: Exception === "instart". Actual: ' + e ) ; } } 
