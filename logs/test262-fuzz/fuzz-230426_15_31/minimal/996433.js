"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw Test262Error ; } assert . _isSameValue = function ( a , b ) { if ( a === b ) { return a !== 0 || 1 / a === 1 ; } return a && b !== b ; } ; { } assert . notSameValue = 0 ? 0 : 0 ; 0 || 0 ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . toString = function ( ) { return "Test262Error: " + this ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var separator = { } ; var returnVal = { } ; var thisVal , args ; separator [ Symbol . split ] = { } ; assert . sameValue ( '' . split ( separator , 'limit' ) , returnVal ) ; assert . sameValue ( thisVal , separator ) ; assert . notSameValue ( args , undefined ) ; assert . sameValue ( args . length , 2 ) ; assert . sameValue ( args [ 0 ] , '' ) ; assert . sameValue ( args , 'limit' ) ; 
