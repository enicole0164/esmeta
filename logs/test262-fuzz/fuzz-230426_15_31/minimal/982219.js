"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = function ( a , b ) { if ( a === b ) { return a !== 0 || 1 / a === 1 / b ; } return a !== a && b !== b ; } ; if ( 0 ) ; assert . notSameValue = class x { } ; assert = x => 0 ; assert . _toString = { flags : false } ; function Test262Error ( message ) { this . message = message || "" ; } 0 || 0 ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var s = new Set ( ) ; assert . sameValue ( s . clear ( ) , undefined , "`s.clear()` returns `undefined`" ) ; 
