"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = function ( a , b ) { if ( a === b ) { return a !== 0 || 1 / a === 1 / b ; } return a !== a && b !== b ; } ; 0 ? 0 : 0 ; var x ; assert . throws = function x ( ) { } ; x : ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; 0 ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var res = false ; var a = new Array ( ) ; a . res = true ; function callbackfn ( val , idx , obj ) { return this . res ; } var arr = [ 1 ] ; assert . sameValue ( arr . every ( callbackfn , a ) , true , 'arr.every(callbackfn, a)' ) ; 
