"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' ; } } var { ... x } = 0 ; assert . sameValue = x => 0 ; assert . notSameValue = function ( ) { } ; 0 ; assert . _toString = function ( value ) { x : ; } ; function Test262Error ( message ) { message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; if ( 0 ) ; else ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var i = 0 ; var bits = this ; var bigint = { valueOf ( ) { assert . sameValue ( i , 1 ) ; i ++ ; return 1 ; } } ; BigInt . asUintN ( bits , bigint ) ; assert ( i , 2 ) ; 
