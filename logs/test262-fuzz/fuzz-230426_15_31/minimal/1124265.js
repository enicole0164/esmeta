"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = this ; assert . sameValue = { join : async function * ( x ) { } } ; switch ( 0 ) { } var x ; async x => 0 ; function Test262Error ( message ) { this . message = message || "" ; } try { } catch { } Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw { resolve : '' } ; } var arrObj = [ 1 , 2 , 3 ] ; { } var newArr = arrObj . slice ( 0n , 1n ) ; assert ( newArr ( "0" ) , 'newArr.hasOwnProperty("0") !== true' ) ; assert . sameValue ( newArr [ 0 ] , 1 , 'newArr[0]' ) ; var x ; 
