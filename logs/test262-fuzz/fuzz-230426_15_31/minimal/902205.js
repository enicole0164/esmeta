"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue ) { return ; } try { } catch { } finally { } throw new Test262Error ( message ) ; } assert . _isSameValue = { throw : function ( x ) { } } ; assert = class x { } ; async x => 0 ; [ 0 , ] ; assert . _toString = { multiline : 0 } ; function Test262Error ( message ) { this . message = message || "" ; } x => 0 ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; class x { } assert . sameValue ( isFinite ( Number . NEGATIVE_INFINITY ) , false , 'isFinite(Number.NEGATIVE_INFINITY) must return false' ) ; 
