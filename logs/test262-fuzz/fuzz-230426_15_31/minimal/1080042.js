"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } try { } catch { } assert . notSameValue = this ; assert = `${ 0 }` ; function Test262Error ( message ) { this . message = message ; } Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } function __consolePrintHandle__ ( msg ) { print ( msg ) ; } let x ; Promise . resolve = null ; Promise . allSettled ( [ 1 ] ) . then ( ( ) => $DONE ( 'The promise should not be resolved.' ) , error => { assert ( error instanceof TypeError ) ; } ) . then ( $DONE , $DONE ) ; 
