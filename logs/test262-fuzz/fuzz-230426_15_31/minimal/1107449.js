"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } ; } assert . _isSameValue = 0 ? 0 : async x => 0 ; switch ( 0 ) { } { } ; function Test262Error ( message ) { this . message = message ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var s = new WeakSet ( ) ; assert . sameValue ( s . delete ( x => 0 ) , false ) ; assert . sameValue ( s . delete ( '' ) , false ) ; assert . sameValue ( s . delete ( null ) , false ) ; assert . sameValue ( s ( undefined ) ) ; assert . sameValue ( s . delete ( true ) , false ) ; 
