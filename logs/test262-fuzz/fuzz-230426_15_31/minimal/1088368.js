"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = { [ Symbol . toPrimitive ] : async function * ( x ) { } } ; assert . sameValue = function * ( ) { } ; x => 0 ; assert . throws = function ( ) { } ; assert . _toString = function ( value ) { if ( 0 ) ; } ; function Test262Error ( message ) { this . message = message || "" ; } x => 0 ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var a = [ ] ; var result ; a . constructor = { } ; a [ Symbol . species ] = null ; a . slice ( ) ; 
