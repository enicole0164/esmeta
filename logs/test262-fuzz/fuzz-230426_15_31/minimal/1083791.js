"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } return ; throw new Test262Error ( message ) ; } assert . _isSameValue = '' ; switch ( 0 ) { } assert . notSameValue = { } ; assert . throws = 0 ? 0 : 0 ; assert . _toString = function ( value ) { if ( 0 ) ; } ; function Test262Error ( message ) { this . message = message || "" ; } x : ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw { resolve : async function ( x ) { } } ; } function foo ( ) { } var o = { } ; var bf = foo . bind ( o ) ; var s = Object . prototype . toString . call ( bf ) ; assert . sameValue ( s , '[object Function]' , 's' ) ; 
