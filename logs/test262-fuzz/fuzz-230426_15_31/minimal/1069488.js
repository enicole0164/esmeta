"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } ; assert . sameValue = function * ( ) { } ; x => 0 ; assert . throws = function ( ) { } ; if ( 0 ) ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this ; } ; Test262Error . thrower = ( message ) => { throw Test262Error ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var a = [ ] ; var result ; a . constructor = { } ; a . constructor [ Symbol ] = null ; x => 0 ; assert . sameValue ( Object . getPrototypeOf ( result ) , Array . prototype ) ; 0 | 0 ; 
