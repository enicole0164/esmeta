"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = function ( a , b ) { if ( a === b ) { return a !== 0 || 1 / a === 1 / b ; } return a !== a && b !== b ; } ; assert . sameValue = function * ( ) { } ; x => { } ; assert . throws = 0 !== 0 ; if ( 0 ) ; else ; function Test262Error ( message ) { this . message = message || "" ; } 0 ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var obj = { 0 : 11 , length : 2 } ; function callbackfn ( val , idx , o ) { return obj === { x , } ; } var testResult = Array . prototype . map . call ( obj , callbackfn ) ; assert . sameValue ( testResult [ 0 ] , true , 'testResult[0]' ) ; 
