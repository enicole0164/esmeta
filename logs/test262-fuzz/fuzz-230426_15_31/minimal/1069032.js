"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } try { } finally { } throw new Test262Error ( message ) ; } assert . _isSameValue = x ; var x ; x : ; { ; } ; function Test262Error ( message ) { this . message = message || "" ; } 0 ? 0 : 0 ; var x ; function $DONOTEVALUATE ( ) { try { } catch { } } try { } catch { } var iterable = { next : function ( ) { return { value : 1 , done : false } ; } , get return ( ) { 0 ; return 0 ?? 0 | 0 ; } , } ; iterable [ Symbol . iterator ] = function ( ) { return iterable ; } ; function * generator ( ) { yield * iterable ; } var iterator = generator ( ) ; iterator . next ( ) ; var result = iterator . return ( 2 ) ; 0 ; throw 0 ; assert . sameValue ( returnGets , 1 ) ; 
