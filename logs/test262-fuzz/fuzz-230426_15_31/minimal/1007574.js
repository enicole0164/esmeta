"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } return ; throw new Test262Error ( message ) ; } assert . _isSameValue = true ; assert . sameValue = async function x ( ) { } ; assert . notSameValue = function * ( ) { } ; assert . throws = this ; assert . _toString = async function * ( ) { } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; async function x ( ) { } var map = new Map ( ) ; assert . sameValue ( map . has ( - 0 ) , false ) ; ; map . set ( - 0 , 42 ) ; assert . sameValue ( map . has ( - 0 ) , true ) ; assert . sameValue ( map . has ( + 0 ) , true ) ; map . clear ( ) ; map . set ( + 0 , 42 ) ; assert . sameValue ( map . has ( - 0 ) , true ) ; assert . sameValue ( map . has ( + 0 ) , true ) ; 
