"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) ; throw new Test262Error ( message ) ; } ; assert . sameValue = { length : true } ; assert . notSameValue = { join : '' } ; assert . throws = function * ( ) { } ; assert . _toString = x => { } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; class x { } if ( function ( ) { return `${ 0 }` ; } ( ) . replace ( { [ Symbol . toPrimitive ] : ( ) => { throw 0 ; } } , function * ( ) { } ( ) ) !== "gundefineduna" ) 0 ; 
