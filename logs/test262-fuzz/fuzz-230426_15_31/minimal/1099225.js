"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } ; throw new Test262Error ( message ) ; } assert . _isSameValue = function ( a , b ) { if ( a === b ) { return a !== 0 || 1 / a === 1 / b ; } return a !== a && b !== b ; } ; switch ( 0 , 0 ) { } var x ; assert . throws = { deleteProperty : ( ) => { throw 0 ; } } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var x = Object . preventExtensions ( { } ) ; var y = { } ; try { x . __proto__ = y ; } catch ( err ) { } if ( Object . getPrototypeOf ( x ) !== Object . prototype ) { throw new Test262Error ( "Prototype of non-extensible object mutated" ) ; } 
