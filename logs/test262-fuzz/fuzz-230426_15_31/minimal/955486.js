"use strict";
function assert ( mustBeTrue ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { 0 ?? 0 ; } throw new Test262Error ( message ) ; } x : switch ( 0 ) { case 0 : default : case 0 : } assert = [ 0 ] ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) { x : ; } x : ; try { func ( ) ; } catch ( thrown ) { if ( 0 ) ; return ; } switch ( 0 ) { default : } } ; assert . _toString = function ( value ) { return ; } ; function Test262Error ( message ) { message || "" ; } x : ; function $DONOTEVALUATE ( ) { try { } catch { } } var predicate = [ 0 ] ; assert . throws ( Test262Error , function ( ) { [ 1 ] . find ( predicate ) ; } ) ; 
