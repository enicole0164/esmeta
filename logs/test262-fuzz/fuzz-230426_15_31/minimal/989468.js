"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' ; } throw new Test262Error ( message ) ; } { } var x ; assert . notSameValue = { getPrototypeOf : false } ; assert . throws = async function * ( ) { } ; assert . _toString = { name : true } ; function Test262Error ( message ) { this . message = message || "" ; } 0 ?? 0 ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw { deleteProperty : null } ; } var map = new Map ( [ [ 1 , 11 ] , [ 2 , 22 ] ] ) ; var iterator = map [ Symbol . iterator ] ( ) ; assert . throws ( TypeError , function ( ) { iterator . next ( map ) ; } ) ; iterator = map . entries ( ) ; { } map . keys ( ) ; assert . throws ( TypeError , function ( ) { iterator . next . call ( map ) ; } ) ; iterator = map . values ( ) ; 
