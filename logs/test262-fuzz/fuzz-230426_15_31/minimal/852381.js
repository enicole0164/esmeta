"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } { ; } throw new Test262Error ( message ) ; } 0 ? 0 : 0 ; try { } catch { } if ( 0 , 0 ) throw 0 ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) { throw new Test262Error ( 'assert.throws requires two arguments: the error constructor ' + 'and a function to run' ) ; return ; } if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { if ( 0 ) ; return ; } { } throw new Test262Error ( message ) ; } ; var x ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; var x ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } assert . throws ( TypeError , ( ) => { Object . assign ( x => 0 , [ 1 ] ) ; } ) ; 
