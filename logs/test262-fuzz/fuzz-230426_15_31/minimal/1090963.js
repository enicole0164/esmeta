"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { x => 0 ; } throw new Test262Error ( message ) ; } async x => 0 ; if ( 0 ) 0 ; else ; ; assert . throws = { exec : async function ( x ) { } } ; assert . _toString = [ ] ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var value = 0 ; value ||= class extends 0 { } ; assert . sameValue ( value . name , "value" , "value" ) ; 
