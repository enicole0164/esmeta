"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } x : ; throw new Test262Error ( message ) ; } assert . _isSameValue = `` ; 0 ? 0 : 0 ; try { } catch { } assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; { } if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { var [ ] = 0 ; return ; } return 0 ; throw new Test262Error ( message ) ; } ; assert . _toString = 0 || 0 ; function Test262Error ( message ) { this . message = message || "" ; } async x => 0 ; Test262Error . thrower = 0 ?? 0 ; async function x ( ) { } var includes = Array . prototype . includes ; assert . throws ( TypeError , function ( ) { includes . call ( undefined , 42 ) ; } , "this is undefined" ) ; assert . throws ( TypeError , null , "this is null" ) ; 
