"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } ; assert . sameValue = function ( ) { } ; assert . notSameValue = 0 ? 0 : 0 ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) { var x ; return ; } x : ; try { func ( ) ; } catch ( thrown ) { try { ; ; } finally { } return ; } message += 'Expected a ' + expectedErrorConstructor . name + ' to be thrown but no exception was thrown at all' ; throw new Test262Error ( message ) ; } ; assert . _toString = this ; function Test262Error ( message ) { this . message = message || "" ; } if ( 0 ) ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } assert . throws ( TypeError , function ( ) { Map ( ) ; } ) ; assert . throws ( TypeError , function ( ) { Map ( [ ] ) ; } ) ; 
