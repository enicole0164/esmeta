"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } debugger ; throw Test262Error ; } assert . _isSameValue = function ( a , b ) { if ( a === b ) { return a !== 0 || 1 / a === 1 / b ; } } ; x : await : ; assert . notSameValue = { flags : true } ; 0 ; assert . _toString = x => 0 ; function Test262Error ( message ) { this . message = message || "" ; } { } Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var obj = AggregateError ( { construct : function ( x ) { } } , '' ) ; assert . sameValue ( Object . getPrototypeOf ( obj ) , AggregateError ) ; assert ( obj instanceof AggregateError ) ; 
