"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( 0 ) ; else ; throw new Test262Error ( message ) ; } var x ; if ( 0 ) ; else ; assert . notSameValue = { } ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) while ( 0 ) ; if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { return 0 , 0 ; return ; } 0 && 0 ; } ; ; function Test262Error ( message ) { message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var obj = { 0 : 11 , 1 : 12 } ; Object . defineProperty ( obj , "length" , { get : function ( ) { throw new Test262Error ( ) ; } , configurable : true } ) ; assert . throws ( Test262Error , function ( ) { Array . prototype . forEach ( obj , undefined ) ; } ) ; 
