"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( 0 , 0 ) ; else ; throw new Test262Error ( message ) ; } async x => 0 ; assert . sameValue = `` ; 0 && 0 ; x : ; assert . _toString = function ( value ) { 0 ; } ; function Test262Error ( message ) { this . message = message || "" ; } { } Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; let x ; var obj = 0 ^ 0 && 0 !== 0 === 0 == 0 & 0 && 0 ; Object . preventExtensions ( obj ) ; assert . throws ( TypeError , function ( ) { Object . setPrototypeOf ( obj , null ) ; } ) ; 
