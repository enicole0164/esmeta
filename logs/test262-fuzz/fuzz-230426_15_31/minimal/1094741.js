"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } async x => 0 ; x => 0 ; assert . notSameValue = { throw : ( ) => { throw 0 ; } } ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; try { func ( ) ; } catch ( thrown ) { return 0 ; return ; } { } } ; assert . _toString = { has : null } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " ; } ; ( message ) => { throw Test262Error ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } assert . throws ( TypeError , function ( ) { Object . prototype . propertyIsEnumerable . call ( null , 'foo' ) ; } , this ) ; 
