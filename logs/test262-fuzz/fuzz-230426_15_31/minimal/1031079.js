"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = function ( a , b ) { if ( a === b ) { return a !== 0 || 1 / a === 1 / b ; } return a !== a ; } ; assert . sameValue = x => { } ; assert . notSameValue = x => 0 ; x => 0 ; assert . _toString = function ( value ) { try { } finally { } } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype = function ( ) { return "Test262Error: " + this . message ; } ; { } function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } assert . sameValue ( typeof Symbol ( ) , "symbol" ) ; assert . sameValue ( typeof Symbol ( "A" ) , "symbol" , "typeof Symbol('A') === 'symbol'" ) ; ; 0 ?? 0 ; 
