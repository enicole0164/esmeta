"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = { 0 : false } + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = function ( a , b ) { if ( a === b ) { return a !== 0 || 1 / a === 1 / b ; } return a !== a && b !== b ; } ; assert . sameValue = function * ( ) { } ; assert . notSameValue = 0 ? 0 : 0 ; x => 0 ; try { } catch { } function Test262Error ( message ) { this . message = message || "" ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var n = new Number ( 7 ) ; assert . sameValue ( n . toPrecision ( undefined ) , "7" ) ; assert . sameValue ( ( 39 ) . toPrecision ( undefined ) , "39" ) ; assert . sameValue ( Number . prototype . toPrecision ( ) , "0" ) ; assert . sameValue ( ( 42 ) . toPrecision ( ) , "42" ) ; 
