"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } throw 0 ; throw new Test262Error ( message ) ; } assert . _isSameValue = { exec : function ( x ) { } } ; assert . sameValue = `` ; assert . notSameValue = async function * ( ) { } ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; 0 ; if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { for ( ; 0 ; 0 ) ; return ; } throw new Test262Error ( message ) ; } ; assert . _toString = 0 ?? 0 ; function Test262Error ( message ) { this . message = message || "" ; } async x => 0 ; class C { #field ; m ( ) { for ( { } . #field in ~ 0 ) ; } } assert . throws ( TypeError , function * ( ) { } ) ; 
