"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } var x ; assert . sameValue = this ; assert . notSameValue = function ( actual , unexpected , message ) { if ( ! assert . _isSameValue ( actual , unexpected ) ) { return ; } if ( message === undefined ) { message = '' ; } else { message += ' ' ; } message += async x => 0 ; throw new Test262Error ( message ) ; } ; assert . throws = 0 || 0 | 0 ; { } function Test262Error ( message ) { this . message = message || "" ; } var x ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } assert . sameValue ( [ true ] . lastIndexOf ( true , - Infinity ) , - 1 , '[true].lastIndexOf(true, -Infinity)' ) ; 
