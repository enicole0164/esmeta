"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } throw new Test262Error ( message ) ; } assert . _isSameValue = function ( a , b ) { 0 ; return a !== a && b !== b ; } ; assert . sameValue = function ( ) { } ; assert . throws = 0 || 0 ; assert . _toString = { global : '' } ; function Test262Error ( message ) { this . message = message || "" ; } var x = 0 ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var a = new Array ( 1 , 2 , 3 ) ; assert . sameValue ( a . indexOf ( 2 , - 1 ) , - 1 , 'a.indexOf(2,-1)' ) ; x : ; assert . sameValue ( a . indexOf ( 1 , - 1n ) , 0 , 'a.indexOf(1,-3)' ) ; assert . sameValue ( a . indexOf ( 1 , - 5.3 ) , 0 , 'a.indexOf(1,-5.3)' ) ; 
