"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } 0 ; throw new Test262Error ( message ) ; } assert . _isSameValue = { value : async function ( x ) { } } ; x => 0 ; async x => 0 ; 0 | 0 & 0 ; assert = function ( value ) { var x ; } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; var array = [ "first" , "second" ] ; Object . defineProperty ( array , 0 , x => 0 ) ; array . reverse ( ) ; x : ; throw 0 ; 
