"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } try { } finally { } assert . sameValue = async function x ( ... { x , } ) { } ; var x ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; throw 0 ; if ( message === undefined ) { message = '' ; } else { message += ' ' ; } var x ; debugger ; throw new Test262Error ( message ) ; } ; x : ; function Test262Error ( message ) { this . message = message || "" ; } { } Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { return 0 ; } assert . sameValue ( Symbol ( ) . toString ( ) , 'Symbol()' , 'implicit value' ) ; x : ; 
