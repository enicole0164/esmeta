"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } x : ; assert . sameValue = function * ( ) { } ; x => { } ; assert . throws = 0 !== 0 ; assert . _toString = function ( value ) { if ( 0 ) ; else ; } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; if ( 0 ) ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var obj = { 0 : 11 , length : 2 } ; function callbackfn ( val , idx , o ) { return obj === o ; } var testResult = Array . prototype . map . call ( obj , callbackfn ) ; assert . sameValue ( testResult [ 0 ] , true , 'testResult[0]' ) ; 
