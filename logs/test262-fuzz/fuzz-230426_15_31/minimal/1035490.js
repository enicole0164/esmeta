"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } while ( 0 ) ; 0 ?? 0 ^ 0 !== 0 ; if ( 0 ) ; assert . throws = class { } ; 0 ? 0 : 0 ; function Test262Error ( message ) { this . message = message || "" ; } x : ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var value ; for ( let [ x ] of [ { [ Symbol . species ] : function * ( x ) { } } ] ) { value = x ; } assert . sameValue ( typeof x , 'undefined' , 'binding is block-scoped' ) ; assert . sameValue ( value , 34 ) ; 
