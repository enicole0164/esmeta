"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } throw new Test262Error ( message ) ; } 0 ? 0 : 0 ; try { } catch { } finally { } var x ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) throw 0 ; try { func ( ) ; } catch ( thrown ) { throw 0 ; return ; } x => 0 ; throw new Test262Error ( message ) ; } ; assert . _toString = { } ; function Test262Error ( message ) { this . message = message || "" ; } if ( 0 ) ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { { ; } } var s = Symbol ( 1 ) ; assert . throws ( TypeError , function ( ) { [ ] . copyWithin ( 0 , 1n , s ) ; } ) ; 
