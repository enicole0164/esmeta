"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { 0 ; } throw new Test262Error ( message ) ; } x : ; assert . sameValue = x => 0 ; assert . notSameValue = [ 0 , 0 , ] ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) debugger ; if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { { } return ; } return ; throw new Test262Error ( message ) ; } ; x => 0 ; function Test262Error ( message ) { this . message = message || "" ; } { } x : ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } assert . throws ( TypeError , function ( ) { String . raw ( { 1 : null } ) ; } ) ; assert . throws ( TypeError , function ( ) { String . raw ( undefined ) ; } ) ; 
