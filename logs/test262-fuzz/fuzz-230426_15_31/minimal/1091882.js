"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message ) { 0 || 0 ; } throw new Test262Error ( message ) ; } assert . _isSameValue = async function ( ) { } ; 0 ; switch ( 0 ) { } assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) return 0 ; if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { if ( typeof thrown !== 'object' || thrown === null ) { message += 'Thrown value was not an object!' ; throw new Test262Error ( message ) ; } else if ( thrown . constructor !== expectedErrorConstructor ) { } return ; } throw new Test262Error ( message ) ; } ; assert . _toString = function ( value ) { return 0 ; } ; function Test262Error ( message ) { this . message = message || "" ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var subject = { toString : function ( ) { throw new Test262Error ( ) ; } } ; assert . throws ( Test262Error , function ( ) { Symbol . for ( subject ) ; } ) ; subject = Symbol ( 's' ) ; assert . throws ( TypeError ) ; 
