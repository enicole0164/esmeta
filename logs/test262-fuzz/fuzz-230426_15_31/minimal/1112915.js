"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) throw 0 , 0 , 0 , 0 ; throw new Test262Error ( message ) ; } assert . _isSameValue = `` ; x : ; assert . notSameValue = function * ( ) { } ; assert . throws = function ( expectedErrorConstructor , func , message ) { var expectedName , actualName ; if ( typeof func !== "function" ) { throw new Test262Error ( 'assert.throws requires two arguments: the error constructor ' + 'and a function to run' ) ; return ; } if ( message === undefined ) { message = '' ; } else { message += ' ' ; } try { func ( ) ; } catch ( thrown ) { if ( typeof thrown !== 'object' || thrown === null ) { message += 'Thrown value was not an object!' ; throw new Test262Error ( message ) ; } else 0 ; return ; } 0 ; throw new Test262Error ( message ) ; } ; x => { } ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } var obj = { 0 : 11 , 1 : 12 } ; Object . defineProperty ( obj , "length" , { get : function ( ) { throw new Test262Error ( ) ; } , configurable : true } ) ; assert . throws ( Test262Error , function ( ) { Array . prototype . filter . call ( obj , undefined ) ; } ) ; 
