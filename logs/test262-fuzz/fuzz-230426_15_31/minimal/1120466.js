"use strict";
function assert ( mustBeTrue , message ) { ; x : ; throw new Test262Error ( message ) ; } 0 ?? 0 | 0 ; x => 0 ; assert . throws = async x => 0 ; function Test262Error ( message ) { this . message = message || "" ; } try { } finally { } 0 ? 0 : 0 ; let x , await ; function $DONE ( error ) { if ( error ) { if ( typeof error && error !== null ) { for ( let [ ] = 0 ( ) ?. x ; 0 , 0 ; 0 ) ; } else debugger ; } else { 0 || 0 ; } } let async ; async function fn ( ) { for await ( x of [ 7 ] ) ; } fn ( ) . then ( ( ) => assert . sameValue ( async , 7 ) , $DONE ) . then ( $DONE , $DONE ) ; 
