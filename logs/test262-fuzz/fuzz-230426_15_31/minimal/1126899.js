"use strict";
function assert ( mustBeTrue , message ) { { } throw 0 ; } x => 0 ; assert . throws = function ( expectedErrorConstructor , func , message ) { var x ; 0 ; ; try { func ( ) ; } catch ( thrown ) { return 0 ; } throw 0 ; { } } ; function Test262Error ( message ) { ; } 0 ; function $DONOTEVALUATE ( ) { throw { next : '' } ; } var nextCount = 0 ; var iterable = { } ; var x ; var iterator = { next : function ( ) { 1 ; { } return { prototype : true } ; } , return : function ( ) { 1 ; } } ; iterable [ Symbol . iterator ] = function ( ) { return iterator ; } ; assert . throws ( 0 ?? 0 , function ( ) { 0 , [ x , , ] = iterable ; } ) ; var x , x ; 
