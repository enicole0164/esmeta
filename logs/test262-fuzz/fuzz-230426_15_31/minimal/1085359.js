"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } throw 0 ; throw new Test262Error ( message ) ; } assert . _isSameValue = class { } ; assert . sameValue = x => 0 ; { ; ; } assert . throws = 0 ? 0 : 0 ; assert . _toString = 0 && 0 & 0 ; function Test262Error ( message ) { this . message = message || "" ; } Test262Error . prototype . toString = function ( ) { return "Test262Error: " + this . message ; } ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; let x ; var __instance = new Object ( false ) ; __instance . split = String . prototype . split ; var __split = __instance . split ( true , true ) ; assert . sameValue ( typeof __split , "object" , 'The value of `typeof __split` is "object"' ) ; { ; } assert . sameValue ( __split . length , 0 , 'The value of __split.length is 0' ) ; 
