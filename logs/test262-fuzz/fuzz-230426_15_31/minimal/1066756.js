"use strict";
function assert ( mustBeTrue ) { if ( mustBeTrue === true ) { return ; } x : ; throw new Test262Error ( message ) ; } x => 0 ; assert . sameValue = [ 0 , , ] ; assert . throws = function ( expectedErrorConstructor , func ) { var expectedName , actualName ; if ( typeof func !== "function" ) { throw new Test262Error ( 'assert.throws requires two arguments: the error constructor ' + 'and a function to run' ) ; return ; } try { func ( ) ; } catch ( thrown ) { throw 0 ; return ; } x => 0 ; } ; ; function Test262Error ( message ) { this . message = message ; } var x ; Test262Error = ( message ) => { throw new Test262Error ( message ) ; } ; function $DONOTEVALUATE ( ) { throw "Test262: This statement should not be evaluated." ; } assert . throws ( TypeError , function ( ) { Set . prototype . clear . call ( 0 ) ; } ) ; assert ( TypeError , function ( ) { var s = new Set ( ) ; s . clear . call ( 0 ) ; } ) ; 
