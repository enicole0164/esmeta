"use strict";
function assert ( mustBeTrue , message ) { if ( mustBeTrue === true ) { return ; } if ( message === undefined ) { message = 'Expected true but got ' + assert . _toString ( mustBeTrue ) ; } throw new Test262Error ( message ) ; } assert . _isSameValue = function ( a , b ) { if ( a === b ) { return a !== 0 || 1 / a === 1 / b ; } return a !== a && b !== b ; } ; 0 ; 0 ; assert . throws = async x => 0 ; ; function Test262Error ( message ) { this . message = message || "" ; } x => 0 ; Test262Error . thrower = ( message ) => { throw new Test262Error ( message ) ; } ; class x { } var arr = [ ] ; Object . defineProperties ( arr , { "4294967295" : { value : 100 } } ) ; assert ( arr . hasOwnProperty ( "4294967295" ) , 'arr.hasOwnProperty("4294967295") !== true' ) ; assert . sameValue ( arr . length , 0 , 'arr.length' ) ; assert . sameValue ( arr [ 4294967295 ] , 100 , 'arr[4294967295]' ) ; 
