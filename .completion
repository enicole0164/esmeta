# `complete` for zsh
if type complete &>/dev/null; then
  :
else
  autoload bashcompinit
  bashcompinit
fi

# completion for esmeta
_esmeta_completions() {
  local cur prev opts lastc informats outformats datafiles
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"
  cmdList="help extract compile build-cfg ir-eval js-parse js-eval filter-test262 web coverage-test262 view-cg"
  globalOpt="-silent -debug -log -time"
  helpOpt=""
  extractOpt="-extract:json -extract:version -extract:log -extract:stat"
  compileOpt=""
  buildcfgOpt="-build-cfg:dot -build-cfg:pdf"
  irevalOpt=""
  jsparseOpt="-js-parse:load -js-parse:dump"
  jsevalOpt="-js-eval:test262"
  filtertest262Opt="-filter-test262:test262-data -filter-test262:aid"
  webOpt="-web:web"
  coveragetest262Opt="-coverage-test262:test262-list -coverage-test262:load -coverage-test262:dump -coverage-test262:ast-algo"
  viewparseOpt="-view-parse:target"
  viewcgOpt="-view-cg:syntactic -view-cg:repl"
  # completion for commands
  case "${COMP_CWORD}" in
    1)
      COMPREPLY=($(compgen -W "${cmdList}" "${cur}"))
      return 0
      ;;
  esac
  cmd="${COMP_WORDS[1]}"
  # completion for options
  case "${cur}" in
    -*)
      case "${cmd}" in
        help)
          COMPREPLY=($(compgen -W "${globalOpt} ${helpOpt}"))
          return 0
          ;;
        extract)
          COMPREPLY=($(compgen -W "${globalOpt} ${extractOpt}"))
          return 0
          ;;
        compile)
          COMPREPLY=($(compgen -W "${globalOpt} ${extractOpt} ${compileOpt}"))
          return 0
          ;;
        build-cfg)
          COMPREPLY=($(compgen -W "${globalOpt} ${extractOpt} ${compileOpt} ${buildcfgOpt}"))
          return 0
          ;;
        ir-eval)
          COMPREPLY=($(compgen -W "${globalOpt} ${irevalOpt}"))
          return 0
          ;;
        js-parse)
          COMPREPLY=($(compgen -W "${globalOpt} ${extractOpt} ${compileOpt} ${buildcfgOpt} ${jsparseOpt}"))
          return 0
          ;;
        js-eval)
          COMPREPLY=($(compgen -W "${globalOpt} ${extractOpt} ${compileOpt} ${buildcfgOpt} ${jsevalOpt}"))
          return 0
          ;;
        filter-test262)
          COMPREPLY=($(compgen -W "${globalOpt} ${extractOpt} ${compileOpt} ${buildcfgOpt} ${filtertest262Opt}"))
          return 0
          ;;
        web)
          COMPREPLY=($(compgen -W "${globalOpt} ${extractOpt} ${compileOpt} ${buildcfgOpt} ${webOpt}"))
          return 0
          ;;
        coverage-test262)
          COMPREPLY=($(compgen -W "${globalOpt} ${extractOpt} ${compileOpt} ${buildcfgOpt} ${coveragetest262Opt}"))
          return 0
          ;;
        view-cg)
          COMPREPLY=($(compgen -W "${globalOpt} ${extractOpt} ${compileOpt} ${buildcfgOpt} ${viewparseOpt} ${viewcgOpt}"))
          return 0
          ;;
      esac
      return 0
      ;;
  esac
  
  COMPREPLY=( $(compgen -X '' -f "${cur}") )
}
# completion setting
complete -o filenames -o bashdefault -F _esmeta_completions esmeta